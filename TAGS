
.build_release/src/caffe/proto/caffe.pb.cc,193138
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATIONINTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION4,84
namespace caffe {caffe19,581
const ::google::protobuf::Descriptor* BlobShape_descriptor_ = NULL;BlobShape_descriptor_23,613
  BlobShape_reflection_ = NULL;BlobShape_reflection_25,745
const ::google::protobuf::Descriptor* BlobProto_descriptor_ = NULL;BlobProto_descriptor_26,777
  BlobProto_reflection_ = NULL;BlobProto_reflection_28,909
const ::google::protobuf::Descriptor* BlobProtoVector_descriptor_ = NULL;BlobProtoVector_descriptor_29,941
  BlobProtoVector_reflection_ = NULL;BlobProtoVector_reflection_31,1079
const ::google::protobuf::Descriptor* Datum_descriptor_ = NULL;Datum_descriptor_32,1117
  Datum_reflection_ = NULL;Datum_reflection_34,1245
const ::google::protobuf::Descriptor* FillerParameter_descriptor_ = NULL;FillerParameter_descriptor_35,1273
  FillerParameter_reflection_ = NULL;FillerParameter_reflection_37,1411
const ::google::protobuf::EnumDescriptor* FillerParameter_VarianceNorm_descriptor_ = NULL;FillerParameter_VarianceNorm_descriptor_38,1449
const ::google::protobuf::Descriptor* NetParameter_descriptor_ = NULL;NetParameter_descriptor_39,1540
  NetParameter_reflection_ = NULL;NetParameter_reflection_41,1675
const ::google::protobuf::Descriptor* SolverParameter_descriptor_ = NULL;SolverParameter_descriptor_42,1710
  SolverParameter_reflection_ = NULL;SolverParameter_reflection_44,1848
const ::google::protobuf::EnumDescriptor* SolverParameter_SnapshotFormat_descriptor_ = NULL;SolverParameter_SnapshotFormat_descriptor_45,1886
const ::google::protobuf::EnumDescriptor* SolverParameter_SolverMode_descriptor_ = NULL;SolverParameter_SolverMode_descriptor_46,1979
const ::google::protobuf::EnumDescriptor* SolverParameter_SolverType_descriptor_ = NULL;SolverParameter_SolverType_descriptor_47,2068
const ::google::protobuf::Descriptor* SolverState_descriptor_ = NULL;SolverState_descriptor_48,2157
  SolverState_reflection_ = NULL;SolverState_reflection_50,2291
const ::google::protobuf::Descriptor* NetState_descriptor_ = NULL;NetState_descriptor_51,2325
  NetState_reflection_ = NULL;NetState_reflection_53,2456
const ::google::protobuf::Descriptor* NetStateRule_descriptor_ = NULL;NetStateRule_descriptor_54,2487
  NetStateRule_reflection_ = NULL;NetStateRule_reflection_56,2622
const ::google::protobuf::Descriptor* ParamSpec_descriptor_ = NULL;ParamSpec_descriptor_57,2657
  ParamSpec_reflection_ = NULL;ParamSpec_reflection_59,2789
const ::google::protobuf::EnumDescriptor* ParamSpec_DimCheckMode_descriptor_ = NULL;ParamSpec_DimCheckMode_descriptor_60,2821
const ::google::protobuf::Descriptor* LayerParameter_descriptor_ = NULL;LayerParameter_descriptor_61,2906
  LayerParameter_reflection_ = NULL;LayerParameter_reflection_63,3043
const ::google::protobuf::Descriptor* TransformationParameter_descriptor_ = NULL;TransformationParameter_descriptor_64,3080
  TransformationParameter_reflection_ = NULL;TransformationParameter_reflection_66,3226
const ::google::protobuf::Descriptor* LossParameter_descriptor_ = NULL;LossParameter_descriptor_67,3272
  LossParameter_reflection_ = NULL;LossParameter_reflection_69,3408
const ::google::protobuf::EnumDescriptor* LossParameter_NormalizationMode_descriptor_ = NULL;LossParameter_NormalizationMode_descriptor_70,3444
const ::google::protobuf::Descriptor* AccuracyParameter_descriptor_ = NULL;AccuracyParameter_descriptor_71,3538
  AccuracyParameter_reflection_ = NULL;AccuracyParameter_reflection_73,3678
const ::google::protobuf::Descriptor* ArgMaxParameter_descriptor_ = NULL;ArgMaxParameter_descriptor_74,3718
  ArgMaxParameter_reflection_ = NULL;ArgMaxParameter_reflection_76,3856
const ::google::protobuf::Descriptor* ConcatParameter_descriptor_ = NULL;ConcatParameter_descriptor_77,3894
  ConcatParameter_reflection_ = NULL;ConcatParameter_reflection_79,4032
const ::google::protobuf::Descriptor* BatchNormParameter_descriptor_ = NULL;BatchNormParameter_descriptor_80,4070
  BatchNormParameter_reflection_ = NULL;BatchNormParameter_reflection_82,4211
const ::google::protobuf::Descriptor* BiasParameter_descriptor_ = NULL;BiasParameter_descriptor_83,4252
  BiasParameter_reflection_ = NULL;BiasParameter_reflection_85,4388
const ::google::protobuf::Descriptor* ContrastiveLossParameter_descriptor_ = NULL;ContrastiveLossParameter_descriptor_86,4424
  ContrastiveLossParameter_reflection_ = NULL;ContrastiveLossParameter_reflection_88,4571
const ::google::protobuf::Descriptor* ConvolutionParameter_descriptor_ = NULL;ConvolutionParameter_descriptor_89,4618
  ConvolutionParameter_reflection_ = NULL;ConvolutionParameter_reflection_91,4761
const ::google::protobuf::EnumDescriptor* ConvolutionParameter_Engine_descriptor_ = NULL;ConvolutionParameter_Engine_descriptor_92,4804
const ::google::protobuf::Descriptor* CropParameter_descriptor_ = NULL;CropParameter_descriptor_93,4894
  CropParameter_reflection_ = NULL;CropParameter_reflection_95,5030
const ::google::protobuf::Descriptor* DataParameter_descriptor_ = NULL;DataParameter_descriptor_96,5066
  DataParameter_reflection_ = NULL;DataParameter_reflection_98,5202
const ::google::protobuf::EnumDescriptor* DataParameter_DB_descriptor_ = NULL;DataParameter_DB_descriptor_99,5238
const ::google::protobuf::Descriptor* DropoutParameter_descriptor_ = NULL;DropoutParameter_descriptor_100,5317
  DropoutParameter_reflection_ = NULL;DropoutParameter_reflection_102,5456
const ::google::protobuf::Descriptor* DummyDataParameter_descriptor_ = NULL;DummyDataParameter_descriptor_103,5495
  DummyDataParameter_reflection_ = NULL;DummyDataParameter_reflection_105,5636
const ::google::protobuf::Descriptor* EltwiseParameter_descriptor_ = NULL;EltwiseParameter_descriptor_106,5677
  EltwiseParameter_reflection_ = NULL;EltwiseParameter_reflection_108,5816
const ::google::protobuf::EnumDescriptor* EltwiseParameter_EltwiseOp_descriptor_ = NULL;EltwiseParameter_EltwiseOp_descriptor_109,5855
const ::google::protobuf::Descriptor* ELUParameter_descriptor_ = NULL;ELUParameter_descriptor_110,5944
  ELUParameter_reflection_ = NULL;ELUParameter_reflection_112,6079
const ::google::protobuf::Descriptor* EmbedParameter_descriptor_ = NULL;EmbedParameter_descriptor_113,6114
  EmbedParameter_reflection_ = NULL;EmbedParameter_reflection_115,6251
const ::google::protobuf::Descriptor* ExpParameter_descriptor_ = NULL;ExpParameter_descriptor_116,6288
  ExpParameter_reflection_ = NULL;ExpParameter_reflection_118,6423
const ::google::protobuf::Descriptor* FlattenParameter_descriptor_ = NULL;FlattenParameter_descriptor_119,6458
  FlattenParameter_reflection_ = NULL;FlattenParameter_reflection_121,6597
const ::google::protobuf::Descriptor* HDF5DataParameter_descriptor_ = NULL;HDF5DataParameter_descriptor_122,6636
  HDF5DataParameter_reflection_ = NULL;HDF5DataParameter_reflection_124,6776
const ::google::protobuf::Descriptor* HDF5OutputParameter_descriptor_ = NULL;HDF5OutputParameter_descriptor_125,6816
  HDF5OutputParameter_reflection_ = NULL;HDF5OutputParameter_reflection_127,6958
const ::google::protobuf::Descriptor* HingeLossParameter_descriptor_ = NULL;HingeLossParameter_descriptor_128,7000
  HingeLossParameter_reflection_ = NULL;HingeLossParameter_reflection_130,7141
const ::google::protobuf::EnumDescriptor* HingeLossParameter_Norm_descriptor_ = NULL;HingeLossParameter_Norm_descriptor_131,7182
const ::google::protobuf::Descriptor* ImageDataParameter_descriptor_ = NULL;ImageDataParameter_descriptor_132,7268
  ImageDataParameter_reflection_ = NULL;ImageDataParameter_reflection_134,7409
const ::google::protobuf::Descriptor* InfogainLossParameter_descriptor_ = NULL;InfogainLossParameter_descriptor_135,7450
  InfogainLossParameter_reflection_ = NULL;InfogainLossParameter_reflection_137,7594
const ::google::protobuf::Descriptor* InnerProductParameter_descriptor_ = NULL;InnerProductParameter_descriptor_138,7638
  InnerProductParameter_reflection_ = NULL;InnerProductParameter_reflection_140,7782
const ::google::protobuf::Descriptor* InputParameter_descriptor_ = NULL;InputParameter_descriptor_141,7826
  InputParameter_reflection_ = NULL;InputParameter_reflection_143,7963
const ::google::protobuf::Descriptor* LogParameter_descriptor_ = NULL;LogParameter_descriptor_144,8000
  LogParameter_reflection_ = NULL;LogParameter_reflection_146,8135
const ::google::protobuf::Descriptor* LRNParameter_descriptor_ = NULL;LRNParameter_descriptor_147,8170
  LRNParameter_reflection_ = NULL;LRNParameter_reflection_149,8305
const ::google::protobuf::EnumDescriptor* LRNParameter_NormRegion_descriptor_ = NULL;LRNParameter_NormRegion_descriptor_150,8340
const ::google::protobuf::EnumDescriptor* LRNParameter_Engine_descriptor_ = NULL;LRNParameter_Engine_descriptor_151,8426
const ::google::protobuf::Descriptor* MemoryDataParameter_descriptor_ = NULL;MemoryDataParameter_descriptor_152,8508
  MemoryDataParameter_reflection_ = NULL;MemoryDataParameter_reflection_154,8650
const ::google::protobuf::Descriptor* MVNParameter_descriptor_ = NULL;MVNParameter_descriptor_155,8692
  MVNParameter_reflection_ = NULL;MVNParameter_reflection_157,8827
const ::google::protobuf::Descriptor* ParameterParameter_descriptor_ = NULL;ParameterParameter_descriptor_158,8862
  ParameterParameter_reflection_ = NULL;ParameterParameter_reflection_160,9003
const ::google::protobuf::Descriptor* PoolingParameter_descriptor_ = NULL;PoolingParameter_descriptor_161,9044
  PoolingParameter_reflection_ = NULL;PoolingParameter_reflection_163,9183
const ::google::protobuf::EnumDescriptor* PoolingParameter_PoolMethod_descriptor_ = NULL;PoolingParameter_PoolMethod_descriptor_164,9222
const ::google::protobuf::EnumDescriptor* PoolingParameter_Engine_descriptor_ = NULL;PoolingParameter_Engine_descriptor_165,9312
const ::google::protobuf::Descriptor* PowerParameter_descriptor_ = NULL;PowerParameter_descriptor_166,9398
  PowerParameter_reflection_ = NULL;PowerParameter_reflection_168,9535
const ::google::protobuf::Descriptor* PythonParameter_descriptor_ = NULL;PythonParameter_descriptor_169,9572
  PythonParameter_reflection_ = NULL;PythonParameter_reflection_171,9710
const ::google::protobuf::Descriptor* RecurrentParameter_descriptor_ = NULL;RecurrentParameter_descriptor_172,9748
  RecurrentParameter_reflection_ = NULL;RecurrentParameter_reflection_174,9889
const ::google::protobuf::Descriptor* ReductionParameter_descriptor_ = NULL;ReductionParameter_descriptor_175,9930
  ReductionParameter_reflection_ = NULL;ReductionParameter_reflection_177,10071
const ::google::protobuf::EnumDescriptor* ReductionParameter_ReductionOp_descriptor_ = NULL;ReductionParameter_ReductionOp_descriptor_178,10112
const ::google::protobuf::Descriptor* ReLUParameter_descriptor_ = NULL;ReLUParameter_descriptor_179,10205
  ReLUParameter_reflection_ = NULL;ReLUParameter_reflection_181,10341
const ::google::protobuf::EnumDescriptor* ReLUParameter_Engine_descriptor_ = NULL;ReLUParameter_Engine_descriptor_182,10377
const ::google::protobuf::Descriptor* ReshapeParameter_descriptor_ = NULL;ReshapeParameter_descriptor_183,10460
  ReshapeParameter_reflection_ = NULL;ReshapeParameter_reflection_185,10599
const ::google::protobuf::Descriptor* ScaleParameter_descriptor_ = NULL;ScaleParameter_descriptor_186,10638
  ScaleParameter_reflection_ = NULL;ScaleParameter_reflection_188,10775
const ::google::protobuf::Descriptor* SigmoidParameter_descriptor_ = NULL;SigmoidParameter_descriptor_189,10812
  SigmoidParameter_reflection_ = NULL;SigmoidParameter_reflection_191,10951
const ::google::protobuf::EnumDescriptor* SigmoidParameter_Engine_descriptor_ = NULL;SigmoidParameter_Engine_descriptor_192,10990
const ::google::protobuf::Descriptor* SliceParameter_descriptor_ = NULL;SliceParameter_descriptor_193,11076
  SliceParameter_reflection_ = NULL;SliceParameter_reflection_195,11213
const ::google::protobuf::Descriptor* SoftmaxParameter_descriptor_ = NULL;SoftmaxParameter_descriptor_196,11250
  SoftmaxParameter_reflection_ = NULL;SoftmaxParameter_reflection_198,11389
const ::google::protobuf::EnumDescriptor* SoftmaxParameter_Engine_descriptor_ = NULL;SoftmaxParameter_Engine_descriptor_199,11428
const ::google::protobuf::Descriptor* TanHParameter_descriptor_ = NULL;TanHParameter_descriptor_200,11514
  TanHParameter_reflection_ = NULL;TanHParameter_reflection_202,11650
const ::google::protobuf::EnumDescriptor* TanHParameter_Engine_descriptor_ = NULL;TanHParameter_Engine_descriptor_203,11686
const ::google::protobuf::Descriptor* TileParameter_descriptor_ = NULL;TileParameter_descriptor_204,11769
  TileParameter_reflection_ = NULL;TileParameter_reflection_206,11905
const ::google::protobuf::Descriptor* ThresholdParameter_descriptor_ = NULL;ThresholdParameter_descriptor_207,11941
  ThresholdParameter_reflection_ = NULL;ThresholdParameter_reflection_209,12082
const ::google::protobuf::Descriptor* WindowDataParameter_descriptor_ = NULL;WindowDataParameter_descriptor_210,12123
  WindowDataParameter_reflection_ = NULL;WindowDataParameter_reflection_212,12265
const ::google::protobuf::Descriptor* SPPParameter_descriptor_ = NULL;SPPParameter_descriptor_213,12307
  SPPParameter_reflection_ = NULL;SPPParameter_reflection_215,12442
const ::google::protobuf::EnumDescriptor* SPPParameter_PoolMethod_descriptor_ = NULL;SPPParameter_PoolMethod_descriptor_216,12477
const ::google::protobuf::EnumDescriptor* SPPParameter_Engine_descriptor_ = NULL;SPPParameter_Engine_descriptor_217,12563
const ::google::protobuf::Descriptor* V1LayerParameter_descriptor_ = NULL;V1LayerParameter_descriptor_218,12645
  V1LayerParameter_reflection_ = NULL;V1LayerParameter_reflection_220,12784
const ::google::protobuf::EnumDescriptor* V1LayerParameter_LayerType_descriptor_ = NULL;V1LayerParameter_LayerType_descriptor_221,12823
const ::google::protobuf::EnumDescriptor* V1LayerParameter_DimCheckMode_descriptor_ = NULL;V1LayerParameter_DimCheckMode_descriptor_222,12912
const ::google::protobuf::Descriptor* V0LayerParameter_descriptor_ = NULL;V0LayerParameter_descriptor_223,13004
  V0LayerParameter_reflection_ = NULL;V0LayerParameter_reflection_225,13143
const ::google::protobuf::EnumDescriptor* V0LayerParameter_PoolMethod_descriptor_ = NULL;V0LayerParameter_PoolMethod_descriptor_226,13182
const ::google::protobuf::Descriptor* PReLUParameter_descriptor_ = NULL;PReLUParameter_descriptor_227,13272
  PReLUParameter_reflection_ = NULL;PReLUParameter_reflection_229,13409
const ::google::protobuf::Descriptor* QuantizationParameter_descriptor_ = NULL;QuantizationParameter_descriptor_230,13446
  QuantizationParameter_reflection_ = NULL;QuantizationParameter_reflection_232,13590
const ::google::protobuf::EnumDescriptor* QuantizationParameter_RoundMethod_descriptor_ = NULL;QuantizationParameter_RoundMethod_descriptor_233,13634
const ::google::protobuf::EnumDescriptor* QuantizationParameter_RoundStrategy_descriptor_ = NULL;QuantizationParameter_RoundStrategy_descriptor_234,13730
const ::google::protobuf::EnumDescriptor* Phase_descriptor_ = NULL;Phase_descriptor_235,13828
void protobuf_AssignDesc_caffe_2eproto() {protobuf_AssignDesc_caffe_2eproto240,13915
inline void protobuf_AssignDescriptorsOnce() {protobuf_AssignDescriptorsOnce1567,91675
void protobuf_RegisterTypes(const ::std::string&) {protobuf_RegisterTypes1572,91851
void protobuf_ShutdownFile_caffe_2eproto() {protobuf_ShutdownFile_caffe_2eproto1702,100897
void protobuf_AddDesc_caffe_2eproto() {protobuf_AddDesc_caffe_2eproto1834,106345
struct StaticDescriptorInitializer_caffe_2eproto {StaticDescriptorInitializer_caffe_2eproto2377,145172
  StaticDescriptorInitializer_caffe_2eproto() {StaticDescriptorInitializer_caffe_2eproto2378,145223
} static_descriptor_initializer_caffe_2eproto_;static_descriptor_initializer_caffe_2eproto_2381,145313
const ::google::protobuf::EnumDescriptor* Phase_descriptor() {Phase_descriptor2382,145361
bool Phase_IsValid(int value) {Phase_IsValid2386,145490
const int BlobShape::kDimFieldNumber;kDimFieldNumber2400,145713
BlobShape::BlobShape()BlobShape2403,145773
void BlobShape::InitAsDefaultInstance() {InitAsDefaultInstance2408,145851
BlobShape::BlobShape(const BlobShape& from)BlobShape2411,145896
void BlobShape::SharedCtor() {SharedCtor2417,146014
BlobShape::~BlobShape() {~BlobShape2422,146116
void BlobShape::SharedDtor() {SharedDtor2426,146161
void BlobShape::SetCachedSize(int size) const {SetCachedSize2431,146234
const ::google::protobuf::Descriptor* BlobShape::descriptor() {descriptor2436,146388
const BlobShape& BlobShape::default_instance() {default_instance2441,146523
BlobShape* BlobShape::default_instance_ = NULL;default_instance_2446,146671
BlobShape* BlobShape::New() const {New2448,146720
void BlobShape::Clear() {Clear2452,146783
bool BlobShape::MergePartialFromCodedStream(MergePartialFromCodedStream2458,146912
#define DO_(DO_2460,147012
#undef DO_DO_2497,148684
void BlobShape::SerializeWithCachedSizes(SerializeWithCachedSizes2500,148698
::google::protobuf::uint8* BlobShape::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray2518,149372
int BlobShape::ByteSize() const {ByteSize2541,150209
void BlobShape::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom2572,151073
void BlobShape::MergeFrom(const BlobShape& from) {MergeFrom2584,151429
void BlobShape::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom2590,151606
void BlobShape::CopyFrom(const BlobShape& from) {CopyFrom2596,151736
bool BlobShape::IsInitialized() const {IsInitialized2602,151848
void BlobShape::Swap(BlobShape* other) {Swap2607,151907
::google::protobuf::Metadata BlobShape::GetMetadata() const {GetMetadata2616,152164
const int BlobProto::kShapeFieldNumber;kShapeFieldNumber2628,152509
const int BlobProto::kDataFieldNumber;kDataFieldNumber2629,152549
const int BlobProto::kDiffFieldNumber;kDiffFieldNumber2630,152588
const int BlobProto::kDoubleDataFieldNumber;kDoubleDataFieldNumber2631,152627
const int BlobProto::kDoubleDiffFieldNumber;kDoubleDiffFieldNumber2632,152672
const int BlobProto::kNumFieldNumber;kNumFieldNumber2633,152717
const int BlobProto::kChannelsFieldNumber;kChannelsFieldNumber2634,152755
const int BlobProto::kHeightFieldNumber;kHeightFieldNumber2635,152798
const int BlobProto::kWidthFieldNumber;kWidthFieldNumber2636,152839
BlobProto::BlobProto()BlobProto2639,152901
void BlobProto::InitAsDefaultInstance() {InitAsDefaultInstance2644,152979
BlobProto::BlobProto(const BlobProto& from)BlobProto2648,153110
void BlobProto::SharedCtor() {SharedCtor2654,153228
BlobProto::~BlobProto() {~BlobProto2664,153405
void BlobProto::SharedDtor() {SharedDtor2668,153450
void BlobProto::SetCachedSize(int size) const {SetCachedSize2674,153542
const ::google::protobuf::Descriptor* BlobProto::descriptor() {descriptor2679,153696
const BlobProto& BlobProto::default_instance() {default_instance2684,153831
BlobProto* BlobProto::default_instance_ = NULL;default_instance_2689,153979
BlobProto* BlobProto::New() const {New2691,154028
void BlobProto::Clear() {Clear2695,154091
bool BlobProto::MergePartialFromCodedStream(MergePartialFromCodedStream2715,154552
#define DO_(DO_2717,154652
#undef DO_DO_2895,162528
void BlobProto::SerializeWithCachedSizes(SerializeWithCachedSizes2898,162542
::google::protobuf::uint8* BlobProto::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray2972,165395
int BlobProto::ByteSize() const {ByteSize3064,168848
void BlobProto::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom3173,171931
void BlobProto::MergeFrom(const BlobProto& from) {MergeFrom3185,172287
void BlobProto::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom3213,173073
void BlobProto::CopyFrom(const BlobProto& from) {CopyFrom3219,173203
bool BlobProto::IsInitialized() const {IsInitialized3225,173315
void BlobProto::Swap(BlobProto* other) {Swap3230,173374
::google::protobuf::Metadata BlobProto::GetMetadata() const {GetMetadata3247,173948
const int BlobProtoVector::kBlobsFieldNumber;kBlobsFieldNumber3259,174293
BlobProtoVector::BlobProtoVector()BlobProtoVector3262,174361
void BlobProtoVector::InitAsDefaultInstance() {InitAsDefaultInstance3267,174451
BlobProtoVector::BlobProtoVector(const BlobProtoVector& from)BlobProtoVector3270,174502
void BlobProtoVector::SharedCtor() {SharedCtor3276,174638
BlobProtoVector::~BlobProtoVector() {~BlobProtoVector3281,174746
void BlobProtoVector::SharedDtor() {SharedDtor3285,174803
void BlobProtoVector::SetCachedSize(int size) const {SetCachedSize3290,174882
const ::google::protobuf::Descriptor* BlobProtoVector::descriptor() {descriptor3295,175042
const BlobProtoVector& BlobProtoVector::default_instance() {default_instance3300,175189
BlobProtoVector* BlobProtoVector::default_instance_ = NULL;default_instance_3305,175349
BlobProtoVector* BlobProtoVector::New() const {New3307,175410
void BlobProtoVector::Clear() {Clear3311,175491
bool BlobProtoVector::MergePartialFromCodedStream(MergePartialFromCodedStream3317,175628
#define DO_(DO_3319,175734
#undef DO_DO_3351,176915
void BlobProtoVector::SerializeWithCachedSizes(SerializeWithCachedSizes3354,176929
::google::protobuf::uint8* BlobProtoVector::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray3368,177393
int BlobProtoVector::ByteSize() const {ByteSize3384,177925
void BlobProtoVector::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom3406,178533
void BlobProtoVector::MergeFrom(const BlobProtoVector& from) {MergeFrom3418,178907
void BlobProtoVector::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom3424,179100
void BlobProtoVector::CopyFrom(const BlobProtoVector& from) {CopyFrom3430,179236
bool BlobProtoVector::IsInitialized() const {IsInitialized3436,179360
void BlobProtoVector::Swap(BlobProtoVector* other) {Swap3441,179425
::google::protobuf::Metadata BlobProtoVector::GetMetadata() const {GetMetadata3450,179698
const int Datum::kChannelsFieldNumber;kChannelsFieldNumber3462,180061
const int Datum::kHeightFieldNumber;kHeightFieldNumber3463,180100
const int Datum::kWidthFieldNumber;kWidthFieldNumber3464,180137
const int Datum::kDataFieldNumber;kDataFieldNumber3465,180173
const int Datum::kLabelFieldNumber;kLabelFieldNumber3466,180208
const int Datum::kFloatDataFieldNumber;kFloatDataFieldNumber3467,180244
const int Datum::kEncodedFieldNumber;kEncodedFieldNumber3468,180284
Datum::Datum()Datum3471,180344
void Datum::InitAsDefaultInstance() {InitAsDefaultInstance3476,180414
Datum::Datum(const Datum& from)Datum3479,180455
void Datum::SharedCtor() {SharedCtor3485,180561
Datum::~Datum() {~Datum3496,180823
void Datum::SharedDtor() {SharedDtor3500,180860
void Datum::SetCachedSize(int size) const {SetCachedSize3508,181013
const ::google::protobuf::Descriptor* Datum::descriptor() {descriptor3513,181163
const Datum& Datum::default_instance() {default_instance3518,181290
Datum* Datum::default_instance_ = NULL;default_instance_3523,181430
Datum* Datum::New() const {New3525,181471
void Datum::Clear() {Clear3529,181522
bool Datum::MergePartialFromCodedStream(MergePartialFromCodedStream3547,181924
#define DO_(DO_3549,182020
#undef DO_DO_3681,187315
void Datum::SerializeWithCachedSizes(SerializeWithCachedSizes3684,187329
::google::protobuf::uint8* Datum::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray3729,188681
int Datum::ByteSize() const {ByteSize3776,190199
void Datum::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom3839,191780
void Datum::MergeFrom(const Datum& from) {MergeFrom3851,192124
void Datum::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom3877,192771
void Datum::CopyFrom(const Datum& from) {CopyFrom3883,192897
bool Datum::IsInitialized() const {IsInitialized3889,193001
void Datum::Swap(Datum* other) {Swap3894,193056
::google::protobuf::Metadata Datum::GetMetadata() const {GetMetadata3909,193557
const ::google::protobuf::EnumDescriptor* FillerParameter_VarianceNorm_descriptor() {FillerParameter_VarianceNorm_descriptor3920,193873
bool FillerParameter_VarianceNorm_IsValid(int value) {FillerParameter_VarianceNorm_IsValid3924,194048
const FillerParameter_VarianceNorm FillerParameter::FAN_IN;FAN_IN3936,194233
const FillerParameter_VarianceNorm FillerParameter::FAN_OUT;FAN_OUT3937,194293
const FillerParameter_VarianceNorm FillerParameter::AVERAGE;AVERAGE3938,194354
const FillerParameter_VarianceNorm FillerParameter::VarianceNorm_MIN;VarianceNorm_MIN3939,194415
const FillerParameter_VarianceNorm FillerParameter::VarianceNorm_MAX;VarianceNorm_MAX3940,194485
const int FillerParameter::VarianceNorm_ARRAYSIZE;VarianceNorm_ARRAYSIZE3941,194555
::std::string* FillerParameter::_default_type_ = NULL;_default_type_3943,194626
const int FillerParameter::kTypeFieldNumber;kTypeFieldNumber3945,194698
const int FillerParameter::kValueFieldNumber;kValueFieldNumber3946,194743
const int FillerParameter::kMinFieldNumber;kMinFieldNumber3947,194789
const int FillerParameter::kMaxFieldNumber;kMaxFieldNumber3948,194833
const int FillerParameter::kMeanFieldNumber;kMeanFieldNumber3949,194877
const int FillerParameter::kStdFieldNumber;kStdFieldNumber3950,194922
const int FillerParameter::kSparseFieldNumber;kSparseFieldNumber3951,194966
const int FillerParameter::kVarianceNormFieldNumber;kVarianceNormFieldNumber3952,195013
FillerParameter::FillerParameter()FillerParameter3955,195088
void FillerParameter::InitAsDefaultInstance() {InitAsDefaultInstance3960,195178
FillerParameter::FillerParameter(const FillerParameter& from)FillerParameter3963,195229
void FillerParameter::SharedCtor() {SharedCtor3969,195365
FillerParameter::~FillerParameter() {~FillerParameter3982,195629
void FillerParameter::SharedDtor() {SharedDtor3986,195686
void FillerParameter::SetCachedSize(int size) const {SetCachedSize3994,195820
const ::google::protobuf::Descriptor* FillerParameter::descriptor() {descriptor3999,195980
const FillerParameter& FillerParameter::default_instance() {default_instance4004,196127
FillerParameter* FillerParameter::default_instance_ = NULL;default_instance_4009,196287
FillerParameter* FillerParameter::New() const {New4011,196348
void FillerParameter::Clear() {Clear4015,196429
bool FillerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream4034,196830
#define DO_(DO_4036,196936
#undef DO_DO_4186,202802
void FillerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes4189,202816
::google::protobuf::uint8* FillerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray4242,204583
int FillerParameter::ByteSize() const {ByteSize4297,206532
void FillerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom4358,208082
void FillerParameter::MergeFrom(const FillerParameter& from) {MergeFrom4370,208456
void FillerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom4401,209198
void FillerParameter::CopyFrom(const FillerParameter& from) {CopyFrom4407,209334
bool FillerParameter::IsInitialized() const {IsInitialized4413,209458
void FillerParameter::Swap(FillerParameter* other) {Swap4418,209523
::google::protobuf::Metadata FillerParameter::GetMetadata() const {GetMetadata4434,210069
const int NetParameter::kNameFieldNumber;kNameFieldNumber4446,210432
const int NetParameter::kInputFieldNumber;kInputFieldNumber4447,210474
const int NetParameter::kInputShapeFieldNumber;kInputShapeFieldNumber4448,210517
const int NetParameter::kInputDimFieldNumber;kInputDimFieldNumber4449,210565
const int NetParameter::kForceBackwardFieldNumber;kForceBackwardFieldNumber4450,210611
const int NetParameter::kStateFieldNumber;kStateFieldNumber4451,210662
const int NetParameter::kDebugInfoFieldNumber;kDebugInfoFieldNumber4452,210705
const int NetParameter::kLayerFieldNumber;kLayerFieldNumber4453,210752
const int NetParameter::kLayersFieldNumber;kLayersFieldNumber4454,210795
NetParameter::NetParameter()NetParameter4457,210861
void NetParameter::InitAsDefaultInstance() {InitAsDefaultInstance4462,210945
NetParameter::NetParameter(const NetParameter& from)NetParameter4466,211077
void NetParameter::SharedCtor() {SharedCtor4472,211204
NetParameter::~NetParameter() {~NetParameter4481,211460
void NetParameter::SharedDtor() {SharedDtor4485,211511
void NetParameter::SetCachedSize(int size) const {SetCachedSize4494,211690
const ::google::protobuf::Descriptor* NetParameter::descriptor() {descriptor4499,211847
const NetParameter& NetParameter::default_instance() {default_instance4504,211988
NetParameter* NetParameter::default_instance_ = NULL;default_instance_4509,212142
NetParameter* NetParameter::New() const {New4511,212197
void NetParameter::Clear() {Clear4515,212269
bool NetParameter::MergePartialFromCodedStream(MergePartialFromCodedStream4537,212811
#define DO_(DO_4539,212914
#undef DO_DO_4704,219685
void NetParameter::SerializeWithCachedSizes(SerializeWithCachedSizes4707,219699
::google::protobuf::uint8* NetParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray4773,222022
int NetParameter::ByteSize() const {ByteSize4845,224573
void NetParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom4926,226914
void NetParameter::MergeFrom(const NetParameter& from) {MergeFrom4938,227279
void NetParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom4962,228014
void NetParameter::CopyFrom(const NetParameter& from) {CopyFrom4968,228147
bool NetParameter::IsInitialized() const {IsInitialized4974,228265
void NetParameter::Swap(NetParameter* other) {Swap4979,228327
::google::protobuf::Metadata NetParameter::GetMetadata() const {GetMetadata4996,228926
const ::google::protobuf::EnumDescriptor* SolverParameter_SnapshotFormat_descriptor() {SolverParameter_SnapshotFormat_descriptor5007,229263
bool SolverParameter_SnapshotFormat_IsValid(int value) {SolverParameter_SnapshotFormat_IsValid5011,229442
const SolverParameter_SnapshotFormat SolverParameter::HDF5;HDF55022,229617
const SolverParameter_SnapshotFormat SolverParameter::BINARYPROTO;BINARYPROTO5023,229677
const SolverParameter_SnapshotFormat SolverParameter::SnapshotFormat_MIN;SnapshotFormat_MIN5024,229744
const SolverParameter_SnapshotFormat SolverParameter::SnapshotFormat_MAX;SnapshotFormat_MAX5025,229818
const int SolverParameter::SnapshotFormat_ARRAYSIZE;SnapshotFormat_ARRAYSIZE5026,229892
const ::google::protobuf::EnumDescriptor* SolverParameter_SolverMode_descriptor() {SolverParameter_SolverMode_descriptor5028,229965
bool SolverParameter_SolverMode_IsValid(int value) {SolverParameter_SolverMode_IsValid5032,230136
const SolverParameter_SolverMode SolverParameter::CPU;CPU5043,230307
const SolverParameter_SolverMode SolverParameter::GPU;GPU5044,230362
const SolverParameter_SolverMode SolverParameter::SolverMode_MIN;SolverMode_MIN5045,230417
const SolverParameter_SolverMode SolverParameter::SolverMode_MAX;SolverMode_MAX5046,230483
const int SolverParameter::SolverMode_ARRAYSIZE;SolverMode_ARRAYSIZE5047,230549
const ::google::protobuf::EnumDescriptor* SolverParameter_SolverType_descriptor() {SolverParameter_SolverType_descriptor5049,230618
bool SolverParameter_SolverType_IsValid(int value) {SolverParameter_SolverType_IsValid5053,230789
const SolverParameter_SolverType SolverParameter::SGD;SGD5068,231008
const SolverParameter_SolverType SolverParameter::NESTEROV;NESTEROV5069,231063
const SolverParameter_SolverType SolverParameter::ADAGRAD;ADAGRAD5070,231123
const SolverParameter_SolverType SolverParameter::RMSPROP;RMSPROP5071,231182
const SolverParameter_SolverType SolverParameter::ADADELTA;ADADELTA5072,231241
const SolverParameter_SolverType SolverParameter::ADAM;ADAM5073,231301
const SolverParameter_SolverType SolverParameter::SolverType_MIN;SolverType_MIN5074,231357
const SolverParameter_SolverType SolverParameter::SolverType_MAX;SolverType_MAX5075,231423
const int SolverParameter::SolverType_ARRAYSIZE;SolverType_ARRAYSIZE5076,231489
::std::string* SolverParameter::_default_regularization_type_ = NULL;_default_regularization_type_5078,231558
::std::string* SolverParameter::_default_type_ = NULL;_default_type_5079,231628
const int SolverParameter::kNetFieldNumber;kNetFieldNumber5081,231700
const int SolverParameter::kNetParamFieldNumber;kNetParamFieldNumber5082,231744
const int SolverParameter::kTrainNetFieldNumber;kTrainNetFieldNumber5083,231793
const int SolverParameter::kTestNetFieldNumber;kTestNetFieldNumber5084,231842
const int SolverParameter::kTrainNetParamFieldNumber;kTrainNetParamFieldNumber5085,231890
const int SolverParameter::kTestNetParamFieldNumber;kTestNetParamFieldNumber5086,231944
const int SolverParameter::kTrainStateFieldNumber;kTrainStateFieldNumber5087,231997
const int SolverParameter::kTestStateFieldNumber;kTestStateFieldNumber5088,232048
const int SolverParameter::kTestIterFieldNumber;kTestIterFieldNumber5089,232098
const int SolverParameter::kTestIntervalFieldNumber;kTestIntervalFieldNumber5090,232147
const int SolverParameter::kTestComputeLossFieldNumber;kTestComputeLossFieldNumber5091,232200
const int SolverParameter::kTestInitializationFieldNumber;kTestInitializationFieldNumber5092,232256
const int SolverParameter::kBaseLrFieldNumber;kBaseLrFieldNumber5093,232315
const int SolverParameter::kDisplayFieldNumber;kDisplayFieldNumber5094,232362
const int SolverParameter::kAverageLossFieldNumber;kAverageLossFieldNumber5095,232410
const int SolverParameter::kMaxIterFieldNumber;kMaxIterFieldNumber5096,232462
const int SolverParameter::kIterSizeFieldNumber;kIterSizeFieldNumber5097,232510
const int SolverParameter::kLrPolicyFieldNumber;kLrPolicyFieldNumber5098,232559
const int SolverParameter::kGammaFieldNumber;kGammaFieldNumber5099,232608
const int SolverParameter::kPowerFieldNumber;kPowerFieldNumber5100,232654
const int SolverParameter::kMomentumFieldNumber;kMomentumFieldNumber5101,232700
const int SolverParameter::kWeightDecayFieldNumber;kWeightDecayFieldNumber5102,232749
const int SolverParameter::kRegularizationTypeFieldNumber;kRegularizationTypeFieldNumber5103,232801
const int SolverParameter::kStepsizeFieldNumber;kStepsizeFieldNumber5104,232860
const int SolverParameter::kStepvalueFieldNumber;kStepvalueFieldNumber5105,232909
const int SolverParameter::kClipGradientsFieldNumber;kClipGradientsFieldNumber5106,232959
const int SolverParameter::kSnapshotFieldNumber;kSnapshotFieldNumber5107,233013
const int SolverParameter::kSnapshotPrefixFieldNumber;kSnapshotPrefixFieldNumber5108,233062
const int SolverParameter::kSnapshotDiffFieldNumber;kSnapshotDiffFieldNumber5109,233117
const int SolverParameter::kSnapshotFormatFieldNumber;kSnapshotFormatFieldNumber5110,233170
const int SolverParameter::kSolverModeFieldNumber;kSolverModeFieldNumber5111,233225
const int SolverParameter::kDeviceIdFieldNumber;kDeviceIdFieldNumber5112,233276
const int SolverParameter::kRandomSeedFieldNumber;kRandomSeedFieldNumber5113,233325
const int SolverParameter::kTypeFieldNumber;kTypeFieldNumber5114,233376
const int SolverParameter::kDeltaFieldNumber;kDeltaFieldNumber5115,233421
const int SolverParameter::kMomentum2FieldNumber;kMomentum2FieldNumber5116,233467
const int SolverParameter::kRmsDecayFieldNumber;kRmsDecayFieldNumber5117,233517
const int SolverParameter::kDebugInfoFieldNumber;kDebugInfoFieldNumber5118,233566
const int SolverParameter::kSnapshotAfterTrainFieldNumber;kSnapshotAfterTrainFieldNumber5119,233616
const int SolverParameter::kSolverTypeFieldNumber;kSolverTypeFieldNumber5120,233675
const int SolverParameter::kLayerWiseReduceFieldNumber;kLayerWiseReduceFieldNumber5121,233726
SolverParameter::SolverParameter()SolverParameter5124,233804
void SolverParameter::InitAsDefaultInstance() {InitAsDefaultInstance5129,233894
SolverParameter::SolverParameter(const SolverParameter& from)SolverParameter5135,234233
void SolverParameter::SharedCtor() {SharedCtor5141,234369
SolverParameter::~SolverParameter() {~SolverParameter5182,235633
void SolverParameter::SharedDtor() {SharedDtor5186,235690
void SolverParameter::SetCachedSize(int size) const {SetCachedSize5212,236377
const ::google::protobuf::Descriptor* SolverParameter::descriptor() {descriptor5217,236537
const SolverParameter& SolverParameter::default_instance() {default_instance5222,236684
SolverParameter* SolverParameter::default_instance_ = NULL;default_instance_5227,236844
SolverParameter* SolverParameter::New() const {New5229,236905
void SolverParameter::Clear() {Clear5233,236986
bool SolverParameter::MergePartialFromCodedStream(MergePartialFromCodedStream5321,239401
#define DO_(DO_5323,239507
#undef DO_DO_6023,268594
void SolverParameter::SerializeWithCachedSizes(SerializeWithCachedSizes6026,268608
::google::protobuf::uint8* SolverParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray6277,277692
int SolverParameter::ByteSize() const {ByteSize6540,287562
void SolverParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom6828,295753
void SolverParameter::MergeFrom(const SolverParameter& from) {MergeFrom6840,296127
void SolverParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom6970,299938
void SolverParameter::CopyFrom(const SolverParameter& from) {CopyFrom6976,300074
bool SolverParameter::IsInitialized() const {IsInitialized6982,300198
void SolverParameter::Swap(SolverParameter* other) {Swap6987,300263
::google::protobuf::Metadata SolverParameter::GetMetadata() const {GetMetadata7037,302550
const int SolverState::kIterFieldNumber;kIterFieldNumber7049,302913
const int SolverState::kLearnedNetFieldNumber;kLearnedNetFieldNumber7050,302954
const int SolverState::kHistoryFieldNumber;kHistoryFieldNumber7051,303001
const int SolverState::kCurrentStepFieldNumber;kCurrentStepFieldNumber7052,303045
SolverState::SolverState()SolverState7055,303115
void SolverState::InitAsDefaultInstance() {InitAsDefaultInstance7060,303197
SolverState::SolverState(const SolverState& from)SolverState7063,303244
void SolverState::SharedCtor() {SharedCtor7069,303368
SolverState::~SolverState() {~SolverState7077,303597
void SolverState::SharedDtor() {SharedDtor7081,303646
void SolverState::SetCachedSize(int size) const {SetCachedSize7089,303819
const ::google::protobuf::Descriptor* SolverState::descriptor() {descriptor7094,303975
const SolverState& SolverState::default_instance() {default_instance7099,304114
SolverState* SolverState::default_instance_ = NULL;default_instance_7104,304266
SolverState* SolverState::New() const {New7106,304319
void SolverState::Clear() {Clear7110,304388
bool SolverState::MergePartialFromCodedStream(MergePartialFromCodedStream7125,304762
#define DO_(DO_7127,304864
#undef DO_DO_7207,308037
void SolverState::SerializeWithCachedSizes(SerializeWithCachedSizes7210,308051
::google::protobuf::uint8* SolverState::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray7243,309199
int SolverState::ByteSize() const {ByteSize7279,310471
void SolverState::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom7324,311723
void SolverState::MergeFrom(const SolverState& from) {MergeFrom7336,312085
void SolverState::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom7353,312564
void SolverState::CopyFrom(const SolverState& from) {CopyFrom7359,312696
bool SolverState::IsInitialized() const {IsInitialized7365,312812
void SolverState::Swap(SolverState* other) {Swap7370,312873
::google::protobuf::Metadata SolverState::GetMetadata() const {GetMetadata7382,313280
const int NetState::kPhaseFieldNumber;kPhaseFieldNumber7394,313631
const int NetState::kLevelFieldNumber;kLevelFieldNumber7395,313670
const int NetState::kStageFieldNumber;kStageFieldNumber7396,313709
NetState::NetState()NetState7399,313770
void NetState::InitAsDefaultInstance() {InitAsDefaultInstance7404,313846
NetState::NetState(const NetState& from)NetState7407,313890
void NetState::SharedCtor() {SharedCtor7413,314005
NetState::~NetState() {~NetState7420,314134
void NetState::SharedDtor() {SharedDtor7424,314177
void NetState::SetCachedSize(int size) const {SetCachedSize7429,314249
const ::google::protobuf::Descriptor* NetState::descriptor() {descriptor7434,314402
const NetState& NetState::default_instance() {default_instance7439,314535
NetState* NetState::default_instance_ = NULL;default_instance_7444,314681
NetState* NetState::New() const {New7446,314728
void NetState::Clear() {Clear7450,314788
bool NetState::MergePartialFromCodedStream(MergePartialFromCodedStream7460,315004
#define DO_(DO_7462,315103
#undef DO_DO_7534,317930
void NetState::SerializeWithCachedSizes(SerializeWithCachedSizes7537,317944
::google::protobuf::uint8* NetState::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray7565,318884
int NetState::ByteSize() const {ByteSize7594,319924
void NetState::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom7630,320933
void NetState::MergeFrom(const NetState& from) {MergeFrom7642,321286
void NetState::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom7656,321654
void NetState::CopyFrom(const NetState& from) {CopyFrom7662,321783
bool NetState::IsInitialized() const {IsInitialized7668,321893
void NetState::Swap(NetState* other) {Swap7673,321951
::google::protobuf::Metadata NetState::GetMetadata() const {GetMetadata7684,322286
const int NetStateRule::kPhaseFieldNumber;kPhaseFieldNumber7696,322628
const int NetStateRule::kMinLevelFieldNumber;kMinLevelFieldNumber7697,322671
const int NetStateRule::kMaxLevelFieldNumber;kMaxLevelFieldNumber7698,322717
const int NetStateRule::kStageFieldNumber;kStageFieldNumber7699,322763
const int NetStateRule::kNotStageFieldNumber;kNotStageFieldNumber7700,322806
NetStateRule::NetStateRule()NetStateRule7703,322874
void NetStateRule::InitAsDefaultInstance() {InitAsDefaultInstance7708,322958
NetStateRule::NetStateRule(const NetStateRule& from)NetStateRule7711,323006
void NetStateRule::SharedCtor() {SharedCtor7717,323133
NetStateRule::~NetStateRule() {~NetStateRule7725,323288
void NetStateRule::SharedDtor() {SharedDtor7729,323339
void NetStateRule::SetCachedSize(int size) const {SetCachedSize7734,323415
const ::google::protobuf::Descriptor* NetStateRule::descriptor() {descriptor7739,323572
const NetStateRule& NetStateRule::default_instance() {default_instance7744,323713
NetStateRule* NetStateRule::default_instance_ = NULL;default_instance_7749,323867
NetStateRule* NetStateRule::New() const {New7751,323922
void NetStateRule::Clear() {Clear7755,323994
bool NetStateRule::MergePartialFromCodedStream(MergePartialFromCodedStream7767,324260
#define DO_(DO_7769,324363
#undef DO_DO_7876,328646
void NetStateRule::SerializeWithCachedSizes(SerializeWithCachedSizes7879,328660
::google::protobuf::uint8* NetStateRule::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray7921,330117
int NetStateRule::ByteSize() const {ByteSize7964,331712
void NetStateRule::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom8014,333137
void NetStateRule::MergeFrom(const NetStateRule& from) {MergeFrom8026,333502
void NetStateRule::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom8044,334008
void NetStateRule::CopyFrom(const NetStateRule& from) {CopyFrom8050,334141
bool NetStateRule::IsInitialized() const {IsInitialized8056,334259
void NetStateRule::Swap(NetStateRule* other) {Swap8061,334321
::google::protobuf::Metadata NetStateRule::GetMetadata() const {GetMetadata8074,334759
const ::google::protobuf::EnumDescriptor* ParamSpec_DimCheckMode_descriptor() {ParamSpec_DimCheckMode_descriptor8085,335096
bool ParamSpec_DimCheckMode_IsValid(int value) {ParamSpec_DimCheckMode_IsValid8089,335259
const ParamSpec_DimCheckMode ParamSpec::STRICT;STRICT8100,335426
const ParamSpec_DimCheckMode ParamSpec::PERMISSIVE;PERMISSIVE8101,335474
const ParamSpec_DimCheckMode ParamSpec::DimCheckMode_MIN;DimCheckMode_MIN8102,335526
const ParamSpec_DimCheckMode ParamSpec::DimCheckMode_MAX;DimCheckMode_MAX8103,335584
const int ParamSpec::DimCheckMode_ARRAYSIZE;DimCheckMode_ARRAYSIZE8104,335642
const int ParamSpec::kNameFieldNumber;kNameFieldNumber8107,335724
const int ParamSpec::kShareModeFieldNumber;kShareModeFieldNumber8108,335763
const int ParamSpec::kLrMultFieldNumber;kLrMultFieldNumber8109,335807
const int ParamSpec::kDecayMultFieldNumber;kDecayMultFieldNumber8110,335848
ParamSpec::ParamSpec()ParamSpec8113,335914
void ParamSpec::InitAsDefaultInstance() {InitAsDefaultInstance8118,335992
ParamSpec::ParamSpec(const ParamSpec& from)ParamSpec8121,336037
void ParamSpec::SharedCtor() {SharedCtor8127,336155
ParamSpec::~ParamSpec() {~ParamSpec8136,336395
void ParamSpec::SharedDtor() {SharedDtor8140,336440
void ParamSpec::SetCachedSize(int size) const {SetCachedSize8148,336597
const ::google::protobuf::Descriptor* ParamSpec::descriptor() {descriptor8153,336751
const ParamSpec& ParamSpec::default_instance() {default_instance8158,336886
ParamSpec* ParamSpec::default_instance_ = NULL;default_instance_8163,337034
ParamSpec* ParamSpec::New() const {New8165,337083
void ParamSpec::Clear() {Clear8169,337146
bool ParamSpec::MergePartialFromCodedStream(MergePartialFromCodedStream8184,337499
#define DO_(DO_8186,337599
#undef DO_DO_8272,340998
void ParamSpec::SerializeWithCachedSizes(SerializeWithCachedSizes8275,341012
::google::protobuf::uint8* ParamSpec::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray8308,342118
int ParamSpec::ByteSize() const {ByteSize8343,343342
void ParamSpec::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom8382,344349
void ParamSpec::MergeFrom(const ParamSpec& from) {MergeFrom8394,344705
void ParamSpec::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom8413,345205
void ParamSpec::CopyFrom(const ParamSpec& from) {CopyFrom8419,345335
bool ParamSpec::IsInitialized() const {IsInitialized8425,345447
void ParamSpec::Swap(ParamSpec* other) {Swap8430,345506
::google::protobuf::Metadata ParamSpec::GetMetadata() const {GetMetadata8442,345908
const int LayerParameter::kNameFieldNumber;kNameFieldNumber8454,346253
const int LayerParameter::kTypeFieldNumber;kTypeFieldNumber8455,346297
const int LayerParameter::kBottomFieldNumber;kBottomFieldNumber8456,346341
const int LayerParameter::kTopFieldNumber;kTopFieldNumber8457,346387
const int LayerParameter::kPhaseFieldNumber;kPhaseFieldNumber8458,346430
const int LayerParameter::kLossWeightFieldNumber;kLossWeightFieldNumber8459,346475
const int LayerParameter::kParamFieldNumber;kParamFieldNumber8460,346525
const int LayerParameter::kBlobsFieldNumber;kBlobsFieldNumber8461,346570
const int LayerParameter::kPropagateDownFieldNumber;kPropagateDownFieldNumber8462,346615
const int LayerParameter::kIncludeFieldNumber;kIncludeFieldNumber8463,346668
const int LayerParameter::kExcludeFieldNumber;kExcludeFieldNumber8464,346715
const int LayerParameter::kTransformParamFieldNumber;kTransformParamFieldNumber8465,346762
const int LayerParameter::kLossParamFieldNumber;kLossParamFieldNumber8466,346816
const int LayerParameter::kAccuracyParamFieldNumber;kAccuracyParamFieldNumber8467,346865
const int LayerParameter::kArgmaxParamFieldNumber;kArgmaxParamFieldNumber8468,346918
const int LayerParameter::kBatchNormParamFieldNumber;kBatchNormParamFieldNumber8469,346969
const int LayerParameter::kBiasParamFieldNumber;kBiasParamFieldNumber8470,347023
const int LayerParameter::kConcatParamFieldNumber;kConcatParamFieldNumber8471,347072
const int LayerParameter::kContrastiveLossParamFieldNumber;kContrastiveLossParamFieldNumber8472,347123
const int LayerParameter::kConvolutionParamFieldNumber;kConvolutionParamFieldNumber8473,347183
const int LayerParameter::kCropParamFieldNumber;kCropParamFieldNumber8474,347239
const int LayerParameter::kDataParamFieldNumber;kDataParamFieldNumber8475,347288
const int LayerParameter::kDropoutParamFieldNumber;kDropoutParamFieldNumber8476,347337
const int LayerParameter::kDummyDataParamFieldNumber;kDummyDataParamFieldNumber8477,347389
const int LayerParameter::kEltwiseParamFieldNumber;kEltwiseParamFieldNumber8478,347443
const int LayerParameter::kEluParamFieldNumber;kEluParamFieldNumber8479,347495
const int LayerParameter::kEmbedParamFieldNumber;kEmbedParamFieldNumber8480,347543
const int LayerParameter::kExpParamFieldNumber;kExpParamFieldNumber8481,347593
const int LayerParameter::kFlattenParamFieldNumber;kFlattenParamFieldNumber8482,347641
const int LayerParameter::kHdf5DataParamFieldNumber;kHdf5DataParamFieldNumber8483,347693
const int LayerParameter::kHdf5OutputParamFieldNumber;kHdf5OutputParamFieldNumber8484,347746
const int LayerParameter::kHingeLossParamFieldNumber;kHingeLossParamFieldNumber8485,347801
const int LayerParameter::kImageDataParamFieldNumber;kImageDataParamFieldNumber8486,347855
const int LayerParameter::kInfogainLossParamFieldNumber;kInfogainLossParamFieldNumber8487,347909
const int LayerParameter::kInnerProductParamFieldNumber;kInnerProductParamFieldNumber8488,347966
const int LayerParameter::kInputParamFieldNumber;kInputParamFieldNumber8489,348023
const int LayerParameter::kLogParamFieldNumber;kLogParamFieldNumber8490,348073
const int LayerParameter::kLrnParamFieldNumber;kLrnParamFieldNumber8491,348121
const int LayerParameter::kMemoryDataParamFieldNumber;kMemoryDataParamFieldNumber8492,348169
const int LayerParameter::kMvnParamFieldNumber;kMvnParamFieldNumber8493,348224
const int LayerParameter::kParameterParamFieldNumber;kParameterParamFieldNumber8494,348272
const int LayerParameter::kPoolingParamFieldNumber;kPoolingParamFieldNumber8495,348326
const int LayerParameter::kPowerParamFieldNumber;kPowerParamFieldNumber8496,348378
const int LayerParameter::kPreluParamFieldNumber;kPreluParamFieldNumber8497,348428
const int LayerParameter::kPythonParamFieldNumber;kPythonParamFieldNumber8498,348478
const int LayerParameter::kRecurrentParamFieldNumber;kRecurrentParamFieldNumber8499,348529
const int LayerParameter::kReductionParamFieldNumber;kReductionParamFieldNumber8500,348583
const int LayerParameter::kReluParamFieldNumber;kReluParamFieldNumber8501,348637
const int LayerParameter::kReshapeParamFieldNumber;kReshapeParamFieldNumber8502,348686
const int LayerParameter::kScaleParamFieldNumber;kScaleParamFieldNumber8503,348738
const int LayerParameter::kSigmoidParamFieldNumber;kSigmoidParamFieldNumber8504,348788
const int LayerParameter::kSoftmaxParamFieldNumber;kSoftmaxParamFieldNumber8505,348840
const int LayerParameter::kSppParamFieldNumber;kSppParamFieldNumber8506,348892
const int LayerParameter::kSliceParamFieldNumber;kSliceParamFieldNumber8507,348940
const int LayerParameter::kTanhParamFieldNumber;kTanhParamFieldNumber8508,348990
const int LayerParameter::kThresholdParamFieldNumber;kThresholdParamFieldNumber8509,349039
const int LayerParameter::kTileParamFieldNumber;kTileParamFieldNumber8510,349093
const int LayerParameter::kWindowDataParamFieldNumber;kWindowDataParamFieldNumber8511,349142
const int LayerParameter::kQuantizationParamFieldNumber;kQuantizationParamFieldNumber8512,349197
LayerParameter::LayerParameter()LayerParameter8515,349276
void LayerParameter::InitAsDefaultInstance() {InitAsDefaultInstance8520,349364
LayerParameter::LayerParameter(const LayerParameter& from)LayerParameter8571,354607
void LayerParameter::SharedCtor() {SharedCtor8577,354740
LayerParameter::~LayerParameter() {~LayerParameter8633,356236
void LayerParameter::SharedDtor() {SharedDtor8637,356291
void LayerParameter::SetCachedSize(int size) const {SetCachedSize8696,357840
const ::google::protobuf::Descriptor* LayerParameter::descriptor() {descriptor8701,357999
const LayerParameter& LayerParameter::default_instance() {default_instance8706,358144
LayerParameter* LayerParameter::default_instance_ = NULL;default_instance_8711,358302
LayerParameter* LayerParameter::New() const {New8713,358361
void LayerParameter::Clear() {Clear8717,358439
bool LayerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream8901,365359
#define DO_(DO_8903,365464
#undef DO_DO_9788,401221
void LayerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes9791,401235
::google::protobuf::uint8* LayerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray10165,414454
int LayerParameter::ByteSize() const {ByteSize10594,429003
void LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom11040,443376
void LayerParameter::MergeFrom(const LayerParameter& from) {MergeFrom11052,443747
void LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom11234,451286
void LayerParameter::CopyFrom(const LayerParameter& from) {CopyFrom11240,451421
bool LayerParameter::IsInitialized() const {IsInitialized11246,451543
void LayerParameter::Swap(LayerParameter* other) {Swap11251,451607
::google::protobuf::Metadata LayerParameter::GetMetadata() const {GetMetadata11319,454913
const int TransformationParameter::kScaleFieldNumber;kScaleFieldNumber11331,455273
const int TransformationParameter::kMirrorFieldNumber;kMirrorFieldNumber11332,455327
const int TransformationParameter::kCropSizeFieldNumber;kCropSizeFieldNumber11333,455382
const int TransformationParameter::kMeanFileFieldNumber;kMeanFileFieldNumber11334,455439
const int TransformationParameter::kMeanValueFieldNumber;kMeanValueFieldNumber11335,455496
const int TransformationParameter::kForceColorFieldNumber;kForceColorFieldNumber11336,455554
const int TransformationParameter::kForceGrayFieldNumber;kForceGrayFieldNumber11337,455613
TransformationParameter::TransformationParameter()TransformationParameter11340,455693
void TransformationParameter::InitAsDefaultInstance() {InitAsDefaultInstance11345,455799
TransformationParameter::TransformationParameter(const TransformationParameter& from)TransformationParameter11348,455858
void TransformationParameter::SharedCtor() {SharedCtor11354,456018
TransformationParameter::~TransformationParameter() {~TransformationParameter11365,456322
void TransformationParameter::SharedDtor() {SharedDtor11369,456395
void TransformationParameter::SetCachedSize(int size) const {SetCachedSize11377,456576
const ::google::protobuf::Descriptor* TransformationParameter::descriptor() {descriptor11382,456744
const TransformationParameter& TransformationParameter::default_instance() {default_instance11387,456907
TransformationParameter* TransformationParameter::default_instance_ = NULL;default_instance_11392,457083
TransformationParameter* TransformationParameter::New() const {New11394,457160
void TransformationParameter::Clear() {Clear11398,457265
bool TransformationParameter::MergePartialFromCodedStream(MergePartialFromCodedStream11416,457719
#define DO_(DO_11418,457833
#undef DO_DO_11553,463406
void TransformationParameter::SerializeWithCachedSizes(SerializeWithCachedSizes11556,463420
::google::protobuf::uint8* TransformationParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray11604,465083
int TransformationParameter::ByteSize() const {ByteSize11654,466912
void TransformationParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom11711,468348
void TransformationParameter::MergeFrom(const TransformationParameter& from) {MergeFrom11723,468746
void TransformationParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom11749,469474
void TransformationParameter::CopyFrom(const TransformationParameter& from) {CopyFrom11755,469618
bool TransformationParameter::IsInitialized() const {IsInitialized11761,469758
void TransformationParameter::Swap(TransformationParameter* other) {Swap11766,469831
::google::protobuf::Metadata TransformationParameter::GetMetadata() const {GetMetadata11781,470398
const ::google::protobuf::EnumDescriptor* LossParameter_NormalizationMode_descriptor() {LossParameter_NormalizationMode_descriptor11792,470768
bool LossParameter_NormalizationMode_IsValid(int value) {LossParameter_NormalizationMode_IsValid11796,470949
const LossParameter_NormalizationMode LossParameter::FULL;FULL11809,471149
const LossParameter_NormalizationMode LossParameter::VALID;VALID11810,471208
const LossParameter_NormalizationMode LossParameter::BATCH_SIZE;BATCH_SIZE11811,471268
const LossParameter_NormalizationMode LossParameter::NONE;NONE11812,471333
const LossParameter_NormalizationMode LossParameter::NormalizationMode_MIN;NormalizationMode_MIN11813,471392
const LossParameter_NormalizationMode LossParameter::NormalizationMode_MAX;NormalizationMode_MAX11814,471468
const int LossParameter::NormalizationMode_ARRAYSIZE;NormalizationMode_ARRAYSIZE11815,471544
const int LossParameter::kIgnoreLabelFieldNumber;kIgnoreLabelFieldNumber11818,471635
const int LossParameter::kNormalizationFieldNumber;kNormalizationFieldNumber11819,471685
const int LossParameter::kNormalizeFieldNumber;kNormalizeFieldNumber11820,471737
LossParameter::LossParameter()LossParameter11823,471807
void LossParameter::InitAsDefaultInstance() {InitAsDefaultInstance11828,471893
LossParameter::LossParameter(const LossParameter& from)LossParameter11831,471942
void LossParameter::SharedCtor() {SharedCtor11837,472072
LossParameter::~LossParameter() {~LossParameter11845,472243
void LossParameter::SharedDtor() {SharedDtor11849,472296
void LossParameter::SetCachedSize(int size) const {SetCachedSize11854,472373
const ::google::protobuf::Descriptor* LossParameter::descriptor() {descriptor11859,472531
const LossParameter& LossParameter::default_instance() {default_instance11864,472674
LossParameter* LossParameter::default_instance_ = NULL;default_instance_11869,472830
LossParameter* LossParameter::New() const {New11871,472887
void LossParameter::Clear() {Clear11875,472962
bool LossParameter::MergePartialFromCodedStream(MergePartialFromCodedStream11885,473204
#define DO_(DO_11887,473308
#undef DO_DO_11956,476069
void LossParameter::SerializeWithCachedSizes(SerializeWithCachedSizes11959,476083
::google::protobuf::uint8* LossParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray11983,476886
int LossParameter::ByteSize() const {ByteSize12008,477783
void LossParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom12042,478727
void LossParameter::MergeFrom(const LossParameter& from) {MergeFrom12054,479095
void LossParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom12070,479562
void LossParameter::CopyFrom(const LossParameter& from) {CopyFrom12076,479696
bool LossParameter::IsInitialized() const {IsInitialized12082,479816
void LossParameter::Swap(LossParameter* other) {Swap12087,479879
::google::protobuf::Metadata LossParameter::GetMetadata() const {GetMetadata12098,480267
const int AccuracyParameter::kTopKFieldNumber;kTopKFieldNumber12110,480624
const int AccuracyParameter::kAxisFieldNumber;kAxisFieldNumber12111,480671
const int AccuracyParameter::kIgnoreLabelFieldNumber;kIgnoreLabelFieldNumber12112,480718
AccuracyParameter::AccuracyParameter()AccuracyParameter12115,480794
void AccuracyParameter::InitAsDefaultInstance() {InitAsDefaultInstance12120,480888
AccuracyParameter::AccuracyParameter(const AccuracyParameter& from)AccuracyParameter12123,480941
void AccuracyParameter::SharedCtor() {SharedCtor12129,481083
AccuracyParameter::~AccuracyParameter() {~AccuracyParameter12137,481242
void AccuracyParameter::SharedDtor() {SharedDtor12141,481303
void AccuracyParameter::SetCachedSize(int size) const {SetCachedSize12146,481384
const ::google::protobuf::Descriptor* AccuracyParameter::descriptor() {descriptor12151,481546
const AccuracyParameter& AccuracyParameter::default_instance() {default_instance12156,481697
AccuracyParameter* AccuracyParameter::default_instance_ = NULL;default_instance_12161,481861
AccuracyParameter* AccuracyParameter::New() const {New12163,481926
void AccuracyParameter::Clear() {Clear12167,482013
bool AccuracyParameter::MergePartialFromCodedStream(MergePartialFromCodedStream12177,482243
#define DO_(DO_12179,482351
#undef DO_DO_12243,484852
void AccuracyParameter::SerializeWithCachedSizes(SerializeWithCachedSizes12246,484866
::google::protobuf::uint8* AccuracyParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray12269,485609
int AccuracyParameter::ByteSize() const {ByteSize12293,486446
void AccuracyParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom12330,487439
void AccuracyParameter::MergeFrom(const AccuracyParameter& from) {MergeFrom12342,487819
void AccuracyParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom12358,488255
void AccuracyParameter::CopyFrom(const AccuracyParameter& from) {CopyFrom12364,488393
bool AccuracyParameter::IsInitialized() const {IsInitialized12370,488521
void AccuracyParameter::Swap(AccuracyParameter* other) {Swap12375,488588
::google::protobuf::Metadata AccuracyParameter::GetMetadata() const {GetMetadata12386,488958
const int ArgMaxParameter::kOutMaxValFieldNumber;kOutMaxValFieldNumber12398,489327
const int ArgMaxParameter::kTopKFieldNumber;kTopKFieldNumber12399,489377
const int ArgMaxParameter::kAxisFieldNumber;kAxisFieldNumber12400,489422
ArgMaxParameter::ArgMaxParameter()ArgMaxParameter12403,489489
void ArgMaxParameter::InitAsDefaultInstance() {InitAsDefaultInstance12408,489579
ArgMaxParameter::ArgMaxParameter(const ArgMaxParameter& from)ArgMaxParameter12411,489630
void ArgMaxParameter::SharedCtor() {SharedCtor12417,489766
ArgMaxParameter::~ArgMaxParameter() {~ArgMaxParameter12425,489926
void ArgMaxParameter::SharedDtor() {SharedDtor12429,489983
void ArgMaxParameter::SetCachedSize(int size) const {SetCachedSize12434,490062
const ::google::protobuf::Descriptor* ArgMaxParameter::descriptor() {descriptor12439,490222
const ArgMaxParameter& ArgMaxParameter::default_instance() {default_instance12444,490369
ArgMaxParameter* ArgMaxParameter::default_instance_ = NULL;default_instance_12449,490529
ArgMaxParameter* ArgMaxParameter::New() const {New12451,490590
void ArgMaxParameter::Clear() {Clear12455,490671
bool ArgMaxParameter::MergePartialFromCodedStream(MergePartialFromCodedStream12465,490902
#define DO_(DO_12467,491008
#undef DO_DO_12531,493473
void ArgMaxParameter::SerializeWithCachedSizes(SerializeWithCachedSizes12534,493487
::google::protobuf::uint8* ArgMaxParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray12557,494227
int ArgMaxParameter::ByteSize() const {ByteSize12581,495061
void ArgMaxParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom12616,495958
void ArgMaxParameter::MergeFrom(const ArgMaxParameter& from) {MergeFrom12628,496332
void ArgMaxParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom12644,496761
void ArgMaxParameter::CopyFrom(const ArgMaxParameter& from) {CopyFrom12650,496897
bool ArgMaxParameter::IsInitialized() const {IsInitialized12656,497021
void ArgMaxParameter::Swap(ArgMaxParameter* other) {Swap12661,497086
::google::protobuf::Metadata ArgMaxParameter::GetMetadata() const {GetMetadata12672,497450
const int ConcatParameter::kAxisFieldNumber;kAxisFieldNumber12684,497813
const int ConcatParameter::kConcatDimFieldNumber;kConcatDimFieldNumber12685,497858
ConcatParameter::ConcatParameter()ConcatParameter12688,497930
void ConcatParameter::InitAsDefaultInstance() {InitAsDefaultInstance12693,498020
ConcatParameter::ConcatParameter(const ConcatParameter& from)ConcatParameter12696,498071
void ConcatParameter::SharedCtor() {SharedCtor12702,498207
ConcatParameter::~ConcatParameter() {~ConcatParameter12709,498348
void ConcatParameter::SharedDtor() {SharedDtor12713,498405
void ConcatParameter::SetCachedSize(int size) const {SetCachedSize12718,498484
const ::google::protobuf::Descriptor* ConcatParameter::descriptor() {descriptor12723,498644
const ConcatParameter& ConcatParameter::default_instance() {default_instance12728,498791
ConcatParameter* ConcatParameter::default_instance_ = NULL;default_instance_12733,498951
ConcatParameter* ConcatParameter::New() const {New12735,499012
void ConcatParameter::Clear() {Clear12739,499093
bool ConcatParameter::MergePartialFromCodedStream(MergePartialFromCodedStream12748,499303
#define DO_(DO_12750,499409
#undef DO_DO_12798,501275
void ConcatParameter::SerializeWithCachedSizes(SerializeWithCachedSizes12801,501289
::google::protobuf::uint8* ConcatParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray12819,501879
int ConcatParameter::ByteSize() const {ByteSize12838,502547
void ConcatParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom12868,503354
void ConcatParameter::MergeFrom(const ConcatParameter& from) {MergeFrom12880,503728
void ConcatParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom12893,504089
void ConcatParameter::CopyFrom(const ConcatParameter& from) {CopyFrom12899,504225
bool ConcatParameter::IsInitialized() const {IsInitialized12905,504349
void ConcatParameter::Swap(ConcatParameter* other) {Swap12910,504414
::google::protobuf::Metadata ConcatParameter::GetMetadata() const {GetMetadata12920,504738
const int BatchNormParameter::kUseGlobalStatsFieldNumber;kUseGlobalStatsFieldNumber12932,505101
const int BatchNormParameter::kMovingAverageFractionFieldNumber;kMovingAverageFractionFieldNumber12933,505159
const int BatchNormParameter::kEpsFieldNumber;kEpsFieldNumber12934,505224
BatchNormParameter::BatchNormParameter()BatchNormParameter12937,505293
void BatchNormParameter::InitAsDefaultInstance() {InitAsDefaultInstance12942,505389
BatchNormParameter::BatchNormParameter(const BatchNormParameter& from)BatchNormParameter12945,505443
void BatchNormParameter::SharedCtor() {SharedCtor12951,505588
BatchNormParameter::~BatchNormParameter() {~BatchNormParameter12959,505782
void BatchNormParameter::SharedDtor() {SharedDtor12963,505845
void BatchNormParameter::SetCachedSize(int size) const {SetCachedSize12968,505927
const ::google::protobuf::Descriptor* BatchNormParameter::descriptor() {descriptor12973,506090
const BatchNormParameter& BatchNormParameter::default_instance() {default_instance12978,506243
BatchNormParameter* BatchNormParameter::default_instance_ = NULL;default_instance_12983,506409
BatchNormParameter* BatchNormParameter::New() const {New12985,506476
void BatchNormParameter::Clear() {Clear12989,506566
bool BatchNormParameter::MergePartialFromCodedStream(MergePartialFromCodedStream12999,506831
#define DO_(DO_13001,506940
#undef DO_DO_13065,509468
void BatchNormParameter::SerializeWithCachedSizes(SerializeWithCachedSizes13068,509482
::google::protobuf::uint8* BatchNormParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray13091,510293
int BatchNormParameter::ByteSize() const {ByteSize13115,511198
void BatchNormParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom13146,511969
void BatchNormParameter::MergeFrom(const BatchNormParameter& from) {MergeFrom13158,512352
void BatchNormParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom13174,512853
void BatchNormParameter::CopyFrom(const BatchNormParameter& from) {CopyFrom13180,512992
bool BatchNormParameter::IsInitialized() const {IsInitialized13186,513122
void BatchNormParameter::Swap(BatchNormParameter* other) {Swap13191,513190
::google::protobuf::Metadata BatchNormParameter::GetMetadata() const {GetMetadata13202,513604
const int BiasParameter::kAxisFieldNumber;kAxisFieldNumber13214,513976
const int BiasParameter::kNumAxesFieldNumber;kNumAxesFieldNumber13215,514019
const int BiasParameter::kFillerFieldNumber;kFillerFieldNumber13216,514065
BiasParameter::BiasParameter()BiasParameter13219,514132
void BiasParameter::InitAsDefaultInstance() {InitAsDefaultInstance13224,514218
BiasParameter::BiasParameter(const BiasParameter& from)BiasParameter13228,514366
void BiasParameter::SharedCtor() {SharedCtor13234,514496
BiasParameter::~BiasParameter() {~BiasParameter13242,514650
void BiasParameter::SharedDtor() {SharedDtor13246,514703
void BiasParameter::SetCachedSize(int size) const {SetCachedSize13252,514800
const ::google::protobuf::Descriptor* BiasParameter::descriptor() {descriptor13257,514958
const BiasParameter& BiasParameter::default_instance() {default_instance13262,515101
BiasParameter* BiasParameter::default_instance_ = NULL;default_instance_13267,515257
BiasParameter* BiasParameter::New() const {New13269,515314
void BiasParameter::Clear() {Clear13273,515389
bool BiasParameter::MergePartialFromCodedStream(MergePartialFromCodedStream13285,515695
#define DO_(DO_13287,515799
#undef DO_DO_13349,518189
void BiasParameter::SerializeWithCachedSizes(SerializeWithCachedSizes13352,518203
::google::protobuf::uint8* BiasParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray13376,518969
int BiasParameter::ByteSize() const {ByteSize13402,519835
void BiasParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom13439,520841
void BiasParameter::MergeFrom(const BiasParameter& from) {MergeFrom13451,521209
void BiasParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom13467,521671
void BiasParameter::CopyFrom(const BiasParameter& from) {CopyFrom13473,521805
bool BiasParameter::IsInitialized() const {IsInitialized13479,521925
void BiasParameter::Swap(BiasParameter* other) {Swap13484,521988
::google::protobuf::Metadata BiasParameter::GetMetadata() const {GetMetadata13495,522344
const int ContrastiveLossParameter::kMarginFieldNumber;kMarginFieldNumber13507,522701
const int ContrastiveLossParameter::kLegacyVersionFieldNumber;kLegacyVersionFieldNumber13508,522757
ContrastiveLossParameter::ContrastiveLossParameter()ContrastiveLossParameter13511,522842
void ContrastiveLossParameter::InitAsDefaultInstance() {InitAsDefaultInstance13516,522950
ContrastiveLossParameter::ContrastiveLossParameter(const ContrastiveLossParameter& from)ContrastiveLossParameter13519,523010
void ContrastiveLossParameter::SharedCtor() {SharedCtor13525,523173
ContrastiveLossParameter::~ContrastiveLossParameter() {~ContrastiveLossParameter13532,523332
void ContrastiveLossParameter::SharedDtor() {SharedDtor13536,523407
void ContrastiveLossParameter::SetCachedSize(int size) const {SetCachedSize13541,523495
const ::google::protobuf::Descriptor* ContrastiveLossParameter::descriptor() {descriptor13546,523664
const ContrastiveLossParameter& ContrastiveLossParameter::default_instance() {default_instance13551,523829
ContrastiveLossParameter* ContrastiveLossParameter::default_instance_ = NULL;default_instance_13556,524007
ContrastiveLossParameter* ContrastiveLossParameter::New() const {New13558,524086
void ContrastiveLossParameter::Clear() {Clear13562,524194
bool ContrastiveLossParameter::MergePartialFromCodedStream(MergePartialFromCodedStream13571,524422
#define DO_(DO_13573,524537
#undef DO_DO_13621,526400
void ContrastiveLossParameter::SerializeWithCachedSizes(SerializeWithCachedSizes13624,526414
::google::protobuf::uint8* ContrastiveLossParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray13642,527031
int ContrastiveLossParameter::ByteSize() const {ByteSize13661,527726
void ContrastiveLossParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom13687,528375
void ContrastiveLossParameter::MergeFrom(const ContrastiveLossParameter& from) {MergeFrom13699,528776
void ContrastiveLossParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom13712,529173
void ContrastiveLossParameter::CopyFrom(const ContrastiveLossParameter& from) {CopyFrom13718,529318
bool ContrastiveLossParameter::IsInitialized() const {IsInitialized13724,529460
void ContrastiveLossParameter::Swap(ContrastiveLossParameter* other) {Swap13729,529534
::google::protobuf::Metadata ContrastiveLossParameter::GetMetadata() const {GetMetadata13739,529888
const ::google::protobuf::EnumDescriptor* ConvolutionParameter_Engine_descriptor() {ConvolutionParameter_Engine_descriptor13750,530261
bool ConvolutionParameter_Engine_IsValid(int value) {ConvolutionParameter_Engine_IsValid13754,530434
const ConvolutionParameter_Engine ConvolutionParameter::DEFAULT;DEFAULT13766,530618
const ConvolutionParameter_Engine ConvolutionParameter::CAFFE;CAFFE13767,530683
const ConvolutionParameter_Engine ConvolutionParameter::CUDNN;CUDNN13768,530746
const ConvolutionParameter_Engine ConvolutionParameter::Engine_MIN;Engine_MIN13769,530809
const ConvolutionParameter_Engine ConvolutionParameter::Engine_MAX;Engine_MAX13770,530877
const int ConvolutionParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE13771,530945
const int ConvolutionParameter::kNumOutputFieldNumber;kNumOutputFieldNumber13774,531032
const int ConvolutionParameter::kBiasTermFieldNumber;kBiasTermFieldNumber13775,531087
const int ConvolutionParameter::kPadFieldNumber;kPadFieldNumber13776,531141
const int ConvolutionParameter::kKernelSizeFieldNumber;kKernelSizeFieldNumber13777,531190
const int ConvolutionParameter::kStrideFieldNumber;kStrideFieldNumber13778,531246
const int ConvolutionParameter::kDilationFieldNumber;kDilationFieldNumber13779,531298
const int ConvolutionParameter::kPadHFieldNumber;kPadHFieldNumber13780,531352
const int ConvolutionParameter::kPadWFieldNumber;kPadWFieldNumber13781,531402
const int ConvolutionParameter::kKernelHFieldNumber;kKernelHFieldNumber13782,531452
const int ConvolutionParameter::kKernelWFieldNumber;kKernelWFieldNumber13783,531505
const int ConvolutionParameter::kStrideHFieldNumber;kStrideHFieldNumber13784,531558
const int ConvolutionParameter::kStrideWFieldNumber;kStrideWFieldNumber13785,531611
const int ConvolutionParameter::kGroupFieldNumber;kGroupFieldNumber13786,531664
const int ConvolutionParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber13787,531715
const int ConvolutionParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber13788,531773
const int ConvolutionParameter::kEngineFieldNumber;kEngineFieldNumber13789,531829
const int ConvolutionParameter::kAxisFieldNumber;kAxisFieldNumber13790,531881
const int ConvolutionParameter::kForceNdIm2ColFieldNumber;kForceNdIm2ColFieldNumber13791,531931
ConvolutionParameter::ConvolutionParameter()ConvolutionParameter13794,532012
void ConvolutionParameter::InitAsDefaultInstance() {InitAsDefaultInstance13799,532112
ConvolutionParameter::ConvolutionParameter(const ConvolutionParameter& from)ConvolutionParameter13804,532378
void ConvolutionParameter::SharedCtor() {SharedCtor13810,532529
ConvolutionParameter::~ConvolutionParameter() {~ConvolutionParameter13829,532904
void ConvolutionParameter::SharedDtor() {SharedDtor13833,532971
void ConvolutionParameter::SetCachedSize(int size) const {SetCachedSize13840,533107
const ::google::protobuf::Descriptor* ConvolutionParameter::descriptor() {descriptor13845,533272
const ConvolutionParameter& ConvolutionParameter::default_instance() {default_instance13850,533429
ConvolutionParameter* ConvolutionParameter::default_instance_ = NULL;default_instance_13855,533599
ConvolutionParameter* ConvolutionParameter::New() const {New13857,533670
void ConvolutionParameter::Clear() {Clear13861,533766
bool ConvolutionParameter::MergePartialFromCodedStream(MergePartialFromCodedStream13894,534610
#define DO_(DO_13896,534721
#undef DO_DO_14225,548839
void ConvolutionParameter::SerializeWithCachedSizes(SerializeWithCachedSizes14228,548853
::google::protobuf::uint8* ConvolutionParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray14333,552289
int ConvolutionParameter::ByteSize() const {ByteSize14441,556071
void ConvolutionParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom14594,560379
void ConvolutionParameter::MergeFrom(const ConvolutionParameter& from) {MergeFrom14606,560768
void ConvolutionParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom14663,562396
void ConvolutionParameter::CopyFrom(const ConvolutionParameter& from) {CopyFrom14669,562537
bool ConvolutionParameter::IsInitialized() const {IsInitialized14675,562671
void ConvolutionParameter::Swap(ConvolutionParameter* other) {Swap14680,562741
::google::protobuf::Metadata ConvolutionParameter::GetMetadata() const {GetMetadata14706,563761
const int CropParameter::kAxisFieldNumber;kAxisFieldNumber14718,564139
const int CropParameter::kOffsetFieldNumber;kOffsetFieldNumber14719,564182
CropParameter::CropParameter()CropParameter14722,564249
void CropParameter::InitAsDefaultInstance() {InitAsDefaultInstance14727,564335
CropParameter::CropParameter(const CropParameter& from)CropParameter14730,564384
void CropParameter::SharedCtor() {SharedCtor14736,564514
CropParameter::~CropParameter() {~CropParameter14742,564633
void CropParameter::SharedDtor() {SharedDtor14746,564686
void CropParameter::SetCachedSize(int size) const {SetCachedSize14751,564763
const ::google::protobuf::Descriptor* CropParameter::descriptor() {descriptor14756,564921
const CropParameter& CropParameter::default_instance() {default_instance14761,565064
CropParameter* CropParameter::default_instance_ = NULL;default_instance_14766,565220
CropParameter* CropParameter::New() const {New14768,565277
void CropParameter::Clear() {Clear14772,565352
bool CropParameter::MergePartialFromCodedStream(MergePartialFromCodedStream14781,565557
#define DO_(DO_14783,565661
#undef DO_DO_14837,568012
void CropParameter::SerializeWithCachedSizes(SerializeWithCachedSizes14840,568026
::google::protobuf::uint8* CropParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray14859,568624
int CropParameter::ByteSize() const {ByteSize14879,569300
void CropParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom14912,570177
void CropParameter::MergeFrom(const CropParameter& from) {MergeFrom14924,570545
void CropParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom14935,570857
void CropParameter::CopyFrom(const CropParameter& from) {CopyFrom14941,570991
bool CropParameter::IsInitialized() const {IsInitialized14947,571111
void CropParameter::Swap(CropParameter* other) {Swap14952,571174
::google::protobuf::Metadata CropParameter::GetMetadata() const {GetMetadata14962,571481
const ::google::protobuf::EnumDescriptor* DataParameter_DB_descriptor() {DataParameter_DB_descriptor14973,571821
bool DataParameter_DB_IsValid(int value) {DataParameter_DB_IsValid14977,571972
const DataParameter_DB DataParameter::LEVELDB;LEVELDB14988,572133
const DataParameter_DB DataParameter::LMDB;LMDB14989,572180
const DataParameter_DB DataParameter::DB_MIN;DB_MIN14990,572224
const DataParameter_DB DataParameter::DB_MAX;DB_MAX14991,572270
const int DataParameter::DB_ARRAYSIZE;DB_ARRAYSIZE14992,572316
const int DataParameter::kSourceFieldNumber;kSourceFieldNumber14995,572392
const int DataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber14996,572437
const int DataParameter::kRandSkipFieldNumber;kRandSkipFieldNumber14997,572485
const int DataParameter::kBackendFieldNumber;kBackendFieldNumber14998,572532
const int DataParameter::kScaleFieldNumber;kScaleFieldNumber14999,572578
const int DataParameter::kMeanFileFieldNumber;kMeanFileFieldNumber15000,572622
const int DataParameter::kCropSizeFieldNumber;kCropSizeFieldNumber15001,572669
const int DataParameter::kMirrorFieldNumber;kMirrorFieldNumber15002,572716
const int DataParameter::kForceEncodedColorFieldNumber;kForceEncodedColorFieldNumber15003,572761
const int DataParameter::kPrefetchFieldNumber;kPrefetchFieldNumber15004,572817
DataParameter::DataParameter()DataParameter15007,572886
void DataParameter::InitAsDefaultInstance() {InitAsDefaultInstance15012,572972
DataParameter::DataParameter(const DataParameter& from)DataParameter15015,573021
void DataParameter::SharedCtor() {SharedCtor15021,573151
DataParameter::~DataParameter() {~DataParameter15036,573589
void DataParameter::SharedDtor() {SharedDtor15040,573642
void DataParameter::SetCachedSize(int size) const {SetCachedSize15051,573901
const ::google::protobuf::Descriptor* DataParameter::descriptor() {descriptor15056,574059
const DataParameter& DataParameter::default_instance() {default_instance15061,574202
DataParameter* DataParameter::default_instance_ = NULL;default_instance_15066,574358
DataParameter* DataParameter::New() const {New15068,574415
void DataParameter::Clear() {Clear15072,574490
bool DataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream15099,575161
#define DO_(DO_15101,575265
#undef DO_DO_15284,582624
void DataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes15287,582638
::google::protobuf::uint8* DataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray15354,584980
int DataParameter::ByteSize() const {ByteSize15424,587544
void DataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom15505,589749
void DataParameter::MergeFrom(const DataParameter& from) {MergeFrom15517,590117
void DataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom15556,591155
void DataParameter::CopyFrom(const DataParameter& from) {CopyFrom15562,591289
bool DataParameter::IsInitialized() const {IsInitialized15568,591409
void DataParameter::Swap(DataParameter* other) {Swap15573,591472
::google::protobuf::Metadata DataParameter::GetMetadata() const {GetMetadata15591,592164
const int DropoutParameter::kDropoutRatioFieldNumber;kDropoutRatioFieldNumber15603,592521
DropoutParameter::DropoutParameter()DropoutParameter15606,592597
void DropoutParameter::InitAsDefaultInstance() {InitAsDefaultInstance15611,592689
DropoutParameter::DropoutParameter(const DropoutParameter& from)DropoutParameter15614,592741
void DropoutParameter::SharedCtor() {SharedCtor15620,592880
DropoutParameter::~DropoutParameter() {~DropoutParameter15626,593014
void DropoutParameter::SharedDtor() {SharedDtor15630,593073
void DropoutParameter::SetCachedSize(int size) const {SetCachedSize15635,593153
const ::google::protobuf::Descriptor* DropoutParameter::descriptor() {descriptor15640,593314
const DropoutParameter& DropoutParameter::default_instance() {default_instance15645,593463
DropoutParameter* DropoutParameter::default_instance_ = NULL;default_instance_15650,593625
DropoutParameter* DropoutParameter::New() const {New15652,593688
void DropoutParameter::Clear() {Clear15656,593772
bool DropoutParameter::MergePartialFromCodedStream(MergePartialFromCodedStream15664,593973
#define DO_(DO_15666,594080
#undef DO_DO_15698,595311
void DropoutParameter::SerializeWithCachedSizes(SerializeWithCachedSizes15701,595325
::google::protobuf::uint8* DropoutParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray15714,595769
int DropoutParameter::ByteSize() const {ByteSize15728,596275
void DropoutParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom15749,596807
void DropoutParameter::MergeFrom(const DropoutParameter& from) {MergeFrom15761,597184
void DropoutParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom15771,597494
void DropoutParameter::CopyFrom(const DropoutParameter& from) {CopyFrom15777,597631
bool DropoutParameter::IsInitialized() const {IsInitialized15783,597757
void DropoutParameter::Swap(DropoutParameter* other) {Swap15788,597823
::google::protobuf::Metadata DropoutParameter::GetMetadata() const {GetMetadata15797,598119
const int DummyDataParameter::kDataFillerFieldNumber;kDataFillerFieldNumber15809,598485
const int DummyDataParameter::kShapeFieldNumber;kShapeFieldNumber15810,598539
const int DummyDataParameter::kNumFieldNumber;kNumFieldNumber15811,598588
const int DummyDataParameter::kChannelsFieldNumber;kChannelsFieldNumber15812,598635
const int DummyDataParameter::kHeightFieldNumber;kHeightFieldNumber15813,598687
const int DummyDataParameter::kWidthFieldNumber;kWidthFieldNumber15814,598737
DummyDataParameter::DummyDataParameter()DummyDataParameter15817,598808
void DummyDataParameter::InitAsDefaultInstance() {InitAsDefaultInstance15822,598904
DummyDataParameter::DummyDataParameter(const DummyDataParameter& from)DummyDataParameter15825,598958
void DummyDataParameter::SharedCtor() {SharedCtor15831,599103
DummyDataParameter::~DummyDataParameter() {~DummyDataParameter15836,599214
void DummyDataParameter::SharedDtor() {SharedDtor15840,599277
void DummyDataParameter::SetCachedSize(int size) const {SetCachedSize15845,599359
const ::google::protobuf::Descriptor* DummyDataParameter::descriptor() {descriptor15850,599522
const DummyDataParameter& DummyDataParameter::default_instance() {default_instance15855,599675
DummyDataParameter* DummyDataParameter::default_instance_ = NULL;default_instance_15860,599841
DummyDataParameter* DummyDataParameter::New() const {New15862,599908
void DummyDataParameter::Clear() {Clear15866,599998
bool DummyDataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream15877,600236
#define DO_(DO_15879,600345
#undef DO_DO_16014,606628
void DummyDataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes16017,606642
::google::protobuf::uint8* DummyDataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray16061,608077
int DummyDataParameter::ByteSize() const {ByteSize16108,609666
void DummyDataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom16178,611676
void DummyDataParameter::MergeFrom(const DummyDataParameter& from) {MergeFrom16190,612059
void DummyDataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom16201,612439
void DummyDataParameter::CopyFrom(const DummyDataParameter& from) {CopyFrom16207,612578
bool DummyDataParameter::IsInitialized() const {IsInitialized16213,612708
void DummyDataParameter::Swap(DummyDataParameter* other) {Swap16218,612776
::google::protobuf::Metadata DummyDataParameter::GetMetadata() const {GetMetadata16232,613236
const ::google::protobuf::EnumDescriptor* EltwiseParameter_EltwiseOp_descriptor() {EltwiseParameter_EltwiseOp_descriptor16243,613591
bool EltwiseParameter_EltwiseOp_IsValid(int value) {EltwiseParameter_EltwiseOp_IsValid16247,613762
const EltwiseParameter_EltwiseOp EltwiseParameter::PROD;PROD16259,613945
const EltwiseParameter_EltwiseOp EltwiseParameter::SUM;SUM16260,614002
const EltwiseParameter_EltwiseOp EltwiseParameter::MAX;MAX16261,614058
const EltwiseParameter_EltwiseOp EltwiseParameter::EltwiseOp_MIN;EltwiseOp_MIN16262,614114
const EltwiseParameter_EltwiseOp EltwiseParameter::EltwiseOp_MAX;EltwiseOp_MAX16263,614180
const int EltwiseParameter::EltwiseOp_ARRAYSIZE;EltwiseOp_ARRAYSIZE16264,614246
const int EltwiseParameter::kOperationFieldNumber;kOperationFieldNumber16267,614332
const int EltwiseParameter::kCoeffFieldNumber;kCoeffFieldNumber16268,614383
const int EltwiseParameter::kStableProdGradFieldNumber;kStableProdGradFieldNumber16269,614430
EltwiseParameter::EltwiseParameter()EltwiseParameter16272,614508
void EltwiseParameter::InitAsDefaultInstance() {InitAsDefaultInstance16277,614600
EltwiseParameter::EltwiseParameter(const EltwiseParameter& from)EltwiseParameter16280,614652
void EltwiseParameter::SharedCtor() {SharedCtor16286,614791
EltwiseParameter::~EltwiseParameter() {~EltwiseParameter16293,614946
void EltwiseParameter::SharedDtor() {SharedDtor16297,615005
void EltwiseParameter::SetCachedSize(int size) const {SetCachedSize16302,615085
const ::google::protobuf::Descriptor* EltwiseParameter::descriptor() {descriptor16307,615246
const EltwiseParameter& EltwiseParameter::default_instance() {default_instance16312,615395
EltwiseParameter* EltwiseParameter::default_instance_ = NULL;default_instance_16317,615557
EltwiseParameter* EltwiseParameter::New() const {New16319,615620
void EltwiseParameter::Clear() {Clear16323,615704
bool EltwiseParameter::MergePartialFromCodedStream(MergePartialFromCodedStream16333,615946
#define DO_(DO_16335,616053
#undef DO_DO_16410,619269
void EltwiseParameter::SerializeWithCachedSizes(SerializeWithCachedSizes16413,619283
::google::protobuf::uint8* EltwiseParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray16438,620123
int EltwiseParameter::ByteSize() const {ByteSize16464,621057
void EltwiseParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom16498,621974
void EltwiseParameter::MergeFrom(const EltwiseParameter& from) {MergeFrom16510,622351
void EltwiseParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom16524,622780
void EltwiseParameter::CopyFrom(const EltwiseParameter& from) {CopyFrom16530,622917
bool EltwiseParameter::IsInitialized() const {IsInitialized16536,623043
void EltwiseParameter::Swap(EltwiseParameter* other) {Swap16541,623109
::google::protobuf::Metadata EltwiseParameter::GetMetadata() const {GetMetadata16552,623490
const int ELUParameter::kAlphaFieldNumber;kAlphaFieldNumber16564,623856
ELUParameter::ELUParameter()ELUParameter16567,623921
void ELUParameter::InitAsDefaultInstance() {InitAsDefaultInstance16572,624005
ELUParameter::ELUParameter(const ELUParameter& from)ELUParameter16575,624053
void ELUParameter::SharedCtor() {SharedCtor16581,624180
ELUParameter::~ELUParameter() {~ELUParameter16587,624299
void ELUParameter::SharedDtor() {SharedDtor16591,624350
void ELUParameter::SetCachedSize(int size) const {SetCachedSize16596,624426
const ::google::protobuf::Descriptor* ELUParameter::descriptor() {descriptor16601,624583
const ELUParameter& ELUParameter::default_instance() {default_instance16606,624724
ELUParameter* ELUParameter::default_instance_ = NULL;default_instance_16611,624878
ELUParameter* ELUParameter::New() const {New16613,624933
void ELUParameter::Clear() {Clear16617,625005
bool ELUParameter::MergePartialFromCodedStream(MergePartialFromCodedStream16625,625191
#define DO_(DO_16627,625294
#undef DO_DO_16659,626499
void ELUParameter::SerializeWithCachedSizes(SerializeWithCachedSizes16662,626513
::google::protobuf::uint8* ELUParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray16675,626927
int ELUParameter::ByteSize() const {ByteSize16689,627403
void ELUParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom16710,627913
void ELUParameter::MergeFrom(const ELUParameter& from) {MergeFrom16722,628278
void ELUParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom16732,628556
void ELUParameter::CopyFrom(const ELUParameter& from) {CopyFrom16738,628689
bool ELUParameter::IsInitialized() const {IsInitialized16744,628807
void ELUParameter::Swap(ELUParameter* other) {Swap16749,628869
::google::protobuf::Metadata ELUParameter::GetMetadata() const {GetMetadata16758,629141
const int EmbedParameter::kNumOutputFieldNumber;kNumOutputFieldNumber16770,629495
const int EmbedParameter::kInputDimFieldNumber;kInputDimFieldNumber16771,629544
const int EmbedParameter::kBiasTermFieldNumber;kBiasTermFieldNumber16772,629592
const int EmbedParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber16773,629640
const int EmbedParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber16774,629692
EmbedParameter::EmbedParameter()EmbedParameter16777,629764
void EmbedParameter::InitAsDefaultInstance() {InitAsDefaultInstance16782,629852
EmbedParameter::EmbedParameter(const EmbedParameter& from)EmbedParameter16787,630112
void EmbedParameter::SharedCtor() {SharedCtor16793,630245
EmbedParameter::~EmbedParameter() {~EmbedParameter16803,630460
void EmbedParameter::SharedDtor() {SharedDtor16807,630515
void EmbedParameter::SetCachedSize(int size) const {SetCachedSize16814,630645
const ::google::protobuf::Descriptor* EmbedParameter::descriptor() {descriptor16819,630804
const EmbedParameter& EmbedParameter::default_instance() {default_instance16824,630949
EmbedParameter* EmbedParameter::default_instance_ = NULL;default_instance_16829,631107
EmbedParameter* EmbedParameter::New() const {New16831,631166
void EmbedParameter::Clear() {Clear16835,631244
bool EmbedParameter::MergePartialFromCodedStream(MergePartialFromCodedStream16851,631720
#define DO_(DO_16853,631825
#undef DO_DO_16945,635418
void EmbedParameter::SerializeWithCachedSizes(SerializeWithCachedSizes16948,635432
::google::protobuf::uint8* EmbedParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray16983,636590
int EmbedParameter::ByteSize() const {ByteSize17021,637886
void EmbedParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom17070,639249
void EmbedParameter::MergeFrom(const EmbedParameter& from) {MergeFrom17082,639620
void EmbedParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom17104,640329
void EmbedParameter::CopyFrom(const EmbedParameter& from) {CopyFrom17110,640464
bool EmbedParameter::IsInitialized() const {IsInitialized17116,640586
void EmbedParameter::Swap(EmbedParameter* other) {Swap17121,640650
::google::protobuf::Metadata EmbedParameter::GetMetadata() const {GetMetadata17134,641132
const int ExpParameter::kBaseFieldNumber;kBaseFieldNumber17146,641492
const int ExpParameter::kScaleFieldNumber;kScaleFieldNumber17147,641534
const int ExpParameter::kShiftFieldNumber;kShiftFieldNumber17148,641577
ExpParameter::ExpParameter()ExpParameter17151,641642
void ExpParameter::InitAsDefaultInstance() {InitAsDefaultInstance17156,641726
ExpParameter::ExpParameter(const ExpParameter& from)ExpParameter17159,641774
void ExpParameter::SharedCtor() {SharedCtor17165,641901
ExpParameter::~ExpParameter() {~ExpParameter17173,642048
void ExpParameter::SharedDtor() {SharedDtor17177,642099
void ExpParameter::SetCachedSize(int size) const {SetCachedSize17182,642175
const ::google::protobuf::Descriptor* ExpParameter::descriptor() {descriptor17187,642332
const ExpParameter& ExpParameter::default_instance() {default_instance17192,642473
ExpParameter* ExpParameter::default_instance_ = NULL;default_instance_17197,642627
ExpParameter* ExpParameter::New() const {New17199,642682
void ExpParameter::Clear() {Clear17203,642754
bool ExpParameter::MergePartialFromCodedStream(MergePartialFromCodedStream17213,642972
#define DO_(DO_17215,643075
#undef DO_DO_17279,645498
void ExpParameter::SerializeWithCachedSizes(SerializeWithCachedSizes17282,645512
::google::protobuf::uint8* ExpParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray17305,646242
int ExpParameter::ByteSize() const {ByteSize17329,647066
void ExpParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom17360,647783
void ExpParameter::MergeFrom(const ExpParameter& from) {MergeFrom17372,648148
void ExpParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom17388,648553
void ExpParameter::CopyFrom(const ExpParameter& from) {CopyFrom17394,648686
bool ExpParameter::IsInitialized() const {IsInitialized17400,648804
void ExpParameter::Swap(ExpParameter* other) {Swap17405,648866
::google::protobuf::Metadata ExpParameter::GetMetadata() const {GetMetadata17416,649212
const int FlattenParameter::kAxisFieldNumber;kAxisFieldNumber17428,649566
const int FlattenParameter::kEndAxisFieldNumber;kEndAxisFieldNumber17429,649612
FlattenParameter::FlattenParameter()FlattenParameter17432,649683
void FlattenParameter::InitAsDefaultInstance() {InitAsDefaultInstance17437,649775
FlattenParameter::FlattenParameter(const FlattenParameter& from)FlattenParameter17440,649827
void FlattenParameter::SharedCtor() {SharedCtor17446,649966
FlattenParameter::~FlattenParameter() {~FlattenParameter17453,650106
void FlattenParameter::SharedDtor() {SharedDtor17457,650165
void FlattenParameter::SetCachedSize(int size) const {SetCachedSize17462,650245
const ::google::protobuf::Descriptor* FlattenParameter::descriptor() {descriptor17467,650406
const FlattenParameter& FlattenParameter::default_instance() {default_instance17472,650555
FlattenParameter* FlattenParameter::default_instance_ = NULL;default_instance_17477,650717
FlattenParameter* FlattenParameter::New() const {New17479,650780
void FlattenParameter::Clear() {Clear17483,650864
bool FlattenParameter::MergePartialFromCodedStream(MergePartialFromCodedStream17492,651073
#define DO_(DO_17494,651180
#undef DO_DO_17542,653046
void FlattenParameter::SerializeWithCachedSizes(SerializeWithCachedSizes17545,653060
::google::protobuf::uint8* FlattenParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray17563,653644
int FlattenParameter::ByteSize() const {ByteSize17582,654306
void FlattenParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom17612,655107
void FlattenParameter::MergeFrom(const FlattenParameter& from) {MergeFrom17624,655484
void FlattenParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom17637,655841
void FlattenParameter::CopyFrom(const FlattenParameter& from) {CopyFrom17643,655978
bool FlattenParameter::IsInitialized() const {IsInitialized17649,656104
void FlattenParameter::Swap(FlattenParameter* other) {Swap17654,656170
::google::protobuf::Metadata FlattenParameter::GetMetadata() const {GetMetadata17664,656492
const int HDF5DataParameter::kSourceFieldNumber;kSourceFieldNumber17676,656858
const int HDF5DataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber17677,656907
const int HDF5DataParameter::kShuffleFieldNumber;kShuffleFieldNumber17678,656959
HDF5DataParameter::HDF5DataParameter()HDF5DataParameter17681,657031
void HDF5DataParameter::InitAsDefaultInstance() {InitAsDefaultInstance17686,657125
HDF5DataParameter::HDF5DataParameter(const HDF5DataParameter& from)HDF5DataParameter17689,657178
void HDF5DataParameter::SharedCtor() {SharedCtor17695,657320
HDF5DataParameter::~HDF5DataParameter() {~HDF5DataParameter17703,657556
void HDF5DataParameter::SharedDtor() {SharedDtor17707,657617
void HDF5DataParameter::SetCachedSize(int size) const {SetCachedSize17715,657786
const ::google::protobuf::Descriptor* HDF5DataParameter::descriptor() {descriptor17720,657948
const HDF5DataParameter& HDF5DataParameter::default_instance() {default_instance17725,658099
HDF5DataParameter* HDF5DataParameter::default_instance_ = NULL;default_instance_17730,658263
HDF5DataParameter* HDF5DataParameter::New() const {New17732,658328
void HDF5DataParameter::Clear() {Clear17736,658415
bool HDF5DataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream17750,658766
#define DO_(DO_17752,658874
#undef DO_DO_17817,661428
void HDF5DataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes17820,661442
::google::protobuf::uint8* HDF5DataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray17847,662366
int HDF5DataParameter::ByteSize() const {ByteSize17876,663392
void HDF5DataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom17911,664292
void HDF5DataParameter::MergeFrom(const HDF5DataParameter& from) {MergeFrom17923,664672
void HDF5DataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom17939,665114
void HDF5DataParameter::CopyFrom(const HDF5DataParameter& from) {CopyFrom17945,665252
bool HDF5DataParameter::IsInitialized() const {IsInitialized17951,665380
void HDF5DataParameter::Swap(HDF5DataParameter* other) {Swap17956,665447
::google::protobuf::Metadata HDF5DataParameter::GetMetadata() const {GetMetadata17967,665821
const int HDF5OutputParameter::kFileNameFieldNumber;kFileNameFieldNumber17979,666190
HDF5OutputParameter::HDF5OutputParameter()HDF5OutputParameter17982,666265
void HDF5OutputParameter::InitAsDefaultInstance() {InitAsDefaultInstance17987,666363
HDF5OutputParameter::HDF5OutputParameter(const HDF5OutputParameter& from)HDF5OutputParameter17990,666418
void HDF5OutputParameter::SharedCtor() {SharedCtor17996,666566
HDF5OutputParameter::~HDF5OutputParameter() {~HDF5OutputParameter18002,666767
void HDF5OutputParameter::SharedDtor() {SharedDtor18006,666832
void HDF5OutputParameter::SetCachedSize(int size) const {SetCachedSize18014,667009
const ::google::protobuf::Descriptor* HDF5OutputParameter::descriptor() {descriptor18019,667173
const HDF5OutputParameter& HDF5OutputParameter::default_instance() {default_instance18024,667328
HDF5OutputParameter* HDF5OutputParameter::default_instance_ = NULL;default_instance_18029,667496
HDF5OutputParameter* HDF5OutputParameter::New() const {New18031,667565
void HDF5OutputParameter::Clear() {Clear18035,667658
bool HDF5OutputParameter::MergePartialFromCodedStream(MergePartialFromCodedStream18047,667976
#define DO_(DO_18049,668086
#undef DO_DO_18082,669389
void HDF5OutputParameter::SerializeWithCachedSizes(SerializeWithCachedSizes18085,669403
::google::protobuf::uint8* HDF5OutputParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray18102,670015
int HDF5OutputParameter::ByteSize() const {ByteSize18121,670697
void HDF5OutputParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom18144,671302
void HDF5OutputParameter::MergeFrom(const HDF5OutputParameter& from) {MergeFrom18156,671688
void HDF5OutputParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom18166,671992
void HDF5OutputParameter::CopyFrom(const HDF5OutputParameter& from) {CopyFrom18172,672132
bool HDF5OutputParameter::IsInitialized() const {IsInitialized18178,672264
void HDF5OutputParameter::Swap(HDF5OutputParameter* other) {Swap18183,672333
::google::protobuf::Metadata HDF5OutputParameter::GetMetadata() const {GetMetadata18192,672627
const ::google::protobuf::EnumDescriptor* HingeLossParameter_Norm_descriptor() {HingeLossParameter_Norm_descriptor18203,672985
bool HingeLossParameter_Norm_IsValid(int value) {HingeLossParameter_Norm_IsValid18207,673150
const HingeLossParameter_Norm HingeLossParameter::L1;L118218,673318
const HingeLossParameter_Norm HingeLossParameter::L2;L218219,673372
const HingeLossParameter_Norm HingeLossParameter::Norm_MIN;Norm_MIN18220,673426
const HingeLossParameter_Norm HingeLossParameter::Norm_MAX;Norm_MAX18221,673486
const int HingeLossParameter::Norm_ARRAYSIZE;Norm_ARRAYSIZE18222,673546
const int HingeLossParameter::kNormFieldNumber;kNormFieldNumber18225,673629
HingeLossParameter::HingeLossParameter()HingeLossParameter18228,673699
void HingeLossParameter::InitAsDefaultInstance() {InitAsDefaultInstance18233,673795
HingeLossParameter::HingeLossParameter(const HingeLossParameter& from)HingeLossParameter18236,673849
void HingeLossParameter::SharedCtor() {SharedCtor18242,673994
HingeLossParameter::~HingeLossParameter() {~HingeLossParameter18248,674118
void HingeLossParameter::SharedDtor() {SharedDtor18252,674181
void HingeLossParameter::SetCachedSize(int size) const {SetCachedSize18257,674263
const ::google::protobuf::Descriptor* HingeLossParameter::descriptor() {descriptor18262,674426
const HingeLossParameter& HingeLossParameter::default_instance() {default_instance18267,674579
HingeLossParameter* HingeLossParameter::default_instance_ = NULL;default_instance_18272,674745
HingeLossParameter* HingeLossParameter::New() const {New18274,674812
void HingeLossParameter::Clear() {Clear18278,674902
bool HingeLossParameter::MergePartialFromCodedStream(MergePartialFromCodedStream18286,675093
#define DO_(DO_18288,675202
#undef DO_DO_18325,676654
void HingeLossParameter::SerializeWithCachedSizes(SerializeWithCachedSizes18328,676668
::google::protobuf::uint8* HingeLossParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray18342,677117
int HingeLossParameter::ByteSize() const {ByteSize18357,677628
void HingeLossParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom18379,678243
void HingeLossParameter::MergeFrom(const HingeLossParameter& from) {MergeFrom18391,678626
void HingeLossParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom18401,678913
void HingeLossParameter::CopyFrom(const HingeLossParameter& from) {CopyFrom18407,679052
bool HingeLossParameter::IsInitialized() const {IsInitialized18413,679182
void HingeLossParameter::Swap(HingeLossParameter* other) {Swap18418,679250
::google::protobuf::Metadata HingeLossParameter::GetMetadata() const {GetMetadata18427,679532
const int ImageDataParameter::kSourceFieldNumber;kSourceFieldNumber18439,679904
const int ImageDataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber18440,679954
const int ImageDataParameter::kRandSkipFieldNumber;kRandSkipFieldNumber18441,680007
const int ImageDataParameter::kShuffleFieldNumber;kShuffleFieldNumber18442,680059
const int ImageDataParameter::kNewHeightFieldNumber;kNewHeightFieldNumber18443,680110
const int ImageDataParameter::kNewWidthFieldNumber;kNewWidthFieldNumber18444,680163
const int ImageDataParameter::kIsColorFieldNumber;kIsColorFieldNumber18445,680215
const int ImageDataParameter::kScaleFieldNumber;kScaleFieldNumber18446,680266
const int ImageDataParameter::kMeanFileFieldNumber;kMeanFileFieldNumber18447,680315
const int ImageDataParameter::kCropSizeFieldNumber;kCropSizeFieldNumber18448,680367
const int ImageDataParameter::kMirrorFieldNumber;kMirrorFieldNumber18449,680419
const int ImageDataParameter::kRootFolderFieldNumber;kRootFolderFieldNumber18450,680469
ImageDataParameter::ImageDataParameter()ImageDataParameter18453,680545
void ImageDataParameter::InitAsDefaultInstance() {InitAsDefaultInstance18458,680641
ImageDataParameter::ImageDataParameter(const ImageDataParameter& from)ImageDataParameter18461,680695
void ImageDataParameter::SharedCtor() {SharedCtor18467,680840
ImageDataParameter::~ImageDataParameter() {~ImageDataParameter18484,681387
void ImageDataParameter::SharedDtor() {SharedDtor18488,681450
void ImageDataParameter::SetCachedSize(int size) const {SetCachedSize18502,681812
const ::google::protobuf::Descriptor* ImageDataParameter::descriptor() {descriptor18507,681975
const ImageDataParameter& ImageDataParameter::default_instance() {default_instance18512,682128
ImageDataParameter* ImageDataParameter::default_instance_ = NULL;default_instance_18517,682294
ImageDataParameter* ImageDataParameter::New() const {New18519,682361
void ImageDataParameter::Clear() {Clear18523,682451
bool ImageDataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream18556,683289
#define DO_(DO_18558,683398
#undef DO_DO_18769,691893
void ImageDataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes18772,691907
::google::protobuf::uint8* ImageDataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray18852,694764
int ImageDataParameter::ByteSize() const {ByteSize18936,697883
void ImageDataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom19030,700412
void ImageDataParameter::MergeFrom(const ImageDataParameter& from) {MergeFrom19042,700795
void ImageDataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom19087,701976
void ImageDataParameter::CopyFrom(const ImageDataParameter& from) {CopyFrom19093,702115
bool ImageDataParameter::IsInitialized() const {IsInitialized19099,702245
void ImageDataParameter::Swap(ImageDataParameter* other) {Swap19104,702313
::google::protobuf::Metadata ImageDataParameter::GetMetadata() const {GetMetadata19124,703093
const int InfogainLossParameter::kSourceFieldNumber;kSourceFieldNumber19136,703465
const int InfogainLossParameter::kAxisFieldNumber;kAxisFieldNumber19137,703518
InfogainLossParameter::InfogainLossParameter()InfogainLossParameter19140,703591
void InfogainLossParameter::InitAsDefaultInstance() {InitAsDefaultInstance19145,703693
InfogainLossParameter::InfogainLossParameter(const InfogainLossParameter& from)InfogainLossParameter19148,703750
void InfogainLossParameter::SharedCtor() {SharedCtor19154,703904
InfogainLossParameter::~InfogainLossParameter() {~InfogainLossParameter19161,704117
void InfogainLossParameter::SharedDtor() {SharedDtor19165,704186
void InfogainLossParameter::SetCachedSize(int size) const {SetCachedSize19173,704359
const ::google::protobuf::Descriptor* InfogainLossParameter::descriptor() {descriptor19178,704525
const InfogainLossParameter& InfogainLossParameter::default_instance() {default_instance19183,704684
InfogainLossParameter* InfogainLossParameter::default_instance_ = NULL;default_instance_19188,704856
InfogainLossParameter* InfogainLossParameter::New() const {New19190,704929
void InfogainLossParameter::Clear() {Clear19194,705028
bool InfogainLossParameter::MergePartialFromCodedStream(MergePartialFromCodedStream19207,705354
#define DO_(DO_19209,705466
#undef DO_DO_19258,707381
void InfogainLossParameter::SerializeWithCachedSizes(SerializeWithCachedSizes19261,707395
::google::protobuf::uint8* InfogainLossParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray19283,708150
int InfogainLossParameter::ByteSize() const {ByteSize19307,708991
void InfogainLossParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom19337,709778
void InfogainLossParameter::MergeFrom(const InfogainLossParameter& from) {MergeFrom19349,710170
void InfogainLossParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom19362,710531
void InfogainLossParameter::CopyFrom(const InfogainLossParameter& from) {CopyFrom19368,710673
bool InfogainLossParameter::IsInitialized() const {IsInitialized19374,710809
void InfogainLossParameter::Swap(InfogainLossParameter* other) {Swap19379,710880
::google::protobuf::Metadata InfogainLossParameter::GetMetadata() const {GetMetadata19389,711208
const int InnerProductParameter::kNumOutputFieldNumber;kNumOutputFieldNumber19401,711589
const int InnerProductParameter::kBiasTermFieldNumber;kBiasTermFieldNumber19402,711645
const int InnerProductParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber19403,711700
const int InnerProductParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber19404,711759
const int InnerProductParameter::kAxisFieldNumber;kAxisFieldNumber19405,711816
const int InnerProductParameter::kTransposeFieldNumber;kTransposeFieldNumber19406,711867
InnerProductParameter::InnerProductParameter()InnerProductParameter19409,711945
void InnerProductParameter::InitAsDefaultInstance() {InitAsDefaultInstance19414,712047
InnerProductParameter::InnerProductParameter(const InnerProductParameter& from)InnerProductParameter19419,712314
void InnerProductParameter::SharedCtor() {SharedCtor19425,712468
InnerProductParameter::~InnerProductParameter() {~InnerProductParameter19436,712706
void InnerProductParameter::SharedDtor() {SharedDtor19440,712775
void InnerProductParameter::SetCachedSize(int size) const {SetCachedSize19447,712912
const ::google::protobuf::Descriptor* InnerProductParameter::descriptor() {descriptor19452,713078
const InnerProductParameter& InnerProductParameter::default_instance() {default_instance19457,713237
InnerProductParameter* InnerProductParameter::default_instance_ = NULL;default_instance_19462,713409
InnerProductParameter* InnerProductParameter::New() const {New19464,713482
void InnerProductParameter::Clear() {Clear19468,713581
bool InnerProductParameter::MergePartialFromCodedStream(MergePartialFromCodedStream19485,714082
#define DO_(DO_19487,714194
#undef DO_DO_19595,718403
void InnerProductParameter::SerializeWithCachedSizes(SerializeWithCachedSizes19598,718417
::google::protobuf::uint8* InnerProductParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray19638,719752
int InnerProductParameter::ByteSize() const {ByteSize19681,721241
void InnerProductParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom19735,722723
void InnerProductParameter::MergeFrom(const InnerProductParameter& from) {MergeFrom19747,723115
void InnerProductParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom19772,723900
void InnerProductParameter::CopyFrom(const InnerProductParameter& from) {CopyFrom19778,724042
bool InnerProductParameter::IsInitialized() const {IsInitialized19784,724178
void InnerProductParameter::Swap(InnerProductParameter* other) {Swap19789,724249
::google::protobuf::Metadata InnerProductParameter::GetMetadata() const {GetMetadata19803,724781
const int InputParameter::kShapeFieldNumber;kShapeFieldNumber19815,725162
InputParameter::InputParameter()InputParameter19818,725229
void InputParameter::InitAsDefaultInstance() {InitAsDefaultInstance19823,725317
InputParameter::InputParameter(const InputParameter& from)InputParameter19826,725367
void InputParameter::SharedCtor() {SharedCtor19832,725500
InputParameter::~InputParameter() {~InputParameter19837,725607
void InputParameter::SharedDtor() {SharedDtor19841,725662
void InputParameter::SetCachedSize(int size) const {SetCachedSize19846,725740
const ::google::protobuf::Descriptor* InputParameter::descriptor() {descriptor19851,725899
const InputParameter& InputParameter::default_instance() {default_instance19856,726044
InputParameter* InputParameter::default_instance_ = NULL;default_instance_19861,726202
InputParameter* InputParameter::New() const {New19863,726261
void InputParameter::Clear() {Clear19867,726339
bool InputParameter::MergePartialFromCodedStream(MergePartialFromCodedStream19873,726475
#define DO_(DO_19875,726580
#undef DO_DO_19907,727761
void InputParameter::SerializeWithCachedSizes(SerializeWithCachedSizes19910,727775
::google::protobuf::uint8* InputParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray19924,728238
int InputParameter::ByteSize() const {ByteSize19940,728769
void InputParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom19962,729376
void InputParameter::MergeFrom(const InputParameter& from) {MergeFrom19974,729747
void InputParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom19980,729938
void InputParameter::CopyFrom(const InputParameter& from) {CopyFrom19986,730073
bool InputParameter::IsInitialized() const {IsInitialized19992,730195
void InputParameter::Swap(InputParameter* other) {Swap19997,730259
::google::protobuf::Metadata InputParameter::GetMetadata() const {GetMetadata20006,730530
const int LogParameter::kBaseFieldNumber;kBaseFieldNumber20018,730890
const int LogParameter::kScaleFieldNumber;kScaleFieldNumber20019,730932
const int LogParameter::kShiftFieldNumber;kShiftFieldNumber20020,730975
LogParameter::LogParameter()LogParameter20023,731040
void LogParameter::InitAsDefaultInstance() {InitAsDefaultInstance20028,731124
LogParameter::LogParameter(const LogParameter& from)LogParameter20031,731172
void LogParameter::SharedCtor() {SharedCtor20037,731299
LogParameter::~LogParameter() {~LogParameter20045,731446
void LogParameter::SharedDtor() {SharedDtor20049,731497
void LogParameter::SetCachedSize(int size) const {SetCachedSize20054,731573
const ::google::protobuf::Descriptor* LogParameter::descriptor() {descriptor20059,731730
const LogParameter& LogParameter::default_instance() {default_instance20064,731871
LogParameter* LogParameter::default_instance_ = NULL;default_instance_20069,732025
LogParameter* LogParameter::New() const {New20071,732080
void LogParameter::Clear() {Clear20075,732152
bool LogParameter::MergePartialFromCodedStream(MergePartialFromCodedStream20085,732370
#define DO_(DO_20087,732473
#undef DO_DO_20151,734896
void LogParameter::SerializeWithCachedSizes(SerializeWithCachedSizes20154,734910
::google::protobuf::uint8* LogParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray20177,735640
int LogParameter::ByteSize() const {ByteSize20201,736464
void LogParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom20232,737181
void LogParameter::MergeFrom(const LogParameter& from) {MergeFrom20244,737546
void LogParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom20260,737951
void LogParameter::CopyFrom(const LogParameter& from) {CopyFrom20266,738084
bool LogParameter::IsInitialized() const {IsInitialized20272,738202
void LogParameter::Swap(LogParameter* other) {Swap20277,738264
::google::protobuf::Metadata LogParameter::GetMetadata() const {GetMetadata20288,738610
const ::google::protobuf::EnumDescriptor* LRNParameter_NormRegion_descriptor() {LRNParameter_NormRegion_descriptor20299,738947
bool LRNParameter_NormRegion_IsValid(int value) {LRNParameter_NormRegion_IsValid20303,739112
const LRNParameter_NormRegion LRNParameter::ACROSS_CHANNELS;ACROSS_CHANNELS20314,739280
const LRNParameter_NormRegion LRNParameter::WITHIN_CHANNEL;WITHIN_CHANNEL20315,739341
const LRNParameter_NormRegion LRNParameter::NormRegion_MIN;NormRegion_MIN20316,739401
const LRNParameter_NormRegion LRNParameter::NormRegion_MAX;NormRegion_MAX20317,739461
const int LRNParameter::NormRegion_ARRAYSIZE;NormRegion_ARRAYSIZE20318,739521
const ::google::protobuf::EnumDescriptor* LRNParameter_Engine_descriptor() {LRNParameter_Engine_descriptor20320,739587
bool LRNParameter_Engine_IsValid(int value) {LRNParameter_Engine_IsValid20324,739744
const LRNParameter_Engine LRNParameter::DEFAULT;DEFAULT20336,739920
const LRNParameter_Engine LRNParameter::CAFFE;CAFFE20337,739969
const LRNParameter_Engine LRNParameter::CUDNN;CUDNN20338,740016
const LRNParameter_Engine LRNParameter::Engine_MIN;Engine_MIN20339,740063
const LRNParameter_Engine LRNParameter::Engine_MAX;Engine_MAX20340,740115
const int LRNParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE20341,740167
const int LRNParameter::kLocalSizeFieldNumber;kLocalSizeFieldNumber20344,740246
const int LRNParameter::kAlphaFieldNumber;kAlphaFieldNumber20345,740293
const int LRNParameter::kBetaFieldNumber;kBetaFieldNumber20346,740336
const int LRNParameter::kNormRegionFieldNumber;kNormRegionFieldNumber20347,740378
const int LRNParameter::kKFieldNumber;kKFieldNumber20348,740426
const int LRNParameter::kEngineFieldNumber;kEngineFieldNumber20349,740465
LRNParameter::LRNParameter()LRNParameter20352,740531
void LRNParameter::InitAsDefaultInstance() {InitAsDefaultInstance20357,740615
LRNParameter::LRNParameter(const LRNParameter& from)LRNParameter20360,740663
void LRNParameter::SharedCtor() {SharedCtor20366,740790
LRNParameter::~LRNParameter() {~LRNParameter20377,740991
void LRNParameter::SharedDtor() {SharedDtor20381,741042
void LRNParameter::SetCachedSize(int size) const {SetCachedSize20386,741118
const ::google::protobuf::Descriptor* LRNParameter::descriptor() {descriptor20391,741275
const LRNParameter& LRNParameter::default_instance() {default_instance20396,741416
LRNParameter* LRNParameter::default_instance_ = NULL;default_instance_20401,741570
LRNParameter* LRNParameter::New() const {New20403,741625
void LRNParameter::Clear() {Clear20407,741697
bool LRNParameter::MergePartialFromCodedStream(MergePartialFromCodedStream20420,741975
#define DO_(DO_20422,742078
#undef DO_DO_20544,746880
void LRNParameter::SerializeWithCachedSizes(SerializeWithCachedSizes20547,746894
::google::protobuf::uint8* LRNParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray20587,748207
int LRNParameter::ByteSize() const {ByteSize20628,749662
void LRNParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom20678,751029
void LRNParameter::MergeFrom(const LRNParameter& from) {MergeFrom20690,751394
void LRNParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom20715,752018
void LRNParameter::CopyFrom(const LRNParameter& from) {CopyFrom20721,752151
bool LRNParameter::IsInitialized() const {IsInitialized20727,752269
void LRNParameter::Swap(LRNParameter* other) {Swap20732,752331
::google::protobuf::Metadata LRNParameter::GetMetadata() const {GetMetadata20746,752807
const int MemoryDataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber20758,753161
const int MemoryDataParameter::kChannelsFieldNumber;kChannelsFieldNumber20759,753215
const int MemoryDataParameter::kHeightFieldNumber;kHeightFieldNumber20760,753268
const int MemoryDataParameter::kWidthFieldNumber;kWidthFieldNumber20761,753319
MemoryDataParameter::MemoryDataParameter()MemoryDataParameter20764,753391
void MemoryDataParameter::InitAsDefaultInstance() {InitAsDefaultInstance20769,753489
MemoryDataParameter::MemoryDataParameter(const MemoryDataParameter& from)MemoryDataParameter20772,753544
void MemoryDataParameter::SharedCtor() {SharedCtor20778,753692
MemoryDataParameter::~MemoryDataParameter() {~MemoryDataParameter20787,753873
void MemoryDataParameter::SharedDtor() {SharedDtor20791,753938
void MemoryDataParameter::SetCachedSize(int size) const {SetCachedSize20796,754021
const ::google::protobuf::Descriptor* MemoryDataParameter::descriptor() {descriptor20801,754185
const MemoryDataParameter& MemoryDataParameter::default_instance() {default_instance20806,754340
MemoryDataParameter* MemoryDataParameter::default_instance_ = NULL;default_instance_20811,754508
MemoryDataParameter* MemoryDataParameter::New() const {New20813,754577
void MemoryDataParameter::Clear() {Clear20817,754670
bool MemoryDataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream20828,754924
#define DO_(DO_20830,755034
#undef DO_DO_20910,758136
void MemoryDataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes20913,758150
::google::protobuf::uint8* MemoryDataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray20941,759027
int MemoryDataParameter::ByteSize() const {ByteSize20970,760014
void MemoryDataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom21014,761174
void MemoryDataParameter::MergeFrom(const MemoryDataParameter& from) {MergeFrom21026,761560
void MemoryDataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom21045,762074
void MemoryDataParameter::CopyFrom(const MemoryDataParameter& from) {CopyFrom21051,762214
bool MemoryDataParameter::IsInitialized() const {IsInitialized21057,762346
void MemoryDataParameter::Swap(MemoryDataParameter* other) {Swap21062,762415
::google::protobuf::Metadata MemoryDataParameter::GetMetadata() const {GetMetadata21074,762833
const int MVNParameter::kNormalizeVarianceFieldNumber;kNormalizeVarianceFieldNumber21086,763208
const int MVNParameter::kAcrossChannelsFieldNumber;kAcrossChannelsFieldNumber21087,763263
const int MVNParameter::kEpsFieldNumber;kEpsFieldNumber21088,763315
MVNParameter::MVNParameter()MVNParameter21091,763378
void MVNParameter::InitAsDefaultInstance() {InitAsDefaultInstance21096,763462
MVNParameter::MVNParameter(const MVNParameter& from)MVNParameter21099,763510
void MVNParameter::SharedCtor() {SharedCtor21105,763637
MVNParameter::~MVNParameter() {~MVNParameter21113,763817
void MVNParameter::SharedDtor() {SharedDtor21117,763868
void MVNParameter::SetCachedSize(int size) const {SetCachedSize21122,763944
const ::google::protobuf::Descriptor* MVNParameter::descriptor() {descriptor21127,764101
const MVNParameter& MVNParameter::default_instance() {default_instance21132,764242
MVNParameter* MVNParameter::default_instance_ = NULL;default_instance_21137,764396
MVNParameter* MVNParameter::New() const {New21139,764451
void MVNParameter::Clear() {Clear21143,764523
bool MVNParameter::MergePartialFromCodedStream(MergePartialFromCodedStream21153,764774
#define DO_(DO_21155,764877
#undef DO_DO_21219,767384
void MVNParameter::SerializeWithCachedSizes(SerializeWithCachedSizes21222,767398
::google::protobuf::uint8* MVNParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray21245,768200
int MVNParameter::ByteSize() const {ByteSize21269,769096
void MVNParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom21300,769865
void MVNParameter::MergeFrom(const MVNParameter& from) {MergeFrom21312,770230
void MVNParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom21328,770701
void MVNParameter::CopyFrom(const MVNParameter& from) {CopyFrom21334,770834
bool MVNParameter::IsInitialized() const {IsInitialized21340,770952
void MVNParameter::Swap(MVNParameter* other) {Swap21345,771014
::google::protobuf::Metadata MVNParameter::GetMetadata() const {GetMetadata21356,771404
const int ParameterParameter::kShapeFieldNumber;kShapeFieldNumber21368,771758
ParameterParameter::ParameterParameter()ParameterParameter21371,771829
void ParameterParameter::InitAsDefaultInstance() {InitAsDefaultInstance21376,771925
ParameterParameter::ParameterParameter(const ParameterParameter& from)ParameterParameter21380,772065
void ParameterParameter::SharedCtor() {SharedCtor21386,772210
ParameterParameter::~ParameterParameter() {~ParameterParameter21392,772338
void ParameterParameter::SharedDtor() {SharedDtor21396,772401
void ParameterParameter::SetCachedSize(int size) const {SetCachedSize21402,772502
const ::google::protobuf::Descriptor* ParameterParameter::descriptor() {descriptor21407,772665
const ParameterParameter& ParameterParameter::default_instance() {default_instance21412,772818
ParameterParameter* ParameterParameter::default_instance_ = NULL;default_instance_21417,772984
ParameterParameter* ParameterParameter::New() const {New21419,773051
void ParameterParameter::Clear() {Clear21423,773141
bool ParameterParameter::MergePartialFromCodedStream(MergePartialFromCodedStream21433,773409
#define DO_(DO_21435,773518
#undef DO_DO_21465,774628
void ParameterParameter::SerializeWithCachedSizes(SerializeWithCachedSizes21468,774642
::google::protobuf::uint8* ParameterParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray21482,775080
int ParameterParameter::ByteSize() const {ByteSize21498,775586
void ParameterParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom21521,776198
void ParameterParameter::MergeFrom(const ParameterParameter& from) {MergeFrom21533,776581
void ParameterParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom21543,776908
void ParameterParameter::CopyFrom(const ParameterParameter& from) {CopyFrom21549,777047
bool ParameterParameter::IsInitialized() const {IsInitialized21555,777177
void ParameterParameter::Swap(ParameterParameter* other) {Swap21560,777245
::google::protobuf::Metadata ParameterParameter::GetMetadata() const {GetMetadata21569,777529
const ::google::protobuf::EnumDescriptor* PoolingParameter_PoolMethod_descriptor() {PoolingParameter_PoolMethod_descriptor21580,777884
bool PoolingParameter_PoolMethod_IsValid(int value) {PoolingParameter_PoolMethod_IsValid21584,778057
const PoolingParameter_PoolMethod PoolingParameter::MAX;MAX21596,778241
const PoolingParameter_PoolMethod PoolingParameter::AVE;AVE21597,778298
const PoolingParameter_PoolMethod PoolingParameter::STOCHASTIC;STOCHASTIC21598,778355
const PoolingParameter_PoolMethod PoolingParameter::PoolMethod_MIN;PoolMethod_MIN21599,778419
const PoolingParameter_PoolMethod PoolingParameter::PoolMethod_MAX;PoolMethod_MAX21600,778487
const int PoolingParameter::PoolMethod_ARRAYSIZE;PoolMethod_ARRAYSIZE21601,778555
const ::google::protobuf::EnumDescriptor* PoolingParameter_Engine_descriptor() {PoolingParameter_Engine_descriptor21603,778625
bool PoolingParameter_Engine_IsValid(int value) {PoolingParameter_Engine_IsValid21607,778790
const PoolingParameter_Engine PoolingParameter::DEFAULT;DEFAULT21619,778970
const PoolingParameter_Engine PoolingParameter::CAFFE;CAFFE21620,779027
const PoolingParameter_Engine PoolingParameter::CUDNN;CUDNN21621,779082
const PoolingParameter_Engine PoolingParameter::Engine_MIN;Engine_MIN21622,779137
const PoolingParameter_Engine PoolingParameter::Engine_MAX;Engine_MAX21623,779197
const int PoolingParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE21624,779257
const int PoolingParameter::kPoolFieldNumber;kPoolFieldNumber21627,779340
const int PoolingParameter::kPadFieldNumber;kPadFieldNumber21628,779386
const int PoolingParameter::kPadHFieldNumber;kPadHFieldNumber21629,779431
const int PoolingParameter::kPadWFieldNumber;kPadWFieldNumber21630,779477
const int PoolingParameter::kKernelSizeFieldNumber;kKernelSizeFieldNumber21631,779523
const int PoolingParameter::kKernelHFieldNumber;kKernelHFieldNumber21632,779575
const int PoolingParameter::kKernelWFieldNumber;kKernelWFieldNumber21633,779624
const int PoolingParameter::kStrideFieldNumber;kStrideFieldNumber21634,779673
const int PoolingParameter::kStrideHFieldNumber;kStrideHFieldNumber21635,779721
const int PoolingParameter::kStrideWFieldNumber;kStrideWFieldNumber21636,779770
const int PoolingParameter::kEngineFieldNumber;kEngineFieldNumber21637,779819
const int PoolingParameter::kGlobalPoolingFieldNumber;kGlobalPoolingFieldNumber21638,779867
PoolingParameter::PoolingParameter()PoolingParameter21641,779944
void PoolingParameter::InitAsDefaultInstance() {InitAsDefaultInstance21646,780036
PoolingParameter::PoolingParameter(const PoolingParameter& from)PoolingParameter21649,780088
void PoolingParameter::SharedCtor() {SharedCtor21655,780227
PoolingParameter::~PoolingParameter() {~PoolingParameter21672,780543
void PoolingParameter::SharedDtor() {SharedDtor21676,780602
void PoolingParameter::SetCachedSize(int size) const {SetCachedSize21681,780682
const ::google::protobuf::Descriptor* PoolingParameter::descriptor() {descriptor21686,780843
const PoolingParameter& PoolingParameter::default_instance() {default_instance21691,780992
PoolingParameter* PoolingParameter::default_instance_ = NULL;default_instance_21696,781154
PoolingParameter* PoolingParameter::New() const {New21698,781217
void PoolingParameter::Clear() {Clear21702,781301
bool PoolingParameter::MergePartialFromCodedStream(MergePartialFromCodedStream21723,781760
#define DO_(DO_21725,781867
#undef DO_DO_21943,790565
void PoolingParameter::SerializeWithCachedSizes(SerializeWithCachedSizes21946,790579
::google::protobuf::uint8* PoolingParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray22016,792854
int PoolingParameter::ByteSize() const {ByteSize22087,795367
void PoolingParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom22185,798108
void PoolingParameter::MergeFrom(const PoolingParameter& from) {MergeFrom22197,798485
void PoolingParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom22242,799623
void PoolingParameter::CopyFrom(const PoolingParameter& from) {CopyFrom22248,799760
bool PoolingParameter::IsInitialized() const {IsInitialized22254,799886
void PoolingParameter::Swap(PoolingParameter* other) {Swap22259,799952
::google::protobuf::Metadata PoolingParameter::GetMetadata() const {GetMetadata22279,800702
const int PowerParameter::kPowerFieldNumber;kPowerFieldNumber22291,801068
const int PowerParameter::kScaleFieldNumber;kScaleFieldNumber22292,801113
const int PowerParameter::kShiftFieldNumber;kShiftFieldNumber22293,801158
PowerParameter::PowerParameter()PowerParameter22296,801225
void PowerParameter::InitAsDefaultInstance() {InitAsDefaultInstance22301,801313
PowerParameter::PowerParameter(const PowerParameter& from)PowerParameter22304,801363
void PowerParameter::SharedCtor() {SharedCtor22310,801496
PowerParameter::~PowerParameter() {~PowerParameter22318,801645
void PowerParameter::SharedDtor() {SharedDtor22322,801700
void PowerParameter::SetCachedSize(int size) const {SetCachedSize22327,801778
const ::google::protobuf::Descriptor* PowerParameter::descriptor() {descriptor22332,801937
const PowerParameter& PowerParameter::default_instance() {default_instance22337,802082
PowerParameter* PowerParameter::default_instance_ = NULL;default_instance_22342,802240
PowerParameter* PowerParameter::New() const {New22344,802299
void PowerParameter::Clear() {Clear22348,802377
bool PowerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream22358,802597
#define DO_(DO_22360,802702
#undef DO_DO_22424,805127
void PowerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes22427,805141
::google::protobuf::uint8* PowerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray22450,805875
int PowerParameter::ByteSize() const {ByteSize22474,806703
void PowerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom22505,807423
void PowerParameter::MergeFrom(const PowerParameter& from) {MergeFrom22517,807794
void PowerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom22533,808206
void PowerParameter::CopyFrom(const PowerParameter& from) {CopyFrom22539,808341
bool PowerParameter::IsInitialized() const {IsInitialized22545,808463
void PowerParameter::Swap(PowerParameter* other) {Swap22550,808527
::google::protobuf::Metadata PowerParameter::GetMetadata() const {GetMetadata22561,808879
const int PythonParameter::kModuleFieldNumber;kModuleFieldNumber22573,809239
const int PythonParameter::kLayerFieldNumber;kLayerFieldNumber22574,809286
const int PythonParameter::kParamStrFieldNumber;kParamStrFieldNumber22575,809332
const int PythonParameter::kShareInParallelFieldNumber;kShareInParallelFieldNumber22576,809381
PythonParameter::PythonParameter()PythonParameter22579,809459
void PythonParameter::InitAsDefaultInstance() {InitAsDefaultInstance22584,809549
PythonParameter::PythonParameter(const PythonParameter& from)PythonParameter22587,809600
void PythonParameter::SharedCtor() {SharedCtor22593,809736
PythonParameter::~PythonParameter() {~PythonParameter22602,810134
void PythonParameter::SharedDtor() {SharedDtor22606,810191
void PythonParameter::SetCachedSize(int size) const {SetCachedSize22620,810538
const ::google::protobuf::Descriptor* PythonParameter::descriptor() {descriptor22625,810698
const PythonParameter& PythonParameter::default_instance() {default_instance22630,810845
PythonParameter* PythonParameter::default_instance_ = NULL;default_instance_22635,811005
PythonParameter* PythonParameter::New() const {New22637,811066
void PythonParameter::Clear() {Clear22641,811147
bool PythonParameter::MergePartialFromCodedStream(MergePartialFromCodedStream22664,811754
#define DO_(DO_22666,811860
#undef DO_DO_22749,815244
void PythonParameter::SerializeWithCachedSizes(SerializeWithCachedSizes22752,815258
::google::protobuf::uint8* PythonParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray22792,816743
int PythonParameter::ByteSize() const {ByteSize22836,818362
void PythonParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom22878,819472
void PythonParameter::MergeFrom(const PythonParameter& from) {MergeFrom22890,819846
void PythonParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom22909,820376
void PythonParameter::CopyFrom(const PythonParameter& from) {CopyFrom22915,820512
bool PythonParameter::IsInitialized() const {IsInitialized22921,820636
void PythonParameter::Swap(PythonParameter* other) {Swap22926,820701
::google::protobuf::Metadata PythonParameter::GetMetadata() const {GetMetadata22938,821127
const int RecurrentParameter::kNumOutputFieldNumber;kNumOutputFieldNumber22950,821490
const int RecurrentParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber22951,821543
const int RecurrentParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber22952,821599
const int RecurrentParameter::kDebugInfoFieldNumber;kDebugInfoFieldNumber22953,821653
const int RecurrentParameter::kExposeHiddenFieldNumber;kExposeHiddenFieldNumber22954,821706
RecurrentParameter::RecurrentParameter()RecurrentParameter22957,821784
void RecurrentParameter::InitAsDefaultInstance() {InitAsDefaultInstance22962,821880
RecurrentParameter::RecurrentParameter(const RecurrentParameter& from)RecurrentParameter22967,822144
void RecurrentParameter::SharedCtor() {SharedCtor22973,822289
RecurrentParameter::~RecurrentParameter() {~RecurrentParameter22983,822517
void RecurrentParameter::SharedDtor() {SharedDtor22987,822580
void RecurrentParameter::SetCachedSize(int size) const {SetCachedSize22994,822714
const ::google::protobuf::Descriptor* RecurrentParameter::descriptor() {descriptor22999,822877
const RecurrentParameter& RecurrentParameter::default_instance() {default_instance23004,823030
RecurrentParameter* RecurrentParameter::default_instance_ = NULL;default_instance_23009,823196
RecurrentParameter* RecurrentParameter::New() const {New23011,823263
void RecurrentParameter::Clear() {Clear23015,823353
bool RecurrentParameter::MergePartialFromCodedStream(MergePartialFromCodedStream23031,823842
#define DO_(DO_23033,823951
#undef DO_DO_23125,827576
void RecurrentParameter::SerializeWithCachedSizes(SerializeWithCachedSizes23128,827590
::google::protobuf::uint8* RecurrentParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray23163,828796
int RecurrentParameter::ByteSize() const {ByteSize23201,830140
void RecurrentParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom23248,831455
void RecurrentParameter::MergeFrom(const RecurrentParameter& from) {MergeFrom23260,831838
void RecurrentParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom23282,832570
void RecurrentParameter::CopyFrom(const RecurrentParameter& from) {CopyFrom23288,832709
bool RecurrentParameter::IsInitialized() const {IsInitialized23294,832839
void RecurrentParameter::Swap(RecurrentParameter* other) {Swap23299,832907
::google::protobuf::Metadata RecurrentParameter::GetMetadata() const {GetMetadata23312,833407
const ::google::protobuf::EnumDescriptor* ReductionParameter_ReductionOp_descriptor() {ReductionParameter_ReductionOp_descriptor23323,833762
bool ReductionParameter_ReductionOp_IsValid(int value) {ReductionParameter_ReductionOp_IsValid23327,833941
const ReductionParameter_ReductionOp ReductionParameter::SUM;SUM23340,834140
const ReductionParameter_ReductionOp ReductionParameter::ASUM;ASUM23341,834202
const ReductionParameter_ReductionOp ReductionParameter::SUMSQ;SUMSQ23342,834265
const ReductionParameter_ReductionOp ReductionParameter::MEAN;MEAN23343,834329
const ReductionParameter_ReductionOp ReductionParameter::ReductionOp_MIN;ReductionOp_MIN23344,834392
const ReductionParameter_ReductionOp ReductionParameter::ReductionOp_MAX;ReductionOp_MAX23345,834466
const int ReductionParameter::ReductionOp_ARRAYSIZE;ReductionOp_ARRAYSIZE23346,834540
const int ReductionParameter::kOperationFieldNumber;kOperationFieldNumber23349,834630
const int ReductionParameter::kAxisFieldNumber;kAxisFieldNumber23350,834683
const int ReductionParameter::kCoeffFieldNumber;kCoeffFieldNumber23351,834731
ReductionParameter::ReductionParameter()ReductionParameter23354,834802
void ReductionParameter::InitAsDefaultInstance() {InitAsDefaultInstance23359,834898
ReductionParameter::ReductionParameter(const ReductionParameter& from)ReductionParameter23362,834952
void ReductionParameter::SharedCtor() {SharedCtor23368,835097
ReductionParameter::~ReductionParameter() {~ReductionParameter23376,835253
void ReductionParameter::SharedDtor() {SharedDtor23380,835316
void ReductionParameter::SetCachedSize(int size) const {SetCachedSize23385,835398
const ::google::protobuf::Descriptor* ReductionParameter::descriptor() {descriptor23390,835561
const ReductionParameter& ReductionParameter::default_instance() {default_instance23395,835714
ReductionParameter* ReductionParameter::default_instance_ = NULL;default_instance_23400,835880
ReductionParameter* ReductionParameter::New() const {New23402,835947
void ReductionParameter::Clear() {Clear23406,836037
bool ReductionParameter::MergePartialFromCodedStream(MergePartialFromCodedStream23416,836264
#define DO_(DO_23418,836373
#undef DO_DO_23487,839091
void ReductionParameter::SerializeWithCachedSizes(SerializeWithCachedSizes23490,839105
::google::protobuf::uint8* ReductionParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray23514,839892
int ReductionParameter::ByteSize() const {ByteSize23539,840773
void ReductionParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom23573,841704
void ReductionParameter::MergeFrom(const ReductionParameter& from) {MergeFrom23585,842087
void ReductionParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom23601,842516
void ReductionParameter::CopyFrom(const ReductionParameter& from) {CopyFrom23607,842655
bool ReductionParameter::IsInitialized() const {IsInitialized23613,842785
void ReductionParameter::Swap(ReductionParameter* other) {Swap23618,842853
::google::protobuf::Metadata ReductionParameter::GetMetadata() const {GetMetadata23629,843219
const ::google::protobuf::EnumDescriptor* ReLUParameter_Engine_descriptor() {ReLUParameter_Engine_descriptor23640,843574
bool ReLUParameter_Engine_IsValid(int value) {ReLUParameter_Engine_IsValid23644,843733
const ReLUParameter_Engine ReLUParameter::DEFAULT;DEFAULT23656,843910
const ReLUParameter_Engine ReLUParameter::CAFFE;CAFFE23657,843961
const ReLUParameter_Engine ReLUParameter::CUDNN;CUDNN23658,844010
const ReLUParameter_Engine ReLUParameter::Engine_MIN;Engine_MIN23659,844059
const ReLUParameter_Engine ReLUParameter::Engine_MAX;Engine_MAX23660,844113
const int ReLUParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE23661,844167
const int ReLUParameter::kNegativeSlopeFieldNumber;kNegativeSlopeFieldNumber23664,844247
const int ReLUParameter::kEngineFieldNumber;kEngineFieldNumber23665,844299
ReLUParameter::ReLUParameter()ReLUParameter23668,844366
void ReLUParameter::InitAsDefaultInstance() {InitAsDefaultInstance23673,844452
ReLUParameter::ReLUParameter(const ReLUParameter& from)ReLUParameter23676,844501
void ReLUParameter::SharedCtor() {SharedCtor23682,844631
ReLUParameter::~ReLUParameter() {~ReLUParameter23689,844775
void ReLUParameter::SharedDtor() {SharedDtor23693,844828
void ReLUParameter::SetCachedSize(int size) const {SetCachedSize23698,844905
const ::google::protobuf::Descriptor* ReLUParameter::descriptor() {descriptor23703,845063
const ReLUParameter& ReLUParameter::default_instance() {default_instance23708,845206
ReLUParameter* ReLUParameter::default_instance_ = NULL;default_instance_23713,845362
ReLUParameter* ReLUParameter::New() const {New23715,845419
void ReLUParameter::Clear() {Clear23719,845494
bool ReLUParameter::MergePartialFromCodedStream(MergePartialFromCodedStream23728,845707
#define DO_(DO_23730,845811
#undef DO_DO_23783,847902
void ReLUParameter::SerializeWithCachedSizes(SerializeWithCachedSizes23786,847916
::google::protobuf::uint8* ReLUParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray23805,848554
int ReLUParameter::ByteSize() const {ByteSize23825,849270
void ReLUParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom23852,850010
void ReLUParameter::MergeFrom(const ReLUParameter& from) {MergeFrom23864,850378
void ReLUParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom23877,850753
void ReLUParameter::CopyFrom(const ReLUParameter& from) {CopyFrom23883,850887
bool ReLUParameter::IsInitialized() const {IsInitialized23889,851007
void ReLUParameter::Swap(ReLUParameter* other) {Swap23894,851070
::google::protobuf::Metadata ReLUParameter::GetMetadata() const {GetMetadata23904,851402
const int ReshapeParameter::kShapeFieldNumber;kShapeFieldNumber23916,851759
const int ReshapeParameter::kAxisFieldNumber;kAxisFieldNumber23917,851806
const int ReshapeParameter::kNumAxesFieldNumber;kNumAxesFieldNumber23918,851852
ReshapeParameter::ReshapeParameter()ReshapeParameter23921,851923
void ReshapeParameter::InitAsDefaultInstance() {InitAsDefaultInstance23926,852015
ReshapeParameter::ReshapeParameter(const ReshapeParameter& from)ReshapeParameter23930,852153
void ReshapeParameter::SharedCtor() {SharedCtor23936,852292
ReshapeParameter::~ReshapeParameter() {~ReshapeParameter23944,852449
void ReshapeParameter::SharedDtor() {SharedDtor23948,852508
void ReshapeParameter::SetCachedSize(int size) const {SetCachedSize23954,852607
const ::google::protobuf::Descriptor* ReshapeParameter::descriptor() {descriptor23959,852768
const ReshapeParameter& ReshapeParameter::default_instance() {default_instance23964,852917
ReshapeParameter* ReshapeParameter::default_instance_ = NULL;default_instance_23969,853079
ReshapeParameter* ReshapeParameter::New() const {New23971,853142
void ReshapeParameter::Clear() {Clear23975,853226
bool ReshapeParameter::MergePartialFromCodedStream(MergePartialFromCodedStream23987,853527
#define DO_(DO_23989,853634
#undef DO_DO_24051,856013
void ReshapeParameter::SerializeWithCachedSizes(SerializeWithCachedSizes24054,856027
::google::protobuf::uint8* ReshapeParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray24078,856788
int ReshapeParameter::ByteSize() const {ByteSize24104,857649
void ReshapeParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom24141,858650
void ReshapeParameter::MergeFrom(const ReshapeParameter& from) {MergeFrom24153,859027
void ReshapeParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom24169,859486
void ReshapeParameter::CopyFrom(const ReshapeParameter& from) {CopyFrom24175,859623
bool ReshapeParameter::IsInitialized() const {IsInitialized24181,859749
void ReshapeParameter::Swap(ReshapeParameter* other) {Swap24186,859815
::google::protobuf::Metadata ReshapeParameter::GetMetadata() const {GetMetadata24197,860175
const int ScaleParameter::kAxisFieldNumber;kAxisFieldNumber24209,860541
const int ScaleParameter::kNumAxesFieldNumber;kNumAxesFieldNumber24210,860585
const int ScaleParameter::kFillerFieldNumber;kFillerFieldNumber24211,860632
const int ScaleParameter::kBiasTermFieldNumber;kBiasTermFieldNumber24212,860678
const int ScaleParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber24213,860726
ScaleParameter::ScaleParameter()ScaleParameter24216,860798
void ScaleParameter::InitAsDefaultInstance() {InitAsDefaultInstance24221,860886
ScaleParameter::ScaleParameter(const ScaleParameter& from)ScaleParameter24226,861139
void ScaleParameter::SharedCtor() {SharedCtor24232,861272
ScaleParameter::~ScaleParameter() {~ScaleParameter24242,861472
void ScaleParameter::SharedDtor() {SharedDtor24246,861527
void ScaleParameter::SetCachedSize(int size) const {SetCachedSize24253,861650
const ::google::protobuf::Descriptor* ScaleParameter::descriptor() {descriptor24258,861809
const ScaleParameter& ScaleParameter::default_instance() {default_instance24263,861954
ScaleParameter* ScaleParameter::default_instance_ = NULL;default_instance_24268,862112
ScaleParameter* ScaleParameter::New() const {New24270,862171
void ScaleParameter::Clear() {Clear24274,862249
bool ScaleParameter::MergePartialFromCodedStream(MergePartialFromCodedStream24290,862696
#define DO_(DO_24292,862801
#undef DO_DO_24384,866366
void ScaleParameter::SerializeWithCachedSizes(SerializeWithCachedSizes24387,866380
::google::protobuf::uint8* ScaleParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray24422,867521
int ScaleParameter::ByteSize() const {ByteSize24460,868800
void ScaleParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom24509,870146
void ScaleParameter::MergeFrom(const ScaleParameter& from) {MergeFrom24521,870517
void ScaleParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom24543,871184
void ScaleParameter::CopyFrom(const ScaleParameter& from) {CopyFrom24549,871319
bool ScaleParameter::IsInitialized() const {IsInitialized24555,871441
void ScaleParameter::Swap(ScaleParameter* other) {Swap24560,871505
::google::protobuf::Metadata ScaleParameter::GetMetadata() const {GetMetadata24573,871959
const ::google::protobuf::EnumDescriptor* SigmoidParameter_Engine_descriptor() {SigmoidParameter_Engine_descriptor24584,872302
bool SigmoidParameter_Engine_IsValid(int value) {SigmoidParameter_Engine_IsValid24588,872467
const SigmoidParameter_Engine SigmoidParameter::DEFAULT;DEFAULT24600,872647
const SigmoidParameter_Engine SigmoidParameter::CAFFE;CAFFE24601,872704
const SigmoidParameter_Engine SigmoidParameter::CUDNN;CUDNN24602,872759
const SigmoidParameter_Engine SigmoidParameter::Engine_MIN;Engine_MIN24603,872814
const SigmoidParameter_Engine SigmoidParameter::Engine_MAX;Engine_MAX24604,872874
const int SigmoidParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE24605,872934
const int SigmoidParameter::kEngineFieldNumber;kEngineFieldNumber24608,873017
SigmoidParameter::SigmoidParameter()SigmoidParameter24611,873087
void SigmoidParameter::InitAsDefaultInstance() {InitAsDefaultInstance24616,873179
SigmoidParameter::SigmoidParameter(const SigmoidParameter& from)SigmoidParameter24619,873231
void SigmoidParameter::SharedCtor() {SharedCtor24625,873370
SigmoidParameter::~SigmoidParameter() {~SigmoidParameter24631,873494
void SigmoidParameter::SharedDtor() {SharedDtor24635,873553
void SigmoidParameter::SetCachedSize(int size) const {SetCachedSize24640,873633
const ::google::protobuf::Descriptor* SigmoidParameter::descriptor() {descriptor24645,873794
const SigmoidParameter& SigmoidParameter::default_instance() {default_instance24650,873943
SigmoidParameter* SigmoidParameter::default_instance_ = NULL;default_instance_24655,874105
SigmoidParameter* SigmoidParameter::New() const {New24657,874168
void SigmoidParameter::Clear() {Clear24661,874252
bool SigmoidParameter::MergePartialFromCodedStream(MergePartialFromCodedStream24669,874443
#define DO_(DO_24671,874550
#undef DO_DO_24708,876011
void SigmoidParameter::SerializeWithCachedSizes(SerializeWithCachedSizes24711,876025
::google::protobuf::uint8* SigmoidParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray24725,876483
int SigmoidParameter::ByteSize() const {ByteSize24740,877003
void SigmoidParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom24762,877627
void SigmoidParameter::MergeFrom(const SigmoidParameter& from) {MergeFrom24774,878004
void SigmoidParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom24784,878293
void SigmoidParameter::CopyFrom(const SigmoidParameter& from) {CopyFrom24790,878430
bool SigmoidParameter::IsInitialized() const {IsInitialized24796,878556
void SigmoidParameter::Swap(SigmoidParameter* other) {Swap24801,878622
::google::protobuf::Metadata SigmoidParameter::GetMetadata() const {GetMetadata24810,878904
const int SliceParameter::kAxisFieldNumber;kAxisFieldNumber24822,879270
const int SliceParameter::kSlicePointFieldNumber;kSlicePointFieldNumber24823,879314
const int SliceParameter::kSliceDimFieldNumber;kSliceDimFieldNumber24824,879364
SliceParameter::SliceParameter()SliceParameter24827,879434
void SliceParameter::InitAsDefaultInstance() {InitAsDefaultInstance24832,879522
SliceParameter::SliceParameter(const SliceParameter& from)SliceParameter24835,879572
void SliceParameter::SharedCtor() {SharedCtor24841,879705
SliceParameter::~SliceParameter() {~SliceParameter24848,879844
void SliceParameter::SharedDtor() {SharedDtor24852,879899
void SliceParameter::SetCachedSize(int size) const {SetCachedSize24857,879977
const ::google::protobuf::Descriptor* SliceParameter::descriptor() {descriptor24862,880136
const SliceParameter& SliceParameter::default_instance() {default_instance24867,880281
SliceParameter* SliceParameter::default_instance_ = NULL;default_instance_24872,880439
SliceParameter* SliceParameter::New() const {New24874,880498
void SliceParameter::Clear() {Clear24878,880576
bool SliceParameter::MergePartialFromCodedStream(MergePartialFromCodedStream24888,880808
#define DO_(DO_24890,880913
#undef DO_DO_24960,883936
void SliceParameter::SerializeWithCachedSizes(SerializeWithCachedSizes24963,883950
::google::protobuf::uint8* SliceParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray24987,884737
int SliceParameter::ByteSize() const {ByteSize25012,885618
void SliceParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom25052,886722
void SliceParameter::MergeFrom(const SliceParameter& from) {MergeFrom25064,887093
void SliceParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom25078,887494
void SliceParameter::CopyFrom(const SliceParameter& from) {CopyFrom25084,887629
bool SliceParameter::IsInitialized() const {IsInitialized25090,887751
void SliceParameter::Swap(SliceParameter* other) {Swap25095,887815
::google::protobuf::Metadata SliceParameter::GetMetadata() const {GetMetadata25106,888180
const ::google::protobuf::EnumDescriptor* SoftmaxParameter_Engine_descriptor() {SoftmaxParameter_Engine_descriptor25117,888523
bool SoftmaxParameter_Engine_IsValid(int value) {SoftmaxParameter_Engine_IsValid25121,888688
const SoftmaxParameter_Engine SoftmaxParameter::DEFAULT;DEFAULT25133,888868
const SoftmaxParameter_Engine SoftmaxParameter::CAFFE;CAFFE25134,888925
const SoftmaxParameter_Engine SoftmaxParameter::CUDNN;CUDNN25135,888980
const SoftmaxParameter_Engine SoftmaxParameter::Engine_MIN;Engine_MIN25136,889035
const SoftmaxParameter_Engine SoftmaxParameter::Engine_MAX;Engine_MAX25137,889095
const int SoftmaxParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE25138,889155
const int SoftmaxParameter::kEngineFieldNumber;kEngineFieldNumber25141,889238
const int SoftmaxParameter::kAxisFieldNumber;kAxisFieldNumber25142,889286
SoftmaxParameter::SoftmaxParameter()SoftmaxParameter25145,889354
void SoftmaxParameter::InitAsDefaultInstance() {InitAsDefaultInstance25150,889446
SoftmaxParameter::SoftmaxParameter(const SoftmaxParameter& from)SoftmaxParameter25153,889498
void SoftmaxParameter::SharedCtor() {SharedCtor25159,889637
SoftmaxParameter::~SoftmaxParameter() {~SoftmaxParameter25166,889774
void SoftmaxParameter::SharedDtor() {SharedDtor25170,889833
void SoftmaxParameter::SetCachedSize(int size) const {SetCachedSize25175,889913
const ::google::protobuf::Descriptor* SoftmaxParameter::descriptor() {descriptor25180,890074
const SoftmaxParameter& SoftmaxParameter::default_instance() {default_instance25185,890223
SoftmaxParameter* SoftmaxParameter::default_instance_ = NULL;default_instance_25190,890385
SoftmaxParameter* SoftmaxParameter::New() const {New25192,890448
void SoftmaxParameter::Clear() {Clear25196,890532
bool SoftmaxParameter::MergePartialFromCodedStream(MergePartialFromCodedStream25205,890738
#define DO_(DO_25207,890845
#undef DO_DO_25260,892930
void SoftmaxParameter::SerializeWithCachedSizes(SerializeWithCachedSizes25263,892944
::google::protobuf::uint8* SoftmaxParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray25282,893558
int SoftmaxParameter::ByteSize() const {ByteSize25302,894250
void SoftmaxParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom25331,895063
void SoftmaxParameter::MergeFrom(const SoftmaxParameter& from) {MergeFrom25343,895440
void SoftmaxParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom25356,895791
void SoftmaxParameter::CopyFrom(const SoftmaxParameter& from) {CopyFrom25362,895928
bool SoftmaxParameter::IsInitialized() const {IsInitialized25368,896054
void SoftmaxParameter::Swap(SoftmaxParameter* other) {Swap25373,896120
::google::protobuf::Metadata SoftmaxParameter::GetMetadata() const {GetMetadata25383,896438
const ::google::protobuf::EnumDescriptor* TanHParameter_Engine_descriptor() {TanHParameter_Engine_descriptor25394,896787
bool TanHParameter_Engine_IsValid(int value) {TanHParameter_Engine_IsValid25398,896946
const TanHParameter_Engine TanHParameter::DEFAULT;DEFAULT25410,897123
const TanHParameter_Engine TanHParameter::CAFFE;CAFFE25411,897174
const TanHParameter_Engine TanHParameter::CUDNN;CUDNN25412,897223
const TanHParameter_Engine TanHParameter::Engine_MIN;Engine_MIN25413,897272
const TanHParameter_Engine TanHParameter::Engine_MAX;Engine_MAX25414,897326
const int TanHParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE25415,897380
const int TanHParameter::kEngineFieldNumber;kEngineFieldNumber25418,897460
TanHParameter::TanHParameter()TanHParameter25421,897527
void TanHParameter::InitAsDefaultInstance() {InitAsDefaultInstance25426,897613
TanHParameter::TanHParameter(const TanHParameter& from)TanHParameter25429,897662
void TanHParameter::SharedCtor() {SharedCtor25435,897792
TanHParameter::~TanHParameter() {~TanHParameter25441,897913
void TanHParameter::SharedDtor() {SharedDtor25445,897966
void TanHParameter::SetCachedSize(int size) const {SetCachedSize25450,898043
const ::google::protobuf::Descriptor* TanHParameter::descriptor() {descriptor25455,898201
const TanHParameter& TanHParameter::default_instance() {default_instance25460,898344
TanHParameter* TanHParameter::default_instance_ = NULL;default_instance_25465,898500
TanHParameter* TanHParameter::New() const {New25467,898557
void TanHParameter::Clear() {Clear25471,898632
bool TanHParameter::MergePartialFromCodedStream(MergePartialFromCodedStream25479,898820
#define DO_(DO_25481,898924
#undef DO_DO_25518,900376
void TanHParameter::SerializeWithCachedSizes(SerializeWithCachedSizes25521,900390
::google::protobuf::uint8* TanHParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray25535,900842
int TanHParameter::ByteSize() const {ByteSize25550,901356
void TanHParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom25572,901974
void TanHParameter::MergeFrom(const TanHParameter& from) {MergeFrom25584,902342
void TanHParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom25594,902625
void TanHParameter::CopyFrom(const TanHParameter& from) {CopyFrom25600,902759
bool TanHParameter::IsInitialized() const {IsInitialized25606,902879
void TanHParameter::Swap(TanHParameter* other) {Swap25611,902942
::google::protobuf::Metadata TanHParameter::GetMetadata() const {GetMetadata25620,903218
const int TileParameter::kAxisFieldNumber;kAxisFieldNumber25632,903575
const int TileParameter::kTilesFieldNumber;kTilesFieldNumber25633,903618
TileParameter::TileParameter()TileParameter25636,903684
void TileParameter::InitAsDefaultInstance() {InitAsDefaultInstance25641,903770
TileParameter::TileParameter(const TileParameter& from)TileParameter25644,903819
void TileParameter::SharedCtor() {SharedCtor25650,903949
TileParameter::~TileParameter() {~TileParameter25657,904082
void TileParameter::SharedDtor() {SharedDtor25661,904135
void TileParameter::SetCachedSize(int size) const {SetCachedSize25666,904212
const ::google::protobuf::Descriptor* TileParameter::descriptor() {descriptor25671,904370
const TileParameter& TileParameter::default_instance() {default_instance25676,904513
TileParameter* TileParameter::default_instance_ = NULL;default_instance_25681,904669
TileParameter* TileParameter::New() const {New25683,904726
void TileParameter::Clear() {Clear25687,904801
bool TileParameter::MergePartialFromCodedStream(MergePartialFromCodedStream25696,905003
#define DO_(DO_25698,905107
#undef DO_DO_25746,906943
void TileParameter::SerializeWithCachedSizes(SerializeWithCachedSizes25749,906957
::google::protobuf::uint8* TileParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray25767,907514
int TileParameter::ByteSize() const {ByteSize25786,908149
void TileParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom25816,908923
void TileParameter::MergeFrom(const TileParameter& from) {MergeFrom25828,909291
void TileParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom25841,909633
void TileParameter::CopyFrom(const TileParameter& from) {CopyFrom25847,909767
bool TileParameter::IsInitialized() const {IsInitialized25853,909887
void TileParameter::Swap(TileParameter* other) {Swap25858,909950
::google::protobuf::Metadata TileParameter::GetMetadata() const {GetMetadata25868,910260
const int ThresholdParameter::kThresholdFieldNumber;kThresholdFieldNumber25880,910617
ThresholdParameter::ThresholdParameter()ThresholdParameter25883,910692
void ThresholdParameter::InitAsDefaultInstance() {InitAsDefaultInstance25888,910788
ThresholdParameter::ThresholdParameter(const ThresholdParameter& from)ThresholdParameter25891,910842
void ThresholdParameter::SharedCtor() {SharedCtor25897,910987
ThresholdParameter::~ThresholdParameter() {~ThresholdParameter25903,911116
void ThresholdParameter::SharedDtor() {SharedDtor25907,911179
void ThresholdParameter::SetCachedSize(int size) const {SetCachedSize25912,911261
const ::google::protobuf::Descriptor* ThresholdParameter::descriptor() {descriptor25917,911424
const ThresholdParameter& ThresholdParameter::default_instance() {default_instance25922,911577
ThresholdParameter* ThresholdParameter::default_instance_ = NULL;default_instance_25927,911743
ThresholdParameter* ThresholdParameter::New() const {New25929,911810
void ThresholdParameter::Clear() {Clear25933,911900
bool ThresholdParameter::MergePartialFromCodedStream(MergePartialFromCodedStream25941,912096
#define DO_(DO_25943,912205
#undef DO_DO_25975,913422
void ThresholdParameter::SerializeWithCachedSizes(SerializeWithCachedSizes25978,913436
::google::protobuf::uint8* ThresholdParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray25991,913868
int ThresholdParameter::ByteSize() const {ByteSize26005,914362
void ThresholdParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom26026,914886
void ThresholdParameter::MergeFrom(const ThresholdParameter& from) {MergeFrom26038,915269
void ThresholdParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom26048,915571
void ThresholdParameter::CopyFrom(const ThresholdParameter& from) {CopyFrom26054,915710
bool ThresholdParameter::IsInitialized() const {IsInitialized26060,915840
void ThresholdParameter::Swap(ThresholdParameter* other) {Swap26065,915908
::google::protobuf::Metadata ThresholdParameter::GetMetadata() const {GetMetadata26074,916200
::std::string* WindowDataParameter::_default_crop_mode_ = NULL;_default_crop_mode_26085,916555
const int WindowDataParameter::kSourceFieldNumber;kSourceFieldNumber26087,916636
const int WindowDataParameter::kScaleFieldNumber;kScaleFieldNumber26088,916687
const int WindowDataParameter::kMeanFileFieldNumber;kMeanFileFieldNumber26089,916737
const int WindowDataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber26090,916790
const int WindowDataParameter::kCropSizeFieldNumber;kCropSizeFieldNumber26091,916844
const int WindowDataParameter::kMirrorFieldNumber;kMirrorFieldNumber26092,916897
const int WindowDataParameter::kFgThresholdFieldNumber;kFgThresholdFieldNumber26093,916948
const int WindowDataParameter::kBgThresholdFieldNumber;kBgThresholdFieldNumber26094,917004
const int WindowDataParameter::kFgFractionFieldNumber;kFgFractionFieldNumber26095,917060
const int WindowDataParameter::kContextPadFieldNumber;kContextPadFieldNumber26096,917115
const int WindowDataParameter::kCropModeFieldNumber;kCropModeFieldNumber26097,917170
const int WindowDataParameter::kCacheImagesFieldNumber;kCacheImagesFieldNumber26098,917223
const int WindowDataParameter::kRootFolderFieldNumber;kRootFolderFieldNumber26099,917279
WindowDataParameter::WindowDataParameter()WindowDataParameter26102,917356
void WindowDataParameter::InitAsDefaultInstance() {InitAsDefaultInstance26107,917454
WindowDataParameter::WindowDataParameter(const WindowDataParameter& from)WindowDataParameter26110,917509
void WindowDataParameter::SharedCtor() {SharedCtor26116,917657
WindowDataParameter::~WindowDataParameter() {~WindowDataParameter26134,918290
void WindowDataParameter::SharedDtor() {SharedDtor26138,918355
void WindowDataParameter::SetCachedSize(int size) const {SetCachedSize26155,918788
const ::google::protobuf::Descriptor* WindowDataParameter::descriptor() {descriptor26160,918952
const WindowDataParameter& WindowDataParameter::default_instance() {default_instance26165,919107
WindowDataParameter* WindowDataParameter::default_instance_ = NULL;default_instance_26170,919275
WindowDataParameter* WindowDataParameter::New() const {New26172,919344
void WindowDataParameter::Clear() {Clear26176,919437
bool WindowDataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream26214,920434
#define DO_(DO_26216,920544
#undef DO_DO_26444,929802
void WindowDataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes26447,929816
::google::protobuf::uint8* WindowDataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray26536,933078
int WindowDataParameter::ByteSize() const {ByteSize26630,936626
void WindowDataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom26727,939202
void WindowDataParameter::MergeFrom(const WindowDataParameter& from) {MergeFrom26739,939588
void WindowDataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom26787,940893
void WindowDataParameter::CopyFrom(const WindowDataParameter& from) {CopyFrom26793,941033
bool WindowDataParameter::IsInitialized() const {IsInitialized26799,941165
void WindowDataParameter::Swap(WindowDataParameter* other) {Swap26804,941234
::google::protobuf::Metadata WindowDataParameter::GetMetadata() const {GetMetadata26825,942092
const ::google::protobuf::EnumDescriptor* SPPParameter_PoolMethod_descriptor() {SPPParameter_PoolMethod_descriptor26836,942450
bool SPPParameter_PoolMethod_IsValid(int value) {SPPParameter_PoolMethod_IsValid26840,942615
const SPPParameter_PoolMethod SPPParameter::MAX;MAX26852,942795
const SPPParameter_PoolMethod SPPParameter::AVE;AVE26853,942844
const SPPParameter_PoolMethod SPPParameter::STOCHASTIC;STOCHASTIC26854,942893
const SPPParameter_PoolMethod SPPParameter::PoolMethod_MIN;PoolMethod_MIN26855,942949
const SPPParameter_PoolMethod SPPParameter::PoolMethod_MAX;PoolMethod_MAX26856,943009
const int SPPParameter::PoolMethod_ARRAYSIZE;PoolMethod_ARRAYSIZE26857,943069
const ::google::protobuf::EnumDescriptor* SPPParameter_Engine_descriptor() {SPPParameter_Engine_descriptor26859,943135
bool SPPParameter_Engine_IsValid(int value) {SPPParameter_Engine_IsValid26863,943292
const SPPParameter_Engine SPPParameter::DEFAULT;DEFAULT26875,943468
const SPPParameter_Engine SPPParameter::CAFFE;CAFFE26876,943517
const SPPParameter_Engine SPPParameter::CUDNN;CUDNN26877,943564
const SPPParameter_Engine SPPParameter::Engine_MIN;Engine_MIN26878,943611
const SPPParameter_Engine SPPParameter::Engine_MAX;Engine_MAX26879,943663
const int SPPParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE26880,943715
const int SPPParameter::kPyramidHeightFieldNumber;kPyramidHeightFieldNumber26883,943794
const int SPPParameter::kPoolFieldNumber;kPoolFieldNumber26884,943845
const int SPPParameter::kEngineFieldNumber;kEngineFieldNumber26885,943887
SPPParameter::SPPParameter()SPPParameter26888,943953
void SPPParameter::InitAsDefaultInstance() {InitAsDefaultInstance26893,944037
SPPParameter::SPPParameter(const SPPParameter& from)SPPParameter26896,944085
void SPPParameter::SharedCtor() {SharedCtor26902,944212
SPPParameter::~SPPParameter() {~SPPParameter26910,944369
void SPPParameter::SharedDtor() {SharedDtor26914,944420
void SPPParameter::SetCachedSize(int size) const {SetCachedSize26919,944496
const ::google::protobuf::Descriptor* SPPParameter::descriptor() {descriptor26924,944653
const SPPParameter& SPPParameter::default_instance() {default_instance26929,944794
SPPParameter* SPPParameter::default_instance_ = NULL;default_instance_26934,944948
SPPParameter* SPPParameter::New() const {New26936,945003
void SPPParameter::Clear() {Clear26940,945075
bool SPPParameter::MergePartialFromCodedStream(MergePartialFromCodedStream26950,945303
#define DO_(DO_26952,945406
#undef DO_DO_27026,948358
void SPPParameter::SerializeWithCachedSizes(SerializeWithCachedSizes27029,948372
::google::protobuf::uint8* SPPParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray27054,949185
int SPPParameter::ByteSize() const {ByteSize27080,950092
void SPPParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom27115,951119
void SPPParameter::MergeFrom(const SPPParameter& from) {MergeFrom27127,951484
void SPPParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom27143,951919
void SPPParameter::CopyFrom(const SPPParameter& from) {CopyFrom27149,952052
bool SPPParameter::IsInitialized() const {IsInitialized27155,952170
void SPPParameter::Swap(SPPParameter* other) {Swap27160,952232
::google::protobuf::Metadata SPPParameter::GetMetadata() const {GetMetadata27171,952598
const ::google::protobuf::EnumDescriptor* V1LayerParameter_LayerType_descriptor() {V1LayerParameter_LayerType_descriptor27182,952935
bool V1LayerParameter_LayerType_IsValid(int value) {V1LayerParameter_LayerType_IsValid27186,953106
const V1LayerParameter_LayerType V1LayerParameter::NONE;NONE27235,953763
const V1LayerParameter_LayerType V1LayerParameter::ABSVAL;ABSVAL27236,953820
const V1LayerParameter_LayerType V1LayerParameter::ACCURACY;ACCURACY27237,953879
const V1LayerParameter_LayerType V1LayerParameter::ARGMAX;ARGMAX27238,953940
const V1LayerParameter_LayerType V1LayerParameter::BNLL;BNLL27239,953999
const V1LayerParameter_LayerType V1LayerParameter::CONCAT;CONCAT27240,954056
const V1LayerParameter_LayerType V1LayerParameter::CONTRASTIVE_LOSS;CONTRASTIVE_LOSS27241,954115
const V1LayerParameter_LayerType V1LayerParameter::CONVOLUTION;CONVOLUTION27242,954184
const V1LayerParameter_LayerType V1LayerParameter::DATA;DATA27243,954248
const V1LayerParameter_LayerType V1LayerParameter::DECONVOLUTION;DECONVOLUTION27244,954305
const V1LayerParameter_LayerType V1LayerParameter::DROPOUT;DROPOUT27245,954371
const V1LayerParameter_LayerType V1LayerParameter::DUMMY_DATA;DUMMY_DATA27246,954431
const V1LayerParameter_LayerType V1LayerParameter::EUCLIDEAN_LOSS;EUCLIDEAN_LOSS27247,954494
const V1LayerParameter_LayerType V1LayerParameter::ELTWISE;ELTWISE27248,954561
const V1LayerParameter_LayerType V1LayerParameter::EXP;EXP27249,954621
const V1LayerParameter_LayerType V1LayerParameter::FLATTEN;FLATTEN27250,954677
const V1LayerParameter_LayerType V1LayerParameter::HDF5_DATA;HDF5_DATA27251,954737
const V1LayerParameter_LayerType V1LayerParameter::HDF5_OUTPUT;HDF5_OUTPUT27252,954799
const V1LayerParameter_LayerType V1LayerParameter::HINGE_LOSS;HINGE_LOSS27253,954863
const V1LayerParameter_LayerType V1LayerParameter::IM2COL;IM2COL27254,954926
const V1LayerParameter_LayerType V1LayerParameter::IMAGE_DATA;IMAGE_DATA27255,954985
const V1LayerParameter_LayerType V1LayerParameter::INFOGAIN_LOSS;INFOGAIN_LOSS27256,955048
const V1LayerParameter_LayerType V1LayerParameter::INNER_PRODUCT;INNER_PRODUCT27257,955114
const V1LayerParameter_LayerType V1LayerParameter::LRN;LRN27258,955180
const V1LayerParameter_LayerType V1LayerParameter::MEMORY_DATA;MEMORY_DATA27259,955236
const V1LayerParameter_LayerType V1LayerParameter::MULTINOMIAL_LOGISTIC_LOSS;MULTINOMIAL_LOGISTIC_LOSS27260,955300
const V1LayerParameter_LayerType V1LayerParameter::MVN;MVN27261,955378
const V1LayerParameter_LayerType V1LayerParameter::POOLING;POOLING27262,955434
const V1LayerParameter_LayerType V1LayerParameter::POWER;POWER27263,955494
const V1LayerParameter_LayerType V1LayerParameter::RELU;RELU27264,955552
const V1LayerParameter_LayerType V1LayerParameter::SIGMOID;SIGMOID27265,955609
const V1LayerParameter_LayerType V1LayerParameter::SIGMOID_CROSS_ENTROPY_LOSS;SIGMOID_CROSS_ENTROPY_LOSS27266,955669
const V1LayerParameter_LayerType V1LayerParameter::SILENCE;SILENCE27267,955748
const V1LayerParameter_LayerType V1LayerParameter::SOFTMAX;SOFTMAX27268,955808
const V1LayerParameter_LayerType V1LayerParameter::SOFTMAX_LOSS;SOFTMAX_LOSS27269,955868
const V1LayerParameter_LayerType V1LayerParameter::SPLIT;SPLIT27270,955933
const V1LayerParameter_LayerType V1LayerParameter::SLICE;SLICE27271,955991
const V1LayerParameter_LayerType V1LayerParameter::TANH;TANH27272,956049
const V1LayerParameter_LayerType V1LayerParameter::WINDOW_DATA;WINDOW_DATA27273,956106
const V1LayerParameter_LayerType V1LayerParameter::THRESHOLD;THRESHOLD27274,956170
const V1LayerParameter_LayerType V1LayerParameter::LayerType_MIN;LayerType_MIN27275,956232
const V1LayerParameter_LayerType V1LayerParameter::LayerType_MAX;LayerType_MAX27276,956298
const int V1LayerParameter::LayerType_ARRAYSIZE;LayerType_ARRAYSIZE27277,956364
const ::google::protobuf::EnumDescriptor* V1LayerParameter_DimCheckMode_descriptor() {V1LayerParameter_DimCheckMode_descriptor27279,956433
bool V1LayerParameter_DimCheckMode_IsValid(int value) {V1LayerParameter_DimCheckMode_IsValid27283,956610
const V1LayerParameter_DimCheckMode V1LayerParameter::STRICT;STRICT27294,956784
const V1LayerParameter_DimCheckMode V1LayerParameter::PERMISSIVE;PERMISSIVE27295,956846
const V1LayerParameter_DimCheckMode V1LayerParameter::DimCheckMode_MIN;DimCheckMode_MIN27296,956912
const V1LayerParameter_DimCheckMode V1LayerParameter::DimCheckMode_MAX;DimCheckMode_MAX27297,956984
const int V1LayerParameter::DimCheckMode_ARRAYSIZE;DimCheckMode_ARRAYSIZE27298,957056
const int V1LayerParameter::kBottomFieldNumber;kBottomFieldNumber27301,957145
const int V1LayerParameter::kTopFieldNumber;kTopFieldNumber27302,957193
const int V1LayerParameter::kNameFieldNumber;kNameFieldNumber27303,957238
const int V1LayerParameter::kIncludeFieldNumber;kIncludeFieldNumber27304,957284
const int V1LayerParameter::kExcludeFieldNumber;kExcludeFieldNumber27305,957333
const int V1LayerParameter::kTypeFieldNumber;kTypeFieldNumber27306,957382
const int V1LayerParameter::kBlobsFieldNumber;kBlobsFieldNumber27307,957428
const int V1LayerParameter::kParamFieldNumber;kParamFieldNumber27308,957475
const int V1LayerParameter::kBlobShareModeFieldNumber;kBlobShareModeFieldNumber27309,957522
const int V1LayerParameter::kBlobsLrFieldNumber;kBlobsLrFieldNumber27310,957577
const int V1LayerParameter::kWeightDecayFieldNumber;kWeightDecayFieldNumber27311,957626
const int V1LayerParameter::kLossWeightFieldNumber;kLossWeightFieldNumber27312,957679
const int V1LayerParameter::kAccuracyParamFieldNumber;kAccuracyParamFieldNumber27313,957731
const int V1LayerParameter::kArgmaxParamFieldNumber;kArgmaxParamFieldNumber27314,957786
const int V1LayerParameter::kConcatParamFieldNumber;kConcatParamFieldNumber27315,957839
const int V1LayerParameter::kContrastiveLossParamFieldNumber;kContrastiveLossParamFieldNumber27316,957892
const int V1LayerParameter::kConvolutionParamFieldNumber;kConvolutionParamFieldNumber27317,957954
const int V1LayerParameter::kDataParamFieldNumber;kDataParamFieldNumber27318,958012
const int V1LayerParameter::kDropoutParamFieldNumber;kDropoutParamFieldNumber27319,958063
const int V1LayerParameter::kDummyDataParamFieldNumber;kDummyDataParamFieldNumber27320,958117
const int V1LayerParameter::kEltwiseParamFieldNumber;kEltwiseParamFieldNumber27321,958173
const int V1LayerParameter::kExpParamFieldNumber;kExpParamFieldNumber27322,958227
const int V1LayerParameter::kHdf5DataParamFieldNumber;kHdf5DataParamFieldNumber27323,958277
const int V1LayerParameter::kHdf5OutputParamFieldNumber;kHdf5OutputParamFieldNumber27324,958332
const int V1LayerParameter::kHingeLossParamFieldNumber;kHingeLossParamFieldNumber27325,958389
const int V1LayerParameter::kImageDataParamFieldNumber;kImageDataParamFieldNumber27326,958445
const int V1LayerParameter::kInfogainLossParamFieldNumber;kInfogainLossParamFieldNumber27327,958501
const int V1LayerParameter::kInnerProductParamFieldNumber;kInnerProductParamFieldNumber27328,958560
const int V1LayerParameter::kLrnParamFieldNumber;kLrnParamFieldNumber27329,958619
const int V1LayerParameter::kMemoryDataParamFieldNumber;kMemoryDataParamFieldNumber27330,958669
const int V1LayerParameter::kMvnParamFieldNumber;kMvnParamFieldNumber27331,958726
const int V1LayerParameter::kPoolingParamFieldNumber;kPoolingParamFieldNumber27332,958776
const int V1LayerParameter::kPowerParamFieldNumber;kPowerParamFieldNumber27333,958830
const int V1LayerParameter::kReluParamFieldNumber;kReluParamFieldNumber27334,958882
const int V1LayerParameter::kSigmoidParamFieldNumber;kSigmoidParamFieldNumber27335,958933
const int V1LayerParameter::kSoftmaxParamFieldNumber;kSoftmaxParamFieldNumber27336,958987
const int V1LayerParameter::kSliceParamFieldNumber;kSliceParamFieldNumber27337,959041
const int V1LayerParameter::kTanhParamFieldNumber;kTanhParamFieldNumber27338,959093
const int V1LayerParameter::kThresholdParamFieldNumber;kThresholdParamFieldNumber27339,959144
const int V1LayerParameter::kWindowDataParamFieldNumber;kWindowDataParamFieldNumber27340,959200
const int V1LayerParameter::kTransformParamFieldNumber;kTransformParamFieldNumber27341,959257
const int V1LayerParameter::kLossParamFieldNumber;kLossParamFieldNumber27342,959313
const int V1LayerParameter::kLayerFieldNumber;kLayerFieldNumber27343,959364
V1LayerParameter::V1LayerParameter()V1LayerParameter27346,959433
void V1LayerParameter::InitAsDefaultInstance() {InitAsDefaultInstance27351,959525
V1LayerParameter::V1LayerParameter(const V1LayerParameter& from)V1LayerParameter27385,962976
void V1LayerParameter::SharedCtor() {SharedCtor27391,963115
V1LayerParameter::~V1LayerParameter() {~V1LayerParameter27429,964111
void V1LayerParameter::SharedDtor() {SharedDtor27433,964170
void V1LayerParameter::SetCachedSize(int size) const {SetCachedSize27472,965186
const ::google::protobuf::Descriptor* V1LayerParameter::descriptor() {descriptor27477,965347
const V1LayerParameter& V1LayerParameter::default_instance() {default_instance27482,965496
V1LayerParameter* V1LayerParameter::default_instance_ = NULL;default_instance_27487,965658
V1LayerParameter* V1LayerParameter::New() const {New27489,965721
void V1LayerParameter::Clear() {Clear27493,965805
bool V1LayerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream27619,970485
#define DO_(DO_27621,970592
#undef DO_DO_28306,998924
void V1LayerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes28309,998938
::google::protobuf::uint8* V1LayerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray28587,1008813
int V1LayerParameter::ByteSize() const {ByteSize28901,1019652
void V1LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom29233,1030288
void V1LayerParameter::MergeFrom(const V1LayerParameter& from) {MergeFrom29245,1030665
void V1LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom29371,1035889
void V1LayerParameter::CopyFrom(const V1LayerParameter& from) {CopyFrom29377,1036026
bool V1LayerParameter::IsInitialized() const {IsInitialized29383,1036152
void V1LayerParameter::Swap(V1LayerParameter* other) {Swap29388,1036218
::google::protobuf::Metadata V1LayerParameter::GetMetadata() const {GetMetadata29440,1038676
const ::google::protobuf::EnumDescriptor* V0LayerParameter_PoolMethod_descriptor() {V0LayerParameter_PoolMethod_descriptor29451,1039025
bool V0LayerParameter_PoolMethod_IsValid(int value) {V0LayerParameter_PoolMethod_IsValid29455,1039198
const V0LayerParameter_PoolMethod V0LayerParameter::MAX;MAX29467,1039382
const V0LayerParameter_PoolMethod V0LayerParameter::AVE;AVE29468,1039439
const V0LayerParameter_PoolMethod V0LayerParameter::STOCHASTIC;STOCHASTIC29469,1039496
const V0LayerParameter_PoolMethod V0LayerParameter::PoolMethod_MIN;PoolMethod_MIN29470,1039560
const V0LayerParameter_PoolMethod V0LayerParameter::PoolMethod_MAX;PoolMethod_MAX29471,1039628
const int V0LayerParameter::PoolMethod_ARRAYSIZE;PoolMethod_ARRAYSIZE29472,1039696
::std::string* V0LayerParameter::_default_det_crop_mode_ = NULL;_default_det_crop_mode_29474,1039766
const int V0LayerParameter::kNameFieldNumber;kNameFieldNumber29476,1039848
const int V0LayerParameter::kTypeFieldNumber;kTypeFieldNumber29477,1039894
const int V0LayerParameter::kNumOutputFieldNumber;kNumOutputFieldNumber29478,1039940
const int V0LayerParameter::kBiastermFieldNumber;kBiastermFieldNumber29479,1039991
const int V0LayerParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber29480,1040041
const int V0LayerParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber29481,1040095
const int V0LayerParameter::kPadFieldNumber;kPadFieldNumber29482,1040147
const int V0LayerParameter::kKernelsizeFieldNumber;kKernelsizeFieldNumber29483,1040192
const int V0LayerParameter::kGroupFieldNumber;kGroupFieldNumber29484,1040244
const int V0LayerParameter::kStrideFieldNumber;kStrideFieldNumber29485,1040291
const int V0LayerParameter::kPoolFieldNumber;kPoolFieldNumber29486,1040339
const int V0LayerParameter::kDropoutRatioFieldNumber;kDropoutRatioFieldNumber29487,1040385
const int V0LayerParameter::kLocalSizeFieldNumber;kLocalSizeFieldNumber29488,1040439
const int V0LayerParameter::kAlphaFieldNumber;kAlphaFieldNumber29489,1040490
const int V0LayerParameter::kBetaFieldNumber;kBetaFieldNumber29490,1040537
const int V0LayerParameter::kKFieldNumber;kKFieldNumber29491,1040583
const int V0LayerParameter::kSourceFieldNumber;kSourceFieldNumber29492,1040626
const int V0LayerParameter::kScaleFieldNumber;kScaleFieldNumber29493,1040674
const int V0LayerParameter::kMeanfileFieldNumber;kMeanfileFieldNumber29494,1040721
const int V0LayerParameter::kBatchsizeFieldNumber;kBatchsizeFieldNumber29495,1040771
const int V0LayerParameter::kCropsizeFieldNumber;kCropsizeFieldNumber29496,1040822
const int V0LayerParameter::kMirrorFieldNumber;kMirrorFieldNumber29497,1040872
const int V0LayerParameter::kBlobsFieldNumber;kBlobsFieldNumber29498,1040920
const int V0LayerParameter::kBlobsLrFieldNumber;kBlobsLrFieldNumber29499,1040967
const int V0LayerParameter::kWeightDecayFieldNumber;kWeightDecayFieldNumber29500,1041016
const int V0LayerParameter::kRandSkipFieldNumber;kRandSkipFieldNumber29501,1041069
const int V0LayerParameter::kDetFgThresholdFieldNumber;kDetFgThresholdFieldNumber29502,1041119
const int V0LayerParameter::kDetBgThresholdFieldNumber;kDetBgThresholdFieldNumber29503,1041175
const int V0LayerParameter::kDetFgFractionFieldNumber;kDetFgFractionFieldNumber29504,1041231
const int V0LayerParameter::kDetContextPadFieldNumber;kDetContextPadFieldNumber29505,1041286
const int V0LayerParameter::kDetCropModeFieldNumber;kDetCropModeFieldNumber29506,1041341
const int V0LayerParameter::kNewNumFieldNumber;kNewNumFieldNumber29507,1041394
const int V0LayerParameter::kNewChannelsFieldNumber;kNewChannelsFieldNumber29508,1041442
const int V0LayerParameter::kNewHeightFieldNumber;kNewHeightFieldNumber29509,1041495
const int V0LayerParameter::kNewWidthFieldNumber;kNewWidthFieldNumber29510,1041546
const int V0LayerParameter::kShuffleImagesFieldNumber;kShuffleImagesFieldNumber29511,1041596
const int V0LayerParameter::kConcatDimFieldNumber;kConcatDimFieldNumber29512,1041651
const int V0LayerParameter::kHdf5OutputParamFieldNumber;kHdf5OutputParamFieldNumber29513,1041702
V0LayerParameter::V0LayerParameter()V0LayerParameter29516,1041781
void V0LayerParameter::InitAsDefaultInstance() {InitAsDefaultInstance29521,1041873
V0LayerParameter::V0LayerParameter(const V0LayerParameter& from)V0LayerParameter29527,1042253
void V0LayerParameter::SharedCtor() {SharedCtor29533,1042392
V0LayerParameter::~V0LayerParameter() {~V0LayerParameter29573,1043515
void V0LayerParameter::SharedDtor() {SharedDtor29577,1043574
void V0LayerParameter::SetCachedSize(int size) const {SetCachedSize29600,1044167
const ::google::protobuf::Descriptor* V0LayerParameter::descriptor() {descriptor29605,1044328
const V0LayerParameter& V0LayerParameter::default_instance() {default_instance29610,1044477
V0LayerParameter* V0LayerParameter::default_instance_ = NULL;default_instance_29615,1044639
V0LayerParameter* V0LayerParameter::New() const {New29617,1044702
void V0LayerParameter::Clear() {Clear29621,1044786
bool V0LayerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream29700,1046878
#define DO_(DO_29702,1046985
#undef DO_DO_30341,1073217
void V0LayerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes30344,1073231
::google::protobuf::uint8* V0LayerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray30569,1081142
int V0LayerParameter::ByteSize() const {ByteSize30804,1089771
void V0LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom31072,1097182
void V0LayerParameter::MergeFrom(const V0LayerParameter& from) {MergeFrom31084,1097559
void V0LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom31207,1100972
void V0LayerParameter::CopyFrom(const V0LayerParameter& from) {CopyFrom31213,1101109
bool V0LayerParameter::IsInitialized() const {IsInitialized31219,1101235
void V0LayerParameter::Swap(V0LayerParameter* other) {Swap31224,1101301
::google::protobuf::Metadata V0LayerParameter::GetMetadata() const {GetMetadata31271,1103326
const int PReLUParameter::kFillerFieldNumber;kFillerFieldNumber31283,1103692
const int PReLUParameter::kChannelSharedFieldNumber;kChannelSharedFieldNumber31284,1103738
PReLUParameter::PReLUParameter()PReLUParameter31287,1103813
void PReLUParameter::InitAsDefaultInstance() {InitAsDefaultInstance31292,1103901
PReLUParameter::PReLUParameter(const PReLUParameter& from)PReLUParameter31296,1104050
void PReLUParameter::SharedCtor() {SharedCtor31302,1104183
PReLUParameter::~PReLUParameter() {~PReLUParameter31309,1104335
void PReLUParameter::SharedDtor() {SharedDtor31313,1104390
void PReLUParameter::SetCachedSize(int size) const {SetCachedSize31319,1104488
const ::google::protobuf::Descriptor* PReLUParameter::descriptor() {descriptor31324,1104647
const PReLUParameter& PReLUParameter::default_instance() {default_instance31329,1104792
PReLUParameter* PReLUParameter::default_instance_ = NULL;default_instance_31334,1104950
PReLUParameter* PReLUParameter::New() const {New31336,1105009
void PReLUParameter::Clear() {Clear31340,1105087
bool PReLUParameter::MergePartialFromCodedStream(MergePartialFromCodedStream31351,1105389
#define DO_(DO_31353,1105494
#undef DO_DO_31399,1107267
void PReLUParameter::SerializeWithCachedSizes(SerializeWithCachedSizes31402,1107281
::google::protobuf::uint8* PReLUParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray31421,1107912
int PReLUParameter::ByteSize() const {ByteSize31442,1108627
void PReLUParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom31470,1109369
void PReLUParameter::MergeFrom(const PReLUParameter& from) {MergeFrom31482,1109740
void PReLUParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom31495,1110160
void PReLUParameter::CopyFrom(const PReLUParameter& from) {CopyFrom31501,1110295
bool PReLUParameter::IsInitialized() const {IsInitialized31507,1110417
void PReLUParameter::Swap(PReLUParameter* other) {Swap31512,1110481
::google::protobuf::Metadata PReLUParameter::GetMetadata() const {GetMetadata31522,1110815
const ::google::protobuf::EnumDescriptor* QuantizationParameter_RoundMethod_descriptor() {QuantizationParameter_RoundMethod_descriptor31533,1111158
bool QuantizationParameter_RoundMethod_IsValid(int value) {QuantizationParameter_RoundMethod_IsValid31537,1111343
const QuantizationParameter_RoundMethod QuantizationParameter::ROUND;ROUND31550,1111545
const QuantizationParameter_RoundMethod QuantizationParameter::FLOOR;FLOOR31551,1111615
const QuantizationParameter_RoundMethod QuantizationParameter::CEIL;CEIL31552,1111685
const QuantizationParameter_RoundMethod QuantizationParameter::TRUNC;TRUNC31553,1111754
const QuantizationParameter_RoundMethod QuantizationParameter::RoundMethod_MIN;RoundMethod_MIN31554,1111824
const QuantizationParameter_RoundMethod QuantizationParameter::RoundMethod_MAX;RoundMethod_MAX31555,1111904
const int QuantizationParameter::RoundMethod_ARRAYSIZE;RoundMethod_ARRAYSIZE31556,1111984
const ::google::protobuf::EnumDescriptor* QuantizationParameter_RoundStrategy_descriptor() {QuantizationParameter_RoundStrategy_descriptor31558,1112060
bool QuantizationParameter_RoundStrategy_IsValid(int value) {QuantizationParameter_RoundStrategy_IsValid31562,1112249
const QuantizationParameter_RoundStrategy QuantizationParameter::CONSERVATIVE;CONSERVATIVE31574,1112441
const QuantizationParameter_RoundStrategy QuantizationParameter::NEUTRAL;NEUTRAL31575,1112520
const QuantizationParameter_RoundStrategy QuantizationParameter::AGGRESSIVE;AGGRESSIVE31576,1112594
const QuantizationParameter_RoundStrategy QuantizationParameter::RoundStrategy_MIN;RoundStrategy_MIN31577,1112671
const QuantizationParameter_RoundStrategy QuantizationParameter::RoundStrategy_MAX;RoundStrategy_MAX31578,1112755
const int QuantizationParameter::RoundStrategy_ARRAYSIZE;RoundStrategy_ARRAYSIZE31579,1112839
const int QuantizationParameter::kRoundMethodFieldNumber;kRoundMethodFieldNumber31582,1112934
const int QuantizationParameter::kRoundStrategyFieldNumber;kRoundStrategyFieldNumber31583,1112992
const int QuantizationParameter::kBitWidthFieldNumber;kBitWidthFieldNumber31584,1113052
const int QuantizationParameter::kRangeFieldNumber;kRangeFieldNumber31585,1113107
QuantizationParameter::QuantizationParameter()QuantizationParameter31588,1113181
void QuantizationParameter::InitAsDefaultInstance() {InitAsDefaultInstance31593,1113283
QuantizationParameter::QuantizationParameter(const QuantizationParameter& from)QuantizationParameter31596,1113340
void QuantizationParameter::SharedCtor() {SharedCtor31602,1113494
QuantizationParameter::~QuantizationParameter() {~QuantizationParameter31610,1113670
void QuantizationParameter::SharedDtor() {SharedDtor31614,1113739
void QuantizationParameter::SetCachedSize(int size) const {SetCachedSize31619,1113824
const ::google::protobuf::Descriptor* QuantizationParameter::descriptor() {descriptor31624,1113990
const QuantizationParameter& QuantizationParameter::default_instance() {default_instance31629,1114149
QuantizationParameter* QuantizationParameter::default_instance_ = NULL;default_instance_31634,1114321
QuantizationParameter* QuantizationParameter::New() const {New31636,1114394
void QuantizationParameter::Clear() {Clear31640,1114493
bool QuantizationParameter::MergePartialFromCodedStream(MergePartialFromCodedStream31651,1114758
#define DO_(DO_31653,1114870
#undef DO_DO_31748,1119005
void QuantizationParameter::SerializeWithCachedSizes(SerializeWithCachedSizes31751,1119019
::google::protobuf::uint8* QuantizationParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray31786,1120351
int QuantizationParameter::ByteSize() const {ByteSize31826,1121894
void QuantizationParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom31875,1123413
void QuantizationParameter::MergeFrom(const QuantizationParameter& from) {MergeFrom31887,1123805
void QuantizationParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom31904,1124324
void QuantizationParameter::CopyFrom(const QuantizationParameter& from) {CopyFrom31910,1124466
bool QuantizationParameter::IsInitialized() const {IsInitialized31916,1124602
void QuantizationParameter::Swap(QuantizationParameter* other) {Swap31921,1124673
::google::protobuf::Metadata QuantizationParameter::GetMetadata() const {GetMetadata31933,1125112

.build_release/src/caffe/proto/caffe.pb.h,436758
#define PROTOBUF_caffe_2eproto__INCLUDEDPROTOBUF_caffe_2eproto__INCLUDED5,125
namespace caffe {caffe30,1001
enum FillerParameter_VarianceNorm {FillerParameter_VarianceNorm100,2635
  FillerParameter_VarianceNorm_FAN_IN = 0,FillerParameter_VarianceNorm_FAN_IN101,2671
  FillerParameter_VarianceNorm_FAN_OUT = 1,FillerParameter_VarianceNorm_FAN_OUT102,2714
  FillerParameter_VarianceNorm_AVERAGE = 2FillerParameter_VarianceNorm_AVERAGE103,2758
const FillerParameter_VarianceNorm FillerParameter_VarianceNorm_VarianceNorm_MIN = FillerParameter_VarianceNorm_FAN_IN;FillerParameter_VarianceNorm_VarianceNorm_MIN106,2858
const FillerParameter_VarianceNorm FillerParameter_VarianceNorm_VarianceNorm_MAX = FillerParameter_VarianceNorm_AVERAGE;FillerParameter_VarianceNorm_VarianceNorm_MAX107,2978
const int FillerParameter_VarianceNorm_VarianceNorm_ARRAYSIZE = FillerParameter_VarianceNorm_VarianceNorm_MAX + 1;FillerParameter_VarianceNorm_VarianceNorm_ARRAYSIZE108,3099
inline const ::std::string& FillerParameter_VarianceNorm_Name(FillerParameter_VarianceNorm value) {FillerParameter_VarianceNorm_Name111,3300
inline bool FillerParameter_VarianceNorm_Parse(FillerParameter_VarianceNorm_Parse115,3508
enum SolverParameter_SnapshotFormat {SolverParameter_SnapshotFormat120,3774
  SolverParameter_SnapshotFormat_HDF5 = 0,SolverParameter_SnapshotFormat_HDF5121,3812
  SolverParameter_SnapshotFormat_BINARYPROTO = 1SolverParameter_SnapshotFormat_BINARYPROTO122,3855
const SolverParameter_SnapshotFormat SolverParameter_SnapshotFormat_SnapshotFormat_MIN = SolverParameter_SnapshotFormat_HDF5;SolverParameter_SnapshotFormat_SnapshotFormat_MIN125,3963
const SolverParameter_SnapshotFormat SolverParameter_SnapshotFormat_SnapshotFormat_MAX = SolverParameter_SnapshotFormat_BINARYPROTO;SolverParameter_SnapshotFormat_SnapshotFormat_MAX126,4089
const int SolverParameter_SnapshotFormat_SnapshotFormat_ARRAYSIZE = SolverParameter_SnapshotFormat_SnapshotFormat_MAX + 1;SolverParameter_SnapshotFormat_SnapshotFormat_ARRAYSIZE127,4222
inline const ::std::string& SolverParameter_SnapshotFormat_Name(SolverParameter_SnapshotFormat value) {SolverParameter_SnapshotFormat_Name130,4433
inline bool SolverParameter_SnapshotFormat_Parse(SolverParameter_SnapshotFormat_Parse134,4647
enum SolverParameter_SolverMode {SolverParameter_SolverMode139,4921
  SolverParameter_SolverMode_CPU = 0,SolverParameter_SolverMode_CPU140,4955
  SolverParameter_SolverMode_GPU = 1SolverParameter_SolverMode_GPU141,4993
const SolverParameter_SolverMode SolverParameter_SolverMode_SolverMode_MIN = SolverParameter_SolverMode_CPU;SolverParameter_SolverMode_SolverMode_MIN144,5085
const SolverParameter_SolverMode SolverParameter_SolverMode_SolverMode_MAX = SolverParameter_SolverMode_GPU;SolverParameter_SolverMode_SolverMode_MAX145,5194
const int SolverParameter_SolverMode_SolverMode_ARRAYSIZE = SolverParameter_SolverMode_SolverMode_MAX + 1;SolverParameter_SolverMode_SolverMode_ARRAYSIZE146,5303
inline const ::std::string& SolverParameter_SolverMode_Name(SolverParameter_SolverMode value) {SolverParameter_SolverMode_Name149,5494
inline bool SolverParameter_SolverMode_Parse(SolverParameter_SolverMode_Parse153,5696
enum SolverParameter_SolverType {SolverParameter_SolverType158,5954
  SolverParameter_SolverType_SGD = 0,SolverParameter_SolverType_SGD159,5988
  SolverParameter_SolverType_NESTEROV = 1,SolverParameter_SolverType_NESTEROV160,6026
  SolverParameter_SolverType_ADAGRAD = 2,SolverParameter_SolverType_ADAGRAD161,6069
  SolverParameter_SolverType_RMSPROP = 3,SolverParameter_SolverType_RMSPROP162,6111
  SolverParameter_SolverType_ADADELTA = 4,SolverParameter_SolverType_ADADELTA163,6153
  SolverParameter_SolverType_ADAM = 5SolverParameter_SolverType_ADAM164,6196
const SolverParameter_SolverType SolverParameter_SolverType_SolverType_MIN = SolverParameter_SolverType_SGD;SolverParameter_SolverType_SolverType_MIN167,6289
const SolverParameter_SolverType SolverParameter_SolverType_SolverType_MAX = SolverParameter_SolverType_ADAM;SolverParameter_SolverType_SolverType_MAX168,6398
const int SolverParameter_SolverType_SolverType_ARRAYSIZE = SolverParameter_SolverType_SolverType_MAX + 1;SolverParameter_SolverType_SolverType_ARRAYSIZE169,6508
inline const ::std::string& SolverParameter_SolverType_Name(SolverParameter_SolverType value) {SolverParameter_SolverType_Name172,6699
inline bool SolverParameter_SolverType_Parse(SolverParameter_SolverType_Parse176,6901
enum ParamSpec_DimCheckMode {ParamSpec_DimCheckMode181,7159
  ParamSpec_DimCheckMode_STRICT = 0,ParamSpec_DimCheckMode_STRICT182,7189
  ParamSpec_DimCheckMode_PERMISSIVE = 1ParamSpec_DimCheckMode_PERMISSIVE183,7226
const ParamSpec_DimCheckMode ParamSpec_DimCheckMode_DimCheckMode_MIN = ParamSpec_DimCheckMode_STRICT;ParamSpec_DimCheckMode_DimCheckMode_MIN186,7317
const ParamSpec_DimCheckMode ParamSpec_DimCheckMode_DimCheckMode_MAX = ParamSpec_DimCheckMode_PERMISSIVE;ParamSpec_DimCheckMode_DimCheckMode_MAX187,7419
const int ParamSpec_DimCheckMode_DimCheckMode_ARRAYSIZE = ParamSpec_DimCheckMode_DimCheckMode_MAX + 1;ParamSpec_DimCheckMode_DimCheckMode_ARRAYSIZE188,7525
inline const ::std::string& ParamSpec_DimCheckMode_Name(ParamSpec_DimCheckMode value) {ParamSpec_DimCheckMode_Name191,7708
inline bool ParamSpec_DimCheckMode_Parse(ParamSpec_DimCheckMode_Parse195,7898
enum LossParameter_NormalizationMode {LossParameter_NormalizationMode200,8140
  LossParameter_NormalizationMode_FULL = 0,LossParameter_NormalizationMode_FULL201,8179
  LossParameter_NormalizationMode_VALID = 1,LossParameter_NormalizationMode_VALID202,8223
  LossParameter_NormalizationMode_BATCH_SIZE = 2,LossParameter_NormalizationMode_BATCH_SIZE203,8268
  LossParameter_NormalizationMode_NONE = 3LossParameter_NormalizationMode_NONE204,8318
const LossParameter_NormalizationMode LossParameter_NormalizationMode_NormalizationMode_MIN = LossParameter_NormalizationMode_FULL;LossParameter_NormalizationMode_NormalizationMode_MIN207,8421
const LossParameter_NormalizationMode LossParameter_NormalizationMode_NormalizationMode_MAX = LossParameter_NormalizationMode_NONE;LossParameter_NormalizationMode_NormalizationMode_MAX208,8553
const int LossParameter_NormalizationMode_NormalizationMode_ARRAYSIZE = LossParameter_NormalizationMode_NormalizationMode_MAX + 1;LossParameter_NormalizationMode_NormalizationMode_ARRAYSIZE209,8685
inline const ::std::string& LossParameter_NormalizationMode_Name(LossParameter_NormalizationMode value) {LossParameter_NormalizationMode_Name212,8905
inline bool LossParameter_NormalizationMode_Parse(LossParameter_NormalizationMode_Parse216,9122
enum ConvolutionParameter_Engine {ConvolutionParameter_Engine221,9400
  ConvolutionParameter_Engine_DEFAULT = 0,ConvolutionParameter_Engine_DEFAULT222,9435
  ConvolutionParameter_Engine_CAFFE = 1,ConvolutionParameter_Engine_CAFFE223,9478
  ConvolutionParameter_Engine_CUDNN = 2ConvolutionParameter_Engine_CUDNN224,9519
const ConvolutionParameter_Engine ConvolutionParameter_Engine_Engine_MIN = ConvolutionParameter_Engine_DEFAULT;ConvolutionParameter_Engine_Engine_MIN227,9615
const ConvolutionParameter_Engine ConvolutionParameter_Engine_Engine_MAX = ConvolutionParameter_Engine_CUDNN;ConvolutionParameter_Engine_Engine_MAX228,9727
const int ConvolutionParameter_Engine_Engine_ARRAYSIZE = ConvolutionParameter_Engine_Engine_MAX + 1;ConvolutionParameter_Engine_Engine_ARRAYSIZE229,9837
inline const ::std::string& ConvolutionParameter_Engine_Name(ConvolutionParameter_Engine value) {ConvolutionParameter_Engine_Name232,10023
inline bool ConvolutionParameter_Engine_Parse(ConvolutionParameter_Engine_Parse236,10228
enum DataParameter_DB {DataParameter_DB241,10490
  DataParameter_DB_LEVELDB = 0,DataParameter_DB_LEVELDB242,10514
  DataParameter_DB_LMDB = 1DataParameter_DB_LMDB243,10546
const DataParameter_DB DataParameter_DB_DB_MIN = DataParameter_DB_LEVELDB;DataParameter_DB_DB_MIN246,10619
const DataParameter_DB DataParameter_DB_DB_MAX = DataParameter_DB_LMDB;DataParameter_DB_DB_MAX247,10694
const int DataParameter_DB_DB_ARRAYSIZE = DataParameter_DB_DB_MAX + 1;DataParameter_DB_DB_ARRAYSIZE248,10766
inline const ::std::string& DataParameter_DB_Name(DataParameter_DB value) {DataParameter_DB_Name251,10911
inline bool DataParameter_DB_Parse(DataParameter_DB_Parse255,11083
enum EltwiseParameter_EltwiseOp {EltwiseParameter_EltwiseOp260,11301
  EltwiseParameter_EltwiseOp_PROD = 0,EltwiseParameter_EltwiseOp_PROD261,11335
  EltwiseParameter_EltwiseOp_SUM = 1,EltwiseParameter_EltwiseOp_SUM262,11374
  EltwiseParameter_EltwiseOp_MAX = 2EltwiseParameter_EltwiseOp_MAX263,11412
const EltwiseParameter_EltwiseOp EltwiseParameter_EltwiseOp_EltwiseOp_MIN = EltwiseParameter_EltwiseOp_PROD;EltwiseParameter_EltwiseOp_EltwiseOp_MIN266,11504
const EltwiseParameter_EltwiseOp EltwiseParameter_EltwiseOp_EltwiseOp_MAX = EltwiseParameter_EltwiseOp_MAX;EltwiseParameter_EltwiseOp_EltwiseOp_MAX267,11613
const int EltwiseParameter_EltwiseOp_EltwiseOp_ARRAYSIZE = EltwiseParameter_EltwiseOp_EltwiseOp_MAX + 1;EltwiseParameter_EltwiseOp_EltwiseOp_ARRAYSIZE268,11721
inline const ::std::string& EltwiseParameter_EltwiseOp_Name(EltwiseParameter_EltwiseOp value) {EltwiseParameter_EltwiseOp_Name271,11910
inline bool EltwiseParameter_EltwiseOp_Parse(EltwiseParameter_EltwiseOp_Parse275,12112
enum HingeLossParameter_Norm {HingeLossParameter_Norm280,12370
  HingeLossParameter_Norm_L1 = 1,HingeLossParameter_Norm_L1281,12401
  HingeLossParameter_Norm_L2 = 2HingeLossParameter_Norm_L2282,12435
const HingeLossParameter_Norm HingeLossParameter_Norm_Norm_MIN = HingeLossParameter_Norm_L1;HingeLossParameter_Norm_Norm_MIN285,12520
const HingeLossParameter_Norm HingeLossParameter_Norm_Norm_MAX = HingeLossParameter_Norm_L2;HingeLossParameter_Norm_Norm_MAX286,12613
const int HingeLossParameter_Norm_Norm_ARRAYSIZE = HingeLossParameter_Norm_Norm_MAX + 1;HingeLossParameter_Norm_Norm_ARRAYSIZE287,12706
inline const ::std::string& HingeLossParameter_Norm_Name(HingeLossParameter_Norm value) {HingeLossParameter_Norm_Name290,12876
inline bool HingeLossParameter_Norm_Parse(HingeLossParameter_Norm_Parse294,13069
enum LRNParameter_NormRegion {LRNParameter_NormRegion299,13315
  LRNParameter_NormRegion_ACROSS_CHANNELS = 0,LRNParameter_NormRegion_ACROSS_CHANNELS300,13346
  LRNParameter_NormRegion_WITHIN_CHANNEL = 1LRNParameter_NormRegion_WITHIN_CHANNEL301,13393
const LRNParameter_NormRegion LRNParameter_NormRegion_NormRegion_MIN = LRNParameter_NormRegion_ACROSS_CHANNELS;LRNParameter_NormRegion_NormRegion_MIN304,13490
const LRNParameter_NormRegion LRNParameter_NormRegion_NormRegion_MAX = LRNParameter_NormRegion_WITHIN_CHANNEL;LRNParameter_NormRegion_NormRegion_MAX305,13602
const int LRNParameter_NormRegion_NormRegion_ARRAYSIZE = LRNParameter_NormRegion_NormRegion_MAX + 1;LRNParameter_NormRegion_NormRegion_ARRAYSIZE306,13713
inline const ::std::string& LRNParameter_NormRegion_Name(LRNParameter_NormRegion value) {LRNParameter_NormRegion_Name309,13895
inline bool LRNParameter_NormRegion_Parse(LRNParameter_NormRegion_Parse313,14088
enum LRNParameter_Engine {LRNParameter_Engine318,14334
  LRNParameter_Engine_DEFAULT = 0,LRNParameter_Engine_DEFAULT319,14361
  LRNParameter_Engine_CAFFE = 1,LRNParameter_Engine_CAFFE320,14396
  LRNParameter_Engine_CUDNN = 2LRNParameter_Engine_CUDNN321,14429
const LRNParameter_Engine LRNParameter_Engine_Engine_MIN = LRNParameter_Engine_DEFAULT;LRNParameter_Engine_Engine_MIN324,14509
const LRNParameter_Engine LRNParameter_Engine_Engine_MAX = LRNParameter_Engine_CUDNN;LRNParameter_Engine_Engine_MAX325,14597
const int LRNParameter_Engine_Engine_ARRAYSIZE = LRNParameter_Engine_Engine_MAX + 1;LRNParameter_Engine_Engine_ARRAYSIZE326,14683
inline const ::std::string& LRNParameter_Engine_Name(LRNParameter_Engine value) {LRNParameter_Engine_Name329,14845
inline bool LRNParameter_Engine_Parse(LRNParameter_Engine_Parse333,15026
enum PoolingParameter_PoolMethod {PoolingParameter_PoolMethod338,15256
  PoolingParameter_PoolMethod_MAX = 0,PoolingParameter_PoolMethod_MAX339,15291
  PoolingParameter_PoolMethod_AVE = 1,PoolingParameter_PoolMethod_AVE340,15330
  PoolingParameter_PoolMethod_STOCHASTIC = 2PoolingParameter_PoolMethod_STOCHASTIC341,15369
const PoolingParameter_PoolMethod PoolingParameter_PoolMethod_PoolMethod_MIN = PoolingParameter_PoolMethod_MAX;PoolingParameter_PoolMethod_PoolMethod_MIN344,15470
const PoolingParameter_PoolMethod PoolingParameter_PoolMethod_PoolMethod_MAX = PoolingParameter_PoolMethod_STOCHASTIC;PoolingParameter_PoolMethod_PoolMethod_MAX345,15582
const int PoolingParameter_PoolMethod_PoolMethod_ARRAYSIZE = PoolingParameter_PoolMethod_PoolMethod_MAX + 1;PoolingParameter_PoolMethod_PoolMethod_ARRAYSIZE346,15701
inline const ::std::string& PoolingParameter_PoolMethod_Name(PoolingParameter_PoolMethod value) {PoolingParameter_PoolMethod_Name349,15895
inline bool PoolingParameter_PoolMethod_Parse(PoolingParameter_PoolMethod_Parse353,16100
enum PoolingParameter_Engine {PoolingParameter_Engine358,16362
  PoolingParameter_Engine_DEFAULT = 0,PoolingParameter_Engine_DEFAULT359,16393
  PoolingParameter_Engine_CAFFE = 1,PoolingParameter_Engine_CAFFE360,16432
  PoolingParameter_Engine_CUDNN = 2PoolingParameter_Engine_CUDNN361,16469
const PoolingParameter_Engine PoolingParameter_Engine_Engine_MIN = PoolingParameter_Engine_DEFAULT;PoolingParameter_Engine_Engine_MIN364,16557
const PoolingParameter_Engine PoolingParameter_Engine_Engine_MAX = PoolingParameter_Engine_CUDNN;PoolingParameter_Engine_Engine_MAX365,16657
const int PoolingParameter_Engine_Engine_ARRAYSIZE = PoolingParameter_Engine_Engine_MAX + 1;PoolingParameter_Engine_Engine_ARRAYSIZE366,16755
inline const ::std::string& PoolingParameter_Engine_Name(PoolingParameter_Engine value) {PoolingParameter_Engine_Name369,16929
inline bool PoolingParameter_Engine_Parse(PoolingParameter_Engine_Parse373,17122
enum ReductionParameter_ReductionOp {ReductionParameter_ReductionOp378,17368
  ReductionParameter_ReductionOp_SUM = 1,ReductionParameter_ReductionOp_SUM379,17406
  ReductionParameter_ReductionOp_ASUM = 2,ReductionParameter_ReductionOp_ASUM380,17448
  ReductionParameter_ReductionOp_SUMSQ = 3,ReductionParameter_ReductionOp_SUMSQ381,17491
  ReductionParameter_ReductionOp_MEAN = 4ReductionParameter_ReductionOp_MEAN382,17535
const ReductionParameter_ReductionOp ReductionParameter_ReductionOp_ReductionOp_MIN = ReductionParameter_ReductionOp_SUM;ReductionParameter_ReductionOp_ReductionOp_MIN385,17636
const ReductionParameter_ReductionOp ReductionParameter_ReductionOp_ReductionOp_MAX = ReductionParameter_ReductionOp_MEAN;ReductionParameter_ReductionOp_ReductionOp_MAX386,17758
const int ReductionParameter_ReductionOp_ReductionOp_ARRAYSIZE = ReductionParameter_ReductionOp_ReductionOp_MAX + 1;ReductionParameter_ReductionOp_ReductionOp_ARRAYSIZE387,17881
inline const ::std::string& ReductionParameter_ReductionOp_Name(ReductionParameter_ReductionOp value) {ReductionParameter_ReductionOp_Name390,18086
inline bool ReductionParameter_ReductionOp_Parse(ReductionParameter_ReductionOp_Parse394,18300
enum ReLUParameter_Engine {ReLUParameter_Engine399,18574
  ReLUParameter_Engine_DEFAULT = 0,ReLUParameter_Engine_DEFAULT400,18602
  ReLUParameter_Engine_CAFFE = 1,ReLUParameter_Engine_CAFFE401,18638
  ReLUParameter_Engine_CUDNN = 2ReLUParameter_Engine_CUDNN402,18672
const ReLUParameter_Engine ReLUParameter_Engine_Engine_MIN = ReLUParameter_Engine_DEFAULT;ReLUParameter_Engine_Engine_MIN405,18754
const ReLUParameter_Engine ReLUParameter_Engine_Engine_MAX = ReLUParameter_Engine_CUDNN;ReLUParameter_Engine_Engine_MAX406,18845
const int ReLUParameter_Engine_Engine_ARRAYSIZE = ReLUParameter_Engine_Engine_MAX + 1;ReLUParameter_Engine_Engine_ARRAYSIZE407,18934
inline const ::std::string& ReLUParameter_Engine_Name(ReLUParameter_Engine value) {ReLUParameter_Engine_Name410,19099
inline bool ReLUParameter_Engine_Parse(ReLUParameter_Engine_Parse414,19283
enum SigmoidParameter_Engine {SigmoidParameter_Engine419,19517
  SigmoidParameter_Engine_DEFAULT = 0,SigmoidParameter_Engine_DEFAULT420,19548
  SigmoidParameter_Engine_CAFFE = 1,SigmoidParameter_Engine_CAFFE421,19587
  SigmoidParameter_Engine_CUDNN = 2SigmoidParameter_Engine_CUDNN422,19624
const SigmoidParameter_Engine SigmoidParameter_Engine_Engine_MIN = SigmoidParameter_Engine_DEFAULT;SigmoidParameter_Engine_Engine_MIN425,19712
const SigmoidParameter_Engine SigmoidParameter_Engine_Engine_MAX = SigmoidParameter_Engine_CUDNN;SigmoidParameter_Engine_Engine_MAX426,19812
const int SigmoidParameter_Engine_Engine_ARRAYSIZE = SigmoidParameter_Engine_Engine_MAX + 1;SigmoidParameter_Engine_Engine_ARRAYSIZE427,19910
inline const ::std::string& SigmoidParameter_Engine_Name(SigmoidParameter_Engine value) {SigmoidParameter_Engine_Name430,20084
inline bool SigmoidParameter_Engine_Parse(SigmoidParameter_Engine_Parse434,20277
enum SoftmaxParameter_Engine {SoftmaxParameter_Engine439,20523
  SoftmaxParameter_Engine_DEFAULT = 0,SoftmaxParameter_Engine_DEFAULT440,20554
  SoftmaxParameter_Engine_CAFFE = 1,SoftmaxParameter_Engine_CAFFE441,20593
  SoftmaxParameter_Engine_CUDNN = 2SoftmaxParameter_Engine_CUDNN442,20630
const SoftmaxParameter_Engine SoftmaxParameter_Engine_Engine_MIN = SoftmaxParameter_Engine_DEFAULT;SoftmaxParameter_Engine_Engine_MIN445,20718
const SoftmaxParameter_Engine SoftmaxParameter_Engine_Engine_MAX = SoftmaxParameter_Engine_CUDNN;SoftmaxParameter_Engine_Engine_MAX446,20818
const int SoftmaxParameter_Engine_Engine_ARRAYSIZE = SoftmaxParameter_Engine_Engine_MAX + 1;SoftmaxParameter_Engine_Engine_ARRAYSIZE447,20916
inline const ::std::string& SoftmaxParameter_Engine_Name(SoftmaxParameter_Engine value) {SoftmaxParameter_Engine_Name450,21090
inline bool SoftmaxParameter_Engine_Parse(SoftmaxParameter_Engine_Parse454,21283
enum TanHParameter_Engine {TanHParameter_Engine459,21529
  TanHParameter_Engine_DEFAULT = 0,TanHParameter_Engine_DEFAULT460,21557
  TanHParameter_Engine_CAFFE = 1,TanHParameter_Engine_CAFFE461,21593
  TanHParameter_Engine_CUDNN = 2TanHParameter_Engine_CUDNN462,21627
const TanHParameter_Engine TanHParameter_Engine_Engine_MIN = TanHParameter_Engine_DEFAULT;TanHParameter_Engine_Engine_MIN465,21709
const TanHParameter_Engine TanHParameter_Engine_Engine_MAX = TanHParameter_Engine_CUDNN;TanHParameter_Engine_Engine_MAX466,21800
const int TanHParameter_Engine_Engine_ARRAYSIZE = TanHParameter_Engine_Engine_MAX + 1;TanHParameter_Engine_Engine_ARRAYSIZE467,21889
inline const ::std::string& TanHParameter_Engine_Name(TanHParameter_Engine value) {TanHParameter_Engine_Name470,22054
inline bool TanHParameter_Engine_Parse(TanHParameter_Engine_Parse474,22238
enum SPPParameter_PoolMethod {SPPParameter_PoolMethod479,22472
  SPPParameter_PoolMethod_MAX = 0,SPPParameter_PoolMethod_MAX480,22503
  SPPParameter_PoolMethod_AVE = 1,SPPParameter_PoolMethod_AVE481,22538
  SPPParameter_PoolMethod_STOCHASTIC = 2SPPParameter_PoolMethod_STOCHASTIC482,22573
const SPPParameter_PoolMethod SPPParameter_PoolMethod_PoolMethod_MIN = SPPParameter_PoolMethod_MAX;SPPParameter_PoolMethod_PoolMethod_MIN485,22666
const SPPParameter_PoolMethod SPPParameter_PoolMethod_PoolMethod_MAX = SPPParameter_PoolMethod_STOCHASTIC;SPPParameter_PoolMethod_PoolMethod_MAX486,22766
const int SPPParameter_PoolMethod_PoolMethod_ARRAYSIZE = SPPParameter_PoolMethod_PoolMethod_MAX + 1;SPPParameter_PoolMethod_PoolMethod_ARRAYSIZE487,22873
inline const ::std::string& SPPParameter_PoolMethod_Name(SPPParameter_PoolMethod value) {SPPParameter_PoolMethod_Name490,23055
inline bool SPPParameter_PoolMethod_Parse(SPPParameter_PoolMethod_Parse494,23248
enum SPPParameter_Engine {SPPParameter_Engine499,23494
  SPPParameter_Engine_DEFAULT = 0,SPPParameter_Engine_DEFAULT500,23521
  SPPParameter_Engine_CAFFE = 1,SPPParameter_Engine_CAFFE501,23556
  SPPParameter_Engine_CUDNN = 2SPPParameter_Engine_CUDNN502,23589
const SPPParameter_Engine SPPParameter_Engine_Engine_MIN = SPPParameter_Engine_DEFAULT;SPPParameter_Engine_Engine_MIN505,23669
const SPPParameter_Engine SPPParameter_Engine_Engine_MAX = SPPParameter_Engine_CUDNN;SPPParameter_Engine_Engine_MAX506,23757
const int SPPParameter_Engine_Engine_ARRAYSIZE = SPPParameter_Engine_Engine_MAX + 1;SPPParameter_Engine_Engine_ARRAYSIZE507,23843
inline const ::std::string& SPPParameter_Engine_Name(SPPParameter_Engine value) {SPPParameter_Engine_Name510,24005
inline bool SPPParameter_Engine_Parse(SPPParameter_Engine_Parse514,24186
enum V1LayerParameter_LayerType {V1LayerParameter_LayerType519,24416
  V1LayerParameter_LayerType_NONE = 0,V1LayerParameter_LayerType_NONE520,24450
  V1LayerParameter_LayerType_ABSVAL = 35,V1LayerParameter_LayerType_ABSVAL521,24489
  V1LayerParameter_LayerType_ACCURACY = 1,V1LayerParameter_LayerType_ACCURACY522,24531
  V1LayerParameter_LayerType_ARGMAX = 30,V1LayerParameter_LayerType_ARGMAX523,24574
  V1LayerParameter_LayerType_BNLL = 2,V1LayerParameter_LayerType_BNLL524,24616
  V1LayerParameter_LayerType_CONCAT = 3,V1LayerParameter_LayerType_CONCAT525,24655
  V1LayerParameter_LayerType_CONTRASTIVE_LOSS = 37,V1LayerParameter_LayerType_CONTRASTIVE_LOSS526,24696
  V1LayerParameter_LayerType_CONVOLUTION = 4,V1LayerParameter_LayerType_CONVOLUTION527,24748
  V1LayerParameter_LayerType_DATA = 5,V1LayerParameter_LayerType_DATA528,24794
  V1LayerParameter_LayerType_DECONVOLUTION = 39,V1LayerParameter_LayerType_DECONVOLUTION529,24833
  V1LayerParameter_LayerType_DROPOUT = 6,V1LayerParameter_LayerType_DROPOUT530,24882
  V1LayerParameter_LayerType_DUMMY_DATA = 32,V1LayerParameter_LayerType_DUMMY_DATA531,24924
  V1LayerParameter_LayerType_EUCLIDEAN_LOSS = 7,V1LayerParameter_LayerType_EUCLIDEAN_LOSS532,24970
  V1LayerParameter_LayerType_ELTWISE = 25,V1LayerParameter_LayerType_ELTWISE533,25019
  V1LayerParameter_LayerType_EXP = 38,V1LayerParameter_LayerType_EXP534,25062
  V1LayerParameter_LayerType_FLATTEN = 8,V1LayerParameter_LayerType_FLATTEN535,25101
  V1LayerParameter_LayerType_HDF5_DATA = 9,V1LayerParameter_LayerType_HDF5_DATA536,25143
  V1LayerParameter_LayerType_HDF5_OUTPUT = 10,V1LayerParameter_LayerType_HDF5_OUTPUT537,25187
  V1LayerParameter_LayerType_HINGE_LOSS = 28,V1LayerParameter_LayerType_HINGE_LOSS538,25234
  V1LayerParameter_LayerType_IM2COL = 11,V1LayerParameter_LayerType_IM2COL539,25280
  V1LayerParameter_LayerType_IMAGE_DATA = 12,V1LayerParameter_LayerType_IMAGE_DATA540,25322
  V1LayerParameter_LayerType_INFOGAIN_LOSS = 13,V1LayerParameter_LayerType_INFOGAIN_LOSS541,25368
  V1LayerParameter_LayerType_INNER_PRODUCT = 14,V1LayerParameter_LayerType_INNER_PRODUCT542,25417
  V1LayerParameter_LayerType_LRN = 15,V1LayerParameter_LayerType_LRN543,25466
  V1LayerParameter_LayerType_MEMORY_DATA = 29,V1LayerParameter_LayerType_MEMORY_DATA544,25505
  V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS = 16,V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS545,25552
  V1LayerParameter_LayerType_MVN = 34,V1LayerParameter_LayerType_MVN546,25613
  V1LayerParameter_LayerType_POOLING = 17,V1LayerParameter_LayerType_POOLING547,25652
  V1LayerParameter_LayerType_POWER = 26,V1LayerParameter_LayerType_POWER548,25695
  V1LayerParameter_LayerType_RELU = 18,V1LayerParameter_LayerType_RELU549,25736
  V1LayerParameter_LayerType_SIGMOID = 19,V1LayerParameter_LayerType_SIGMOID550,25776
  V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS = 27,V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS551,25819
  V1LayerParameter_LayerType_SILENCE = 36,V1LayerParameter_LayerType_SILENCE552,25881
  V1LayerParameter_LayerType_SOFTMAX = 20,V1LayerParameter_LayerType_SOFTMAX553,25924
  V1LayerParameter_LayerType_SOFTMAX_LOSS = 21,V1LayerParameter_LayerType_SOFTMAX_LOSS554,25967
  V1LayerParameter_LayerType_SPLIT = 22,V1LayerParameter_LayerType_SPLIT555,26015
  V1LayerParameter_LayerType_SLICE = 33,V1LayerParameter_LayerType_SLICE556,26056
  V1LayerParameter_LayerType_TANH = 23,V1LayerParameter_LayerType_TANH557,26097
  V1LayerParameter_LayerType_WINDOW_DATA = 24,V1LayerParameter_LayerType_WINDOW_DATA558,26137
  V1LayerParameter_LayerType_THRESHOLD = 31V1LayerParameter_LayerType_THRESHOLD559,26184
const V1LayerParameter_LayerType V1LayerParameter_LayerType_LayerType_MIN = V1LayerParameter_LayerType_NONE;V1LayerParameter_LayerType_LayerType_MIN562,26283
const V1LayerParameter_LayerType V1LayerParameter_LayerType_LayerType_MAX = V1LayerParameter_LayerType_DECONVOLUTION;V1LayerParameter_LayerType_LayerType_MAX563,26392
const int V1LayerParameter_LayerType_LayerType_ARRAYSIZE = V1LayerParameter_LayerType_LayerType_MAX + 1;V1LayerParameter_LayerType_LayerType_ARRAYSIZE564,26510
inline const ::std::string& V1LayerParameter_LayerType_Name(V1LayerParameter_LayerType value) {V1LayerParameter_LayerType_Name567,26699
inline bool V1LayerParameter_LayerType_Parse(V1LayerParameter_LayerType_Parse571,26901
enum V1LayerParameter_DimCheckMode {V1LayerParameter_DimCheckMode576,27159
  V1LayerParameter_DimCheckMode_STRICT = 0,V1LayerParameter_DimCheckMode_STRICT577,27196
  V1LayerParameter_DimCheckMode_PERMISSIVE = 1V1LayerParameter_DimCheckMode_PERMISSIVE578,27240
const V1LayerParameter_DimCheckMode V1LayerParameter_DimCheckMode_DimCheckMode_MIN = V1LayerParameter_DimCheckMode_STRICT;V1LayerParameter_DimCheckMode_DimCheckMode_MIN581,27345
const V1LayerParameter_DimCheckMode V1LayerParameter_DimCheckMode_DimCheckMode_MAX = V1LayerParameter_DimCheckMode_PERMISSIVE;V1LayerParameter_DimCheckMode_DimCheckMode_MAX582,27468
const int V1LayerParameter_DimCheckMode_DimCheckMode_ARRAYSIZE = V1LayerParameter_DimCheckMode_DimCheckMode_MAX + 1;V1LayerParameter_DimCheckMode_DimCheckMode_ARRAYSIZE583,27595
inline const ::std::string& V1LayerParameter_DimCheckMode_Name(V1LayerParameter_DimCheckMode value) {V1LayerParameter_DimCheckMode_Name586,27799
inline bool V1LayerParameter_DimCheckMode_Parse(V1LayerParameter_DimCheckMode_Parse590,28010
enum V0LayerParameter_PoolMethod {V0LayerParameter_PoolMethod595,28280
  V0LayerParameter_PoolMethod_MAX = 0,V0LayerParameter_PoolMethod_MAX596,28315
  V0LayerParameter_PoolMethod_AVE = 1,V0LayerParameter_PoolMethod_AVE597,28354
  V0LayerParameter_PoolMethod_STOCHASTIC = 2V0LayerParameter_PoolMethod_STOCHASTIC598,28393
const V0LayerParameter_PoolMethod V0LayerParameter_PoolMethod_PoolMethod_MIN = V0LayerParameter_PoolMethod_MAX;V0LayerParameter_PoolMethod_PoolMethod_MIN601,28494
const V0LayerParameter_PoolMethod V0LayerParameter_PoolMethod_PoolMethod_MAX = V0LayerParameter_PoolMethod_STOCHASTIC;V0LayerParameter_PoolMethod_PoolMethod_MAX602,28606
const int V0LayerParameter_PoolMethod_PoolMethod_ARRAYSIZE = V0LayerParameter_PoolMethod_PoolMethod_MAX + 1;V0LayerParameter_PoolMethod_PoolMethod_ARRAYSIZE603,28725
inline const ::std::string& V0LayerParameter_PoolMethod_Name(V0LayerParameter_PoolMethod value) {V0LayerParameter_PoolMethod_Name606,28919
inline bool V0LayerParameter_PoolMethod_Parse(V0LayerParameter_PoolMethod_Parse610,29124
enum QuantizationParameter_RoundMethod {QuantizationParameter_RoundMethod615,29386
  QuantizationParameter_RoundMethod_ROUND = 0,QuantizationParameter_RoundMethod_ROUND616,29427
  QuantizationParameter_RoundMethod_FLOOR = 1,QuantizationParameter_RoundMethod_FLOOR617,29474
  QuantizationParameter_RoundMethod_CEIL = 2,QuantizationParameter_RoundMethod_CEIL618,29521
  QuantizationParameter_RoundMethod_TRUNC = 3QuantizationParameter_RoundMethod_TRUNC619,29567
const QuantizationParameter_RoundMethod QuantizationParameter_RoundMethod_RoundMethod_MIN = QuantizationParameter_RoundMethod_ROUND;QuantizationParameter_RoundMethod_RoundMethod_MIN622,29675
const QuantizationParameter_RoundMethod QuantizationParameter_RoundMethod_RoundMethod_MAX = QuantizationParameter_RoundMethod_TRUNC;QuantizationParameter_RoundMethod_RoundMethod_MAX623,29808
const int QuantizationParameter_RoundMethod_RoundMethod_ARRAYSIZE = QuantizationParameter_RoundMethod_RoundMethod_MAX + 1;QuantizationParameter_RoundMethod_RoundMethod_ARRAYSIZE624,29941
inline const ::std::string& QuantizationParameter_RoundMethod_Name(QuantizationParameter_RoundMethod value) {QuantizationParameter_RoundMethod_Name627,30155
inline bool QuantizationParameter_RoundMethod_Parse(QuantizationParameter_RoundMethod_Parse631,30378
enum QuantizationParameter_RoundStrategy {QuantizationParameter_RoundStrategy636,30664
  QuantizationParameter_RoundStrategy_CONSERVATIVE = 0,QuantizationParameter_RoundStrategy_CONSERVATIVE637,30707
  QuantizationParameter_RoundStrategy_NEUTRAL = 1,QuantizationParameter_RoundStrategy_NEUTRAL638,30763
  QuantizationParameter_RoundStrategy_AGGRESSIVE = 2QuantizationParameter_RoundStrategy_AGGRESSIVE639,30814
const QuantizationParameter_RoundStrategy QuantizationParameter_RoundStrategy_RoundStrategy_MIN = QuantizationParameter_RoundStrategy_CONSERVATIVE;QuantizationParameter_RoundStrategy_RoundStrategy_MIN642,30931
const QuantizationParameter_RoundStrategy QuantizationParameter_RoundStrategy_RoundStrategy_MAX = QuantizationParameter_RoundStrategy_AGGRESSIVE;QuantizationParameter_RoundStrategy_RoundStrategy_MAX643,31079
const int QuantizationParameter_RoundStrategy_RoundStrategy_ARRAYSIZE = QuantizationParameter_RoundStrategy_RoundStrategy_MAX + 1;QuantizationParameter_RoundStrategy_RoundStrategy_ARRAYSIZE644,31225
inline const ::std::string& QuantizationParameter_RoundStrategy_Name(QuantizationParameter_RoundStrategy value) {QuantizationParameter_RoundStrategy_Name647,31449
inline bool QuantizationParameter_RoundStrategy_Parse(QuantizationParameter_RoundStrategy_Parse651,31678
enum Phase {Phase656,31972
  TRAIN = 0,TRAIN657,31985
  TEST = 1TEST658,31998
const Phase Phase_MIN = TRAIN;Phase_MIN661,32043
const Phase Phase_MAX = TEST;Phase_MAX662,32074
const int Phase_ARRAYSIZE = Phase_MAX + 1;Phase_ARRAYSIZE663,32104
inline const ::std::string& Phase_Name(Phase value) {Phase_Name666,32210
inline bool Phase_Parse(Phase_Parse670,32349
class BlobShape : public ::google::protobuf::Message {BlobShape677,32595
  inline BlobShape& operator=(const BlobShape& from) {operator =684,32736
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields689,32834
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields693,32945
  int GetCachedSize() const { return _cached_size_; }GetCachedSize718,33852
  static const int kDimFieldNumber = 1;kDimFieldNumber734,34308
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_746,34791
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dim_;dim_748,34848
  mutable int _dim_cached_byte_size_;_dim_cached_byte_size_749,34919
  mutable int _cached_size_;_cached_size_751,34958
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_752,34987
  static BlobShape* default_instance_;default_instance_759,35230
class BlobProto : public ::google::protobuf::Message {BlobProto763,35344
  inline BlobProto& operator=(const BlobProto& from) {operator =770,35485
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields775,35583
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields779,35694
  int GetCachedSize() const { return _cached_size_; }GetCachedSize804,36601
  static const int kShapeFieldNumber = 7;kShapeFieldNumber820,37058
  static const int kDataFieldNumber = 5;kDataFieldNumber829,37411
  static const int kDiffFieldNumber = 6;kDiffFieldNumber841,37836
  static const int kDoubleDataFieldNumber = 8;kDoubleDataFieldNumber853,38283
  static const int kDoubleDiffFieldNumber = 9;kDoubleDiffFieldNumber865,38776
  static const int kNumFieldNumber = 1;kNumFieldNumber877,39242
  static const int kChannelsFieldNumber = 2;kChannelsFieldNumber884,39503
  static const int kHeightFieldNumber = 3;kHeightFieldNumber891,39773
  static const int kWidthFieldNumber = 4;kWidthFieldNumber898,40034
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_915,40579
  ::caffe::BlobShape* shape_;shape_917,40636
  ::google::protobuf::RepeatedField< float > data_;data_918,40666
  mutable int _data_cached_byte_size_;_data_cached_byte_size_919,40718
  ::google::protobuf::RepeatedField< float > diff_;diff_920,40757
  mutable int _diff_cached_byte_size_;_diff_cached_byte_size_921,40809
  ::google::protobuf::RepeatedField< double > double_data_;double_data_922,40848
  mutable int _double_data_cached_byte_size_;_double_data_cached_byte_size_923,40908
  ::google::protobuf::RepeatedField< double > double_diff_;double_diff_924,40954
  mutable int _double_diff_cached_byte_size_;_double_diff_cached_byte_size_925,41014
  ::google::protobuf::int32 num_;num_926,41060
  ::google::protobuf::int32 channels_;channels_927,41094
  ::google::protobuf::int32 height_;height_928,41133
  ::google::protobuf::int32 width_;width_929,41170
  mutable int _cached_size_;_cached_size_931,41207
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];_has_bits_932,41236
  static BlobProto* default_instance_;default_instance_939,41479
class BlobProtoVector : public ::google::protobuf::Message {BlobProtoVector943,41593
  inline BlobProtoVector& operator=(const BlobProtoVector& from) {operator =950,41764
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields955,41874
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields959,41985
  int GetCachedSize() const { return _cached_size_; }GetCachedSize984,42922
  static const int kBlobsFieldNumber = 1;kBlobsFieldNumber1000,43379
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_1012,43842
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > blobs_;blobs_1014,43899
  mutable int _cached_size_;_cached_size_1016,43969
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_1017,43998
  static BlobProtoVector* default_instance_;default_instance_1024,44241
class Datum : public ::google::protobuf::Message {Datum1028,44361
  inline Datum& operator=(const Datum& from) {operator =1035,44482
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields1040,44572
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields1044,44683
  int GetCachedSize() const { return _cached_size_; }GetCachedSize1069,45570
  static const int kChannelsFieldNumber = 1;kChannelsFieldNumber1085,46025
  static const int kHeightFieldNumber = 2;kHeightFieldNumber1092,46281
  static const int kWidthFieldNumber = 3;kWidthFieldNumber1099,46528
  static const int kDataFieldNumber = 4;kDataFieldNumber1106,46769
  static const int kLabelFieldNumber = 5;kLabelFieldNumber1118,47234
  static const int kFloatDataFieldNumber = 6;kFloatDataFieldNumber1125,47493
  static const int kEncodedFieldNumber = 7;kEncodedFieldNumber1137,47963
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_1156,48538
  ::google::protobuf::int32 channels_;channels_1158,48595
  ::google::protobuf::int32 height_;height_1159,48634
  ::std::string* data_;data_1160,48671
  ::google::protobuf::int32 width_;width_1161,48695
  ::google::protobuf::int32 label_;label_1162,48731
  ::google::protobuf::RepeatedField< float > float_data_;float_data_1163,48767
  bool encoded_;encoded_1164,48825
  mutable int _cached_size_;_cached_size_1166,48843
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];_has_bits_1167,48872
  static Datum* default_instance_;default_instance_1174,49115
class FillerParameter : public ::google::protobuf::Message {FillerParameter1178,49225
  inline FillerParameter& operator=(const FillerParameter& from) {operator =1185,49396
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields1190,49506
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields1194,49617
  int GetCachedSize() const { return _cached_size_; }GetCachedSize1219,50554
  typedef FillerParameter_VarianceNorm VarianceNorm;VarianceNorm1230,50835
  static const VarianceNorm FAN_IN = FillerParameter_VarianceNorm_FAN_IN;FAN_IN1231,50888
  static const VarianceNorm FAN_OUT = FillerParameter_VarianceNorm_FAN_OUT;FAN_OUT1232,50962
  static const VarianceNorm AVERAGE = FillerParameter_VarianceNorm_AVERAGE;AVERAGE1233,51038
  static inline bool VarianceNorm_IsValid(int value) {VarianceNorm_IsValid1234,51114
  static const VarianceNorm VarianceNorm_MIN =VarianceNorm_MIN1237,51229
  static const VarianceNorm VarianceNorm_MAX =VarianceNorm_MAX1239,51327
  static const int VarianceNorm_ARRAYSIZE =VarianceNorm_ARRAYSIZE1241,51425
  VarianceNorm_descriptor() {VarianceNorm_descriptor1244,51584
  static inline const ::std::string& VarianceNorm_Name(VarianceNorm value) {VarianceNorm_Name1247,51672
  static inline bool VarianceNorm_Parse(const ::std::string& name,VarianceNorm_Parse1250,51806
  static const int kTypeFieldNumber = 1;kTypeFieldNumber1260,52153
  static const int kValueFieldNumber = 2;kValueFieldNumber1272,52632
  static const int kMinFieldNumber = 3;kMinFieldNumber1279,52844
  static const int kMaxFieldNumber = 4;kMaxFieldNumber1286,53050
  static const int kMeanFieldNumber = 5;kMeanFieldNumber1293,53259
  static const int kStdFieldNumber = 6;kStdFieldNumber1300,53468
  static const int kSparseFieldNumber = 7;kSparseFieldNumber1307,53684
  static const int kVarianceNormFieldNumber = 8;kVarianceNormFieldNumber1314,54004
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_1337,54792
  ::std::string* type_;type_1339,54849
  static ::std::string* _default_type_;_default_type_1340,54873
  float value_;value_1341,54913
  float min_;min_1342,54929
  float max_;max_1343,54943
  float mean_;mean_1344,54957
  float std_;std_1345,54972
  ::google::protobuf::int32 sparse_;sparse_1346,54986
  int variance_norm_;variance_norm_1347,55023
  mutable int _cached_size_;_cached_size_1349,55046
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];_has_bits_1350,55075
  static FillerParameter* default_instance_;default_instance_1357,55318
class NetParameter : public ::google::protobuf::Message {NetParameter1361,55438
  inline NetParameter& operator=(const NetParameter& from) {operator =1368,55594
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields1373,55698
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields1377,55809
  int GetCachedSize() const { return _cached_size_; }GetCachedSize1402,56731
  static const int kNameFieldNumber = 1;kNameFieldNumber1418,57175
  static const int kInputFieldNumber = 3;kInputFieldNumber1430,57641
  static const int kInputShapeFieldNumber = 8;kInputShapeFieldNumber1446,58452
  static const int kInputDimFieldNumber = 4;kInputDimFieldNumber1458,58979
  static const int kForceBackwardFieldNumber = 5;kForceBackwardFieldNumber1470,59564
  static const int kStateFieldNumber = 6;kStateFieldNumber1477,59802
  static const int kDebugInfoFieldNumber = 7;kDebugInfoFieldNumber1486,60170
  static const int kLayerFieldNumber = 100;kLayerFieldNumber1493,60404
  static const int kLayersFieldNumber = 2;kLayersFieldNumber1505,60932
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_1525,61715
  ::std::string* name_;name_1527,61772
  ::google::protobuf::RepeatedPtrField< ::std::string> input_;input_1528,61796
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobShape > input_shape_;input_shape_1529,61859
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > input_dim_;input_dim_1530,61934
  ::caffe::NetState* state_;state_1531,62011
  ::google::protobuf::RepeatedPtrField< ::caffe::LayerParameter > layer_;layer_1532,62040
  ::google::protobuf::RepeatedPtrField< ::caffe::V1LayerParameter > layers_;layers_1533,62114
  bool force_backward_;force_backward_1534,62191
  bool debug_info_;debug_info_1535,62215
  mutable int _cached_size_;_cached_size_1537,62236
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];_has_bits_1538,62265
  static NetParameter* default_instance_;default_instance_1545,62508
class SolverParameter : public ::google::protobuf::Message {SolverParameter1549,62625
  inline SolverParameter& operator=(const SolverParameter& from) {operator =1556,62796
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields1561,62906
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields1565,63017
  int GetCachedSize() const { return _cached_size_; }GetCachedSize1590,63954
  typedef SolverParameter_SnapshotFormat SnapshotFormat;SnapshotFormat1601,64235
  static const SnapshotFormat HDF5 = SolverParameter_SnapshotFormat_HDF5;HDF51602,64292
  static const SnapshotFormat BINARYPROTO = SolverParameter_SnapshotFormat_BINARYPROTO;BINARYPROTO1603,64366
  static inline bool SnapshotFormat_IsValid(int value) {SnapshotFormat_IsValid1604,64454
  static const SnapshotFormat SnapshotFormat_MIN =SnapshotFormat_MIN1607,64573
  static const SnapshotFormat SnapshotFormat_MAX =SnapshotFormat_MAX1609,64679
  static const int SnapshotFormat_ARRAYSIZE =SnapshotFormat_ARRAYSIZE1611,64785
  SnapshotFormat_descriptor() {SnapshotFormat_descriptor1614,64950
  static inline const ::std::string& SnapshotFormat_Name(SnapshotFormat value) {SnapshotFormat_Name1617,65042
  static inline bool SnapshotFormat_Parse(const ::std::string& name,SnapshotFormat_Parse1620,65182
  typedef SolverParameter_SolverMode SolverMode;SolverMode1625,65349
  static const SolverMode CPU = SolverParameter_SolverMode_CPU;CPU1626,65398
  static const SolverMode GPU = SolverParameter_SolverMode_GPU;GPU1627,65462
  static inline bool SolverMode_IsValid(int value) {SolverMode_IsValid1628,65526
  static const SolverMode SolverMode_MIN =SolverMode_MIN1631,65637
  static const SolverMode SolverMode_MAX =SolverMode_MAX1633,65727
  static const int SolverMode_ARRAYSIZE =SolverMode_ARRAYSIZE1635,65817
  SolverMode_descriptor() {SolverMode_descriptor1638,65970
  static inline const ::std::string& SolverMode_Name(SolverMode value) {SolverMode_Name1641,66054
  static inline bool SolverMode_Parse(const ::std::string& name,SolverMode_Parse1644,66182
  typedef SolverParameter_SolverType SolverType;SolverType1649,66337
  static const SolverType SGD = SolverParameter_SolverType_SGD;SGD1650,66386
  static const SolverType NESTEROV = SolverParameter_SolverType_NESTEROV;NESTEROV1651,66450
  static const SolverType ADAGRAD = SolverParameter_SolverType_ADAGRAD;ADAGRAD1652,66524
  static const SolverType RMSPROP = SolverParameter_SolverType_RMSPROP;RMSPROP1653,66596
  static const SolverType ADADELTA = SolverParameter_SolverType_ADADELTA;ADADELTA1654,66668
  static const SolverType ADAM = SolverParameter_SolverType_ADAM;ADAM1655,66742
  static inline bool SolverType_IsValid(int value) {SolverType_IsValid1656,66808
  static const SolverType SolverType_MIN =SolverType_MIN1659,66919
  static const SolverType SolverType_MAX =SolverType_MAX1661,67009
  static const int SolverType_ARRAYSIZE =SolverType_ARRAYSIZE1663,67099
  SolverType_descriptor() {SolverType_descriptor1666,67252
  static inline const ::std::string& SolverType_Name(SolverType value) {SolverType_Name1669,67336
  static inline bool SolverType_Parse(const ::std::string& name,SolverType_Parse1672,67464
  static const int kNetFieldNumber = 24;kNetFieldNumber1682,67780
  static const int kNetParamFieldNumber = 25;kNetParamFieldNumber1694,68264
  static const int kTrainNetFieldNumber = 1;kTrainNetFieldNumber1703,68653
  static const int kTestNetFieldNumber = 2;kTestNetFieldNumber1715,69172
  static const int kTrainNetParamFieldNumber = 21;kTrainNetParamFieldNumber1731,70034
  static const int kTestNetParamFieldNumber = 22;kTestNetParamFieldNumber1740,70487
  static const int kTrainStateFieldNumber = 26;kTrainStateFieldNumber1752,71064
  static const int kTestStateFieldNumber = 27;kTestStateFieldNumber1761,71462
  static const int kTestIterFieldNumber = 3;kTestIterFieldNumber1773,71979
  static const int kTestIntervalFieldNumber = 4;kTestIntervalFieldNumber1785,72558
  static const int kTestComputeLossFieldNumber = 19;kTestComputeLossFieldNumber1792,72879
  static const int kTestInitializationFieldNumber = 32;kTestInitializationFieldNumber1799,73175
  static const int kBaseLrFieldNumber = 5;kBaseLrFieldNumber1806,73425
  static const int kDisplayFieldNumber = 6;kDisplayFieldNumber1813,73640
  static const int kAverageLossFieldNumber = 33;kAverageLossFieldNumber1820,73926
  static const int kMaxIterFieldNumber = 7;kMaxIterFieldNumber1827,74200
  static const int kIterSizeFieldNumber = 36;kIterSizeFieldNumber1834,74479
  static const int kLrPolicyFieldNumber = 8;kLrPolicyFieldNumber1841,74748
  static const int kGammaFieldNumber = 9;kGammaFieldNumber1853,75257
  static const int kPowerFieldNumber = 10;kPowerFieldNumber1860,75462
  static const int kMomentumFieldNumber = 11;kMomentumFieldNumber1867,75677
  static const int kWeightDecayFieldNumber = 12;kWeightDecayFieldNumber1874,75913
  static const int kRegularizationTypeFieldNumber = 29;kRegularizationTypeFieldNumber1881,76199
  static const int kStepsizeFieldNumber = 13;kStepsizeFieldNumber1893,76809
  static const int kStepvalueFieldNumber = 34;kStepvalueFieldNumber1900,77076
  static const int kClipGradientsFieldNumber = 35;kClipGradientsFieldNumber1912,77662
  static const int kSnapshotFieldNumber = 14;kSnapshotFieldNumber1919,77917
  static const int kSnapshotPrefixFieldNumber = 15;kSnapshotPrefixFieldNumber1926,78203
  static const int kSnapshotDiffFieldNumber = 16;kSnapshotDiffFieldNumber1938,78809
  static const int kSnapshotFormatFieldNumber = 37;kSnapshotFormatFieldNumber1945,79122
  static const int kSolverModeFieldNumber = 17;kSolverModeFieldNumber1952,79487
  static const int kDeviceIdFieldNumber = 18;kDeviceIdFieldNumber1959,79796
  static const int kRandomSeedFieldNumber = 20;kRandomSeedFieldNumber1966,80086
  static const int kTypeFieldNumber = 40;kTypeFieldNumber1973,80365
  static const int kDeltaFieldNumber = 31;kDeltaFieldNumber1985,80850
  static const int kMomentum2FieldNumber = 39;kMomentum2FieldNumber1992,81086
  static const int kRmsDecayFieldNumber = 38;kRmsDecayFieldNumber1999,81333
  static const int kDebugInfoFieldNumber = 23;kDebugInfoFieldNumber2006,81582
  static const int kSnapshotAfterTrainFieldNumber = 28;kSnapshotAfterTrainFieldNumber2013,81861
  static const int kSolverTypeFieldNumber = 30;kSolverTypeFieldNumber2020,82170
  static const int kLayerWiseReduceFieldNumber = 41;kLayerWiseReduceFieldNumber2027,82505
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2106,85441
  ::std::string* net_;net_2108,85498
  ::caffe::NetParameter* net_param_;net_param_2109,85521
  ::std::string* train_net_;train_net_2110,85558
  ::google::protobuf::RepeatedPtrField< ::std::string> test_net_;test_net_2111,85587
  ::caffe::NetParameter* train_net_param_;train_net_param_2112,85653
  ::google::protobuf::RepeatedPtrField< ::caffe::NetParameter > test_net_param_;test_net_param_2113,85696
  ::caffe::NetState* train_state_;train_state_2114,85777
  ::google::protobuf::RepeatedPtrField< ::caffe::NetState > test_state_;test_state_2115,85812
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > test_iter_;test_iter_2116,85885
  ::google::protobuf::int32 test_interval_;test_interval_2117,85962
  float base_lr_;base_lr_2118,86006
  ::google::protobuf::int32 display_;display_2119,86024
  ::google::protobuf::int32 average_loss_;average_loss_2120,86062
  ::google::protobuf::int32 max_iter_;max_iter_2121,86105
  ::google::protobuf::int32 iter_size_;iter_size_2122,86144
  ::std::string* lr_policy_;lr_policy_2123,86184
  float gamma_;gamma_2124,86213
  float power_;power_2125,86229
  float momentum_;momentum_2126,86245
  float weight_decay_;weight_decay_2127,86264
  bool test_compute_loss_;test_compute_loss_2128,86287
  bool test_initialization_;test_initialization_2129,86314
  bool snapshot_diff_;snapshot_diff_2130,86343
  bool debug_info_;debug_info_2131,86366
  ::google::protobuf::int32 stepsize_;stepsize_2132,86386
  ::std::string* regularization_type_;regularization_type_2133,86425
  static ::std::string* _default_regularization_type_;_default_regularization_type_2134,86464
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stepvalue_;stepvalue_2135,86519
  float clip_gradients_;clip_gradients_2136,86596
  ::google::protobuf::int32 snapshot_;snapshot_2137,86621
  ::std::string* snapshot_prefix_;snapshot_prefix_2138,86660
  int snapshot_format_;snapshot_format_2139,86695
  int solver_mode_;solver_mode_2140,86719
  ::google::protobuf::int64 random_seed_;random_seed_2141,86739
  ::google::protobuf::int32 device_id_;device_id_2142,86781
  float delta_;delta_2143,86821
  ::std::string* type_;type_2144,86837
  static ::std::string* _default_type_;_default_type_2145,86861
  float momentum2_;momentum2_2146,86901
  float rms_decay_;rms_decay_2147,86921
  int solver_type_;solver_type_2148,86941
  bool snapshot_after_train_;snapshot_after_train_2149,86961
  bool layer_wise_reduce_;layer_wise_reduce_2150,86991
  mutable int _cached_size_;_cached_size_2152,87019
  ::google::protobuf::uint32 _has_bits_[(41 + 31) / 32];_has_bits_2153,87048
  static SolverParameter* default_instance_;default_instance_2160,87292
class SolverState : public ::google::protobuf::Message {SolverState2164,87412
  inline SolverState& operator=(const SolverState& from) {operator =2171,87563
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2176,87665
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2180,87776
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2205,88693
  static const int kIterFieldNumber = 1;kIterFieldNumber2221,89136
  static const int kLearnedNetFieldNumber = 2;kLearnedNetFieldNumber2228,89396
  static const int kHistoryFieldNumber = 3;kHistoryFieldNumber2240,89940
  static const int kCurrentStepFieldNumber = 4;kCurrentStepFieldNumber2252,90467
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2265,90926
  ::std::string* learned_net_;learned_net_2267,90983
  ::google::protobuf::int32 iter_;iter_2268,91014
  ::google::protobuf::int32 current_step_;current_step_2269,91049
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > history_;history_2270,91092
  mutable int _cached_size_;_cached_size_2272,91164
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_2273,91193
  static SolverState* default_instance_;default_instance_2280,91436
class NetState : public ::google::protobuf::Message {NetState2284,91552
  inline NetState& operator=(const NetState& from) {operator =2291,91688
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2296,91784
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2300,91895
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2325,92797
  static const int kPhaseFieldNumber = 1;kPhaseFieldNumber2341,93267
  static const int kLevelFieldNumber = 2;kLevelFieldNumber2348,93503
  static const int kStageFieldNumber = 3;kStageFieldNumber2355,93748
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2375,94634
  int phase_;phase_2377,94691
  ::google::protobuf::int32 level_;level_2378,94705
  ::google::protobuf::RepeatedPtrField< ::std::string> stage_;stage_2379,94741
  mutable int _cached_size_;_cached_size_2381,94805
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_2382,94834
  static NetState* default_instance_;default_instance_2389,95077
class NetStateRule : public ::google::protobuf::Message {NetStateRule2393,95190
  inline NetStateRule& operator=(const NetStateRule& from) {operator =2400,95346
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2405,95450
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2409,95561
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2434,96483
  static const int kPhaseFieldNumber = 1;kPhaseFieldNumber2450,96936
  static const int kMinLevelFieldNumber = 2;kMinLevelFieldNumber2457,97170
  static const int kMaxLevelFieldNumber = 3;kMaxLevelFieldNumber2464,97437
  static const int kStageFieldNumber = 4;kStageFieldNumber2471,97693
  static const int kNotStageFieldNumber = 5;kNotStageFieldNumber2487,98488
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2509,99505
  int phase_;phase_2511,99562
  ::google::protobuf::int32 min_level_;min_level_2512,99576
  ::google::protobuf::RepeatedPtrField< ::std::string> stage_;stage_2513,99616
  ::google::protobuf::RepeatedPtrField< ::std::string> not_stage_;not_stage_2514,99679
  ::google::protobuf::int32 max_level_;max_level_2515,99746
  mutable int _cached_size_;_cached_size_2517,99787
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];_has_bits_2518,99816
  static NetStateRule* default_instance_;default_instance_2525,100059
class ParamSpec : public ::google::protobuf::Message {ParamSpec2529,100176
  inline ParamSpec& operator=(const ParamSpec& from) {operator =2536,100317
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2541,100415
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2545,100526
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2570,101433
  typedef ParamSpec_DimCheckMode DimCheckMode;DimCheckMode2581,101714
  static const DimCheckMode STRICT = ParamSpec_DimCheckMode_STRICT;STRICT2582,101761
  static const DimCheckMode PERMISSIVE = ParamSpec_DimCheckMode_PERMISSIVE;PERMISSIVE2583,101829
  static inline bool DimCheckMode_IsValid(int value) {DimCheckMode_IsValid2584,101905
  static const DimCheckMode DimCheckMode_MIN =DimCheckMode_MIN2587,102014
  static const DimCheckMode DimCheckMode_MAX =DimCheckMode_MAX2589,102106
  static const int DimCheckMode_ARRAYSIZE =DimCheckMode_ARRAYSIZE2591,102198
  DimCheckMode_descriptor() {DimCheckMode_descriptor2594,102351
  static inline const ::std::string& DimCheckMode_Name(DimCheckMode value) {DimCheckMode_Name2597,102433
  static inline bool DimCheckMode_Parse(const ::std::string& name,DimCheckMode_Parse2600,102561
  static const int kNameFieldNumber = 1;kNameFieldNumber2610,102879
  static const int kShareModeFieldNumber = 2;kShareModeFieldNumber2622,103383
  static const int kLrMultFieldNumber = 3;kLrMultFieldNumber2629,103673
  static const int kDecayMultFieldNumber = 4;kDecayMultFieldNumber2636,103911
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2651,104384
  ::std::string* name_;name_2653,104441
  int share_mode_;share_mode_2654,104465
  float lr_mult_;lr_mult_2655,104484
  float decay_mult_;decay_mult_2656,104502
  mutable int _cached_size_;_cached_size_2658,104524
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_2659,104553
  static ParamSpec* default_instance_;default_instance_2666,104796
class LayerParameter : public ::google::protobuf::Message {LayerParameter2670,104910
  inline LayerParameter& operator=(const LayerParameter& from) {operator =2677,105076
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2682,105184
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2686,105295
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2711,106227
  static const int kNameFieldNumber = 1;kNameFieldNumber2727,106671
  static const int kTypeFieldNumber = 2;kTypeFieldNumber2739,107134
  static const int kBottomFieldNumber = 3;kBottomFieldNumber2751,107603
  static const int kTopFieldNumber = 4;kTopFieldNumber2767,108392
  static const int kPhaseFieldNumber = 10;kPhaseFieldNumber2783,109158
  static const int kLossWeightFieldNumber = 5;kLossWeightFieldNumber2790,109399
  static const int kParamFieldNumber = 6;kParamFieldNumber2802,109863
  static const int kBlobsFieldNumber = 7;kBlobsFieldNumber2814,110354
  static const int kPropagateDownFieldNumber = 11;kPropagateDownFieldNumber2826,110861
  static const int kIncludeFieldNumber = 8;kIncludeFieldNumber2838,111348
  static const int kExcludeFieldNumber = 9;kExcludeFieldNumber2850,111875
  static const int kTransformParamFieldNumber = 100;kTransformParamFieldNumber2862,112439
  static const int kLossParamFieldNumber = 101;kLossParamFieldNumber2871,112928
  static const int kAccuracyParamFieldNumber = 102;kAccuracyParamFieldNumber2880,113363
  static const int kArgmaxParamFieldNumber = 103;kArgmaxParamFieldNumber2889,113830
  static const int kBatchNormParamFieldNumber = 139;kBatchNormParamFieldNumber2898,114292
  static const int kBiasParamFieldNumber = 141;kBiasParamFieldNumber2907,114766
  static const int kConcatParamFieldNumber = 104;kConcatParamFieldNumber2916,115193
  static const int kContrastiveLossParamFieldNumber = 105;kContrastiveLossParamFieldNumber2925,115679
  static const int kConvolutionParamFieldNumber = 106;kConvolutionParamFieldNumber2934,116241
  static const int kCropParamFieldNumber = 144;kCropParamFieldNumber2943,116730
  static const int kDataParamFieldNumber = 107;kDataParamFieldNumber2952,117149
  static const int kDropoutParamFieldNumber = 108;kDropoutParamFieldNumber2961,117580
  static const int kDummyDataParamFieldNumber = 109;kDummyDataParamFieldNumber2970,118052
  static const int kEltwiseParamFieldNumber = 110;kEltwiseParamFieldNumber2979,118538
  static const int kEluParamFieldNumber = 140;kEluParamFieldNumber2988,118983
  static const int kEmbedParamFieldNumber = 137;kEmbedParamFieldNumber2997,119396
  static const int kExpParamFieldNumber = 111;kExpParamFieldNumber3006,119821
  static const int kFlattenParamFieldNumber = 135;kFlattenParamFieldNumber3015,120242
  static const int kHdf5DataParamFieldNumber = 112;kHdf5DataParamFieldNumber3024,120710
  static const int kHdf5OutputParamFieldNumber = 113;kHdf5OutputParamFieldNumber3033,121201
  static const int kHingeLossParamFieldNumber = 114;kHingeLossParamFieldNumber3042,121708
  static const int kImageDataParamFieldNumber = 115;kImageDataParamFieldNumber3051,122205
  static const int kInfogainLossParamFieldNumber = 116;kInfogainLossParamFieldNumber3060,122714
  static const int kInnerProductParamFieldNumber = 117;kInnerProductParamFieldNumber3069,123253
  static const int kInputParamFieldNumber = 143;kInputParamFieldNumber3078,123761
  static const int kLogParamFieldNumber = 134;kLogParamFieldNumber3087,124186
  static const int kLrnParamFieldNumber = 118;kLrnParamFieldNumber3096,124591
  static const int kMemoryDataParamFieldNumber = 119;kMemoryDataParamFieldNumber3105,125027
  static const int kMvnParamFieldNumber = 120;kMvnParamFieldNumber3114,125507
  static const int kParameterParamFieldNumber = 145;kParameterParamFieldNumber3123,125936
  static const int kPoolingParamFieldNumber = 121;kPoolingParamFieldNumber3132,126417
  static const int kPowerParamFieldNumber = 122;kPowerParamFieldNumber3141,126870
  static const int kPreluParamFieldNumber = 131;kPreluParamFieldNumber3150,127303
  static const int kPythonParamFieldNumber = 130;kPythonParamFieldNumber3159,127740
  static const int kRecurrentParamFieldNumber = 146;kRecurrentParamFieldNumber3168,128199
  static const int kReductionParamFieldNumber = 136;kReductionParamFieldNumber3177,128688
  static const int kReluParamFieldNumber = 123;kReluParamFieldNumber3186,129157
  static const int kReshapeParamFieldNumber = 133;kReshapeParamFieldNumber3195,129588
  static const int kScaleParamFieldNumber = 142;kScaleParamFieldNumber3204,130041
  static const int kSigmoidParamFieldNumber = 124;kSigmoidParamFieldNumber3213,130482
  static const int kSoftmaxParamFieldNumber = 125;kSoftmaxParamFieldNumber3222,130943
  static const int kSppParamFieldNumber = 132;kSppParamFieldNumber3231,131388
  static const int kSliceParamFieldNumber = 126;kSliceParamFieldNumber3240,131801
  static const int kTanhParamFieldNumber = 127;kTanhParamFieldNumber3249,132230
  static const int kThresholdParamFieldNumber = 128;kThresholdParamFieldNumber3258,132669
  static const int kTileParamFieldNumber = 138;kTileParamFieldNumber3267,133138
  static const int kWindowDataParamFieldNumber = 129;kWindowDataParamFieldNumber3276,133584
  static const int kQuantizationParamFieldNumber = 180;kQuantizationParamFieldNumber3285,134100
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3396,138591
  ::std::string* name_;name_3398,138648
  ::std::string* type_;type_3399,138672
  ::google::protobuf::RepeatedPtrField< ::std::string> bottom_;bottom_3400,138696
  ::google::protobuf::RepeatedPtrField< ::std::string> top_;top_3401,138760
  ::google::protobuf::RepeatedField< float > loss_weight_;loss_weight_3402,138821
  ::google::protobuf::RepeatedPtrField< ::caffe::ParamSpec > param_;param_3403,138880
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > blobs_;blobs_3404,138949
  ::google::protobuf::RepeatedField< bool > propagate_down_;propagate_down_3405,139018
  ::google::protobuf::RepeatedPtrField< ::caffe::NetStateRule > include_;include_3406,139079
  ::google::protobuf::RepeatedPtrField< ::caffe::NetStateRule > exclude_;exclude_3407,139153
  ::caffe::TransformationParameter* transform_param_;transform_param_3408,139227
  ::caffe::LossParameter* loss_param_;loss_param_3409,139281
  ::caffe::AccuracyParameter* accuracy_param_;accuracy_param_3410,139320
  ::caffe::ArgMaxParameter* argmax_param_;argmax_param_3411,139367
  ::caffe::BatchNormParameter* batch_norm_param_;batch_norm_param_3412,139410
  ::caffe::BiasParameter* bias_param_;bias_param_3413,139460
  ::caffe::ConcatParameter* concat_param_;concat_param_3414,139499
  ::caffe::ContrastiveLossParameter* contrastive_loss_param_;contrastive_loss_param_3415,139542
  ::caffe::ConvolutionParameter* convolution_param_;convolution_param_3416,139604
  ::caffe::CropParameter* crop_param_;crop_param_3417,139657
  ::caffe::DataParameter* data_param_;data_param_3418,139696
  ::caffe::DropoutParameter* dropout_param_;dropout_param_3419,139735
  ::caffe::DummyDataParameter* dummy_data_param_;dummy_data_param_3420,139780
  ::caffe::EltwiseParameter* eltwise_param_;eltwise_param_3421,139830
  ::caffe::ELUParameter* elu_param_;elu_param_3422,139875
  ::caffe::EmbedParameter* embed_param_;embed_param_3423,139912
  ::caffe::ExpParameter* exp_param_;exp_param_3424,139953
  ::caffe::FlattenParameter* flatten_param_;flatten_param_3425,139990
  ::caffe::HDF5DataParameter* hdf5_data_param_;hdf5_data_param_3426,140035
  ::caffe::HDF5OutputParameter* hdf5_output_param_;hdf5_output_param_3427,140083
  ::caffe::HingeLossParameter* hinge_loss_param_;hinge_loss_param_3428,140135
  ::caffe::ImageDataParameter* image_data_param_;image_data_param_3429,140185
  ::caffe::InfogainLossParameter* infogain_loss_param_;infogain_loss_param_3430,140235
  ::caffe::InnerProductParameter* inner_product_param_;inner_product_param_3431,140291
  ::caffe::InputParameter* input_param_;input_param_3432,140347
  ::caffe::LogParameter* log_param_;log_param_3433,140388
  ::caffe::LRNParameter* lrn_param_;lrn_param_3434,140425
  ::caffe::MemoryDataParameter* memory_data_param_;memory_data_param_3435,140462
  ::caffe::MVNParameter* mvn_param_;mvn_param_3436,140514
  ::caffe::ParameterParameter* parameter_param_;parameter_param_3437,140551
  ::caffe::PoolingParameter* pooling_param_;pooling_param_3438,140600
  ::caffe::PowerParameter* power_param_;power_param_3439,140645
  ::caffe::PReLUParameter* prelu_param_;prelu_param_3440,140686
  ::caffe::PythonParameter* python_param_;python_param_3441,140727
  ::caffe::RecurrentParameter* recurrent_param_;recurrent_param_3442,140770
  ::caffe::ReductionParameter* reduction_param_;reduction_param_3443,140819
  ::caffe::ReLUParameter* relu_param_;relu_param_3444,140868
  ::caffe::ReshapeParameter* reshape_param_;reshape_param_3445,140907
  ::caffe::ScaleParameter* scale_param_;scale_param_3446,140952
  ::caffe::SigmoidParameter* sigmoid_param_;sigmoid_param_3447,140993
  ::caffe::SoftmaxParameter* softmax_param_;softmax_param_3448,141038
  ::caffe::SPPParameter* spp_param_;spp_param_3449,141083
  ::caffe::SliceParameter* slice_param_;slice_param_3450,141120
  ::caffe::TanHParameter* tanh_param_;tanh_param_3451,141161
  ::caffe::ThresholdParameter* threshold_param_;threshold_param_3452,141200
  ::caffe::TileParameter* tile_param_;tile_param_3453,141249
  ::caffe::WindowDataParameter* window_data_param_;window_data_param_3454,141288
  ::caffe::QuantizationParameter* quantization_param_;quantization_param_3455,141340
  int phase_;phase_3456,141395
  mutable int _cached_size_;_cached_size_3458,141410
  ::google::protobuf::uint32 _has_bits_[(59 + 31) / 32];_has_bits_3459,141439
  static LayerParameter* default_instance_;default_instance_3466,141683
class TransformationParameter : public ::google::protobuf::Message {TransformationParameter3470,141802
  inline TransformationParameter& operator=(const TransformationParameter& from) {operator =3477,142013
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3482,142139
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3486,142250
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3511,143227
  static const int kScaleFieldNumber = 1;kScaleFieldNumber3527,143687
  static const int kMirrorFieldNumber = 2;kMirrorFieldNumber3534,143911
  static const int kCropSizeFieldNumber = 3;kCropSizeFieldNumber3541,144143
  static const int kMeanFileFieldNumber = 4;kMeanFileFieldNumber3548,144413
  static const int kMeanValueFieldNumber = 5;kMeanValueFieldNumber3560,144937
  static const int kForceColorFieldNumber = 6;kForceColorFieldNumber3572,145419
  static const int kForceGrayFieldNumber = 7;kForceGrayFieldNumber3579,145670
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3598,146301
  float scale_;scale_3600,146358
  ::google::protobuf::uint32 crop_size_;crop_size_3601,146374
  ::std::string* mean_file_;mean_file_3602,146415
  ::google::protobuf::RepeatedField< float > mean_value_;mean_value_3603,146444
  bool mirror_;mirror_3604,146502
  bool force_color_;force_color_3605,146518
  bool force_gray_;force_gray_3606,146539
  mutable int _cached_size_;_cached_size_3608,146560
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];_has_bits_3609,146589
  static TransformationParameter* default_instance_;default_instance_3616,146832
class LossParameter : public ::google::protobuf::Message {LossParameter3620,146960
  inline LossParameter& operator=(const LossParameter& from) {operator =3627,147121
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3632,147227
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3636,147338
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3661,148265
  typedef LossParameter_NormalizationMode NormalizationMode;NormalizationMode3672,148546
  static const NormalizationMode FULL = LossParameter_NormalizationMode_FULL;FULL3673,148607
  static const NormalizationMode VALID = LossParameter_NormalizationMode_VALID;VALID3674,148685
  static const NormalizationMode BATCH_SIZE = LossParameter_NormalizationMode_BATCH_SIZE;BATCH_SIZE3675,148765
  static const NormalizationMode NONE = LossParameter_NormalizationMode_NONE;NONE3676,148855
  static inline bool NormalizationMode_IsValid(int value) {NormalizationMode_IsValid3677,148933
  static const NormalizationMode NormalizationMode_MIN =NormalizationMode_MIN3680,149056
  static const NormalizationMode NormalizationMode_MAX =NormalizationMode_MAX3682,149172
  static const int NormalizationMode_ARRAYSIZE =NormalizationMode_ARRAYSIZE3684,149288
  NormalizationMode_descriptor() {NormalizationMode_descriptor3687,149460
  static inline const ::std::string& NormalizationMode_Name(NormalizationMode value) {NormalizationMode_Name3690,149556
  static inline bool NormalizationMode_Parse(const ::std::string& name,NormalizationMode_Parse3693,149703
  static const int kIgnoreLabelFieldNumber = 1;kIgnoreLabelFieldNumber3703,150063
  static const int kNormalizationFieldNumber = 3;kNormalizationFieldNumber3710,150402
  static const int kNormalizeFieldNumber = 2;kNormalizeFieldNumber3717,150711
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3730,151136
  ::google::protobuf::int32 ignore_label_;ignore_label_3732,151193
  int normalization_;normalization_3733,151236
  bool normalize_;normalize_3734,151258
  mutable int _cached_size_;_cached_size_3736,151278
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_3737,151307
  static LossParameter* default_instance_;default_instance_3744,151550
class AccuracyParameter : public ::google::protobuf::Message {AccuracyParameter3748,151668
  inline AccuracyParameter& operator=(const AccuracyParameter& from) {operator =3755,151849
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3760,151963
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3764,152074
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3789,153021
  static const int kTopKFieldNumber = 1;kTopKFieldNumber3805,153482
  static const int kAxisFieldNumber = 2;kAxisFieldNumber3812,153738
  static const int kIgnoreLabelFieldNumber = 3;kIgnoreLabelFieldNumber3819,154000
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3832,154453
  ::google::protobuf::uint32 top_k_;top_k_3834,154510
  ::google::protobuf::int32 axis_;axis_3835,154547
  ::google::protobuf::int32 ignore_label_;ignore_label_3836,154582
  mutable int _cached_size_;_cached_size_3838,154626
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_3839,154655
  static AccuracyParameter* default_instance_;default_instance_3846,154898
class ArgMaxParameter : public ::google::protobuf::Message {ArgMaxParameter3850,155020
  inline ArgMaxParameter& operator=(const ArgMaxParameter& from) {operator =3857,155191
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3862,155301
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3866,155412
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3891,156349
  static const int kOutMaxValFieldNumber = 1;kOutMaxValFieldNumber3907,156830
  static const int kTopKFieldNumber = 2;kTopKFieldNumber3914,157063
  static const int kAxisFieldNumber = 3;kAxisFieldNumber3921,157305
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3934,157731
  bool out_max_val_;out_max_val_3936,157788
  ::google::protobuf::uint32 top_k_;top_k_3937,157809
  ::google::protobuf::int32 axis_;axis_3938,157846
  mutable int _cached_size_;_cached_size_3940,157882
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_3941,157911
  static ArgMaxParameter* default_instance_;default_instance_3948,158154
class ConcatParameter : public ::google::protobuf::Message {ConcatParameter3952,158274
  inline ConcatParameter& operator=(const ConcatParameter& from) {operator =3959,158445
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3964,158555
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3968,158666
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3993,159603
  static const int kAxisFieldNumber = 2;kAxisFieldNumber4009,160060
  static const int kConcatDimFieldNumber = 1;kConcatDimFieldNumber4016,160331
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4027,160710
  ::google::protobuf::int32 axis_;axis_4029,160767
  ::google::protobuf::uint32 concat_dim_;concat_dim_4030,160802
  mutable int _cached_size_;_cached_size_4032,160845
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_4033,160874
  static ConcatParameter* default_instance_;default_instance_4040,161117
class BatchNormParameter : public ::google::protobuf::Message {BatchNormParameter4044,161237
  inline BatchNormParameter& operator=(const BatchNormParameter& from) {operator =4051,161423
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4056,161539
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4060,161650
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4085,162602
  static const int kUseGlobalStatsFieldNumber = 1;kUseGlobalStatsFieldNumber4101,163080
  static const int kMovingAverageFractionFieldNumber = 2;kMovingAverageFractionFieldNumber4108,163385
  static const int kEpsFieldNumber = 3;kEpsFieldNumber4115,163653
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4128,164083
  bool use_global_stats_;use_global_stats_4130,164140
  float moving_average_fraction_;moving_average_fraction_4131,164166
  float eps_;eps_4132,164200
  mutable int _cached_size_;_cached_size_4134,164215
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_4135,164244
  static BatchNormParameter* default_instance_;default_instance_4142,164487
class BiasParameter : public ::google::protobuf::Message {BiasParameter4146,164610
  inline BiasParameter& operator=(const BiasParameter& from) {operator =4153,164771
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4158,164877
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4162,164988
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4187,165915
  static const int kAxisFieldNumber = 1;kAxisFieldNumber4203,166372
  static const int kNumAxesFieldNumber = 2;kNumAxesFieldNumber4210,166636
  static const int kFillerFieldNumber = 3;kFillerFieldNumber4217,166908
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4232,167457
  ::google::protobuf::int32 axis_;axis_4234,167514
  ::google::protobuf::int32 num_axes_;num_axes_4235,167549
  ::caffe::FillerParameter* filler_;filler_4236,167588
  mutable int _cached_size_;_cached_size_4238,167626
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_4239,167655
  static BiasParameter* default_instance_;default_instance_4246,167898
class ContrastiveLossParameter : public ::google::protobuf::Message {ContrastiveLossParameter4250,168016
  inline ContrastiveLossParameter& operator=(const ContrastiveLossParameter& from) {operator =4257,168232
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4262,168360
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4266,168471
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4291,169453
  static const int kMarginFieldNumber = 1;kMarginFieldNumber4307,169916
  static const int kLegacyVersionFieldNumber = 2;kLegacyVersionFieldNumber4314,170167
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4325,170535
  float margin_;margin_4327,170592
  bool legacy_version_;legacy_version_4328,170609
  mutable int _cached_size_;_cached_size_4330,170634
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_4331,170663
  static ContrastiveLossParameter* default_instance_;default_instance_4338,170906
class ConvolutionParameter : public ::google::protobuf::Message {ConvolutionParameter4342,171035
  inline ConvolutionParameter& operator=(const ConvolutionParameter& from) {operator =4349,171231
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4354,171351
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4358,171462
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4383,172424
  typedef ConvolutionParameter_Engine Engine;Engine4394,172705
  static const Engine DEFAULT = ConvolutionParameter_Engine_DEFAULT;DEFAULT4395,172751
  static const Engine CAFFE = ConvolutionParameter_Engine_CAFFE;CAFFE4396,172820
  static const Engine CUDNN = ConvolutionParameter_Engine_CUDNN;CUDNN4397,172885
  static inline bool Engine_IsValid(int value) {Engine_IsValid4398,172950
  static const Engine Engine_MIN =Engine_MIN4401,173058
  static const Engine Engine_MAX =Engine_MAX4403,173137
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE4405,173216
  Engine_descriptor() {Engine_descriptor4408,173362
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name4411,173443
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse4414,173564
  static const int kNumOutputFieldNumber = 1;kNumOutputFieldNumber4424,173893
  static const int kBiasTermFieldNumber = 2;kBiasTermFieldNumber4431,174181
  static const int kPadFieldNumber = 3;kPadFieldNumber4438,174389
  static const int kKernelSizeFieldNumber = 4;kKernelSizeFieldNumber4450,174919
  static const int kStrideFieldNumber = 6;kStrideFieldNumber4462,175481
  static const int kDilationFieldNumber = 18;kDilationFieldNumber4474,176021
  static const int kPadHFieldNumber = 9;kPadHFieldNumber4486,176578
  static const int kPadWFieldNumber = 10;kPadWFieldNumber4493,176839
  static const int kKernelHFieldNumber = 11;kKernelHFieldNumber4500,177096
  static const int kKernelWFieldNumber = 12;kKernelWFieldNumber4507,177362
  static const int kStrideHFieldNumber = 13;kStrideHFieldNumber4514,177628
  static const int kStrideWFieldNumber = 14;kStrideWFieldNumber4521,177894
  static const int kGroupFieldNumber = 5;kGroupFieldNumber4528,178164
  static const int kWeightFillerFieldNumber = 7;kWeightFillerFieldNumber4535,178451
  static const int kBiasFillerFieldNumber = 8;kBiasFillerFieldNumber4544,178897
  static const int kEngineFieldNumber = 15;kEngineFieldNumber4553,179349
  static const int kAxisFieldNumber = 16;kAxisFieldNumber4560,179631
  static const int kForceNdIm2ColFieldNumber = 17;kForceNdIm2ColFieldNumber4567,179921
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4602,181126
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pad_;pad_4604,181183
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > kernel_size_;kernel_size_4605,181255
  ::google::protobuf::uint32 num_output_;num_output_4606,181335
  ::google::protobuf::uint32 pad_h_;pad_h_4607,181377
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stride_;stride_4608,181414
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dilation_;dilation_4609,181489
  ::google::protobuf::uint32 pad_w_;pad_w_4610,181566
  ::google::protobuf::uint32 kernel_h_;kernel_h_4611,181603
  ::google::protobuf::uint32 kernel_w_;kernel_w_4612,181643
  bool bias_term_;bias_term_4613,181683
  bool force_nd_im2col_;force_nd_im2col_4614,181702
  ::google::protobuf::uint32 stride_h_;stride_h_4615,181727
  ::google::protobuf::uint32 stride_w_;stride_w_4616,181767
  ::caffe::FillerParameter* weight_filler_;weight_filler_4617,181807
  ::google::protobuf::uint32 group_;group_4618,181851
  int engine_;engine_4619,181888
  ::caffe::FillerParameter* bias_filler_;bias_filler_4620,181903
  ::google::protobuf::int32 axis_;axis_4621,181945
  mutable int _cached_size_;_cached_size_4623,181981
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];_has_bits_4624,182010
  static ConvolutionParameter* default_instance_;default_instance_4631,182254
class CropParameter : public ::google::protobuf::Message {CropParameter4635,182379
  inline CropParameter& operator=(const CropParameter& from) {operator =4642,182540
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4647,182646
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4651,182757
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4676,183684
  static const int kAxisFieldNumber = 1;kAxisFieldNumber4692,184141
  static const int kOffsetFieldNumber = 2;kOffsetFieldNumber4699,184386
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4713,184958
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > offset_;offset_4715,185015
  ::google::protobuf::int32 axis_;axis_4716,185090
  mutable int _cached_size_;_cached_size_4718,185126
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_4719,185155
  static CropParameter* default_instance_;default_instance_4726,185398
class DataParameter : public ::google::protobuf::Message {DataParameter4730,185516
  inline DataParameter& operator=(const DataParameter& from) {operator =4737,185677
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4742,185783
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4746,185894
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4771,186821
  typedef DataParameter_DB DB;DB4782,187102
  static const DB LEVELDB = DataParameter_DB_LEVELDB;LEVELDB4783,187133
  static const DB LMDB = DataParameter_DB_LMDB;LMDB4784,187187
  static inline bool DB_IsValid(int value) {DB_IsValid4785,187235
  static const DB DB_MIN =DB_MIN4788,187328
  static const DB DB_MAX =DB_MAX4790,187384
  static const int DB_ARRAYSIZE =DB_ARRAYSIZE4792,187440
  DB_descriptor() {DB_descriptor4795,187567
  static inline const ::std::string& DB_Name(DB value) {DB_Name4798,187633
  static inline bool DB_Parse(const ::std::string& name,DB_Parse4801,187735
  static const int kSourceFieldNumber = 1;kSourceFieldNumber4811,188033
  static const int kBatchSizeFieldNumber = 4;kBatchSizeFieldNumber4823,188532
  static const int kRandSkipFieldNumber = 7;kRandSkipFieldNumber4830,188819
  static const int kBackendFieldNumber = 8;kBackendFieldNumber4837,189120
  static const int kScaleFieldNumber = 2;kScaleFieldNumber4844,189384
  static const int kMeanFileFieldNumber = 3;kMeanFileFieldNumber4851,189601
  static const int kCropSizeFieldNumber = 5;kCropSizeFieldNumber4863,190137
  static const int kMirrorFieldNumber = 6;kMirrorFieldNumber4870,190414
  static const int kForceEncodedColorFieldNumber = 9;kForceEncodedColorFieldNumber4877,190678
  static const int kPrefetchFieldNumber = 10;kPrefetchFieldNumber4884,190945
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4911,191898
  ::std::string* source_;source_4913,191955
  ::google::protobuf::uint32 batch_size_;batch_size_4914,191981
  ::google::protobuf::uint32 rand_skip_;rand_skip_4915,192023
  int backend_;backend_4916,192064
  float scale_;scale_4917,192080
  ::std::string* mean_file_;mean_file_4918,192096
  ::google::protobuf::uint32 crop_size_;crop_size_4919,192125
  bool mirror_;mirror_4920,192166
  bool force_encoded_color_;force_encoded_color_4921,192182
  ::google::protobuf::uint32 prefetch_;prefetch_4922,192211
  mutable int _cached_size_;_cached_size_4924,192252
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];_has_bits_4925,192281
  static DataParameter* default_instance_;default_instance_4932,192525
class DropoutParameter : public ::google::protobuf::Message {DropoutParameter4936,192643
  inline DropoutParameter& operator=(const DropoutParameter& from) {operator =4943,192819
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4948,192931
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4952,193042
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4977,193984
  static const int kDropoutRatioFieldNumber = 1;kDropoutRatioFieldNumber4993,194470
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5002,194761
  float dropout_ratio_;dropout_ratio_5004,194818
  mutable int _cached_size_;_cached_size_5006,194843
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_5007,194872
  static DropoutParameter* default_instance_;default_instance_5014,195115
class DummyDataParameter : public ::google::protobuf::Message {DummyDataParameter5018,195236
  inline DummyDataParameter& operator=(const DummyDataParameter& from) {operator =5025,195422
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5030,195538
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5034,195649
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5059,196601
  static const int kDataFillerFieldNumber = 1;kDataFillerFieldNumber5075,197082
  static const int kShapeFieldNumber = 6;kShapeFieldNumber5087,197638
  static const int kNumFieldNumber = 2;kNumFieldNumber5099,198113
  static const int kChannelsFieldNumber = 3;kChannelsFieldNumber5111,198634
  static const int kHeightFieldNumber = 4;kHeightFieldNumber5123,199179
  static const int kWidthFieldNumber = 5;kWidthFieldNumber5135,199709
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5147,200218
  ::google::protobuf::RepeatedPtrField< ::caffe::FillerParameter > data_filler_;data_filler_5149,200275
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobShape > shape_;shape_5150,200356
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > num_;num_5151,200425
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > channels_;channels_5152,200497
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > height_;height_5153,200574
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > width_;width_5154,200649
  mutable int _cached_size_;_cached_size_5156,200724
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];_has_bits_5157,200753
  static DummyDataParameter* default_instance_;default_instance_5164,200996
class EltwiseParameter : public ::google::protobuf::Message {EltwiseParameter5168,201119
  inline EltwiseParameter& operator=(const EltwiseParameter& from) {operator =5175,201295
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5180,201407
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5184,201518
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5209,202460
  typedef EltwiseParameter_EltwiseOp EltwiseOp;EltwiseOp5220,202741
  static const EltwiseOp PROD = EltwiseParameter_EltwiseOp_PROD;PROD5221,202789
  static const EltwiseOp SUM = EltwiseParameter_EltwiseOp_SUM;SUM5222,202854
  static const EltwiseOp MAX = EltwiseParameter_EltwiseOp_MAX;MAX5223,202917
  static inline bool EltwiseOp_IsValid(int value) {EltwiseOp_IsValid5224,202980
  static const EltwiseOp EltwiseOp_MIN =EltwiseOp_MIN5227,203090
  static const EltwiseOp EltwiseOp_MAX =EltwiseOp_MAX5229,203177
  static const int EltwiseOp_ARRAYSIZE =EltwiseOp_ARRAYSIZE5231,203264
  EltwiseOp_descriptor() {EltwiseOp_descriptor5234,203415
  static inline const ::std::string& EltwiseOp_Name(EltwiseOp value) {EltwiseOp_Name5237,203498
  static inline bool EltwiseOp_Parse(const ::std::string& name,EltwiseOp_Parse5240,203624
  static const int kOperationFieldNumber = 1;kOperationFieldNumber5250,203998
  static const int kCoeffFieldNumber = 2;kCoeffFieldNumber5257,204274
  static const int kStableProdGradFieldNumber = 3;kStableProdGradFieldNumber5269,204741
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5280,205116
  ::google::protobuf::RepeatedField< float > coeff_;coeff_5282,205173
  int operation_;operation_5283,205226
  bool stable_prod_grad_;stable_prod_grad_5284,205244
  mutable int _cached_size_;_cached_size_5286,205271
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_5287,205300
  static EltwiseParameter* default_instance_;default_instance_5294,205543
class ELUParameter : public ::google::protobuf::Message {ELUParameter5298,205664
  inline ELUParameter& operator=(const ELUParameter& from) {operator =5305,205820
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5310,205924
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5314,206035
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5339,206957
  static const int kAlphaFieldNumber = 1;kAlphaFieldNumber5355,207417
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5364,207665
  float alpha_;alpha_5366,207722
  mutable int _cached_size_;_cached_size_5368,207739
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_5369,207768
  static ELUParameter* default_instance_;default_instance_5376,208011
class EmbedParameter : public ::google::protobuf::Message {EmbedParameter5380,208128
  inline EmbedParameter& operator=(const EmbedParameter& from) {operator =5387,208294
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5392,208402
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5396,208513
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5421,209445
  static const int kNumOutputFieldNumber = 1;kNumOutputFieldNumber5437,209907
  static const int kInputDimFieldNumber = 2;kInputDimFieldNumber5444,210180
  static const int kBiasTermFieldNumber = 3;kBiasTermFieldNumber5451,210465
  static const int kWeightFillerFieldNumber = 4;kWeightFillerFieldNumber5458,210719
  static const int kBiasFillerFieldNumber = 5;kBiasFillerFieldNumber5467,211165
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5486,211920
  ::google::protobuf::uint32 num_output_;num_output_5488,211977
  ::google::protobuf::uint32 input_dim_;input_dim_5489,212019
  ::caffe::FillerParameter* weight_filler_;weight_filler_5490,212060
  ::caffe::FillerParameter* bias_filler_;bias_filler_5491,212104
  bool bias_term_;bias_term_5492,212146
  mutable int _cached_size_;_cached_size_5494,212166
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];_has_bits_5495,212195
  static EmbedParameter* default_instance_;default_instance_5502,212438
class ExpParameter : public ::google::protobuf::Message {ExpParameter5506,212557
  inline ExpParameter& operator=(const ExpParameter& from) {operator =5513,212713
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5518,212817
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5522,212928
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5547,213850
  static const int kBaseFieldNumber = 1;kBaseFieldNumber5563,214308
  static const int kScaleFieldNumber = 2;kScaleFieldNumber5570,214523
  static const int kShiftFieldNumber = 3;kShiftFieldNumber5577,214741
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5590,215115
  float base_;base_5592,215172
  float scale_;scale_5593,215187
  float shift_;shift_5594,215203
  mutable int _cached_size_;_cached_size_5596,215220
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_5597,215249
  static ExpParameter* default_instance_;default_instance_5604,215492
class FlattenParameter : public ::google::protobuf::Message {FlattenParameter5608,215609
  inline FlattenParameter& operator=(const FlattenParameter& from) {operator =5615,215785
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5620,215897
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5624,216008
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5649,216950
  static const int kAxisFieldNumber = 1;kAxisFieldNumber5665,217407
  static const int kEndAxisFieldNumber = 2;kEndAxisFieldNumber5672,217672
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5683,218040
  ::google::protobuf::int32 axis_;axis_5685,218097
  ::google::protobuf::int32 end_axis_;end_axis_5686,218132
  mutable int _cached_size_;_cached_size_5688,218172
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_5689,218201
  static FlattenParameter* default_instance_;default_instance_5696,218444
class HDF5DataParameter : public ::google::protobuf::Message {HDF5DataParameter5700,218565
  inline HDF5DataParameter& operator=(const HDF5DataParameter& from) {operator =5707,218746
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5712,218860
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5716,218971
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5741,219918
  static const int kSourceFieldNumber = 1;kSourceFieldNumber5757,220368
  static const int kBatchSizeFieldNumber = 2;kBatchSizeFieldNumber5769,220867
  static const int kShuffleFieldNumber = 3;kShuffleFieldNumber5776,221150
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5789,221551
  ::std::string* source_;source_5791,221608
  ::google::protobuf::uint32 batch_size_;batch_size_5792,221634
  bool shuffle_;shuffle_5793,221676
  mutable int _cached_size_;_cached_size_5795,221694
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_5796,221723
  static HDF5DataParameter* default_instance_;default_instance_5803,221966
class HDF5OutputParameter : public ::google::protobuf::Message {HDF5OutputParameter5807,222088
  inline HDF5OutputParameter& operator=(const HDF5OutputParameter& from) {operator =5814,222279
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5819,222397
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5823,222508
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5848,223465
  static const int kFileNameFieldNumber = 1;kFileNameFieldNumber5864,223924
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5878,224492
  ::std::string* file_name_;file_name_5880,224549
  mutable int _cached_size_;_cached_size_5882,224579
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_5883,224608
  static HDF5OutputParameter* default_instance_;default_instance_5890,224851
class HingeLossParameter : public ::google::protobuf::Message {HingeLossParameter5894,224975
  inline HingeLossParameter& operator=(const HingeLossParameter& from) {operator =5901,225161
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5906,225277
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5910,225388
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5935,226340
  typedef HingeLossParameter_Norm Norm;Norm5946,226621
  static const Norm L1 = HingeLossParameter_Norm_L1;L15947,226661
  static const Norm L2 = HingeLossParameter_Norm_L2;L25948,226714
  static inline bool Norm_IsValid(int value) {Norm_IsValid5949,226767
  static const Norm Norm_MIN =Norm_MIN5952,226869
  static const Norm Norm_MAX =Norm_MAX5954,226938
  static const int Norm_ARRAYSIZE =Norm_ARRAYSIZE5956,227007
  Norm_descriptor() {Norm_descriptor5959,227145
  static inline const ::std::string& Norm_Name(Norm value) {Norm_Name5962,227220
  static inline bool Norm_Parse(const ::std::string& name,Norm_Parse5965,227333
  static const int kNormFieldNumber = 1;kNormFieldNumber5975,227675
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5984,227978
  int norm_;norm_5986,228035
  mutable int _cached_size_;_cached_size_5988,228049
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_5989,228078
  static HingeLossParameter* default_instance_;default_instance_5996,228321
class ImageDataParameter : public ::google::protobuf::Message {ImageDataParameter6000,228444
  inline ImageDataParameter& operator=(const ImageDataParameter& from) {operator =6007,228630
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6012,228746
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6016,228857
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6041,229809
  static const int kSourceFieldNumber = 1;kSourceFieldNumber6057,230259
  static const int kBatchSizeFieldNumber = 4;kBatchSizeFieldNumber6069,230772
  static const int kRandSkipFieldNumber = 7;kRandSkipFieldNumber6076,231059
  static const int kShuffleFieldNumber = 8;kShuffleFieldNumber6083,231339
  static const int kNewHeightFieldNumber = 9;kNewHeightFieldNumber6090,231577
  static const int kNewWidthFieldNumber = 10;kNewWidthFieldNumber6097,231865
  static const int kIsColorFieldNumber = 11;kIsColorFieldNumber6104,232149
  static const int kScaleFieldNumber = 2;kScaleFieldNumber6111,232374
  static const int kMeanFileFieldNumber = 3;kMeanFileFieldNumber6118,232591
  static const int kCropSizeFieldNumber = 5;kCropSizeFieldNumber6130,233127
  static const int kMirrorFieldNumber = 6;kMirrorFieldNumber6137,233404
  static const int kRootFolderFieldNumber = 12;kRootFolderFieldNumber6144,233644
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6180,235004
  ::std::string* source_;source_6182,235061
  ::google::protobuf::uint32 batch_size_;batch_size_6183,235087
  ::google::protobuf::uint32 rand_skip_;rand_skip_6184,235129
  ::google::protobuf::uint32 new_height_;new_height_6185,235170
  ::google::protobuf::uint32 new_width_;new_width_6186,235212
  bool shuffle_;shuffle_6187,235253
  bool is_color_;is_color_6188,235270
  bool mirror_;mirror_6189,235288
  float scale_;scale_6190,235304
  ::std::string* mean_file_;mean_file_6191,235320
  ::std::string* root_folder_;root_folder_6192,235349
  ::google::protobuf::uint32 crop_size_;crop_size_6193,235380
  mutable int _cached_size_;_cached_size_6195,235422
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];_has_bits_6196,235451
  static ImageDataParameter* default_instance_;default_instance_6203,235695
class InfogainLossParameter : public ::google::protobuf::Message {InfogainLossParameter6207,235818
  inline InfogainLossParameter& operator=(const InfogainLossParameter& from) {operator =6214,236019
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6219,236141
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6223,236252
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6248,237219
  static const int kSourceFieldNumber = 1;kSourceFieldNumber6264,237669
  static const int kAxisFieldNumber = 2;kAxisFieldNumber6276,238163
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6287,238521
  ::std::string* source_;source_6289,238578
  ::google::protobuf::int32 axis_;axis_6290,238604
  mutable int _cached_size_;_cached_size_6292,238640
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_6293,238669
  static InfogainLossParameter* default_instance_;default_instance_6300,238912
class InnerProductParameter : public ::google::protobuf::Message {InnerProductParameter6304,239038
  inline InnerProductParameter& operator=(const InnerProductParameter& from) {operator =6311,239239
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6316,239361
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6320,239472
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6345,240439
  static const int kNumOutputFieldNumber = 1;kNumOutputFieldNumber6361,240901
  static const int kBiasTermFieldNumber = 2;kBiasTermFieldNumber6368,241189
  static const int kWeightFillerFieldNumber = 3;kWeightFillerFieldNumber6375,241443
  static const int kBiasFillerFieldNumber = 4;kBiasFillerFieldNumber6384,241889
  static const int kAxisFieldNumber = 5;kAxisFieldNumber6393,242299
  static const int kTransposeFieldNumber = 6;kTransposeFieldNumber6400,242569
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6419,243208
  ::caffe::FillerParameter* weight_filler_;weight_filler_6421,243265
  ::google::protobuf::uint32 num_output_;num_output_6422,243309
  bool bias_term_;bias_term_6423,243351
  bool transpose_;transpose_6424,243370
  ::caffe::FillerParameter* bias_filler_;bias_filler_6425,243389
  ::google::protobuf::int32 axis_;axis_6426,243431
  mutable int _cached_size_;_cached_size_6428,243467
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];_has_bits_6429,243496
  static InnerProductParameter* default_instance_;default_instance_6436,243739
class InputParameter : public ::google::protobuf::Message {InputParameter6440,243865
  inline InputParameter& operator=(const InputParameter& from) {operator =6447,244031
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6452,244139
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6456,244250
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6481,245182
  static const int kShapeFieldNumber = 1;kShapeFieldNumber6497,245639
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6509,246101
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobShape > shape_;shape_6511,246158
  mutable int _cached_size_;_cached_size_6513,246228
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_6514,246257
  static InputParameter* default_instance_;default_instance_6521,246500
class LogParameter : public ::google::protobuf::Message {LogParameter6525,246619
  inline LogParameter& operator=(const LogParameter& from) {operator =6532,246775
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6537,246879
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6541,246990
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6566,247912
  static const int kBaseFieldNumber = 1;kBaseFieldNumber6582,248370
  static const int kScaleFieldNumber = 2;kScaleFieldNumber6589,248585
  static const int kShiftFieldNumber = 3;kShiftFieldNumber6596,248803
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6609,249177
  float base_;base_6611,249234
  float scale_;scale_6612,249249
  float shift_;shift_6613,249265
  mutable int _cached_size_;_cached_size_6615,249282
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_6616,249311
  static LogParameter* default_instance_;default_instance_6623,249554
class LRNParameter : public ::google::protobuf::Message {LRNParameter6627,249671
  inline LRNParameter& operator=(const LRNParameter& from) {operator =6634,249827
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6639,249931
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6643,250042
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6668,250964
  typedef LRNParameter_NormRegion NormRegion;NormRegion6679,251245
  static const NormRegion ACROSS_CHANNELS = LRNParameter_NormRegion_ACROSS_CHANNELS;ACROSS_CHANNELS6680,251291
  static const NormRegion WITHIN_CHANNEL = LRNParameter_NormRegion_WITHIN_CHANNEL;WITHIN_CHANNEL6681,251376
  static inline bool NormRegion_IsValid(int value) {NormRegion_IsValid6682,251459
  static const NormRegion NormRegion_MIN =NormRegion_MIN6685,251567
  static const NormRegion NormRegion_MAX =NormRegion_MAX6687,251654
  static const int NormRegion_ARRAYSIZE =NormRegion_ARRAYSIZE6689,251741
  NormRegion_descriptor() {NormRegion_descriptor6692,251891
  static inline const ::std::string& NormRegion_Name(NormRegion value) {NormRegion_Name6695,251972
  static inline bool NormRegion_Parse(const ::std::string& name,NormRegion_Parse6698,252097
  typedef LRNParameter_Engine Engine;Engine6703,252249
  static const Engine DEFAULT = LRNParameter_Engine_DEFAULT;DEFAULT6704,252287
  static const Engine CAFFE = LRNParameter_Engine_CAFFE;CAFFE6705,252348
  static const Engine CUDNN = LRNParameter_Engine_CUDNN;CUDNN6706,252405
  static inline bool Engine_IsValid(int value) {Engine_IsValid6707,252462
  static const Engine Engine_MIN =Engine_MIN6710,252562
  static const Engine Engine_MAX =Engine_MAX6712,252633
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE6714,252704
  Engine_descriptor() {Engine_descriptor6717,252842
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name6720,252915
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse6723,253028
  static const int kLocalSizeFieldNumber = 1;kLocalSizeFieldNumber6733,253363
  static const int kAlphaFieldNumber = 2;kAlphaFieldNumber6740,253637
  static const int kBetaFieldNumber = 3;kBetaFieldNumber6747,253855
  static const int kNormRegionFieldNumber = 4;kNormRegionFieldNumber6754,254127
  static const int kKFieldNumber = 5;kKFieldNumber6761,254404
  static const int kEngineFieldNumber = 6;kEngineFieldNumber6768,254640
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6787,255271
  ::google::protobuf::uint32 local_size_;local_size_6789,255328
  float alpha_;alpha_6790,255370
  float beta_;beta_6791,255386
  int norm_region_;norm_region_6792,255401
  float k_;k_6793,255421
  int engine_;engine_6794,255433
  mutable int _cached_size_;_cached_size_6796,255449
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];_has_bits_6797,255478
  static LRNParameter* default_instance_;default_instance_6804,255721
class MemoryDataParameter : public ::google::protobuf::Message {MemoryDataParameter6808,255838
  inline MemoryDataParameter& operator=(const MemoryDataParameter& from) {operator =6815,256029
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6820,256147
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6824,256258
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6849,257215
  static const int kBatchSizeFieldNumber = 1;kBatchSizeFieldNumber6865,257677
  static const int kChannelsFieldNumber = 2;kChannelsFieldNumber6872,257947
  static const int kHeightFieldNumber = 3;kHeightFieldNumber6879,258206
  static const int kWidthFieldNumber = 4;kWidthFieldNumber6886,258456
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6901,258963
  ::google::protobuf::uint32 batch_size_;batch_size_6903,259020
  ::google::protobuf::uint32 channels_;channels_6904,259062
  ::google::protobuf::uint32 height_;height_6905,259102
  ::google::protobuf::uint32 width_;width_6906,259140
  mutable int _cached_size_;_cached_size_6908,259178
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_6909,259207
  static MemoryDataParameter* default_instance_;default_instance_6916,259450
class MVNParameter : public ::google::protobuf::Message {MVNParameter6920,259574
  inline MVNParameter& operator=(const MVNParameter& from) {operator =6927,259730
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6932,259834
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6936,259945
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6961,260867
  static const int kNormalizeVarianceFieldNumber = 1;kNormalizeVarianceFieldNumber6977,261368
  static const int kAcrossChannelsFieldNumber = 2;kAcrossChannelsFieldNumber6984,261655
  static const int kEpsFieldNumber = 3;kEpsFieldNumber6991,261898
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7004,262310
  bool normalize_variance_;normalize_variance_7006,262367
  bool across_channels_;across_channels_7007,262395
  float eps_;eps_7008,262420
  mutable int _cached_size_;_cached_size_7010,262435
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_7011,262464
  static MVNParameter* default_instance_;default_instance_7018,262707
class ParameterParameter : public ::google::protobuf::Message {ParameterParameter7022,262824
  inline ParameterParameter& operator=(const ParameterParameter& from) {operator =7029,263010
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7034,263126
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7038,263237
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7063,264189
  static const int kShapeFieldNumber = 1;kShapeFieldNumber7079,264646
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7090,265036
  ::caffe::BlobShape* shape_;shape_7092,265093
  mutable int _cached_size_;_cached_size_7094,265124
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_7095,265153
  static ParameterParameter* default_instance_;default_instance_7102,265396
class PoolingParameter : public ::google::protobuf::Message {PoolingParameter7106,265519
  inline PoolingParameter& operator=(const PoolingParameter& from) {operator =7113,265695
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7118,265807
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7122,265918
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7147,266860
  typedef PoolingParameter_PoolMethod PoolMethod;PoolMethod7158,267141
  static const PoolMethod MAX = PoolingParameter_PoolMethod_MAX;MAX7159,267191
  static const PoolMethod AVE = PoolingParameter_PoolMethod_AVE;AVE7160,267256
  static const PoolMethod STOCHASTIC = PoolingParameter_PoolMethod_STOCHASTIC;STOCHASTIC7161,267321
  static inline bool PoolMethod_IsValid(int value) {PoolMethod_IsValid7162,267400
  static const PoolMethod PoolMethod_MIN =PoolMethod_MIN7165,267512
  static const PoolMethod PoolMethod_MAX =PoolMethod_MAX7167,267603
  static const int PoolMethod_ARRAYSIZE =PoolMethod_ARRAYSIZE7169,267694
  PoolMethod_descriptor() {PoolMethod_descriptor7172,267848
  static inline const ::std::string& PoolMethod_Name(PoolMethod value) {PoolMethod_Name7175,267933
  static inline bool PoolMethod_Parse(const ::std::string& name,PoolMethod_Parse7178,268062
  typedef PoolingParameter_Engine Engine;Engine7183,268218
  static const Engine DEFAULT = PoolingParameter_Engine_DEFAULT;DEFAULT7184,268260
  static const Engine CAFFE = PoolingParameter_Engine_CAFFE;CAFFE7185,268325
  static const Engine CUDNN = PoolingParameter_Engine_CUDNN;CUDNN7186,268386
  static inline bool Engine_IsValid(int value) {Engine_IsValid7187,268447
  static const Engine Engine_MIN =Engine_MIN7190,268551
  static const Engine Engine_MAX =Engine_MAX7192,268626
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE7194,268701
  Engine_descriptor() {Engine_descriptor7197,268843
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name7200,268920
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse7203,269037
  static const int kPoolFieldNumber = 1;kPoolFieldNumber7213,269388
  static const int kPadFieldNumber = 4;kPadFieldNumber7220,269660
  static const int kPadHFieldNumber = 9;kPadHFieldNumber7227,269915
  static const int kPadWFieldNumber = 10;kPadWFieldNumber7234,270176
  static const int kKernelSizeFieldNumber = 2;kKernelSizeFieldNumber7241,270441
  static const int kKernelHFieldNumber = 5;kKernelHFieldNumber7248,270714
  static const int kKernelWFieldNumber = 6;kKernelWFieldNumber7255,270978
  static const int kStrideFieldNumber = 3;kStrideFieldNumber7262,271250
  static const int kStrideHFieldNumber = 7;kStrideHFieldNumber7269,271509
  static const int kStrideWFieldNumber = 8;kStrideWFieldNumber7276,271773
  static const int kEngineFieldNumber = 11;kEngineFieldNumber7283,272076
  static const int kGlobalPoolingFieldNumber = 12;kGlobalPoolingFieldNumber7290,272383
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7321,273416
  int pool_;pool_7323,273473
  ::google::protobuf::uint32 pad_;pad_7324,273486
  ::google::protobuf::uint32 pad_h_;pad_h_7325,273521
  ::google::protobuf::uint32 pad_w_;pad_w_7326,273558
  ::google::protobuf::uint32 kernel_size_;kernel_size_7327,273595
  ::google::protobuf::uint32 kernel_h_;kernel_h_7328,273638
  ::google::protobuf::uint32 kernel_w_;kernel_w_7329,273678
  ::google::protobuf::uint32 stride_;stride_7330,273718
  ::google::protobuf::uint32 stride_h_;stride_h_7331,273756
  ::google::protobuf::uint32 stride_w_;stride_w_7332,273796
  int engine_;engine_7333,273836
  bool global_pooling_;global_pooling_7334,273851
  mutable int _cached_size_;_cached_size_7336,273876
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];_has_bits_7337,273905
  static PoolingParameter* default_instance_;default_instance_7344,274149
class PowerParameter : public ::google::protobuf::Message {PowerParameter7348,274270
  inline PowerParameter& operator=(const PowerParameter& from) {operator =7355,274436
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7360,274544
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7364,274655
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7389,275587
  static const int kPowerFieldNumber = 1;kPowerFieldNumber7405,276047
  static const int kScaleFieldNumber = 2;kScaleFieldNumber7412,276265
  static const int kShiftFieldNumber = 3;kShiftFieldNumber7419,276483
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7432,276861
  float power_;power_7434,276918
  float scale_;scale_7435,276934
  float shift_;shift_7436,276950
  mutable int _cached_size_;_cached_size_7438,276967
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_7439,276996
  static PowerParameter* default_instance_;default_instance_7446,277239
class PythonParameter : public ::google::protobuf::Message {PythonParameter7450,277358
  inline PythonParameter& operator=(const PythonParameter& from) {operator =7457,277529
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7462,277639
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7466,277750
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7491,278687
  static const int kModuleFieldNumber = 1;kModuleFieldNumber7507,279137
  static const int kLayerFieldNumber = 2;kLayerFieldNumber7519,279621
  static const int kParamStrFieldNumber = 3;kParamStrFieldNumber7531,280123
  static const int kShareInParallelFieldNumber = 4;kShareInParallelFieldNumber7543,280685
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7558,281194
  ::std::string* module_;module_7560,281251
  ::std::string* layer_;layer_7561,281277
  ::std::string* param_str_;param_str_7562,281302
  bool share_in_parallel_;share_in_parallel_7563,281331
  mutable int _cached_size_;_cached_size_7565,281359
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_7566,281388
  static PythonParameter* default_instance_;default_instance_7573,281631
class RecurrentParameter : public ::google::protobuf::Message {RecurrentParameter7577,281751
  inline RecurrentParameter& operator=(const RecurrentParameter& from) {operator =7584,281937
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7589,282053
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7593,282164
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7618,283116
  static const int kNumOutputFieldNumber = 1;kNumOutputFieldNumber7634,283592
  static const int kWeightFillerFieldNumber = 2;kWeightFillerFieldNumber7641,283893
  static const int kBiasFillerFieldNumber = 3;kBiasFillerFieldNumber7650,284339
  static const int kDebugInfoFieldNumber = 4;kDebugInfoFieldNumber7659,284770
  static const int kExposeHiddenFieldNumber = 5;kExposeHiddenFieldNumber7666,285027
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7683,285622
  ::caffe::FillerParameter* weight_filler_;weight_filler_7685,285679
  ::caffe::FillerParameter* bias_filler_;bias_filler_7686,285723
  ::google::protobuf::uint32 num_output_;num_output_7687,285765
  bool debug_info_;debug_info_7688,285807
  bool expose_hidden_;expose_hidden_7689,285827
  mutable int _cached_size_;_cached_size_7691,285851
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];_has_bits_7692,285880
  static RecurrentParameter* default_instance_;default_instance_7699,286123
class ReductionParameter : public ::google::protobuf::Message {ReductionParameter7703,286246
  inline ReductionParameter& operator=(const ReductionParameter& from) {operator =7710,286432
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7715,286548
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7719,286659
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7744,287611
  typedef ReductionParameter_ReductionOp ReductionOp;ReductionOp7755,287892
  static const ReductionOp SUM = ReductionParameter_ReductionOp_SUM;SUM7756,287946
  static const ReductionOp ASUM = ReductionParameter_ReductionOp_ASUM;ASUM7757,288015
  static const ReductionOp SUMSQ = ReductionParameter_ReductionOp_SUMSQ;SUMSQ7758,288086
  static const ReductionOp MEAN = ReductionParameter_ReductionOp_MEAN;MEAN7759,288159
  static inline bool ReductionOp_IsValid(int value) {ReductionOp_IsValid7760,288230
  static const ReductionOp ReductionOp_MIN =ReductionOp_MIN7763,288346
  static const ReductionOp ReductionOp_MAX =ReductionOp_MAX7765,288443
  static const int ReductionOp_ARRAYSIZE =ReductionOp_ARRAYSIZE7767,288540
  ReductionOp_descriptor() {ReductionOp_descriptor7770,288699
  static inline const ::std::string& ReductionOp_Name(ReductionOp value) {ReductionOp_Name7773,288788
  static inline bool ReductionOp_Parse(const ::std::string& name,ReductionOp_Parse7776,288922
  static const int kOperationFieldNumber = 1;kOperationFieldNumber7786,289308
  static const int kAxisFieldNumber = 2;kAxisFieldNumber7793,289603
  static const int kCoeffFieldNumber = 3;kCoeffFieldNumber7800,289858
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7813,290246
  int operation_;operation_7815,290303
  ::google::protobuf::int32 axis_;axis_7816,290321
  float coeff_;coeff_7817,290356
  mutable int _cached_size_;_cached_size_7819,290373
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_7820,290402
  static ReductionParameter* default_instance_;default_instance_7827,290645
class ReLUParameter : public ::google::protobuf::Message {ReLUParameter7831,290768
  inline ReLUParameter& operator=(const ReLUParameter& from) {operator =7838,290929
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7843,291035
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7847,291146
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7872,292073
  typedef ReLUParameter_Engine Engine;Engine7883,292354
  static const Engine DEFAULT = ReLUParameter_Engine_DEFAULT;DEFAULT7884,292393
  static const Engine CAFFE = ReLUParameter_Engine_CAFFE;CAFFE7885,292455
  static const Engine CUDNN = ReLUParameter_Engine_CUDNN;CUDNN7886,292513
  static inline bool Engine_IsValid(int value) {Engine_IsValid7887,292571
  static const Engine Engine_MIN =Engine_MIN7890,292672
  static const Engine Engine_MAX =Engine_MAX7892,292744
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE7894,292816
  Engine_descriptor() {Engine_descriptor7897,292955
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name7900,293029
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse7903,293143
  static const int kNegativeSlopeFieldNumber = 1;kNegativeSlopeFieldNumber7913,293490
  static const int kEngineFieldNumber = 2;kEngineFieldNumber7920,293765
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7931,294149
  float negative_slope_;negative_slope_7933,294206
  int engine_;engine_7934,294231
  mutable int _cached_size_;_cached_size_7936,294247
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_7937,294276
  static ReLUParameter* default_instance_;default_instance_7944,294519
class ReshapeParameter : public ::google::protobuf::Message {ReshapeParameter7948,294637
  inline ReshapeParameter& operator=(const ReshapeParameter& from) {operator =7955,294813
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7960,294925
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7964,295036
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7989,295978
  static const int kShapeFieldNumber = 1;kShapeFieldNumber8005,296435
  static const int kAxisFieldNumber = 2;kAxisFieldNumber8014,296786
  static const int kNumAxesFieldNumber = 3;kNumAxesFieldNumber8021,297051
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8034,297483
  ::caffe::BlobShape* shape_;shape_8036,297540
  ::google::protobuf::int32 axis_;axis_8037,297570
  ::google::protobuf::int32 num_axes_;num_axes_8038,297605
  mutable int _cached_size_;_cached_size_8040,297645
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_8041,297674
  static ReshapeParameter* default_instance_;default_instance_8048,297917
class ScaleParameter : public ::google::protobuf::Message {ScaleParameter8052,298038
  inline ScaleParameter& operator=(const ScaleParameter& from) {operator =8059,298204
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8064,298312
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8068,298423
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8093,299355
  static const int kAxisFieldNumber = 1;kAxisFieldNumber8109,299812
  static const int kNumAxesFieldNumber = 2;kNumAxesFieldNumber8116,300076
  static const int kFillerFieldNumber = 3;kFillerFieldNumber8123,300348
  static const int kBiasTermFieldNumber = 4;kBiasTermFieldNumber8132,300747
  static const int kBiasFillerFieldNumber = 5;kBiasFillerFieldNumber8139,300995
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8158,301722
  ::google::protobuf::int32 axis_;axis_8160,301779
  ::google::protobuf::int32 num_axes_;num_axes_8161,301814
  ::caffe::FillerParameter* filler_;filler_8162,301853
  ::caffe::FillerParameter* bias_filler_;bias_filler_8163,301890
  bool bias_term_;bias_term_8164,301932
  mutable int _cached_size_;_cached_size_8166,301952
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];_has_bits_8167,301981
  static ScaleParameter* default_instance_;default_instance_8174,302224
class SigmoidParameter : public ::google::protobuf::Message {SigmoidParameter8178,302343
  inline SigmoidParameter& operator=(const SigmoidParameter& from) {operator =8185,302519
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8190,302631
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8194,302742
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8219,303684
  typedef SigmoidParameter_Engine Engine;Engine8230,303965
  static const Engine DEFAULT = SigmoidParameter_Engine_DEFAULT;DEFAULT8231,304007
  static const Engine CAFFE = SigmoidParameter_Engine_CAFFE;CAFFE8232,304072
  static const Engine CUDNN = SigmoidParameter_Engine_CUDNN;CUDNN8233,304133
  static inline bool Engine_IsValid(int value) {Engine_IsValid8234,304194
  static const Engine Engine_MIN =Engine_MIN8237,304298
  static const Engine Engine_MAX =Engine_MAX8239,304373
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE8241,304448
  Engine_descriptor() {Engine_descriptor8244,304590
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name8247,304667
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse8250,304784
  static const int kEngineFieldNumber = 1;kEngineFieldNumber8260,305141
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8269,305452
  int engine_;engine_8271,305509
  mutable int _cached_size_;_cached_size_8273,305525
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_8274,305554
  static SigmoidParameter* default_instance_;default_instance_8281,305797
class SliceParameter : public ::google::protobuf::Message {SliceParameter8285,305918
  inline SliceParameter& operator=(const SliceParameter& from) {operator =8292,306084
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8297,306192
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8301,306303
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8326,307235
  static const int kAxisFieldNumber = 3;kAxisFieldNumber8342,307692
  static const int kSlicePointFieldNumber = 2;kSlicePointFieldNumber8349,307952
  static const int kSliceDimFieldNumber = 1;kSliceDimFieldNumber8361,308537
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8372,308910
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slice_point_;slice_point_8374,308967
  ::google::protobuf::int32 axis_;axis_8375,309047
  ::google::protobuf::uint32 slice_dim_;slice_dim_8376,309082
  mutable int _cached_size_;_cached_size_8378,309124
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_8379,309153
  static SliceParameter* default_instance_;default_instance_8386,309396
class SoftmaxParameter : public ::google::protobuf::Message {SoftmaxParameter8390,309515
  inline SoftmaxParameter& operator=(const SoftmaxParameter& from) {operator =8397,309691
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8402,309803
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8406,309914
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8431,310856
  typedef SoftmaxParameter_Engine Engine;Engine8442,311137
  static const Engine DEFAULT = SoftmaxParameter_Engine_DEFAULT;DEFAULT8443,311179
  static const Engine CAFFE = SoftmaxParameter_Engine_CAFFE;CAFFE8444,311244
  static const Engine CUDNN = SoftmaxParameter_Engine_CUDNN;CUDNN8445,311305
  static inline bool Engine_IsValid(int value) {Engine_IsValid8446,311366
  static const Engine Engine_MIN =Engine_MIN8449,311470
  static const Engine Engine_MAX =Engine_MAX8451,311545
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE8453,311620
  Engine_descriptor() {Engine_descriptor8456,311762
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name8459,311839
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse8462,311956
  static const int kEngineFieldNumber = 1;kEngineFieldNumber8472,312313
  static const int kAxisFieldNumber = 2;kAxisFieldNumber8479,312585
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8490,312938
  int engine_;engine_8492,312995
  ::google::protobuf::int32 axis_;axis_8493,313010
  mutable int _cached_size_;_cached_size_8495,313046
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_8496,313075
  static SoftmaxParameter* default_instance_;default_instance_8503,313318
class TanHParameter : public ::google::protobuf::Message {TanHParameter8507,313439
  inline TanHParameter& operator=(const TanHParameter& from) {operator =8514,313600
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8519,313706
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8523,313817
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8548,314744
  typedef TanHParameter_Engine Engine;Engine8559,315025
  static const Engine DEFAULT = TanHParameter_Engine_DEFAULT;DEFAULT8560,315064
  static const Engine CAFFE = TanHParameter_Engine_CAFFE;CAFFE8561,315126
  static const Engine CUDNN = TanHParameter_Engine_CUDNN;CUDNN8562,315184
  static inline bool Engine_IsValid(int value) {Engine_IsValid8563,315242
  static const Engine Engine_MIN =Engine_MIN8566,315343
  static const Engine Engine_MAX =Engine_MAX8568,315415
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE8570,315487
  Engine_descriptor() {Engine_descriptor8573,315626
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name8576,315700
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse8579,315814
  static const int kEngineFieldNumber = 1;kEngineFieldNumber8589,316165
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8598,316467
  int engine_;engine_8600,316524
  mutable int _cached_size_;_cached_size_8602,316540
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_8603,316569
  static TanHParameter* default_instance_;default_instance_8610,316812
class TileParameter : public ::google::protobuf::Message {TileParameter8614,316930
  inline TileParameter& operator=(const TileParameter& from) {operator =8621,317091
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8626,317197
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8630,317308
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8655,318235
  static const int kAxisFieldNumber = 1;kAxisFieldNumber8671,318692
  static const int kTilesFieldNumber = 2;kTilesFieldNumber8678,318933
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8689,319284
  ::google::protobuf::int32 axis_;axis_8691,319341
  ::google::protobuf::int32 tiles_;tiles_8692,319376
  mutable int _cached_size_;_cached_size_8694,319413
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_8695,319442
  static TileParameter* default_instance_;default_instance_8702,319685
class ThresholdParameter : public ::google::protobuf::Message {ThresholdParameter8706,319803
  inline ThresholdParameter& operator=(const ThresholdParameter& from) {operator =8713,319989
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8718,320105
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8722,320216
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8747,321168
  static const int kThresholdFieldNumber = 1;kThresholdFieldNumber8763,321640
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8772,321914
  float threshold_;threshold_8774,321971
  mutable int _cached_size_;_cached_size_8776,321992
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_8777,322021
  static ThresholdParameter* default_instance_;default_instance_8784,322264
class WindowDataParameter : public ::google::protobuf::Message {WindowDataParameter8788,322387
  inline WindowDataParameter& operator=(const WindowDataParameter& from) {operator =8795,322578
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8800,322696
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8804,322807
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8829,323764
  static const int kSourceFieldNumber = 1;kSourceFieldNumber8845,324214
  static const int kScaleFieldNumber = 2;kScaleFieldNumber8857,324711
  static const int kMeanFileFieldNumber = 3;kMeanFileFieldNumber8864,324928
  static const int kBatchSizeFieldNumber = 4;kBatchSizeFieldNumber8876,325453
  static const int kCropSizeFieldNumber = 5;kCropSizeFieldNumber8883,325740
  static const int kMirrorFieldNumber = 6;kMirrorFieldNumber8890,326017
  static const int kFgThresholdFieldNumber = 7;kFgThresholdFieldNumber8897,326259
  static const int kBgThresholdFieldNumber = 8;kBgThresholdFieldNumber8904,326520
  static const int kFgFractionFieldNumber = 9;kFgFractionFieldNumber8911,326779
  static const int kContextPadFieldNumber = 10;kContextPadFieldNumber8918,327034
  static const int kCropModeFieldNumber = 11;kCropModeFieldNumber8925,327331
  static const int kCacheImagesFieldNumber = 12;kCacheImagesFieldNumber8937,327880
  static const int kRootFolderFieldNumber = 13;kRootFolderFieldNumber8944,328138
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8982,329601
  ::std::string* source_;source_8984,329658
  ::std::string* mean_file_;mean_file_8985,329684
  float scale_;scale_8986,329713
  ::google::protobuf::uint32 batch_size_;batch_size_8987,329729
  ::google::protobuf::uint32 crop_size_;crop_size_8988,329771
  float fg_threshold_;fg_threshold_8989,329812
  float bg_threshold_;bg_threshold_8990,329835
  float fg_fraction_;fg_fraction_8991,329858
  bool mirror_;mirror_8992,329880
  bool cache_images_;cache_images_8993,329896
  ::google::protobuf::uint32 context_pad_;context_pad_8994,329918
  ::std::string* crop_mode_;crop_mode_8995,329961
  static ::std::string* _default_crop_mode_;_default_crop_mode_8996,329990
  ::std::string* root_folder_;root_folder_8997,330035
  mutable int _cached_size_;_cached_size_8999,330067
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];_has_bits_9000,330096
  static WindowDataParameter* default_instance_;default_instance_9007,330340
class SPPParameter : public ::google::protobuf::Message {SPPParameter9011,330464
  inline SPPParameter& operator=(const SPPParameter& from) {operator =9018,330620
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields9023,330724
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields9027,330835
  int GetCachedSize() const { return _cached_size_; }GetCachedSize9052,331757
  typedef SPPParameter_PoolMethod PoolMethod;PoolMethod9063,332038
  static const PoolMethod MAX = SPPParameter_PoolMethod_MAX;MAX9064,332084
  static const PoolMethod AVE = SPPParameter_PoolMethod_AVE;AVE9065,332145
  static const PoolMethod STOCHASTIC = SPPParameter_PoolMethod_STOCHASTIC;STOCHASTIC9066,332206
  static inline bool PoolMethod_IsValid(int value) {PoolMethod_IsValid9067,332281
  static const PoolMethod PoolMethod_MIN =PoolMethod_MIN9070,332389
  static const PoolMethod PoolMethod_MAX =PoolMethod_MAX9072,332476
  static const int PoolMethod_ARRAYSIZE =PoolMethod_ARRAYSIZE9074,332563
  PoolMethod_descriptor() {PoolMethod_descriptor9077,332713
  static inline const ::std::string& PoolMethod_Name(PoolMethod value) {PoolMethod_Name9080,332794
  static inline bool PoolMethod_Parse(const ::std::string& name,PoolMethod_Parse9083,332919
  typedef SPPParameter_Engine Engine;Engine9088,333071
  static const Engine DEFAULT = SPPParameter_Engine_DEFAULT;DEFAULT9089,333109
  static const Engine CAFFE = SPPParameter_Engine_CAFFE;CAFFE9090,333170
  static const Engine CUDNN = SPPParameter_Engine_CUDNN;CUDNN9091,333227
  static inline bool Engine_IsValid(int value) {Engine_IsValid9092,333284
  static const Engine Engine_MIN =Engine_MIN9095,333384
  static const Engine Engine_MAX =Engine_MAX9097,333455
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE9099,333526
  Engine_descriptor() {Engine_descriptor9102,333664
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name9105,333737
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse9108,333850
  static const int kPyramidHeightFieldNumber = 1;kPyramidHeightFieldNumber9118,334183
  static const int kPoolFieldNumber = 2;kPoolFieldNumber9125,334493
  static const int kEngineFieldNumber = 6;kEngineFieldNumber9132,334792
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_9145,335235
  ::google::protobuf::uint32 pyramid_height_;pyramid_height_9147,335292
  int pool_;pool_9148,335338
  int engine_;engine_9149,335351
  mutable int _cached_size_;_cached_size_9151,335367
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_9152,335396
  static SPPParameter* default_instance_;default_instance_9159,335639
class V1LayerParameter : public ::google::protobuf::Message {V1LayerParameter9163,335756
  inline V1LayerParameter& operator=(const V1LayerParameter& from) {operator =9170,335932
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields9175,336044
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields9179,336155
  int GetCachedSize() const { return _cached_size_; }GetCachedSize9204,337097
  typedef V1LayerParameter_LayerType LayerType;LayerType9215,337378
  static const LayerType NONE = V1LayerParameter_LayerType_NONE;NONE9216,337426
  static const LayerType ABSVAL = V1LayerParameter_LayerType_ABSVAL;ABSVAL9217,337491
  static const LayerType ACCURACY = V1LayerParameter_LayerType_ACCURACY;ACCURACY9218,337560
  static const LayerType ARGMAX = V1LayerParameter_LayerType_ARGMAX;ARGMAX9219,337633
  static const LayerType BNLL = V1LayerParameter_LayerType_BNLL;BNLL9220,337702
  static const LayerType CONCAT = V1LayerParameter_LayerType_CONCAT;CONCAT9221,337767
  static const LayerType CONTRASTIVE_LOSS = V1LayerParameter_LayerType_CONTRASTIVE_LOSS;CONTRASTIVE_LOSS9222,337836
  static const LayerType CONVOLUTION = V1LayerParameter_LayerType_CONVOLUTION;CONVOLUTION9223,337925
  static const LayerType DATA = V1LayerParameter_LayerType_DATA;DATA9224,338004
  static const LayerType DECONVOLUTION = V1LayerParameter_LayerType_DECONVOLUTION;DECONVOLUTION9225,338069
  static const LayerType DROPOUT = V1LayerParameter_LayerType_DROPOUT;DROPOUT9226,338152
  static const LayerType DUMMY_DATA = V1LayerParameter_LayerType_DUMMY_DATA;DUMMY_DATA9227,338223
  static const LayerType EUCLIDEAN_LOSS = V1LayerParameter_LayerType_EUCLIDEAN_LOSS;EUCLIDEAN_LOSS9228,338300
  static const LayerType ELTWISE = V1LayerParameter_LayerType_ELTWISE;ELTWISE9229,338385
  static const LayerType EXP = V1LayerParameter_LayerType_EXP;EXP9230,338456
  static const LayerType FLATTEN = V1LayerParameter_LayerType_FLATTEN;FLATTEN9231,338519
  static const LayerType HDF5_DATA = V1LayerParameter_LayerType_HDF5_DATA;HDF5_DATA9232,338590
  static const LayerType HDF5_OUTPUT = V1LayerParameter_LayerType_HDF5_OUTPUT;HDF5_OUTPUT9233,338665
  static const LayerType HINGE_LOSS = V1LayerParameter_LayerType_HINGE_LOSS;HINGE_LOSS9234,338744
  static const LayerType IM2COL = V1LayerParameter_LayerType_IM2COL;IM2COL9235,338821
  static const LayerType IMAGE_DATA = V1LayerParameter_LayerType_IMAGE_DATA;IMAGE_DATA9236,338890
  static const LayerType INFOGAIN_LOSS = V1LayerParameter_LayerType_INFOGAIN_LOSS;INFOGAIN_LOSS9237,338967
  static const LayerType INNER_PRODUCT = V1LayerParameter_LayerType_INNER_PRODUCT;INNER_PRODUCT9238,339050
  static const LayerType LRN = V1LayerParameter_LayerType_LRN;LRN9239,339133
  static const LayerType MEMORY_DATA = V1LayerParameter_LayerType_MEMORY_DATA;MEMORY_DATA9240,339196
  static const LayerType MULTINOMIAL_LOGISTIC_LOSS = V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS;MULTINOMIAL_LOGISTIC_LOSS9241,339275
  static const LayerType MVN = V1LayerParameter_LayerType_MVN;MVN9242,339382
  static const LayerType POOLING = V1LayerParameter_LayerType_POOLING;POOLING9243,339445
  static const LayerType POWER = V1LayerParameter_LayerType_POWER;POWER9244,339516
  static const LayerType RELU = V1LayerParameter_LayerType_RELU;RELU9245,339583
  static const LayerType SIGMOID = V1LayerParameter_LayerType_SIGMOID;SIGMOID9246,339648
  static const LayerType SIGMOID_CROSS_ENTROPY_LOSS = V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS;SIGMOID_CROSS_ENTROPY_LOSS9247,339719
  static const LayerType SILENCE = V1LayerParameter_LayerType_SILENCE;SILENCE9248,339828
  static const LayerType SOFTMAX = V1LayerParameter_LayerType_SOFTMAX;SOFTMAX9249,339899
  static const LayerType SOFTMAX_LOSS = V1LayerParameter_LayerType_SOFTMAX_LOSS;SOFTMAX_LOSS9250,339970
  static const LayerType SPLIT = V1LayerParameter_LayerType_SPLIT;SPLIT9251,340051
  static const LayerType SLICE = V1LayerParameter_LayerType_SLICE;SLICE9252,340118
  static const LayerType TANH = V1LayerParameter_LayerType_TANH;TANH9253,340185
  static const LayerType WINDOW_DATA = V1LayerParameter_LayerType_WINDOW_DATA;WINDOW_DATA9254,340250
  static const LayerType THRESHOLD = V1LayerParameter_LayerType_THRESHOLD;THRESHOLD9255,340329
  static inline bool LayerType_IsValid(int value) {LayerType_IsValid9256,340404
  static const LayerType LayerType_MIN =LayerType_MIN9259,340514
  static const LayerType LayerType_MAX =LayerType_MAX9261,340601
  static const int LayerType_ARRAYSIZE =LayerType_ARRAYSIZE9263,340688
  LayerType_descriptor() {LayerType_descriptor9266,340839
  static inline const ::std::string& LayerType_Name(LayerType value) {LayerType_Name9269,340922
  static inline bool LayerType_Parse(const ::std::string& name,LayerType_Parse9272,341048
  typedef V1LayerParameter_DimCheckMode DimCheckMode;DimCheckMode9277,341201
  static const DimCheckMode STRICT = V1LayerParameter_DimCheckMode_STRICT;STRICT9278,341255
  static const DimCheckMode PERMISSIVE = V1LayerParameter_DimCheckMode_PERMISSIVE;PERMISSIVE9279,341330
  static inline bool DimCheckMode_IsValid(int value) {DimCheckMode_IsValid9280,341413
  static const DimCheckMode DimCheckMode_MIN =DimCheckMode_MIN9283,341529
  static const DimCheckMode DimCheckMode_MAX =DimCheckMode_MAX9285,341628
  static const int DimCheckMode_ARRAYSIZE =DimCheckMode_ARRAYSIZE9287,341727
  DimCheckMode_descriptor() {DimCheckMode_descriptor9290,341887
  static inline const ::std::string& DimCheckMode_Name(DimCheckMode value) {DimCheckMode_Name9293,341976
  static inline bool DimCheckMode_Parse(const ::std::string& name,DimCheckMode_Parse9296,342111
  static const int kBottomFieldNumber = 2;kBottomFieldNumber9306,342442
  static const int kTopFieldNumber = 3;kTopFieldNumber9322,343231
  static const int kNameFieldNumber = 4;kNameFieldNumber9338,343987
  static const int kIncludeFieldNumber = 32;kIncludeFieldNumber9350,344473
  static const int kExcludeFieldNumber = 33;kExcludeFieldNumber9362,345002
  static const int kTypeFieldNumber = 5;kTypeFieldNumber9374,345535
  static const int kBlobsFieldNumber = 6;kBlobsFieldNumber9381,345807
  static const int kParamFieldNumber = 1001;kParamFieldNumber9393,346291
  static const int kBlobShareModeFieldNumber = 1002;kBlobShareModeFieldNumber9409,347140
  static const int kBlobsLrFieldNumber = 7;kBlobsLrFieldNumber9419,347707
  static const int kWeightDecayFieldNumber = 8;kWeightDecayFieldNumber9431,348163
  static const int kLossWeightFieldNumber = 35;kLossWeightFieldNumber9443,348641
  static const int kAccuracyParamFieldNumber = 27;kAccuracyParamFieldNumber9455,349142
  static const int kArgmaxParamFieldNumber = 23;kArgmaxParamFieldNumber9464,349607
  static const int kConcatParamFieldNumber = 9;kConcatParamFieldNumber9473,350051
  static const int kContrastiveLossParamFieldNumber = 40;kContrastiveLossParamFieldNumber9482,350534
  static const int kConvolutionParamFieldNumber = 10;kConvolutionParamFieldNumber9491,351094
  static const int kDataParamFieldNumber = 11;kDataParamFieldNumber9500,351581
  static const int kDropoutParamFieldNumber = 12;kDropoutParamFieldNumber9509,352010
  static const int kDummyDataParamFieldNumber = 26;kDummyDataParamFieldNumber9518,352480
  static const int kEltwiseParamFieldNumber = 24;kEltwiseParamFieldNumber9527,352964
  static const int kExpParamFieldNumber = 41;kExpParamFieldNumber9536,353407
  static const int kHdf5DataParamFieldNumber = 13;kHdf5DataParamFieldNumber9545,353833
  static const int kHdf5OutputParamFieldNumber = 14;kHdf5OutputParamFieldNumber9554,354322
  static const int kHingeLossParamFieldNumber = 29;kHingeLossParamFieldNumber9563,354827
  static const int kImageDataParamFieldNumber = 15;kImageDataParamFieldNumber9572,355322
  static const int kInfogainLossParamFieldNumber = 16;kInfogainLossParamFieldNumber9581,355829
  static const int kInnerProductParamFieldNumber = 17;kInnerProductParamFieldNumber9590,356366
  static const int kLrnParamFieldNumber = 18;kLrnParamFieldNumber9599,356864
  static const int kMemoryDataParamFieldNumber = 22;kMemoryDataParamFieldNumber9608,357298
  static const int kMvnParamFieldNumber = 34;kMvnParamFieldNumber9617,357776
  static const int kPoolingParamFieldNumber = 19;kPoolingParamFieldNumber9626,358195
  static const int kPowerParamFieldNumber = 21;kPowerParamFieldNumber9635,358646
  static const int kReluParamFieldNumber = 30;kReluParamFieldNumber9644,359073
  static const int kSigmoidParamFieldNumber = 38;kSigmoidParamFieldNumber9653,359502
  static const int kSoftmaxParamFieldNumber = 39;kSoftmaxParamFieldNumber9662,359961
  static const int kSliceParamFieldNumber = 31;kSliceParamFieldNumber9671,360412
  static const int kTanhParamFieldNumber = 37;kTanhParamFieldNumber9680,360839
  static const int kThresholdParamFieldNumber = 25;kThresholdParamFieldNumber9689,361276
  static const int kWindowDataParamFieldNumber = 20;kWindowDataParamFieldNumber9698,361770
  static const int kTransformParamFieldNumber = 36;kTransformParamFieldNumber9707,362277
  static const int kLossParamFieldNumber = 42;kLossParamFieldNumber9716,362764
  static const int kLayerFieldNumber = 1;kLayerFieldNumber9725,363168
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_9800,366154
  ::google::protobuf::RepeatedPtrField< ::std::string> bottom_;bottom_9802,366211
  ::google::protobuf::RepeatedPtrField< ::std::string> top_;top_9803,366275
  ::std::string* name_;name_9804,366336
  ::google::protobuf::RepeatedPtrField< ::caffe::NetStateRule > include_;include_9805,366360
  ::google::protobuf::RepeatedPtrField< ::caffe::NetStateRule > exclude_;exclude_9806,366434
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > blobs_;blobs_9807,366508
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;param_9808,366577
  ::google::protobuf::RepeatedField<int> blob_share_mode_;blob_share_mode_9809,366640
  ::google::protobuf::RepeatedField< float > blobs_lr_;blobs_lr_9810,366699
  ::google::protobuf::RepeatedField< float > weight_decay_;weight_decay_9811,366755
  ::google::protobuf::RepeatedField< float > loss_weight_;loss_weight_9812,366815
  ::caffe::AccuracyParameter* accuracy_param_;accuracy_param_9813,366874
  ::caffe::ArgMaxParameter* argmax_param_;argmax_param_9814,366921
  ::caffe::ConcatParameter* concat_param_;concat_param_9815,366964
  ::caffe::ContrastiveLossParameter* contrastive_loss_param_;contrastive_loss_param_9816,367007
  ::caffe::ConvolutionParameter* convolution_param_;convolution_param_9817,367069
  ::caffe::DataParameter* data_param_;data_param_9818,367122
  ::caffe::DropoutParameter* dropout_param_;dropout_param_9819,367161
  ::caffe::DummyDataParameter* dummy_data_param_;dummy_data_param_9820,367206
  ::caffe::EltwiseParameter* eltwise_param_;eltwise_param_9821,367256
  ::caffe::ExpParameter* exp_param_;exp_param_9822,367301
  ::caffe::HDF5DataParameter* hdf5_data_param_;hdf5_data_param_9823,367338
  ::caffe::HDF5OutputParameter* hdf5_output_param_;hdf5_output_param_9824,367386
  ::caffe::HingeLossParameter* hinge_loss_param_;hinge_loss_param_9825,367438
  ::caffe::ImageDataParameter* image_data_param_;image_data_param_9826,367488
  ::caffe::InfogainLossParameter* infogain_loss_param_;infogain_loss_param_9827,367538
  ::caffe::InnerProductParameter* inner_product_param_;inner_product_param_9828,367594
  ::caffe::LRNParameter* lrn_param_;lrn_param_9829,367650
  ::caffe::MemoryDataParameter* memory_data_param_;memory_data_param_9830,367687
  ::caffe::MVNParameter* mvn_param_;mvn_param_9831,367739
  ::caffe::PoolingParameter* pooling_param_;pooling_param_9832,367776
  ::caffe::PowerParameter* power_param_;power_param_9833,367821
  ::caffe::ReLUParameter* relu_param_;relu_param_9834,367862
  ::caffe::SigmoidParameter* sigmoid_param_;sigmoid_param_9835,367901
  ::caffe::SoftmaxParameter* softmax_param_;softmax_param_9836,367946
  ::caffe::SliceParameter* slice_param_;slice_param_9837,367991
  ::caffe::TanHParameter* tanh_param_;tanh_param_9838,368032
  ::caffe::ThresholdParameter* threshold_param_;threshold_param_9839,368071
  ::caffe::WindowDataParameter* window_data_param_;window_data_param_9840,368120
  ::caffe::TransformationParameter* transform_param_;transform_param_9841,368172
  ::caffe::LossParameter* loss_param_;loss_param_9842,368226
  ::caffe::V0LayerParameter* layer_;layer_9843,368265
  int type_;type_9844,368302
  mutable int _cached_size_;_cached_size_9846,368316
  ::google::protobuf::uint32 _has_bits_[(43 + 31) / 32];_has_bits_9847,368345
  static V1LayerParameter* default_instance_;default_instance_9854,368589
class V0LayerParameter : public ::google::protobuf::Message {V0LayerParameter9858,368710
  inline V0LayerParameter& operator=(const V0LayerParameter& from) {operator =9865,368886
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields9870,368998
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields9874,369109
  int GetCachedSize() const { return _cached_size_; }GetCachedSize9899,370051
  typedef V0LayerParameter_PoolMethod PoolMethod;PoolMethod9910,370332
  static const PoolMethod MAX = V0LayerParameter_PoolMethod_MAX;MAX9911,370382
  static const PoolMethod AVE = V0LayerParameter_PoolMethod_AVE;AVE9912,370447
  static const PoolMethod STOCHASTIC = V0LayerParameter_PoolMethod_STOCHASTIC;STOCHASTIC9913,370512
  static inline bool PoolMethod_IsValid(int value) {PoolMethod_IsValid9914,370591
  static const PoolMethod PoolMethod_MIN =PoolMethod_MIN9917,370703
  static const PoolMethod PoolMethod_MAX =PoolMethod_MAX9919,370794
  static const int PoolMethod_ARRAYSIZE =PoolMethod_ARRAYSIZE9921,370885
  PoolMethod_descriptor() {PoolMethod_descriptor9924,371039
  static inline const ::std::string& PoolMethod_Name(PoolMethod value) {PoolMethod_Name9927,371124
  static inline bool PoolMethod_Parse(const ::std::string& name,PoolMethod_Parse9930,371253
  static const int kNameFieldNumber = 1;kNameFieldNumber9940,371572
  static const int kTypeFieldNumber = 2;kTypeFieldNumber9952,372035
  static const int kNumOutputFieldNumber = 3;kNumOutputFieldNumber9964,372516
  static const int kBiastermFieldNumber = 4;kBiastermFieldNumber9971,372801
  static const int kWeightFillerFieldNumber = 5;kWeightFillerFieldNumber9978,373053
  static const int kBiasFillerFieldNumber = 6;kBiasFillerFieldNumber9987,373499
  static const int kPadFieldNumber = 7;kPadFieldNumber9996,373907
  static const int kKernelsizeFieldNumber = 8;kKernelsizeFieldNumber10003,374163
  static const int kGroupFieldNumber = 9;kGroupFieldNumber10010,374439
  static const int kStrideFieldNumber = 10;kStrideFieldNumber10017,374704
  static const int kPoolFieldNumber = 11;kPoolFieldNumber10024,374997
  static const int kDropoutRatioFieldNumber = 12;kDropoutRatioFieldNumber10031,375302
  static const int kLocalSizeFieldNumber = 13;kLocalSizeFieldNumber10038,375561
  static const int kAlphaFieldNumber = 14;kAlphaFieldNumber10045,375837
  static const int kBetaFieldNumber = 15;kBetaFieldNumber10052,376057
  static const int kKFieldNumber = 22;kKFieldNumber10059,376262
  static const int kSourceFieldNumber = 16;kSourceFieldNumber10066,376460
  static const int kScaleFieldNumber = 17;kScaleFieldNumber10078,376959
  static const int kMeanfileFieldNumber = 18;kMeanfileFieldNumber10085,377175
  static const int kBatchsizeFieldNumber = 19;kBatchsizeFieldNumber10097,377691
  static const int kCropsizeFieldNumber = 20;kCropsizeFieldNumber10104,377975
  static const int kMirrorFieldNumber = 21;kMirrorFieldNumber10111,378252
  static const int kBlobsFieldNumber = 50;kBlobsFieldNumber10118,378470
  static const int kBlobsLrFieldNumber = 51;kBlobsLrFieldNumber10130,378961
  static const int kWeightDecayFieldNumber = 52;kWeightDecayFieldNumber10142,379419
  static const int kRandSkipFieldNumber = 53;kRandSkipFieldNumber10154,379907
  static const int kDetFgThresholdFieldNumber = 54;kDetFgThresholdFieldNumber10161,380215
  static const int kDetBgThresholdFieldNumber = 55;kDetBgThresholdFieldNumber10168,380501
  static const int kDetFgFractionFieldNumber = 56;kDetFgFractionFieldNumber10175,380785
  static const int kDetContextPadFieldNumber = 58;kDetContextPadFieldNumber10182,381064
  static const int kDetCropModeFieldNumber = 59;kDetCropModeFieldNumber10189,381384
  static const int kNewNumFieldNumber = 60;kNewNumFieldNumber10201,381950
  static const int kNewChannelsFieldNumber = 61;kNewChannelsFieldNumber10208,382236
  static const int kNewHeightFieldNumber = 62;kNewHeightFieldNumber10215,382531
  static const int kNewWidthFieldNumber = 63;kNewWidthFieldNumber10222,382817
  static const int kShuffleImagesFieldNumber = 64;kShuffleImagesFieldNumber10229,383118
  static const int kConcatDimFieldNumber = 65;kConcatDimFieldNumber10236,383378
  static const int kHdf5OutputParamFieldNumber = 1001;kHdf5OutputParamFieldNumber10243,383699
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_10322,386658
  ::std::string* name_;name_10324,386715
  ::std::string* type_;type_10325,386739
  ::caffe::FillerParameter* weight_filler_;weight_filler_10326,386763
  ::google::protobuf::uint32 num_output_;num_output_10327,386807
  ::google::protobuf::uint32 pad_;pad_10328,386849
  ::caffe::FillerParameter* bias_filler_;bias_filler_10329,386884
  ::google::protobuf::uint32 kernelsize_;kernelsize_10330,386926
  ::google::protobuf::uint32 group_;group_10331,386968
  ::google::protobuf::uint32 stride_;stride_10332,387005
  int pool_;pool_10333,387043
  float dropout_ratio_;dropout_ratio_10334,387056
  ::google::protobuf::uint32 local_size_;local_size_10335,387080
  float alpha_;alpha_10336,387122
  float beta_;beta_10337,387138
  float k_;k_10338,387153
  float scale_;scale_10339,387165
  ::std::string* source_;source_10340,387181
  ::std::string* meanfile_;meanfile_10341,387207
  ::google::protobuf::uint32 batchsize_;batchsize_10342,387235
  bool biasterm_;biasterm_10343,387276
  bool mirror_;mirror_10344,387294
  bool shuffle_images_;shuffle_images_10345,387310
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > blobs_;blobs_10346,387334
  ::google::protobuf::uint32 cropsize_;cropsize_10347,387403
  ::google::protobuf::uint32 rand_skip_;rand_skip_10348,387443
  ::google::protobuf::RepeatedField< float > blobs_lr_;blobs_lr_10349,387484
  ::google::protobuf::RepeatedField< float > weight_decay_;weight_decay_10350,387540
  float det_fg_threshold_;det_fg_threshold_10351,387600
  float det_bg_threshold_;det_bg_threshold_10352,387627
  float det_fg_fraction_;det_fg_fraction_10353,387654
  ::google::protobuf::uint32 det_context_pad_;det_context_pad_10354,387680
  ::std::string* det_crop_mode_;det_crop_mode_10355,387727
  static ::std::string* _default_det_crop_mode_;_default_det_crop_mode_10356,387760
  ::google::protobuf::int32 new_num_;new_num_10357,387809
  ::google::protobuf::int32 new_channels_;new_channels_10358,387847
  ::google::protobuf::int32 new_height_;new_height_10359,387890
  ::google::protobuf::int32 new_width_;new_width_10360,387931
  ::caffe::HDF5OutputParameter* hdf5_output_param_;hdf5_output_param_10361,387971
  ::google::protobuf::uint32 concat_dim_;concat_dim_10362,388023
  mutable int _cached_size_;_cached_size_10364,388066
  ::google::protobuf::uint32 _has_bits_[(38 + 31) / 32];_has_bits_10365,388095
  static V0LayerParameter* default_instance_;default_instance_10372,388339
class PReLUParameter : public ::google::protobuf::Message {PReLUParameter10376,388460
  inline PReLUParameter& operator=(const PReLUParameter& from) {operator =10383,388626
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields10388,388734
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields10392,388845
  int GetCachedSize() const { return _cached_size_; }GetCachedSize10417,389777
  static const int kFillerFieldNumber = 1;kFillerFieldNumber10433,390243
  static const int kChannelSharedFieldNumber = 2;kChannelSharedFieldNumber10442,390657
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_10453,391015
  ::caffe::FillerParameter* filler_;filler_10455,391072
  bool channel_shared_;channel_shared_10456,391109
  mutable int _cached_size_;_cached_size_10458,391134
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_10459,391163
  static PReLUParameter* default_instance_;default_instance_10466,391406
class QuantizationParameter : public ::google::protobuf::Message {QuantizationParameter10470,391525
  inline QuantizationParameter& operator=(const QuantizationParameter& from) {operator =10477,391726
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields10482,391848
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields10486,391959
  int GetCachedSize() const { return _cached_size_; }GetCachedSize10511,392926
  typedef QuantizationParameter_RoundMethod RoundMethod;RoundMethod10522,393207
  static const RoundMethod ROUND = QuantizationParameter_RoundMethod_ROUND;ROUND10523,393264
  static const RoundMethod FLOOR = QuantizationParameter_RoundMethod_FLOOR;FLOOR10524,393340
  static const RoundMethod CEIL = QuantizationParameter_RoundMethod_CEIL;CEIL10525,393416
  static const RoundMethod TRUNC = QuantizationParameter_RoundMethod_TRUNC;TRUNC10526,393490
  static inline bool RoundMethod_IsValid(int value) {RoundMethod_IsValid10527,393566
  static const RoundMethod RoundMethod_MIN =RoundMethod_MIN10530,393685
  static const RoundMethod RoundMethod_MAX =RoundMethod_MAX10532,393785
  static const int RoundMethod_ARRAYSIZE =RoundMethod_ARRAYSIZE10534,393885
  RoundMethod_descriptor() {RoundMethod_descriptor10537,394047
  static inline const ::std::string& RoundMethod_Name(RoundMethod value) {RoundMethod_Name10540,394139
  static inline bool RoundMethod_Parse(const ::std::string& name,RoundMethod_Parse10543,394276
  typedef QuantizationParameter_RoundStrategy RoundStrategy;RoundStrategy10548,394440
  static const RoundStrategy CONSERVATIVE = QuantizationParameter_RoundStrategy_CONSERVATIVE;CONSERVATIVE10549,394501
  static const RoundStrategy NEUTRAL = QuantizationParameter_RoundStrategy_NEUTRAL;NEUTRAL10550,394595
  static const RoundStrategy AGGRESSIVE = QuantizationParameter_RoundStrategy_AGGRESSIVE;AGGRESSIVE10551,394679
  static inline bool RoundStrategy_IsValid(int value) {RoundStrategy_IsValid10552,394769
  static const RoundStrategy RoundStrategy_MIN =RoundStrategy_MIN10555,394892
  static const RoundStrategy RoundStrategy_MAX =RoundStrategy_MAX10557,395000
  static const int RoundStrategy_ARRAYSIZE =RoundStrategy_ARRAYSIZE10559,395108
  RoundStrategy_descriptor() {RoundStrategy_descriptor10562,395276
  static inline const ::std::string& RoundStrategy_Name(RoundStrategy value) {RoundStrategy_Name10565,395372
  static inline bool RoundStrategy_Parse(const ::std::string& name,RoundStrategy_Parse10568,395515
  static const int kRoundMethodFieldNumber = 1;kRoundMethodFieldNumber10578,395924
  static const int kRoundStrategyFieldNumber = 2;kRoundStrategyFieldNumber10585,396311
  static const int kBitWidthFieldNumber = 3;kBitWidthFieldNumber10592,396645
  static const int kRangeFieldNumber = 4;kRangeFieldNumber10599,396916
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_10617,397555
  int round_method_;round_method_10619,397612
  int round_strategy_;round_strategy_10620,397633
  ::google::protobuf::RepeatedField< float > range_;range_10621,397656
  mutable int _range_cached_byte_size_;_range_cached_byte_size_10622,397709
  ::google::protobuf::int32 bit_width_;bit_width_10623,397749
  mutable int _cached_size_;_cached_size_10625,397790
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_10626,397819
  static QuantizationParameter* default_instance_;default_instance_10633,398062
inline int BlobShape::dim_size() const {dim_size10643,398318
inline void BlobShape::clear_dim() {clear_dim10646,398383
inline ::google::protobuf::int64 BlobShape::dim(int index) const {dim10649,398438
inline void BlobShape::set_dim(int index, ::google::protobuf::int64 value) {set_dim10652,398533
inline void BlobShape::add_dim(::google::protobuf::int64 value) {add_dim10655,398638
BlobShape::dim() const {dim10659,398802
BlobShape::mutable_dim() {mutable_dim10663,398915
inline bool BlobProto::has_shape() const {has_shape10672,399087
inline void BlobProto::set_has_shape() {set_has_shape10675,399177
inline void BlobProto::clear_has_shape() {clear_has_shape10678,399252
inline void BlobProto::clear_shape() {clear_shape10681,399330
inline const ::caffe::BlobShape& BlobProto::shape() const {shape10685,399451
inline ::caffe::BlobShape* BlobProto::mutable_shape() {mutable_shape10688,399577
inline ::caffe::BlobShape* BlobProto::release_shape() {release_shape10693,399726
inline void BlobProto::set_allocated_shape(::caffe::BlobShape* shape) {set_allocated_shape10699,399874
inline int BlobProto::data_size() const {data_size10710,400102
inline void BlobProto::clear_data() {clear_data10713,400169
inline float BlobProto::data(int index) const {data10716,400226
inline void BlobProto::set_data(int index, float value) {set_data10719,400303
inline void BlobProto::add_data(float value) {add_data10722,400390
BlobProto::data() const {data10726,400516
BlobProto::mutable_data() {mutable_data10730,400611
inline int BlobProto::diff_size() const {diff_size10735,400703
inline void BlobProto::clear_diff() {clear_diff10738,400770
inline float BlobProto::diff(int index) const {diff10741,400827
inline void BlobProto::set_diff(int index, float value) {set_diff10744,400904
inline void BlobProto::add_diff(float value) {add_diff10747,400991
BlobProto::diff() const {diff10751,401117
BlobProto::mutable_diff() {mutable_diff10755,401212
inline int BlobProto::double_data_size() const {double_data_size10760,401312
inline void BlobProto::clear_double_data() {clear_double_data10763,401393
inline double BlobProto::double_data(int index) const {double_data10766,401464
inline void BlobProto::set_double_data(int index, double value) {set_double_data10769,401556
inline void BlobProto::add_double_data(double value) {add_double_data10772,401658
BlobProto::double_data() const {double_data10776,401800
BlobProto::mutable_double_data() {mutable_double_data10780,401910
inline int BlobProto::double_diff_size() const {double_diff_size10785,402024
inline void BlobProto::clear_double_diff() {clear_double_diff10788,402105
inline double BlobProto::double_diff(int index) const {double_diff10791,402176
inline void BlobProto::set_double_diff(int index, double value) {set_double_diff10794,402268
inline void BlobProto::add_double_diff(double value) {add_double_diff10797,402370
BlobProto::double_diff() const {double_diff10801,402512
BlobProto::mutable_double_diff() {mutable_double_diff10805,402622
inline bool BlobProto::has_num() const {has_num10810,402725
inline void BlobProto::set_has_num() {set_has_num10813,402813
inline void BlobProto::clear_has_num() {clear_has_num10816,402886
inline void BlobProto::clear_num() {clear_num10819,402962
inline ::google::protobuf::int32 BlobProto::num() const {num10823,403032
inline void BlobProto::set_num(::google::protobuf::int32 value) {set_num10826,403107
inline bool BlobProto::has_channels() const {has_channels10832,403255
inline void BlobProto::set_has_channels() {set_has_channels10835,403348
inline void BlobProto::clear_has_channels() {clear_has_channels10838,403426
inline void BlobProto::clear_channels() {clear_channels10841,403507
inline ::google::protobuf::int32 BlobProto::channels() const {channels10845,403592
inline void BlobProto::set_channels(::google::protobuf::int32 value) {set_channels10848,403677
inline bool BlobProto::has_height() const {has_height10854,403838
inline void BlobProto::set_has_height() {set_has_height10857,403929
inline void BlobProto::clear_has_height() {clear_has_height10860,404005
inline void BlobProto::clear_height() {clear_height10863,404084
inline ::google::protobuf::int32 BlobProto::height() const {height10867,404163
inline void BlobProto::set_height(::google::protobuf::int32 value) {set_height10870,404244
inline bool BlobProto::has_width() const {has_width10876,404398
inline void BlobProto::set_has_width() {set_has_width10879,404488
inline void BlobProto::clear_has_width() {clear_has_width10882,404563
inline void BlobProto::clear_width() {clear_width10885,404641
inline ::google::protobuf::int32 BlobProto::width() const {width10889,404717
inline void BlobProto::set_width(::google::protobuf::int32 value) {set_width10892,404796
inline int BlobProtoVector::blobs_size() const {blobs_size10902,405036
inline void BlobProtoVector::clear_blobs() {clear_blobs10905,405111
inline const ::caffe::BlobProto& BlobProtoVector::blobs(int index) const {blobs10908,405176
inline ::caffe::BlobProto* BlobProtoVector::mutable_blobs(int index) {mutable_blobs10911,405281
inline ::caffe::BlobProto* BlobProtoVector::add_blobs() {add_blobs10914,405386
BlobProtoVector::blobs() const {blobs10918,405542
BlobProtoVector::mutable_blobs() {mutable_blobs10922,405661
inline bool Datum::has_channels() const {has_channels10931,405831
inline void Datum::set_has_channels() {set_has_channels10934,405920
inline void Datum::clear_has_channels() {clear_has_channels10937,405994
inline void Datum::clear_channels() {clear_channels10940,406071
inline ::google::protobuf::int32 Datum::channels() const {channels10944,406152
inline void Datum::set_channels(::google::protobuf::int32 value) {set_channels10947,406233
inline bool Datum::has_height() const {has_height10953,406376
inline void Datum::set_has_height() {set_has_height10956,406463
inline void Datum::clear_has_height() {clear_has_height10959,406535
inline void Datum::clear_height() {clear_height10962,406610
inline ::google::protobuf::int32 Datum::height() const {height10966,406685
inline void Datum::set_height(::google::protobuf::int32 value) {set_height10969,406762
inline bool Datum::has_width() const {has_width10975,406898
inline void Datum::set_has_width() {set_has_width10978,406984
inline void Datum::clear_has_width() {clear_has_width10981,407055
inline void Datum::clear_width() {clear_width10984,407129
inline ::google::protobuf::int32 Datum::width() const {width10988,407201
inline void Datum::set_width(::google::protobuf::int32 value) {set_width10991,407276
inline bool Datum::has_data() const {has_data10997,407408
inline void Datum::set_has_data() {set_has_data11000,407493
inline void Datum::clear_has_data() {clear_has_data11003,407563
inline void Datum::clear_data() {clear_data11006,407636
inline const ::std::string& Datum::data() const {data11012,407778
inline void Datum::set_data(const ::std::string& value) {set_data11015,407847
inline void Datum::set_data(const char* value) {set_data11022,408046
inline void Datum::set_data(const void* value, size_t size) {set_data11029,408236
inline ::std::string* Datum::mutable_data() {mutable_data11036,408476
inline ::std::string* Datum::release_data() {release_data11043,408655
inline void Datum::set_allocated_data(::std::string* data) {set_allocated_data11053,408953
inline bool Datum::has_label() const {has_label11067,409305
inline void Datum::set_has_label() {set_has_label11070,409391
inline void Datum::clear_has_label() {clear_has_label11073,409462
inline void Datum::clear_label() {clear_label11076,409536
inline ::google::protobuf::int32 Datum::label() const {label11080,409608
inline void Datum::set_label(::google::protobuf::int32 value) {set_label11083,409683
inline int Datum::float_data_size() const {float_data_size11089,409821
inline void Datum::clear_float_data() {clear_float_data11092,409896
inline float Datum::float_data(int index) const {float_data11095,409961
inline void Datum::set_float_data(int index, float value) {set_float_data11098,410046
inline void Datum::add_float_data(float value) {add_float_data11101,410141
Datum::float_data() const {float_data11105,410275
Datum::mutable_float_data() {mutable_float_data11109,410378
inline bool Datum::has_encoded() const {has_encoded11114,410482
inline void Datum::set_has_encoded() {set_has_encoded11117,410570
inline void Datum::clear_has_encoded() {clear_has_encoded11120,410643
inline void Datum::clear_encoded() {clear_encoded11123,410719
inline bool Datum::encoded() const {encoded11127,410801
inline void Datum::set_encoded(bool value) {set_encoded11130,410859
inline bool FillerParameter::has_type() const {has_type11140,411092
inline void FillerParameter::set_has_type() {set_has_type11143,411187
inline void FillerParameter::clear_has_type() {clear_has_type11146,411267
inline void FillerParameter::clear_type() {clear_type11149,411350
inline const ::std::string& FillerParameter::type() const {type11155,411489
inline void FillerParameter::set_type(const ::std::string& value) {set_type11158,411568
inline void FillerParameter::set_type(const char* value) {set_type11165,411748
inline void FillerParameter::set_type(const char* value, size_t size) {set_type11172,411919
inline ::std::string* FillerParameter::mutable_type() {mutable_type11179,412140
inline ::std::string* FillerParameter::release_type() {release_type11186,412317
inline void FillerParameter::set_allocated_type(::std::string* type) {set_allocated_type11196,412567
inline bool FillerParameter::has_value() const {has_value11210,412885
inline void FillerParameter::set_has_value() {set_has_value11213,412981
inline void FillerParameter::clear_has_value() {clear_has_value11216,413062
inline void FillerParameter::clear_value() {clear_value11219,413146
inline float FillerParameter::value() const {value11223,413228
inline void FillerParameter::set_value(float value) {set_value11226,413293
inline bool FillerParameter::has_min() const {has_min11232,413428
inline void FillerParameter::set_has_min() {set_has_min11235,413522
inline void FillerParameter::clear_has_min() {clear_has_min11238,413601
inline void FillerParameter::clear_min() {clear_min11241,413683
inline float FillerParameter::min() const {min11245,413759
inline void FillerParameter::set_min(float value) {set_min11248,413820
inline bool FillerParameter::has_max() const {has_max11254,413949
inline void FillerParameter::set_has_max() {set_has_max11257,414043
inline void FillerParameter::clear_has_max() {clear_has_max11260,414122
inline void FillerParameter::clear_max() {clear_max11263,414204
inline float FillerParameter::max() const {max11267,414280
inline void FillerParameter::set_max(float value) {set_max11270,414341
inline bool FillerParameter::has_mean() const {has_mean11276,414471
inline void FillerParameter::set_has_mean() {set_has_mean11279,414566
inline void FillerParameter::clear_has_mean() {clear_has_mean11282,414646
inline void FillerParameter::clear_mean() {clear_mean11285,414729
inline float FillerParameter::mean() const {mean11289,414808
inline void FillerParameter::set_mean(float value) {set_mean11292,414871
inline bool FillerParameter::has_std() const {has_std11298,415003
inline void FillerParameter::set_has_std() {set_has_std11301,415097
inline void FillerParameter::clear_has_std() {clear_has_std11304,415176
inline void FillerParameter::clear_std() {clear_std11307,415258
inline float FillerParameter::std() const {std11311,415334
inline void FillerParameter::set_std(float value) {set_std11314,415395
inline bool FillerParameter::has_sparse() const {has_sparse11320,415528
inline void FillerParameter::set_has_sparse() {set_has_sparse11323,415625
inline void FillerParameter::clear_has_sparse() {clear_has_sparse11326,415707
inline void FillerParameter::clear_sparse() {clear_sparse11329,415792
inline ::google::protobuf::int32 FillerParameter::sparse() const {sparse11333,415878
inline void FillerParameter::set_sparse(::google::protobuf::int32 value) {set_sparse11336,415965
inline bool FillerParameter::has_variance_norm() const {has_variance_norm11342,416168
inline void FillerParameter::set_has_variance_norm() {set_has_variance_norm11345,416272
inline void FillerParameter::clear_has_variance_norm() {clear_has_variance_norm11348,416361
inline void FillerParameter::clear_variance_norm() {clear_variance_norm11351,416453
inline ::caffe::FillerParameter_VarianceNorm FillerParameter::variance_norm() const {variance_norm11355,416559
inline void FillerParameter::set_variance_norm(::caffe::FillerParameter_VarianceNorm value) {set_variance_norm11358,416726
inline bool NetParameter::has_name() const {has_name11369,417058
inline void NetParameter::set_has_name() {set_has_name11372,417150
inline void NetParameter::clear_has_name() {clear_has_name11375,417227
inline void NetParameter::clear_name() {clear_name11378,417307
inline const ::std::string& NetParameter::name() const {name11384,417456
inline void NetParameter::set_name(const ::std::string& value) {set_name11387,417532
inline void NetParameter::set_name(const char* value) {set_name11394,417738
inline void NetParameter::set_name(const char* value, size_t size) {set_name11401,417935
inline ::std::string* NetParameter::mutable_name() {mutable_name11408,418182
inline ::std::string* NetParameter::release_name() {release_name11415,418368
inline void NetParameter::set_allocated_name(::std::string* name) {set_allocated_name11425,418673
inline int NetParameter::input_size() const {input_size11439,419033
inline void NetParameter::clear_input() {clear_input11442,419105
inline const ::std::string& NetParameter::input(int index) const {input11445,419167
inline ::std::string* NetParameter::mutable_input(int index) {mutable_input11448,419264
inline void NetParameter::set_input(int index, const ::std::string& value) {set_input11451,419361
inline void NetParameter::set_input(int index, const char* value) {set_input11454,419480
inline void NetParameter::set_input(int index, const char* value, size_t size) {set_input11457,419590
inline ::std::string* NetParameter::add_input() {add_input11461,419755
inline void NetParameter::add_input(const ::std::string& value) {add_input11464,419830
inline void NetParameter::add_input(const char* value) {add_input11467,419929
inline void NetParameter::add_input(const char* value, size_t size) {add_input11470,420019
NetParameter::input() const {input11474,420226
NetParameter::mutable_input() {mutable_input11478,420336
inline int NetParameter::input_shape_size() const {input_shape_size11483,420435
inline void NetParameter::clear_input_shape() {clear_input_shape11486,420519
inline const ::caffe::BlobShape& NetParameter::input_shape(int index) const {input_shape11489,420593
inline ::caffe::BlobShape* NetParameter::mutable_input_shape(int index) {mutable_input_shape11492,420707
inline ::caffe::BlobShape* NetParameter::add_input_shape() {add_input_shape11495,420821
NetParameter::input_shape() const {input_shape11499,420986
NetParameter::mutable_input_shape() {mutable_input_shape11503,421114
inline int NetParameter::input_dim_size() const {input_dim_size11508,421212
inline void NetParameter::clear_input_dim() {clear_input_dim11511,421292
inline ::google::protobuf::int32 NetParameter::input_dim(int index) const {input_dim11514,421362
inline void NetParameter::set_input_dim(int index, ::google::protobuf::int32 value) {set_input_dim11517,421472
inline void NetParameter::add_input_dim(::google::protobuf::int32 value) {add_input_dim11520,421592
NetParameter::input_dim() const {input_dim11524,421771
NetParameter::mutable_input_dim() {mutable_input_dim11528,421899
inline bool NetParameter::has_force_backward() const {has_force_backward11533,422015
inline void NetParameter::set_has_force_backward() {set_has_force_backward11536,422117
inline void NetParameter::clear_has_force_backward() {clear_has_force_backward11539,422204
inline void NetParameter::clear_force_backward() {clear_force_backward11542,422294
inline bool NetParameter::force_backward() const {force_backward11546,422404
inline void NetParameter::set_force_backward(bool value) {set_force_backward11549,422483
inline bool NetParameter::has_state() const {has_state11555,422639
inline void NetParameter::set_has_state() {set_has_state11558,422732
inline void NetParameter::clear_has_state() {clear_has_state11561,422810
inline void NetParameter::clear_state() {clear_state11564,422891
inline const ::caffe::NetState& NetParameter::state() const {state11568,423014
inline ::caffe::NetState* NetParameter::mutable_state() {mutable_state11571,423142
inline ::caffe::NetState* NetParameter::release_state() {release_state11576,423292
inline void NetParameter::set_allocated_state(::caffe::NetState* state) {set_allocated_state11582,423441
inline bool NetParameter::has_debug_info() const {has_debug_info11593,423678
inline void NetParameter::set_has_debug_info() {set_has_debug_info11596,423776
inline void NetParameter::clear_has_debug_info() {clear_has_debug_info11599,423859
inline void NetParameter::clear_debug_info() {clear_debug_info11602,423945
inline bool NetParameter::debug_info() const {debug_info11606,424043
inline void NetParameter::set_debug_info(bool value) {set_debug_info11609,424114
inline int NetParameter::layer_size() const {layer_size11615,424266
inline void NetParameter::clear_layer() {clear_layer11618,424338
inline const ::caffe::LayerParameter& NetParameter::layer(int index) const {layer11621,424400
inline ::caffe::LayerParameter* NetParameter::mutable_layer(int index) {mutable_layer11624,424507
inline ::caffe::LayerParameter* NetParameter::add_layer() {add_layer11627,424614
NetParameter::layer() const {layer11631,424777
NetParameter::mutable_layer() {mutable_layer11635,424898
inline int NetParameter::layers_size() const {layers_size11640,424999
inline void NetParameter::clear_layers() {clear_layers11643,425073
inline const ::caffe::V1LayerParameter& NetParameter::layers(int index) const {layers11646,425137
inline ::caffe::V1LayerParameter* NetParameter::mutable_layers(int index) {mutable_layers11649,425248
inline ::caffe::V1LayerParameter* NetParameter::add_layers() {add_layers11652,425359
NetParameter::layers() const {layers11656,425528
NetParameter::mutable_layers() {mutable_layers11660,425653
inline bool SolverParameter::has_net() const {has_net11669,425829
inline void SolverParameter::set_has_net() {set_has_net11672,425923
inline void SolverParameter::clear_has_net() {clear_has_net11675,426002
inline void SolverParameter::clear_net() {clear_net11678,426084
inline const ::std::string& SolverParameter::net() const {net11684,426232
inline void SolverParameter::set_net(const ::std::string& value) {set_net11687,426309
inline void SolverParameter::set_net(const char* value) {set_net11694,426513
inline void SolverParameter::set_net(const char* value, size_t size) {set_net11701,426708
inline ::std::string* SolverParameter::mutable_net() {mutable_net11708,426953
inline ::std::string* SolverParameter::release_net() {release_net11715,427137
inline void SolverParameter::set_allocated_net(::std::string* net) {set_allocated_net11725,427440
inline bool SolverParameter::has_net_param() const {has_net_param11739,427811
inline void SolverParameter::set_has_net_param() {set_has_net_param11742,427911
inline void SolverParameter::clear_has_net_param() {clear_has_net_param11745,427996
inline void SolverParameter::clear_net_param() {clear_net_param11748,428084
inline const ::caffe::NetParameter& SolverParameter::net_param() const {net_param11752,428230
inline ::caffe::NetParameter* SolverParameter::mutable_net_param() {mutable_net_param11755,428381
inline ::caffe::NetParameter* SolverParameter::release_net_param() {release_net_param11760,428562
inline void SolverParameter::set_allocated_net_param(::caffe::NetParameter* net_param) {set_allocated_net_param11766,428738
inline bool SolverParameter::has_train_net() const {has_train_net11777,428997
inline void SolverParameter::set_has_train_net() {set_has_train_net11780,429097
inline void SolverParameter::clear_has_train_net() {clear_has_train_net11783,429182
inline void SolverParameter::clear_train_net() {clear_train_net11786,429270
inline const ::std::string& SolverParameter::train_net() const {train_net11792,429442
inline void SolverParameter::set_train_net(const ::std::string& value) {set_train_net11795,429531
inline void SolverParameter::set_train_net(const char* value) {set_train_net11802,429765
inline void SolverParameter::set_train_net(const char* value, size_t size) {set_train_net11809,429990
inline ::std::string* SolverParameter::mutable_train_net() {mutable_train_net11816,430265
inline ::std::string* SolverParameter::release_train_net() {release_train_net11823,430479
inline void SolverParameter::set_allocated_train_net(::std::string* train_net) {set_allocated_train_net11833,430812
inline int SolverParameter::test_net_size() const {test_net_size11847,431228
inline void SolverParameter::clear_test_net() {clear_test_net11850,431309
inline const ::std::string& SolverParameter::test_net(int index) const {test_net11853,431380
inline ::std::string* SolverParameter::mutable_test_net(int index) {mutable_test_net11856,431486
inline void SolverParameter::set_test_net(int index, const ::std::string& value) {set_test_net11859,431592
inline void SolverParameter::set_test_net(int index, const char* value) {set_test_net11862,431720
inline void SolverParameter::set_test_net(int index, const char* value, size_t size) {set_test_net11865,431839
inline ::std::string* SolverParameter::add_test_net() {add_test_net11869,432013
inline void SolverParameter::add_test_net(const ::std::string& value) {add_test_net11872,432097
inline void SolverParameter::add_test_net(const char* value) {add_test_net11875,432205
inline void SolverParameter::add_test_net(const char* value, size_t size) {add_test_net11878,432304
SolverParameter::test_net() const {test_net11882,432520
SolverParameter::mutable_test_net() {mutable_test_net11886,432639
inline bool SolverParameter::has_train_net_param() const {has_train_net_param11891,432755
inline void SolverParameter::set_has_train_net_param() {set_has_train_net_param11894,432861
inline void SolverParameter::clear_has_train_net_param() {clear_has_train_net_param11897,432952
inline void SolverParameter::clear_train_net_param() {clear_train_net_param11900,433046
inline const ::caffe::NetParameter& SolverParameter::train_net_param() const {train_net_param11904,433216
inline ::caffe::NetParameter* SolverParameter::mutable_train_net_param() {mutable_train_net_param11907,433391
inline ::caffe::NetParameter* SolverParameter::release_train_net_param() {release_train_net_param11912,433602
inline void SolverParameter::set_allocated_train_net_param(::caffe::NetParameter* train_net_param) {set_allocated_train_net_param11918,433802
inline int SolverParameter::test_net_param_size() const {test_net_param_size11929,434128
inline void SolverParameter::clear_test_net_param() {clear_test_net_param11932,434221
inline const ::caffe::NetParameter& SolverParameter::test_net_param(int index) const {test_net_param11935,434304
inline ::caffe::NetParameter* SolverParameter::mutable_test_net_param(int index) {mutable_test_net_param11938,434430
inline ::caffe::NetParameter* SolverParameter::add_test_net_param() {add_test_net_param11941,434556
SolverParameter::test_net_param() const {test_net_param11945,434736
SolverParameter::mutable_test_net_param() {mutable_test_net_param11949,434876
inline bool SolverParameter::has_train_state() const {has_train_state11954,434996
inline void SolverParameter::set_has_train_state() {set_has_train_state11957,435098
inline void SolverParameter::clear_has_train_state() {clear_has_train_state11960,435185
inline void SolverParameter::clear_train_state() {clear_train_state11963,435275
inline const ::caffe::NetState& SolverParameter::train_state() const {train_state11967,435425
inline ::caffe::NetState* SolverParameter::mutable_train_state() {mutable_train_state11970,435580
inline ::caffe::NetState* SolverParameter::release_train_state() {release_train_state11975,435763
inline void SolverParameter::set_allocated_train_state(::caffe::NetState* train_state) {set_allocated_train_state11981,435939
inline int SolverParameter::test_state_size() const {test_state_size11992,436221
inline void SolverParameter::clear_test_state() {clear_test_state11995,436306
inline const ::caffe::NetState& SolverParameter::test_state(int index) const {test_state11998,436381
inline ::caffe::NetState* SolverParameter::mutable_test_state(int index) {mutable_test_state12001,436495
inline ::caffe::NetState* SolverParameter::add_test_state() {add_test_state12004,436609
SolverParameter::test_state() const {test_state12008,436773
SolverParameter::mutable_test_state() {mutable_test_state12012,436901
inline int SolverParameter::test_iter_size() const {test_iter_size12017,437000
inline void SolverParameter::clear_test_iter() {clear_test_iter12020,437083
inline ::google::protobuf::int32 SolverParameter::test_iter(int index) const {test_iter12023,437156
inline void SolverParameter::set_test_iter(int index, ::google::protobuf::int32 value) {set_test_iter12026,437269
inline void SolverParameter::add_test_iter(::google::protobuf::int32 value) {add_test_iter12029,437392
SolverParameter::test_iter() const {test_iter12033,437574
SolverParameter::mutable_test_iter() {mutable_test_iter12037,437705
inline bool SolverParameter::has_test_interval() const {has_test_interval12042,437820
inline void SolverParameter::set_has_test_interval() {set_has_test_interval12045,437924
inline void SolverParameter::clear_has_test_interval() {clear_has_test_interval12048,438013
inline void SolverParameter::clear_test_interval() {clear_test_interval12051,438105
inline ::google::protobuf::int32 SolverParameter::test_interval() const {test_interval12055,438211
inline void SolverParameter::set_test_interval(::google::protobuf::int32 value) {set_test_interval12058,438312
inline bool SolverParameter::has_test_compute_loss() const {has_test_compute_loss12064,438509
inline void SolverParameter::set_has_test_compute_loss() {set_has_test_compute_loss12067,438617
inline void SolverParameter::clear_has_test_compute_loss() {clear_has_test_compute_loss12070,438710
inline void SolverParameter::clear_test_compute_loss() {clear_test_compute_loss12073,438806
inline bool SolverParameter::test_compute_loss() const {test_compute_loss12077,438928
inline void SolverParameter::set_test_compute_loss(bool value) {set_test_compute_loss12080,439016
inline bool SolverParameter::has_test_initialization() const {has_test_initialization12086,439205
inline void SolverParameter::set_has_test_initialization() {set_has_test_initialization12089,439315
inline void SolverParameter::clear_has_test_initialization() {clear_has_test_initialization12092,439410
inline void SolverParameter::clear_test_initialization() {clear_test_initialization12095,439508
inline bool SolverParameter::test_initialization() const {test_initialization12099,439635
inline void SolverParameter::set_test_initialization(bool value) {set_test_initialization12102,439727
inline bool SolverParameter::has_base_lr() const {has_base_lr12108,439893
inline void SolverParameter::set_has_base_lr() {set_has_base_lr12111,439991
inline void SolverParameter::clear_has_base_lr() {clear_has_base_lr12114,440074
inline void SolverParameter::clear_base_lr() {clear_base_lr12117,440160
inline float SolverParameter::base_lr() const {base_lr12121,440248
inline void SolverParameter::set_base_lr(float value) {set_base_lr12124,440317
inline bool SolverParameter::has_display() const {has_display12130,440448
inline void SolverParameter::set_has_display() {set_has_display12133,440546
inline void SolverParameter::clear_has_display() {clear_has_display12136,440629
inline void SolverParameter::clear_display() {clear_display12139,440715
inline ::google::protobuf::int32 SolverParameter::display() const {display12143,440803
inline void SolverParameter::set_display(::google::protobuf::int32 value) {set_display12146,440892
inline bool SolverParameter::has_average_loss() const {has_average_loss12152,441063
inline void SolverParameter::set_has_average_loss() {set_has_average_loss12155,441166
inline void SolverParameter::clear_has_average_loss() {clear_has_average_loss12158,441254
inline void SolverParameter::clear_average_loss() {clear_average_loss12161,441345
inline ::google::protobuf::int32 SolverParameter::average_loss() const {average_loss12165,441448
inline void SolverParameter::set_average_loss(::google::protobuf::int32 value) {set_average_loss12168,441547
inline bool SolverParameter::has_max_iter() const {has_max_iter12174,441714
inline void SolverParameter::set_has_max_iter() {set_has_max_iter12177,441813
inline void SolverParameter::clear_has_max_iter() {clear_has_max_iter12180,441897
inline void SolverParameter::clear_max_iter() {clear_max_iter12183,441984
inline ::google::protobuf::int32 SolverParameter::max_iter() const {max_iter12187,442075
inline void SolverParameter::set_max_iter(::google::protobuf::int32 value) {set_max_iter12190,442166
inline bool SolverParameter::has_iter_size() const {has_iter_size12196,442337
inline void SolverParameter::set_has_iter_size() {set_has_iter_size12199,442437
inline void SolverParameter::clear_has_iter_size() {clear_has_iter_size12202,442522
inline void SolverParameter::clear_iter_size() {clear_iter_size12205,442610
inline ::google::protobuf::int32 SolverParameter::iter_size() const {iter_size12209,442704
inline void SolverParameter::set_iter_size(::google::protobuf::int32 value) {set_iter_size12212,442797
inline bool SolverParameter::has_lr_policy() const {has_lr_policy12218,442957
inline void SolverParameter::set_has_lr_policy() {set_has_lr_policy12221,443057
inline void SolverParameter::clear_has_lr_policy() {clear_has_lr_policy12224,443142
inline void SolverParameter::clear_lr_policy() {clear_lr_policy12227,443230
inline const ::std::string& SolverParameter::lr_policy() const {lr_policy12233,443402
inline void SolverParameter::set_lr_policy(const ::std::string& value) {set_lr_policy12236,443491
inline void SolverParameter::set_lr_policy(const char* value) {set_lr_policy12243,443725
inline void SolverParameter::set_lr_policy(const char* value, size_t size) {set_lr_policy12250,443950
inline ::std::string* SolverParameter::mutable_lr_policy() {mutable_lr_policy12257,444225
inline ::std::string* SolverParameter::release_lr_policy() {release_lr_policy12264,444439
inline void SolverParameter::set_allocated_lr_policy(::std::string* lr_policy) {set_allocated_lr_policy12274,444772
inline bool SolverParameter::has_gamma() const {has_gamma12288,445184
inline void SolverParameter::set_has_gamma() {set_has_gamma12291,445280
inline void SolverParameter::clear_has_gamma() {clear_has_gamma12294,445361
inline void SolverParameter::clear_gamma() {clear_gamma12297,445445
inline float SolverParameter::gamma() const {gamma12301,445527
inline void SolverParameter::set_gamma(float value) {set_gamma12304,445592
inline bool SolverParameter::has_power() const {has_power12310,445716
inline void SolverParameter::set_has_power() {set_has_power12313,445812
inline void SolverParameter::clear_has_power() {clear_has_power12316,445893
inline void SolverParameter::clear_power() {clear_power12319,445977
inline float SolverParameter::power() const {power12323,446059
inline void SolverParameter::set_power(float value) {set_power12326,446124
inline bool SolverParameter::has_momentum() const {has_momentum12332,446251
inline void SolverParameter::set_has_momentum() {set_has_momentum12335,446350
inline void SolverParameter::clear_has_momentum() {clear_has_momentum12338,446434
inline void SolverParameter::clear_momentum() {clear_momentum12341,446521
inline float SolverParameter::momentum() const {momentum12345,446612
inline void SolverParameter::set_momentum(float value) {set_momentum12348,446683
inline bool SolverParameter::has_weight_decay() const {has_weight_decay12354,446823
inline void SolverParameter::set_has_weight_decay() {set_has_weight_decay12357,446926
inline void SolverParameter::clear_has_weight_decay() {clear_has_weight_decay12360,447014
inline void SolverParameter::clear_weight_decay() {clear_weight_decay12363,447105
inline float SolverParameter::weight_decay() const {weight_decay12367,447208
inline void SolverParameter::set_weight_decay(float value) {set_weight_decay12370,447287
inline bool SolverParameter::has_regularization_type() const {has_regularization_type12376,447464
inline void SolverParameter::set_has_regularization_type() {set_has_regularization_type12379,447574
inline void SolverParameter::clear_has_regularization_type() {clear_has_regularization_type12382,447669
inline void SolverParameter::clear_regularization_type() {clear_regularization_type12385,447767
inline const ::std::string& SolverParameter::regularization_type() const {regularization_type12391,447996
inline void SolverParameter::set_regularization_type(const ::std::string& value) {set_regularization_type12394,448105
inline void SolverParameter::set_regularization_type(const char* value) {set_regularization_type12401,448375
inline void SolverParameter::set_regularization_type(const char* value, size_t size) {set_regularization_type12408,448636
inline ::std::string* SolverParameter::mutable_regularization_type() {mutable_regularization_type12415,448947
inline ::std::string* SolverParameter::release_regularization_type() {release_regularization_type12422,449229
inline void SolverParameter::set_allocated_regularization_type(::std::string* regularization_type) {set_allocated_regularization_type12432,449584
inline bool SolverParameter::has_stepsize() const {has_stepsize12446,450072
inline void SolverParameter::set_has_stepsize() {set_has_stepsize12449,450171
inline void SolverParameter::clear_has_stepsize() {clear_has_stepsize12452,450255
inline void SolverParameter::clear_stepsize() {clear_stepsize12455,450342
inline ::google::protobuf::int32 SolverParameter::stepsize() const {stepsize12459,450433
inline void SolverParameter::set_stepsize(::google::protobuf::int32 value) {set_stepsize12462,450524
inline int SolverParameter::stepvalue_size() const {stepvalue_size12468,450681
inline void SolverParameter::clear_stepvalue() {clear_stepvalue12471,450764
inline ::google::protobuf::int32 SolverParameter::stepvalue(int index) const {stepvalue12474,450837
inline void SolverParameter::set_stepvalue(int index, ::google::protobuf::int32 value) {set_stepvalue12477,450950
inline void SolverParameter::add_stepvalue(::google::protobuf::int32 value) {add_stepvalue12480,451073
SolverParameter::stepvalue() const {stepvalue12484,451255
SolverParameter::mutable_stepvalue() {mutable_stepvalue12488,451386
inline bool SolverParameter::has_clip_gradients() const {has_clip_gradients12493,451504
inline void SolverParameter::set_has_clip_gradients() {set_has_clip_gradients12496,451609
inline void SolverParameter::clear_has_clip_gradients() {clear_has_clip_gradients12499,451699
inline void SolverParameter::clear_clip_gradients() {clear_clip_gradients12502,451792
inline float SolverParameter::clip_gradients() const {clip_gradients12506,451902
inline void SolverParameter::set_clip_gradients(float value) {set_clip_gradients12509,451985
inline bool SolverParameter::has_snapshot() const {has_snapshot12515,452153
inline void SolverParameter::set_has_snapshot() {set_has_snapshot12518,452252
inline void SolverParameter::clear_has_snapshot() {clear_has_snapshot12521,452336
inline void SolverParameter::clear_snapshot() {clear_snapshot12524,452423
inline ::google::protobuf::int32 SolverParameter::snapshot() const {snapshot12528,452514
inline void SolverParameter::set_snapshot(::google::protobuf::int32 value) {set_snapshot12531,452605
inline bool SolverParameter::has_snapshot_prefix() const {has_snapshot_prefix12537,452769
inline void SolverParameter::set_has_snapshot_prefix() {set_has_snapshot_prefix12540,452875
inline void SolverParameter::clear_has_snapshot_prefix() {clear_has_snapshot_prefix12543,452966
inline void SolverParameter::clear_snapshot_prefix() {clear_snapshot_prefix12546,453060
inline const ::std::string& SolverParameter::snapshot_prefix() const {snapshot_prefix12552,453256
inline void SolverParameter::set_snapshot_prefix(const ::std::string& value) {set_snapshot_prefix12555,453357
inline void SolverParameter::set_snapshot_prefix(const char* value) {set_snapshot_prefix12562,453621
inline void SolverParameter::set_snapshot_prefix(const char* value, size_t size) {set_snapshot_prefix12569,453876
inline ::std::string* SolverParameter::mutable_snapshot_prefix() {mutable_snapshot_prefix12576,454181
inline ::std::string* SolverParameter::release_snapshot_prefix() {release_snapshot_prefix12583,454425
inline void SolverParameter::set_allocated_snapshot_prefix(::std::string* snapshot_prefix) {set_allocated_snapshot_prefix12593,454788
inline bool SolverParameter::has_snapshot_diff() const {has_snapshot_diff12607,455286
inline void SolverParameter::set_has_snapshot_diff() {set_has_snapshot_diff12610,455390
inline void SolverParameter::clear_has_snapshot_diff() {clear_has_snapshot_diff12613,455479
inline void SolverParameter::clear_snapshot_diff() {clear_snapshot_diff12616,455571
inline bool SolverParameter::snapshot_diff() const {snapshot_diff12620,455681
inline void SolverParameter::set_snapshot_diff(bool value) {set_snapshot_diff12623,455761
inline bool SolverParameter::has_snapshot_format() const {has_snapshot_format12629,455974
inline void SolverParameter::set_has_snapshot_format() {set_has_snapshot_format12632,456080
inline void SolverParameter::clear_has_snapshot_format() {clear_has_snapshot_format12635,456171
inline void SolverParameter::clear_snapshot_format() {clear_snapshot_format12638,456265
inline ::caffe::SolverParameter_SnapshotFormat SolverParameter::snapshot_format() const {snapshot_format12642,456377
inline void SolverParameter::set_snapshot_format(::caffe::SolverParameter_SnapshotFormat value) {set_snapshot_format12645,456552
inline bool SolverParameter::has_solver_mode() const {has_solver_mode12652,456856
inline void SolverParameter::set_has_solver_mode() {set_has_solver_mode12655,456958
inline void SolverParameter::clear_has_solver_mode() {clear_has_solver_mode12658,457045
inline void SolverParameter::clear_solver_mode() {clear_solver_mode12661,457135
inline ::caffe::SolverParameter_SolverMode SolverParameter::solver_mode() const {solver_mode12665,457235
inline void SolverParameter::set_solver_mode(::caffe::SolverParameter_SolverMode value) {set_solver_mode12668,457394
inline bool SolverParameter::has_device_id() const {has_device_id12675,457646
inline void SolverParameter::set_has_device_id() {set_has_device_id12678,457746
inline void SolverParameter::clear_has_device_id() {clear_has_device_id12681,457831
inline void SolverParameter::clear_device_id() {clear_device_id12684,457919
inline ::google::protobuf::int32 SolverParameter::device_id() const {device_id12688,458013
inline void SolverParameter::set_device_id(::google::protobuf::int32 value) {set_device_id12691,458106
inline bool SolverParameter::has_random_seed() const {has_random_seed12697,458283
inline void SolverParameter::set_has_random_seed() {set_has_random_seed12700,458385
inline void SolverParameter::clear_has_random_seed() {clear_has_random_seed12703,458472
inline void SolverParameter::clear_random_seed() {clear_random_seed12706,458562
inline ::google::protobuf::int64 SolverParameter::random_seed() const {random_seed12710,458680
inline void SolverParameter::set_random_seed(::google::protobuf::int64 value) {set_random_seed12713,458777
inline bool SolverParameter::has_type() const {has_type12719,458957
inline void SolverParameter::set_has_type() {set_has_type12722,459052
inline void SolverParameter::clear_has_type() {clear_has_type12725,459132
inline void SolverParameter::clear_type() {clear_type12728,459215
inline const ::std::string& SolverParameter::type() const {type12734,459354
inline void SolverParameter::set_type(const ::std::string& value) {set_type12737,459433
inline void SolverParameter::set_type(const char* value) {set_type12744,459613
inline void SolverParameter::set_type(const char* value, size_t size) {set_type12751,459784
inline ::std::string* SolverParameter::mutable_type() {mutable_type12758,460005
inline ::std::string* SolverParameter::release_type() {release_type12765,460182
inline void SolverParameter::set_allocated_type(::std::string* type) {set_allocated_type12775,460432
inline bool SolverParameter::has_delta() const {has_delta12789,460755
inline void SolverParameter::set_has_delta() {set_has_delta12792,460851
inline void SolverParameter::clear_has_delta() {clear_has_delta12795,460932
inline void SolverParameter::clear_delta() {clear_delta12798,461016
inline float SolverParameter::delta() const {delta12802,461103
inline void SolverParameter::set_delta(float value) {set_delta12805,461168
inline bool SolverParameter::has_momentum2() const {has_momentum212811,461314
inline void SolverParameter::set_has_momentum2() {set_has_momentum212814,461414
inline void SolverParameter::clear_has_momentum2() {clear_has_momentum212817,461499
inline void SolverParameter::clear_momentum2() {clear_momentum212820,461587
inline float SolverParameter::momentum2() const {momentum212824,461686
inline void SolverParameter::set_momentum2(float value) {set_momentum212827,461759
inline bool SolverParameter::has_rms_decay() const {has_rms_decay12833,461916
inline void SolverParameter::set_has_rms_decay() {set_has_rms_decay12836,462016
inline void SolverParameter::clear_has_rms_decay() {clear_has_rms_decay12839,462101
inline void SolverParameter::clear_rms_decay() {clear_rms_decay12842,462189
inline float SolverParameter::rms_decay() const {rms_decay12846,462287
inline void SolverParameter::set_rms_decay(float value) {set_rms_decay12849,462360
inline bool SolverParameter::has_debug_info() const {has_debug_info12855,462518
inline void SolverParameter::set_has_debug_info() {set_has_debug_info12858,462619
inline void SolverParameter::clear_has_debug_info() {clear_has_debug_info12861,462705
inline void SolverParameter::clear_debug_info() {clear_debug_info12864,462794
inline bool SolverParameter::debug_info() const {debug_info12868,462895
inline void SolverParameter::set_debug_info(bool value) {set_debug_info12871,462969
inline bool SolverParameter::has_snapshot_after_train() const {has_snapshot_after_train12877,463138
inline void SolverParameter::set_has_snapshot_after_train() {set_has_snapshot_after_train12880,463249
inline void SolverParameter::clear_has_snapshot_after_train() {clear_has_snapshot_after_train12883,463345
inline void SolverParameter::clear_snapshot_after_train() {clear_snapshot_after_train12886,463444
inline bool SolverParameter::snapshot_after_train() const {snapshot_after_train12890,463574
inline void SolverParameter::set_snapshot_after_train(bool value) {set_snapshot_after_train12893,463668
inline bool SolverParameter::has_solver_type() const {has_solver_type12899,463886
inline void SolverParameter::set_has_solver_type() {set_has_solver_type12902,463988
inline void SolverParameter::clear_has_solver_type() {clear_has_solver_type12905,464075
inline void SolverParameter::clear_solver_type() {clear_solver_type12908,464165
inline ::caffe::SolverParameter_SolverType SolverParameter::solver_type() const {solver_type12912,464265
inline void SolverParameter::set_solver_type(::caffe::SolverParameter_SolverType value) {set_solver_type12915,464424
inline bool SolverParameter::has_layer_wise_reduce() const {has_layer_wise_reduce12922,464686
inline void SolverParameter::set_has_layer_wise_reduce() {set_has_layer_wise_reduce12925,464794
inline void SolverParameter::clear_has_layer_wise_reduce() {clear_has_layer_wise_reduce12928,464887
inline void SolverParameter::clear_layer_wise_reduce() {clear_layer_wise_reduce12931,464983
inline bool SolverParameter::layer_wise_reduce() const {layer_wise_reduce12935,465104
inline void SolverParameter::set_layer_wise_reduce(bool value) {set_layer_wise_reduce12938,465192
inline bool SolverState::has_iter() const {has_iter12948,465437
inline void SolverState::set_has_iter() {set_has_iter12951,465528
inline void SolverState::clear_has_iter() {clear_has_iter12954,465604
inline void SolverState::clear_iter() {clear_iter12957,465683
inline ::google::protobuf::int32 SolverState::iter() const {iter12961,465758
inline void SolverState::set_iter(::google::protobuf::int32 value) {set_iter12964,465837
inline bool SolverState::has_learned_net() const {has_learned_net12970,465980
inline void SolverState::set_has_learned_net() {set_has_learned_net12973,466078
inline void SolverState::clear_has_learned_net() {clear_has_learned_net12976,466161
inline void SolverState::clear_learned_net() {clear_learned_net12979,466247
inline const ::std::string& SolverState::learned_net() const {learned_net12985,466423
inline void SolverState::set_learned_net(const ::std::string& value) {set_learned_net12988,466512
inline void SolverState::set_learned_net(const char* value) {set_learned_net12995,466752
inline void SolverState::set_learned_net(const char* value, size_t size) {set_learned_net13002,466983
inline ::std::string* SolverState::mutable_learned_net() {mutable_learned_net13009,467264
inline ::std::string* SolverState::release_learned_net() {release_learned_net13016,467484
inline void SolverState::set_allocated_learned_net(::std::string* learned_net) {set_allocated_learned_net13026,467823
inline int SolverState::history_size() const {history_size13040,468264
inline void SolverState::clear_history() {clear_history13043,468339
inline const ::caffe::BlobProto& SolverState::history(int index) const {history13046,468404
inline ::caffe::BlobProto* SolverState::mutable_history(int index) {mutable_history13049,468509
inline ::caffe::BlobProto* SolverState::add_history() {add_history13052,468614
SolverState::history() const {history13056,468770
SolverState::mutable_history() {mutable_history13060,468889
inline bool SolverState::has_current_step() const {has_current_step13065,468995
inline void SolverState::set_has_current_step() {set_has_current_step13068,469094
inline void SolverState::clear_has_current_step() {clear_has_current_step13071,469178
inline void SolverState::clear_current_step() {clear_current_step13074,469265
inline ::google::protobuf::int32 SolverState::current_step() const {current_step13078,469364
inline void SolverState::set_current_step(::google::protobuf::int32 value) {set_current_step13081,469459
inline bool NetState::has_phase() const {has_phase13091,469728
inline void NetState::set_has_phase() {set_has_phase13094,469817
inline void NetState::clear_has_phase() {clear_has_phase13097,469891
inline void NetState::clear_phase() {clear_phase13100,469968
inline ::caffe::Phase NetState::phase() const {phase13104,470043
inline void NetState::set_phase(::caffe::Phase value) {set_phase13107,470141
inline bool NetState::has_level() const {has_level13114,470321
inline void NetState::set_has_level() {set_has_level13117,470410
inline void NetState::clear_has_level() {clear_has_level13120,470484
inline void NetState::clear_level() {clear_level13123,470561
inline ::google::protobuf::int32 NetState::level() const {level13127,470636
inline void NetState::set_level(::google::protobuf::int32 value) {set_level13130,470714
inline int NetState::stage_size() const {stage_size13136,470851
inline void NetState::clear_stage() {clear_stage13139,470919
inline const ::std::string& NetState::stage(int index) const {stage13142,470977
inline ::std::string* NetState::mutable_stage(int index) {mutable_stage13145,471070
inline void NetState::set_stage(int index, const ::std::string& value) {set_stage13148,471163
inline void NetState::set_stage(int index, const char* value) {set_stage13151,471278
inline void NetState::set_stage(int index, const char* value, size_t size) {set_stage13154,471384
inline ::std::string* NetState::add_stage() {add_stage13158,471545
inline void NetState::add_stage(const ::std::string& value) {add_stage13161,471616
inline void NetState::add_stage(const char* value) {add_stage13164,471711
inline void NetState::add_stage(const char* value, size_t size) {add_stage13167,471797
NetState::stage() const {stage13171,472000
NetState::mutable_stage() {mutable_stage13175,472106
inline bool NetStateRule::has_phase() const {has_phase13184,472280
inline void NetStateRule::set_has_phase() {set_has_phase13187,472373
inline void NetStateRule::clear_has_phase() {clear_has_phase13190,472451
inline void NetStateRule::clear_phase() {clear_phase13193,472532
inline ::caffe::Phase NetStateRule::phase() const {phase13197,472611
inline void NetStateRule::set_phase(::caffe::Phase value) {set_phase13200,472713
inline bool NetStateRule::has_min_level() const {has_min_level13207,472887
inline void NetStateRule::set_has_min_level() {set_has_min_level13210,472984
inline void NetStateRule::clear_has_min_level() {clear_has_min_level13213,473066
inline void NetStateRule::clear_min_level() {clear_min_level13216,473151
inline ::google::protobuf::int32 NetStateRule::min_level() const {min_level13220,473242
inline void NetStateRule::set_min_level(::google::protobuf::int32 value) {set_min_level13223,473332
inline bool NetStateRule::has_max_level() const {has_max_level13229,473488
inline void NetStateRule::set_has_max_level() {set_has_max_level13232,473585
inline void NetStateRule::clear_has_max_level() {clear_has_max_level13235,473667
inline void NetStateRule::clear_max_level() {clear_max_level13238,473752
inline ::google::protobuf::int32 NetStateRule::max_level() const {max_level13242,473843
inline void NetStateRule::set_max_level(::google::protobuf::int32 value) {set_max_level13245,473933
inline int NetStateRule::stage_size() const {stage_size13251,474086
inline void NetStateRule::clear_stage() {clear_stage13254,474158
inline const ::std::string& NetStateRule::stage(int index) const {stage13257,474220
inline ::std::string* NetStateRule::mutable_stage(int index) {mutable_stage13260,474317
inline void NetStateRule::set_stage(int index, const ::std::string& value) {set_stage13263,474414
inline void NetStateRule::set_stage(int index, const char* value) {set_stage13266,474533
inline void NetStateRule::set_stage(int index, const char* value, size_t size) {set_stage13269,474643
inline ::std::string* NetStateRule::add_stage() {add_stage13273,474808
inline void NetStateRule::add_stage(const ::std::string& value) {add_stage13276,474883
inline void NetStateRule::add_stage(const char* value) {add_stage13279,474982
inline void NetStateRule::add_stage(const char* value, size_t size) {add_stage13282,475072
NetStateRule::stage() const {stage13286,475279
NetStateRule::mutable_stage() {mutable_stage13290,475389
inline int NetStateRule::not_stage_size() const {not_stage_size13295,475476
inline void NetStateRule::clear_not_stage() {clear_not_stage13298,475556
inline const ::std::string& NetStateRule::not_stage(int index) const {not_stage13301,475626
inline ::std::string* NetStateRule::mutable_not_stage(int index) {mutable_not_stage13304,475731
inline void NetStateRule::set_not_stage(int index, const ::std::string& value) {set_not_stage13307,475836
inline void NetStateRule::set_not_stage(int index, const char* value) {set_not_stage13310,475963
inline void NetStateRule::set_not_stage(int index, const char* value, size_t size) {set_not_stage13313,476081
inline ::std::string* NetStateRule::add_not_stage() {add_not_stage13317,476254
inline void NetStateRule::add_not_stage(const ::std::string& value) {add_not_stage13320,476337
inline void NetStateRule::add_not_stage(const char* value) {add_not_stage13323,476444
inline void NetStateRule::add_not_stage(const char* value, size_t size) {add_not_stage13326,476542
NetStateRule::not_stage() const {not_stage13330,476757
NetStateRule::mutable_not_stage() {mutable_not_stage13334,476875
inline bool ParamSpec::has_name() const {has_name13343,477051
inline void ParamSpec::set_has_name() {set_has_name13346,477140
inline void ParamSpec::clear_has_name() {clear_has_name13349,477214
inline void ParamSpec::clear_name() {clear_name13352,477291
inline const ::std::string& ParamSpec::name() const {name13358,477437
inline void ParamSpec::set_name(const ::std::string& value) {set_name13361,477510
inline void ParamSpec::set_name(const char* value) {set_name13368,477713
inline void ParamSpec::set_name(const char* value, size_t size) {set_name13375,477907
inline ::std::string* ParamSpec::mutable_name() {mutable_name13382,478151
inline ::std::string* ParamSpec::release_name() {release_name13389,478334
inline void ParamSpec::set_allocated_name(::std::string* name) {set_allocated_name13399,478636
inline bool ParamSpec::has_share_mode() const {has_share_mode13413,479021
inline void ParamSpec::set_has_share_mode() {set_has_share_mode13416,479116
inline void ParamSpec::clear_has_share_mode() {clear_has_share_mode13419,479196
inline void ParamSpec::clear_share_mode() {clear_share_mode13422,479279
inline ::caffe::ParamSpec_DimCheckMode ParamSpec::share_mode() const {share_mode13426,479370
inline void ParamSpec::set_share_mode(::caffe::ParamSpec_DimCheckMode value) {set_share_mode13429,479513
inline bool ParamSpec::has_lr_mult() const {has_lr_mult13436,479745
inline void ParamSpec::set_has_lr_mult() {set_has_lr_mult13439,479837
inline void ParamSpec::clear_has_lr_mult() {clear_has_lr_mult13442,479914
inline void ParamSpec::clear_lr_mult() {clear_lr_mult13445,479994
inline float ParamSpec::lr_mult() const {lr_mult13449,480076
inline void ParamSpec::set_lr_mult(float value) {set_lr_mult13452,480139
inline bool ParamSpec::has_decay_mult() const {has_decay_mult13458,480281
inline void ParamSpec::set_has_decay_mult() {set_has_decay_mult13461,480376
inline void ParamSpec::clear_has_decay_mult() {clear_has_decay_mult13464,480456
inline void ParamSpec::clear_decay_mult() {clear_decay_mult13467,480539
inline float ParamSpec::decay_mult() const {decay_mult13471,480630
inline void ParamSpec::set_decay_mult(float value) {set_decay_mult13474,480699
inline bool LayerParameter::has_name() const {has_name13484,480922
inline void LayerParameter::set_has_name() {set_has_name13487,481016
inline void LayerParameter::clear_has_name() {clear_has_name13490,481095
inline void LayerParameter::clear_name() {clear_name13493,481177
inline const ::std::string& LayerParameter::name() const {name13499,481328
inline void LayerParameter::set_name(const ::std::string& value) {set_name13502,481406
inline void LayerParameter::set_name(const char* value) {set_name13509,481614
inline void LayerParameter::set_name(const char* value, size_t size) {set_name13516,481813
inline ::std::string* LayerParameter::mutable_name() {mutable_name13523,482062
inline ::std::string* LayerParameter::release_name() {release_name13530,482250
inline void LayerParameter::set_allocated_name(::std::string* name) {set_allocated_name13540,482557
inline bool LayerParameter::has_type() const {has_type13554,482918
inline void LayerParameter::set_has_type() {set_has_type13557,483012
inline void LayerParameter::clear_has_type() {clear_has_type13560,483091
inline void LayerParameter::clear_type() {clear_type13563,483173
inline const ::std::string& LayerParameter::type() const {type13569,483324
inline void LayerParameter::set_type(const ::std::string& value) {set_type13572,483402
inline void LayerParameter::set_type(const char* value) {set_type13579,483610
inline void LayerParameter::set_type(const char* value, size_t size) {set_type13586,483809
inline ::std::string* LayerParameter::mutable_type() {mutable_type13593,484058
inline ::std::string* LayerParameter::release_type() {release_type13600,484246
inline void LayerParameter::set_allocated_type(::std::string* type) {set_allocated_type13610,484553
inline int LayerParameter::bottom_size() const {bottom_size13624,484916
inline void LayerParameter::clear_bottom() {clear_bottom13627,484992
inline const ::std::string& LayerParameter::bottom(int index) const {bottom13630,485058
inline ::std::string* LayerParameter::mutable_bottom(int index) {mutable_bottom13633,485159
inline void LayerParameter::set_bottom(int index, const ::std::string& value) {set_bottom13636,485260
inline void LayerParameter::set_bottom(int index, const char* value) {set_bottom13639,485383
inline void LayerParameter::set_bottom(int index, const char* value, size_t size) {set_bottom13642,485497
inline ::std::string* LayerParameter::add_bottom() {add_bottom13646,485666
inline void LayerParameter::add_bottom(const ::std::string& value) {add_bottom13649,485745
inline void LayerParameter::add_bottom(const char* value) {add_bottom13652,485848
inline void LayerParameter::add_bottom(const char* value, size_t size) {add_bottom13655,485942
LayerParameter::bottom() const {bottom13659,486153
LayerParameter::mutable_bottom() {mutable_bottom13663,486267
inline int LayerParameter::top_size() const {top_size13668,486352
inline void LayerParameter::clear_top() {clear_top13671,486422
inline const ::std::string& LayerParameter::top(int index) const {top13674,486482
inline ::std::string* LayerParameter::mutable_top(int index) {mutable_top13677,486577
inline void LayerParameter::set_top(int index, const ::std::string& value) {set_top13680,486672
inline void LayerParameter::set_top(int index, const char* value) {set_top13683,486789
inline void LayerParameter::set_top(int index, const char* value, size_t size) {set_top13686,486897
inline ::std::string* LayerParameter::add_top() {add_top13690,487060
inline void LayerParameter::add_top(const ::std::string& value) {add_top13693,487133
inline void LayerParameter::add_top(const char* value) {add_top13696,487230
inline void LayerParameter::add_top(const char* value, size_t size) {add_top13699,487318
LayerParameter::top() const {top13703,487523
LayerParameter::mutable_top() {mutable_top13707,487631
inline bool LayerParameter::has_phase() const {has_phase13712,487719
inline void LayerParameter::set_has_phase() {set_has_phase13715,487814
inline void LayerParameter::clear_has_phase() {clear_has_phase13718,487894
inline void LayerParameter::clear_phase() {clear_phase13721,487977
inline ::caffe::Phase LayerParameter::phase() const {phase13725,488058
inline void LayerParameter::set_phase(::caffe::Phase value) {set_phase13728,488162
inline int LayerParameter::loss_weight_size() const {loss_weight_size13735,488340
inline void LayerParameter::clear_loss_weight() {clear_loss_weight13738,488426
inline float LayerParameter::loss_weight(int index) const {loss_weight13741,488502
inline void LayerParameter::set_loss_weight(int index, float value) {set_loss_weight13744,488598
inline void LayerParameter::add_loss_weight(float value) {add_loss_weight13747,488704
LayerParameter::loss_weight() const {loss_weight13751,488849
LayerParameter::mutable_loss_weight() {mutable_loss_weight13755,488963
inline int LayerParameter::param_size() const {param_size13760,489070
inline void LayerParameter::clear_param() {clear_param13763,489144
inline const ::caffe::ParamSpec& LayerParameter::param(int index) const {param13766,489208
inline ::caffe::ParamSpec* LayerParameter::mutable_param(int index) {mutable_param13769,489312
inline ::caffe::ParamSpec* LayerParameter::add_param() {add_param13772,489416
LayerParameter::param() const {param13776,489571
LayerParameter::mutable_param() {mutable_param13780,489689
inline int LayerParameter::blobs_size() const {blobs_size13785,489784
inline void LayerParameter::clear_blobs() {clear_blobs13788,489858
inline const ::caffe::BlobProto& LayerParameter::blobs(int index) const {blobs13791,489922
inline ::caffe::BlobProto* LayerParameter::mutable_blobs(int index) {mutable_blobs13794,490026
inline ::caffe::BlobProto* LayerParameter::add_blobs() {add_blobs13797,490130
LayerParameter::blobs() const {blobs13801,490285
LayerParameter::mutable_blobs() {mutable_blobs13805,490403
inline int LayerParameter::propagate_down_size() const {propagate_down_size13810,490496
inline void LayerParameter::clear_propagate_down() {clear_propagate_down13813,490588
inline bool LayerParameter::propagate_down(int index) const {propagate_down13816,490670
inline void LayerParameter::set_propagate_down(int index, bool value) {set_propagate_down13819,490771
inline void LayerParameter::add_propagate_down(bool value) {add_propagate_down13822,490882
LayerParameter::propagate_down() const {propagate_down13826,491031
LayerParameter::mutable_propagate_down() {mutable_propagate_down13830,491150
inline int LayerParameter::include_size() const {include_size13835,491268
inline void LayerParameter::clear_include() {clear_include13838,491346
inline const ::caffe::NetStateRule& LayerParameter::include(int index) const {include13841,491414
inline ::caffe::NetStateRule* LayerParameter::mutable_include(int index) {mutable_include13844,491525
inline ::caffe::NetStateRule* LayerParameter::add_include() {add_include13847,491636
LayerParameter::include() const {include13851,491801
LayerParameter::mutable_include() {mutable_include13855,491926
inline int LayerParameter::exclude_size() const {exclude_size13860,492030
inline void LayerParameter::clear_exclude() {clear_exclude13863,492108
inline const ::caffe::NetStateRule& LayerParameter::exclude(int index) const {exclude13866,492176
inline ::caffe::NetStateRule* LayerParameter::mutable_exclude(int index) {mutable_exclude13869,492287
inline ::caffe::NetStateRule* LayerParameter::add_exclude() {add_exclude13872,492398
LayerParameter::exclude() const {exclude13876,492563
LayerParameter::mutable_exclude() {mutable_exclude13880,492688
inline bool LayerParameter::has_transform_param() const {has_transform_param13885,492813
inline void LayerParameter::set_has_transform_param() {set_has_transform_param13888,492918
inline void LayerParameter::clear_has_transform_param() {clear_has_transform_param13891,493008
inline void LayerParameter::clear_transform_param() {clear_transform_param13894,493101
inline const ::caffe::TransformationParameter& LayerParameter::transform_param() const {transform_param13898,493281
inline ::caffe::TransformationParameter* LayerParameter::mutable_transform_param() {mutable_transform_param13901,493466
inline ::caffe::TransformationParameter* LayerParameter::release_transform_param() {release_transform_param13906,493698
inline void LayerParameter::set_allocated_transform_param(::caffe::TransformationParameter* transform_param) {set_allocated_transform_param13912,493919
inline bool LayerParameter::has_loss_param() const {has_loss_param13923,494253
inline void LayerParameter::set_has_loss_param() {set_has_loss_param13926,494353
inline void LayerParameter::clear_has_loss_param() {clear_has_loss_param13929,494438
inline void LayerParameter::clear_loss_param() {clear_loss_param13932,494526
inline const ::caffe::LossParameter& LayerParameter::loss_param() const {loss_param13936,494676
inline ::caffe::LossParameter* LayerParameter::mutable_loss_param() {mutable_loss_param13939,494831
inline ::caffe::LossParameter* LayerParameter::release_loss_param() {release_loss_param13944,495018
inline void LayerParameter::set_allocated_loss_param(::caffe::LossParameter* loss_param) {set_allocated_loss_param13950,495199
inline bool LayerParameter::has_accuracy_param() const {has_accuracy_param13961,495491
inline void LayerParameter::set_has_accuracy_param() {set_has_accuracy_param13964,495595
inline void LayerParameter::clear_has_accuracy_param() {clear_has_accuracy_param13967,495684
inline void LayerParameter::clear_accuracy_param() {clear_accuracy_param13970,495776
inline const ::caffe::AccuracyParameter& LayerParameter::accuracy_param() const {accuracy_param13974,495946
inline ::caffe::AccuracyParameter* LayerParameter::mutable_accuracy_param() {mutable_accuracy_param13977,496121
inline ::caffe::AccuracyParameter* LayerParameter::release_accuracy_param() {release_accuracy_param13982,496336
inline void LayerParameter::set_allocated_accuracy_param(::caffe::AccuracyParameter* accuracy_param) {set_allocated_accuracy_param13988,496541
inline bool LayerParameter::has_argmax_param() const {has_argmax_param13999,496865
inline void LayerParameter::set_has_argmax_param() {set_has_argmax_param14002,496967
inline void LayerParameter::clear_has_argmax_param() {clear_has_argmax_param14005,497054
inline void LayerParameter::clear_argmax_param() {clear_argmax_param14008,497144
inline const ::caffe::ArgMaxParameter& LayerParameter::argmax_param() const {argmax_param14012,497304
inline ::caffe::ArgMaxParameter* LayerParameter::mutable_argmax_param() {mutable_argmax_param14015,497469
inline ::caffe::ArgMaxParameter* LayerParameter::release_argmax_param() {release_argmax_param14020,497670
inline void LayerParameter::set_allocated_argmax_param(::caffe::ArgMaxParameter* argmax_param) {set_allocated_argmax_param14026,497863
inline bool LayerParameter::has_batch_norm_param() const {has_batch_norm_param14037,498176
inline void LayerParameter::set_has_batch_norm_param() {set_has_batch_norm_param14040,498282
inline void LayerParameter::clear_has_batch_norm_param() {clear_has_batch_norm_param14043,498373
inline void LayerParameter::clear_batch_norm_param() {clear_batch_norm_param14046,498467
inline const ::caffe::BatchNormParameter& LayerParameter::batch_norm_param() const {batch_norm_param14050,498646
inline ::caffe::BatchNormParameter* LayerParameter::mutable_batch_norm_param() {mutable_batch_norm_param14053,498830
inline ::caffe::BatchNormParameter* LayerParameter::release_batch_norm_param() {release_batch_norm_param14058,499057
inline void LayerParameter::set_allocated_batch_norm_param(::caffe::BatchNormParameter* batch_norm_param) {set_allocated_batch_norm_param14064,499272
inline bool LayerParameter::has_bias_param() const {has_bias_param14075,499609
inline void LayerParameter::set_has_bias_param() {set_has_bias_param14078,499709
inline void LayerParameter::clear_has_bias_param() {clear_has_bias_param14081,499794
inline void LayerParameter::clear_bias_param() {clear_bias_param14084,499882
inline const ::caffe::BiasParameter& LayerParameter::bias_param() const {bias_param14088,500032
inline ::caffe::BiasParameter* LayerParameter::mutable_bias_param() {mutable_bias_param14091,500187
inline ::caffe::BiasParameter* LayerParameter::release_bias_param() {release_bias_param14096,500374
inline void LayerParameter::set_allocated_bias_param(::caffe::BiasParameter* bias_param) {set_allocated_bias_param14102,500555
inline bool LayerParameter::has_concat_param() const {has_concat_param14113,500843
inline void LayerParameter::set_has_concat_param() {set_has_concat_param14116,500945
inline void LayerParameter::clear_has_concat_param() {clear_has_concat_param14119,501032
inline void LayerParameter::clear_concat_param() {clear_concat_param14122,501122
inline const ::caffe::ConcatParameter& LayerParameter::concat_param() const {concat_param14126,501282
inline ::caffe::ConcatParameter* LayerParameter::mutable_concat_param() {mutable_concat_param14129,501447
inline ::caffe::ConcatParameter* LayerParameter::release_concat_param() {release_concat_param14134,501648
inline void LayerParameter::set_allocated_concat_param(::caffe::ConcatParameter* concat_param) {set_allocated_concat_param14140,501841
inline bool LayerParameter::has_contrastive_loss_param() const {has_contrastive_loss_param14151,502166
inline void LayerParameter::set_has_contrastive_loss_param() {set_has_contrastive_loss_param14154,502278
inline void LayerParameter::clear_has_contrastive_loss_param() {clear_has_contrastive_loss_param14157,502375
inline void LayerParameter::clear_contrastive_loss_param() {clear_contrastive_loss_param14160,502475
inline const ::caffe::ContrastiveLossParameter& LayerParameter::contrastive_loss_param() const {contrastive_loss_param14164,502684
inline ::caffe::ContrastiveLossParameter* LayerParameter::mutable_contrastive_loss_param() {mutable_contrastive_loss_param14167,502898
inline ::caffe::ContrastiveLossParameter* LayerParameter::release_contrastive_loss_param() {release_contrastive_loss_param14172,503167
inline void LayerParameter::set_allocated_contrastive_loss_param(::caffe::ContrastiveLossParameter* contrastive_loss_param) {set_allocated_contrastive_loss_param14178,503418
inline bool LayerParameter::has_convolution_param() const {has_convolution_param14189,503823
inline void LayerParameter::set_has_convolution_param() {set_has_convolution_param14192,503930
inline void LayerParameter::clear_has_convolution_param() {clear_has_convolution_param14195,504022
inline void LayerParameter::clear_convolution_param() {clear_convolution_param14198,504117
inline const ::caffe::ConvolutionParameter& LayerParameter::convolution_param() const {convolution_param14202,504302
inline ::caffe::ConvolutionParameter* LayerParameter::mutable_convolution_param() {mutable_convolution_param14205,504492
inline ::caffe::ConvolutionParameter* LayerParameter::release_convolution_param() {release_convolution_param14210,504728
inline void LayerParameter::set_allocated_convolution_param(::caffe::ConvolutionParameter* convolution_param) {set_allocated_convolution_param14216,504951
inline bool LayerParameter::has_crop_param() const {has_crop_param14227,505298
inline void LayerParameter::set_has_crop_param() {set_has_crop_param14230,505398
inline void LayerParameter::clear_has_crop_param() {clear_has_crop_param14233,505483
inline void LayerParameter::clear_crop_param() {clear_crop_param14236,505571
inline const ::caffe::CropParameter& LayerParameter::crop_param() const {crop_param14240,505721
inline ::caffe::CropParameter* LayerParameter::mutable_crop_param() {mutable_crop_param14243,505876
inline ::caffe::CropParameter* LayerParameter::release_crop_param() {release_crop_param14248,506063
inline void LayerParameter::set_allocated_crop_param(::caffe::CropParameter* crop_param) {set_allocated_crop_param14254,506244
inline bool LayerParameter::has_data_param() const {has_data_param14265,506528
inline void LayerParameter::set_has_data_param() {set_has_data_param14268,506628
inline void LayerParameter::clear_has_data_param() {clear_has_data_param14271,506713
inline void LayerParameter::clear_data_param() {clear_data_param14274,506801
inline const ::caffe::DataParameter& LayerParameter::data_param() const {data_param14278,506951
inline ::caffe::DataParameter* LayerParameter::mutable_data_param() {mutable_data_param14281,507106
inline ::caffe::DataParameter* LayerParameter::release_data_param() {release_data_param14286,507293
inline void LayerParameter::set_allocated_data_param(::caffe::DataParameter* data_param) {set_allocated_data_param14292,507474
inline bool LayerParameter::has_dropout_param() const {has_dropout_param14303,507764
inline void LayerParameter::set_has_dropout_param() {set_has_dropout_param14306,507867
inline void LayerParameter::clear_has_dropout_param() {clear_has_dropout_param14309,507955
inline void LayerParameter::clear_dropout_param() {clear_dropout_param14312,508046
inline const ::caffe::DropoutParameter& LayerParameter::dropout_param() const {dropout_param14316,508211
inline ::caffe::DropoutParameter* LayerParameter::mutable_dropout_param() {mutable_dropout_param14319,508381
inline ::caffe::DropoutParameter* LayerParameter::release_dropout_param() {release_dropout_param14324,508589
inline void LayerParameter::set_allocated_dropout_param(::caffe::DropoutParameter* dropout_param) {set_allocated_dropout_param14330,508788
inline bool LayerParameter::has_dummy_data_param() const {has_dummy_data_param14341,509110
inline void LayerParameter::set_has_dummy_data_param() {set_has_dummy_data_param14344,509216
inline void LayerParameter::clear_has_dummy_data_param() {clear_has_dummy_data_param14347,509307
inline void LayerParameter::clear_dummy_data_param() {clear_dummy_data_param14350,509401
inline const ::caffe::DummyDataParameter& LayerParameter::dummy_data_param() const {dummy_data_param14354,509580
inline ::caffe::DummyDataParameter* LayerParameter::mutable_dummy_data_param() {mutable_dummy_data_param14357,509764
inline ::caffe::DummyDataParameter* LayerParameter::release_dummy_data_param() {release_dummy_data_param14362,509991
inline void LayerParameter::set_allocated_dummy_data_param(::caffe::DummyDataParameter* dummy_data_param) {set_allocated_dummy_data_param14368,510206
inline bool LayerParameter::has_eltwise_param() const {has_eltwise_param14379,510549
inline void LayerParameter::set_has_eltwise_param() {set_has_eltwise_param14382,510652
inline void LayerParameter::clear_has_eltwise_param() {clear_has_eltwise_param14385,510740
inline void LayerParameter::clear_eltwise_param() {clear_eltwise_param14388,510831
inline const ::caffe::EltwiseParameter& LayerParameter::eltwise_param() const {eltwise_param14392,510996
inline ::caffe::EltwiseParameter* LayerParameter::mutable_eltwise_param() {mutable_eltwise_param14395,511166
inline ::caffe::EltwiseParameter* LayerParameter::release_eltwise_param() {release_eltwise_param14400,511374
inline void LayerParameter::set_allocated_eltwise_param(::caffe::EltwiseParameter* eltwise_param) {set_allocated_eltwise_param14406,511573
inline bool LayerParameter::has_elu_param() const {has_elu_param14417,511882
inline void LayerParameter::set_has_elu_param() {set_has_elu_param14420,511981
inline void LayerParameter::clear_has_elu_param() {clear_has_elu_param14423,512065
inline void LayerParameter::clear_elu_param() {clear_elu_param14426,512152
inline const ::caffe::ELUParameter& LayerParameter::elu_param() const {elu_param14430,512297
inline ::caffe::ELUParameter* LayerParameter::mutable_elu_param() {mutable_elu_param14433,512447
inline ::caffe::ELUParameter* LayerParameter::release_elu_param() {release_elu_param14438,512627
inline void LayerParameter::set_allocated_elu_param(::caffe::ELUParameter* elu_param) {set_allocated_elu_param14444,512802
inline bool LayerParameter::has_embed_param() const {has_embed_param14455,513079
inline void LayerParameter::set_has_embed_param() {set_has_embed_param14458,513180
inline void LayerParameter::clear_has_embed_param() {clear_has_embed_param14461,513266
inline void LayerParameter::clear_embed_param() {clear_embed_param14464,513355
inline const ::caffe::EmbedParameter& LayerParameter::embed_param() const {embed_param14468,513510
inline ::caffe::EmbedParameter* LayerParameter::mutable_embed_param() {mutable_embed_param14471,513670
inline ::caffe::EmbedParameter* LayerParameter::release_embed_param() {release_embed_param14476,513864
inline void LayerParameter::set_allocated_embed_param(::caffe::EmbedParameter* embed_param) {set_allocated_embed_param14482,514051
inline bool LayerParameter::has_exp_param() const {has_exp_param14493,514342
inline void LayerParameter::set_has_exp_param() {set_has_exp_param14496,514441
inline void LayerParameter::clear_has_exp_param() {clear_has_exp_param14499,514525
inline void LayerParameter::clear_exp_param() {clear_exp_param14502,514612
inline const ::caffe::ExpParameter& LayerParameter::exp_param() const {exp_param14506,514757
inline ::caffe::ExpParameter* LayerParameter::mutable_exp_param() {mutable_exp_param14509,514907
inline ::caffe::ExpParameter* LayerParameter::release_exp_param() {release_exp_param14514,515087
inline void LayerParameter::set_allocated_exp_param(::caffe::ExpParameter* exp_param) {set_allocated_exp_param14520,515262
inline bool LayerParameter::has_flatten_param() const {has_flatten_param14531,515543
inline void LayerParameter::set_has_flatten_param() {set_has_flatten_param14534,515646
inline void LayerParameter::clear_has_flatten_param() {clear_has_flatten_param14537,515734
inline void LayerParameter::clear_flatten_param() {clear_flatten_param14540,515825
inline const ::caffe::FlattenParameter& LayerParameter::flatten_param() const {flatten_param14544,515990
inline ::caffe::FlattenParameter* LayerParameter::mutable_flatten_param() {mutable_flatten_param14547,516160
inline ::caffe::FlattenParameter* LayerParameter::release_flatten_param() {release_flatten_param14552,516368
inline void LayerParameter::set_allocated_flatten_param(::caffe::FlattenParameter* flatten_param) {set_allocated_flatten_param14558,516567
inline bool LayerParameter::has_hdf5_data_param() const {has_hdf5_data_param14569,516887
inline void LayerParameter::set_has_hdf5_data_param() {set_has_hdf5_data_param14572,516992
inline void LayerParameter::clear_has_hdf5_data_param() {clear_has_hdf5_data_param14575,517082
inline void LayerParameter::clear_hdf5_data_param() {clear_hdf5_data_param14578,517175
inline const ::caffe::HDF5DataParameter& LayerParameter::hdf5_data_param() const {hdf5_data_param14582,517349
inline ::caffe::HDF5DataParameter* LayerParameter::mutable_hdf5_data_param() {mutable_hdf5_data_param14585,517528
inline ::caffe::HDF5DataParameter* LayerParameter::release_hdf5_data_param() {release_hdf5_data_param14590,517748
inline void LayerParameter::set_allocated_hdf5_data_param(::caffe::HDF5DataParameter* hdf5_data_param) {set_allocated_hdf5_data_param14596,517957
inline bool LayerParameter::has_hdf5_output_param() const {has_hdf5_output_param14607,518298
inline void LayerParameter::set_has_hdf5_output_param() {set_has_hdf5_output_param14610,518405
inline void LayerParameter::clear_has_hdf5_output_param() {clear_has_hdf5_output_param14613,518497
inline void LayerParameter::clear_hdf5_output_param() {clear_hdf5_output_param14616,518592
inline const ::caffe::HDF5OutputParameter& LayerParameter::hdf5_output_param() const {hdf5_output_param14620,518776
inline ::caffe::HDF5OutputParameter* LayerParameter::mutable_hdf5_output_param() {mutable_hdf5_output_param14623,518965
inline ::caffe::HDF5OutputParameter* LayerParameter::release_hdf5_output_param() {release_hdf5_output_param14628,519199
inline void LayerParameter::set_allocated_hdf5_output_param(::caffe::HDF5OutputParameter* hdf5_output_param) {set_allocated_hdf5_output_param14634,519420
inline bool LayerParameter::has_hinge_loss_param() const {has_hinge_loss_param14645,519777
inline void LayerParameter::set_has_hinge_loss_param() {set_has_hinge_loss_param14648,519883
inline void LayerParameter::clear_has_hinge_loss_param() {clear_has_hinge_loss_param14651,519974
inline void LayerParameter::clear_hinge_loss_param() {clear_hinge_loss_param14654,520068
inline const ::caffe::HingeLossParameter& LayerParameter::hinge_loss_param() const {hinge_loss_param14658,520247
inline ::caffe::HingeLossParameter* LayerParameter::mutable_hinge_loss_param() {mutable_hinge_loss_param14661,520431
inline ::caffe::HingeLossParameter* LayerParameter::release_hinge_loss_param() {release_hinge_loss_param14666,520658
inline void LayerParameter::set_allocated_hinge_loss_param(::caffe::HingeLossParameter* hinge_loss_param) {set_allocated_hinge_loss_param14672,520873
inline bool LayerParameter::has_image_data_param() const {has_image_data_param14683,521221
inline void LayerParameter::set_has_image_data_param() {set_has_image_data_param14686,521327
inline void LayerParameter::clear_has_image_data_param() {clear_has_image_data_param14689,521418
inline void LayerParameter::clear_image_data_param() {clear_image_data_param14692,521512
inline const ::caffe::ImageDataParameter& LayerParameter::image_data_param() const {image_data_param14696,521691
inline ::caffe::ImageDataParameter* LayerParameter::mutable_image_data_param() {mutable_image_data_param14699,521875
inline ::caffe::ImageDataParameter* LayerParameter::release_image_data_param() {release_image_data_param14704,522102
inline void LayerParameter::set_allocated_image_data_param(::caffe::ImageDataParameter* image_data_param) {set_allocated_image_data_param14710,522317
inline bool LayerParameter::has_infogain_loss_param() const {has_infogain_loss_param14721,522671
inline void LayerParameter::set_has_infogain_loss_param() {set_has_infogain_loss_param14724,522780
inline void LayerParameter::clear_has_infogain_loss_param() {clear_has_infogain_loss_param14727,522874
inline void LayerParameter::clear_infogain_loss_param() {clear_infogain_loss_param14730,522971
inline const ::caffe::InfogainLossParameter& LayerParameter::infogain_loss_param() const {infogain_loss_param14734,523165
inline ::caffe::InfogainLossParameter* LayerParameter::mutable_infogain_loss_param() {mutable_infogain_loss_param14737,523364
inline ::caffe::InfogainLossParameter* LayerParameter::release_infogain_loss_param() {release_infogain_loss_param14742,523612
inline void LayerParameter::set_allocated_infogain_loss_param(::caffe::InfogainLossParameter* infogain_loss_param) {set_allocated_infogain_loss_param14748,523845
inline bool LayerParameter::has_inner_product_param() const {has_inner_product_param14759,524226
inline void LayerParameter::set_has_inner_product_param() {set_has_inner_product_param14762,524335
inline void LayerParameter::clear_has_inner_product_param() {clear_has_inner_product_param14765,524429
inline void LayerParameter::clear_inner_product_param() {clear_inner_product_param14768,524526
inline const ::caffe::InnerProductParameter& LayerParameter::inner_product_param() const {inner_product_param14772,524720
inline ::caffe::InnerProductParameter* LayerParameter::mutable_inner_product_param() {mutable_inner_product_param14775,524919
inline ::caffe::InnerProductParameter* LayerParameter::release_inner_product_param() {release_inner_product_param14780,525167
inline void LayerParameter::set_allocated_inner_product_param(::caffe::InnerProductParameter* inner_product_param) {set_allocated_inner_product_param14786,525400
inline bool LayerParameter::has_input_param() const {has_input_param14797,525766
inline void LayerParameter::set_has_input_param() {set_has_input_param14800,525867
inline void LayerParameter::clear_has_input_param() {clear_has_input_param14803,525953
inline void LayerParameter::clear_input_param() {clear_input_param14806,526042
inline const ::caffe::InputParameter& LayerParameter::input_param() const {input_param14810,526197
inline ::caffe::InputParameter* LayerParameter::mutable_input_param() {mutable_input_param14813,526357
inline ::caffe::InputParameter* LayerParameter::release_input_param() {release_input_param14818,526551
inline void LayerParameter::set_allocated_input_param(::caffe::InputParameter* input_param) {set_allocated_input_param14824,526738
inline bool LayerParameter::has_log_param() const {has_log_param14835,527029
inline void LayerParameter::set_has_log_param() {set_has_log_param14838,527128
inline void LayerParameter::clear_has_log_param() {clear_has_log_param14841,527212
inline void LayerParameter::clear_log_param() {clear_log_param14844,527299
inline const ::caffe::LogParameter& LayerParameter::log_param() const {log_param14848,527444
inline ::caffe::LogParameter* LayerParameter::mutable_log_param() {mutable_log_param14851,527594
inline ::caffe::LogParameter* LayerParameter::release_log_param() {release_log_param14856,527774
inline void LayerParameter::set_allocated_log_param(::caffe::LogParameter* log_param) {set_allocated_log_param14862,527949
inline bool LayerParameter::has_lrn_param() const {has_lrn_param14873,528222
inline void LayerParameter::set_has_lrn_param() {set_has_lrn_param14876,528321
inline void LayerParameter::clear_has_lrn_param() {clear_has_lrn_param14879,528405
inline void LayerParameter::clear_lrn_param() {clear_lrn_param14882,528492
inline const ::caffe::LRNParameter& LayerParameter::lrn_param() const {lrn_param14886,528637
inline ::caffe::LRNParameter* LayerParameter::mutable_lrn_param() {mutable_lrn_param14889,528787
inline ::caffe::LRNParameter* LayerParameter::release_lrn_param() {release_lrn_param14894,528967
inline void LayerParameter::set_allocated_lrn_param(::caffe::LRNParameter* lrn_param) {set_allocated_lrn_param14900,529142
inline bool LayerParameter::has_memory_data_param() const {has_memory_data_param14911,529430
inline void LayerParameter::set_has_memory_data_param() {set_has_memory_data_param14914,529537
inline void LayerParameter::clear_has_memory_data_param() {clear_has_memory_data_param14917,529629
inline void LayerParameter::clear_memory_data_param() {clear_memory_data_param14920,529724
inline const ::caffe::MemoryDataParameter& LayerParameter::memory_data_param() const {memory_data_param14924,529908
inline ::caffe::MemoryDataParameter* LayerParameter::mutable_memory_data_param() {mutable_memory_data_param14927,530097
inline ::caffe::MemoryDataParameter* LayerParameter::release_memory_data_param() {release_memory_data_param14932,530331
inline void LayerParameter::set_allocated_memory_data_param(::caffe::MemoryDataParameter* memory_data_param) {set_allocated_memory_data_param14938,530552
inline bool LayerParameter::has_mvn_param() const {has_mvn_param14949,530896
inline void LayerParameter::set_has_mvn_param() {set_has_mvn_param14952,530995
inline void LayerParameter::clear_has_mvn_param() {clear_has_mvn_param14955,531079
inline void LayerParameter::clear_mvn_param() {clear_mvn_param14958,531166
inline const ::caffe::MVNParameter& LayerParameter::mvn_param() const {mvn_param14962,531311
inline ::caffe::MVNParameter* LayerParameter::mutable_mvn_param() {mutable_mvn_param14965,531461
inline ::caffe::MVNParameter* LayerParameter::release_mvn_param() {release_mvn_param14970,531641
inline void LayerParameter::set_allocated_mvn_param(::caffe::MVNParameter* mvn_param) {set_allocated_mvn_param14976,531816
inline bool LayerParameter::has_parameter_param() const {has_parameter_param14987,532101
inline void LayerParameter::set_has_parameter_param() {set_has_parameter_param14990,532206
inline void LayerParameter::clear_has_parameter_param() {clear_has_parameter_param14993,532296
inline void LayerParameter::clear_parameter_param() {clear_parameter_param14996,532389
inline const ::caffe::ParameterParameter& LayerParameter::parameter_param() const {parameter_param15000,532564
inline ::caffe::ParameterParameter* LayerParameter::mutable_parameter_param() {mutable_parameter_param15003,532744
inline ::caffe::ParameterParameter* LayerParameter::release_parameter_param() {release_parameter_param15008,532966
inline void LayerParameter::set_allocated_parameter_param(::caffe::ParameterParameter* parameter_param) {set_allocated_parameter_param15014,533177
inline bool LayerParameter::has_pooling_param() const {has_pooling_param15025,533512
inline void LayerParameter::set_has_pooling_param() {set_has_pooling_param15028,533615
inline void LayerParameter::clear_has_pooling_param() {clear_has_pooling_param15031,533703
inline void LayerParameter::clear_pooling_param() {clear_pooling_param15034,533794
inline const ::caffe::PoolingParameter& LayerParameter::pooling_param() const {pooling_param15038,533959
inline ::caffe::PoolingParameter* LayerParameter::mutable_pooling_param() {mutable_pooling_param15041,534129
inline ::caffe::PoolingParameter* LayerParameter::release_pooling_param() {release_pooling_param15046,534337
inline void LayerParameter::set_allocated_pooling_param(::caffe::PoolingParameter* pooling_param) {set_allocated_pooling_param15052,534536
inline bool LayerParameter::has_power_param() const {has_power_param15063,534849
inline void LayerParameter::set_has_power_param() {set_has_power_param15066,534950
inline void LayerParameter::clear_has_power_param() {clear_has_power_param15069,535036
inline void LayerParameter::clear_power_param() {clear_power_param15072,535125
inline const ::caffe::PowerParameter& LayerParameter::power_param() const {power_param15076,535280
inline ::caffe::PowerParameter* LayerParameter::mutable_power_param() {mutable_power_param15079,535440
inline ::caffe::PowerParameter* LayerParameter::release_power_param() {release_power_param15084,535634
inline void LayerParameter::set_allocated_power_param(::caffe::PowerParameter* power_param) {set_allocated_power_param15090,535821
inline bool LayerParameter::has_prelu_param() const {has_prelu_param15101,536116
inline void LayerParameter::set_has_prelu_param() {set_has_prelu_param15104,536217
inline void LayerParameter::clear_has_prelu_param() {clear_has_prelu_param15107,536303
inline void LayerParameter::clear_prelu_param() {clear_prelu_param15110,536392
inline const ::caffe::PReLUParameter& LayerParameter::prelu_param() const {prelu_param15114,536547
inline ::caffe::PReLUParameter* LayerParameter::mutable_prelu_param() {mutable_prelu_param15117,536707
inline ::caffe::PReLUParameter* LayerParameter::release_prelu_param() {release_prelu_param15122,536901
inline void LayerParameter::set_allocated_prelu_param(::caffe::PReLUParameter* prelu_param) {set_allocated_prelu_param15128,537088
inline bool LayerParameter::has_python_param() const {has_python_param15139,537385
inline void LayerParameter::set_has_python_param() {set_has_python_param15142,537487
inline void LayerParameter::clear_has_python_param() {clear_has_python_param15145,537574
inline void LayerParameter::clear_python_param() {clear_python_param15148,537664
inline const ::caffe::PythonParameter& LayerParameter::python_param() const {python_param15152,537824
inline ::caffe::PythonParameter* LayerParameter::mutable_python_param() {mutable_python_param15155,537989
inline ::caffe::PythonParameter* LayerParameter::release_python_param() {release_python_param15160,538190
inline void LayerParameter::set_allocated_python_param(::caffe::PythonParameter* python_param) {set_allocated_python_param15166,538383
inline bool LayerParameter::has_recurrent_param() const {has_recurrent_param15177,538695
inline void LayerParameter::set_has_recurrent_param() {set_has_recurrent_param15180,538800
inline void LayerParameter::clear_has_recurrent_param() {clear_has_recurrent_param15183,538890
inline void LayerParameter::clear_recurrent_param() {clear_recurrent_param15186,538983
inline const ::caffe::RecurrentParameter& LayerParameter::recurrent_param() const {recurrent_param15190,539158
inline ::caffe::RecurrentParameter* LayerParameter::mutable_recurrent_param() {mutable_recurrent_param15193,539338
inline ::caffe::RecurrentParameter* LayerParameter::release_recurrent_param() {release_recurrent_param15198,539560
inline void LayerParameter::set_allocated_recurrent_param(::caffe::RecurrentParameter* recurrent_param) {set_allocated_recurrent_param15204,539771
inline bool LayerParameter::has_reduction_param() const {has_reduction_param15215,540110
inline void LayerParameter::set_has_reduction_param() {set_has_reduction_param15218,540215
inline void LayerParameter::clear_has_reduction_param() {clear_has_reduction_param15221,540305
inline void LayerParameter::clear_reduction_param() {clear_reduction_param15224,540398
inline const ::caffe::ReductionParameter& LayerParameter::reduction_param() const {reduction_param15228,540573
inline ::caffe::ReductionParameter* LayerParameter::mutable_reduction_param() {mutable_reduction_param15231,540753
inline ::caffe::ReductionParameter* LayerParameter::release_reduction_param() {release_reduction_param15236,540975
inline void LayerParameter::set_allocated_reduction_param(::caffe::ReductionParameter* reduction_param) {set_allocated_reduction_param15242,541186
inline bool LayerParameter::has_relu_param() const {has_relu_param15253,541515
inline void LayerParameter::set_has_relu_param() {set_has_relu_param15256,541615
inline void LayerParameter::clear_has_relu_param() {clear_has_relu_param15259,541700
inline void LayerParameter::clear_relu_param() {clear_relu_param15262,541788
inline const ::caffe::ReLUParameter& LayerParameter::relu_param() const {relu_param15266,541938
inline ::caffe::ReLUParameter* LayerParameter::mutable_relu_param() {mutable_relu_param15269,542093
inline ::caffe::ReLUParameter* LayerParameter::release_relu_param() {release_relu_param15274,542280
inline void LayerParameter::set_allocated_relu_param(::caffe::ReLUParameter* relu_param) {set_allocated_relu_param15280,542461
inline bool LayerParameter::has_reshape_param() const {has_reshape_param15291,542751
inline void LayerParameter::set_has_reshape_param() {set_has_reshape_param15294,542854
inline void LayerParameter::clear_has_reshape_param() {clear_has_reshape_param15297,542942
inline void LayerParameter::clear_reshape_param() {clear_reshape_param15300,543033
inline const ::caffe::ReshapeParameter& LayerParameter::reshape_param() const {reshape_param15304,543198
inline ::caffe::ReshapeParameter* LayerParameter::mutable_reshape_param() {mutable_reshape_param15307,543368
inline ::caffe::ReshapeParameter* LayerParameter::release_reshape_param() {release_reshape_param15312,543576
inline void LayerParameter::set_allocated_reshape_param(::caffe::ReshapeParameter* reshape_param) {set_allocated_reshape_param15318,543775
inline bool LayerParameter::has_scale_param() const {has_scale_param15329,544088
inline void LayerParameter::set_has_scale_param() {set_has_scale_param15332,544189
inline void LayerParameter::clear_has_scale_param() {clear_has_scale_param15335,544275
inline void LayerParameter::clear_scale_param() {clear_scale_param15338,544364
inline const ::caffe::ScaleParameter& LayerParameter::scale_param() const {scale_param15342,544519
inline ::caffe::ScaleParameter* LayerParameter::mutable_scale_param() {mutable_scale_param15345,544679
inline ::caffe::ScaleParameter* LayerParameter::release_scale_param() {release_scale_param15350,544873
inline void LayerParameter::set_allocated_scale_param(::caffe::ScaleParameter* scale_param) {set_allocated_scale_param15356,545060
inline bool LayerParameter::has_sigmoid_param() const {has_sigmoid_param15367,545359
inline void LayerParameter::set_has_sigmoid_param() {set_has_sigmoid_param15370,545462
inline void LayerParameter::clear_has_sigmoid_param() {clear_has_sigmoid_param15373,545550
inline void LayerParameter::clear_sigmoid_param() {clear_sigmoid_param15376,545641
inline const ::caffe::SigmoidParameter& LayerParameter::sigmoid_param() const {sigmoid_param15380,545806
inline ::caffe::SigmoidParameter* LayerParameter::mutable_sigmoid_param() {mutable_sigmoid_param15383,545976
inline ::caffe::SigmoidParameter* LayerParameter::release_sigmoid_param() {release_sigmoid_param15388,546184
inline void LayerParameter::set_allocated_sigmoid_param(::caffe::SigmoidParameter* sigmoid_param) {set_allocated_sigmoid_param15394,546383
inline bool LayerParameter::has_softmax_param() const {has_softmax_param15405,546700
inline void LayerParameter::set_has_softmax_param() {set_has_softmax_param15408,546803
inline void LayerParameter::clear_has_softmax_param() {clear_has_softmax_param15411,546891
inline void LayerParameter::clear_softmax_param() {clear_softmax_param15414,546982
inline const ::caffe::SoftmaxParameter& LayerParameter::softmax_param() const {softmax_param15418,547147
inline ::caffe::SoftmaxParameter* LayerParameter::mutable_softmax_param() {mutable_softmax_param15421,547317
inline ::caffe::SoftmaxParameter* LayerParameter::release_softmax_param() {release_softmax_param15426,547525
inline void LayerParameter::set_allocated_softmax_param(::caffe::SoftmaxParameter* softmax_param) {set_allocated_softmax_param15432,547724
inline bool LayerParameter::has_spp_param() const {has_spp_param15443,548033
inline void LayerParameter::set_has_spp_param() {set_has_spp_param15446,548132
inline void LayerParameter::clear_has_spp_param() {clear_has_spp_param15449,548216
inline void LayerParameter::clear_spp_param() {clear_spp_param15452,548303
inline const ::caffe::SPPParameter& LayerParameter::spp_param() const {spp_param15456,548448
inline ::caffe::SPPParameter* LayerParameter::mutable_spp_param() {mutable_spp_param15459,548598
inline ::caffe::SPPParameter* LayerParameter::release_spp_param() {release_spp_param15464,548778
inline void LayerParameter::set_allocated_spp_param(::caffe::SPPParameter* spp_param) {set_allocated_spp_param15470,548953
inline bool LayerParameter::has_slice_param() const {has_slice_param15481,549230
inline void LayerParameter::set_has_slice_param() {set_has_slice_param15484,549331
inline void LayerParameter::clear_has_slice_param() {clear_has_slice_param15487,549417
inline void LayerParameter::clear_slice_param() {clear_slice_param15490,549506
inline const ::caffe::SliceParameter& LayerParameter::slice_param() const {slice_param15494,549661
inline ::caffe::SliceParameter* LayerParameter::mutable_slice_param() {mutable_slice_param15497,549821
inline ::caffe::SliceParameter* LayerParameter::release_slice_param() {release_slice_param15502,550015
inline void LayerParameter::set_allocated_slice_param(::caffe::SliceParameter* slice_param) {set_allocated_slice_param15508,550202
inline bool LayerParameter::has_tanh_param() const {has_tanh_param15519,550495
inline void LayerParameter::set_has_tanh_param() {set_has_tanh_param15522,550595
inline void LayerParameter::clear_has_tanh_param() {clear_has_tanh_param15525,550680
inline void LayerParameter::clear_tanh_param() {clear_tanh_param15528,550768
inline const ::caffe::TanHParameter& LayerParameter::tanh_param() const {tanh_param15532,550918
inline ::caffe::TanHParameter* LayerParameter::mutable_tanh_param() {mutable_tanh_param15535,551073
inline ::caffe::TanHParameter* LayerParameter::release_tanh_param() {release_tanh_param15540,551260
inline void LayerParameter::set_allocated_tanh_param(::caffe::TanHParameter* tanh_param) {set_allocated_tanh_param15546,551441
inline bool LayerParameter::has_threshold_param() const {has_threshold_param15557,551735
inline void LayerParameter::set_has_threshold_param() {set_has_threshold_param15560,551840
inline void LayerParameter::clear_has_threshold_param() {clear_has_threshold_param15563,551930
inline void LayerParameter::clear_threshold_param() {clear_threshold_param15566,552023
inline const ::caffe::ThresholdParameter& LayerParameter::threshold_param() const {threshold_param15570,552198
inline ::caffe::ThresholdParameter* LayerParameter::mutable_threshold_param() {mutable_threshold_param15573,552378
inline ::caffe::ThresholdParameter* LayerParameter::release_threshold_param() {release_threshold_param15578,552600
inline void LayerParameter::set_allocated_threshold_param(::caffe::ThresholdParameter* threshold_param) {set_allocated_threshold_param15584,552811
inline bool LayerParameter::has_tile_param() const {has_tile_param15595,553140
inline void LayerParameter::set_has_tile_param() {set_has_tile_param15598,553240
inline void LayerParameter::clear_has_tile_param() {clear_has_tile_param15601,553325
inline void LayerParameter::clear_tile_param() {clear_tile_param15604,553413
inline const ::caffe::TileParameter& LayerParameter::tile_param() const {tile_param15608,553563
inline ::caffe::TileParameter* LayerParameter::mutable_tile_param() {mutable_tile_param15611,553718
inline ::caffe::TileParameter* LayerParameter::release_tile_param() {release_tile_param15616,553905
inline void LayerParameter::set_allocated_tile_param(::caffe::TileParameter* tile_param) {set_allocated_tile_param15622,554086
inline bool LayerParameter::has_window_data_param() const {has_window_data_param15633,554383
inline void LayerParameter::set_has_window_data_param() {set_has_window_data_param15636,554490
inline void LayerParameter::clear_has_window_data_param() {clear_has_window_data_param15639,554582
inline void LayerParameter::clear_window_data_param() {clear_window_data_param15642,554677
inline const ::caffe::WindowDataParameter& LayerParameter::window_data_param() const {window_data_param15646,554861
inline ::caffe::WindowDataParameter* LayerParameter::mutable_window_data_param() {mutable_window_data_param15649,555050
inline ::caffe::WindowDataParameter* LayerParameter::release_window_data_param() {release_window_data_param15654,555284
inline void LayerParameter::set_allocated_window_data_param(::caffe::WindowDataParameter* window_data_param) {set_allocated_window_data_param15660,555505
inline bool LayerParameter::has_quantization_param() const {has_quantization_param15671,555867
inline void LayerParameter::set_has_quantization_param() {set_has_quantization_param15674,555975
inline void LayerParameter::clear_has_quantization_param() {clear_has_quantization_param15677,556068
inline void LayerParameter::clear_quantization_param() {clear_quantization_param15680,556164
inline const ::caffe::QuantizationParameter& LayerParameter::quantization_param() const {quantization_param15684,556354
inline ::caffe::QuantizationParameter* LayerParameter::mutable_quantization_param() {mutable_quantization_param15687,556549
inline ::caffe::QuantizationParameter* LayerParameter::release_quantization_param() {release_quantization_param15692,556792
inline void LayerParameter::set_allocated_quantization_param(::caffe::QuantizationParameter* quantization_param) {set_allocated_quantization_param15698,557021
inline bool TransformationParameter::has_scale() const {has_scale15713,557469
inline void TransformationParameter::set_has_scale() {set_has_scale15716,557573
inline void TransformationParameter::clear_has_scale() {clear_has_scale15719,557662
inline void TransformationParameter::clear_scale() {clear_scale15722,557754
inline float TransformationParameter::scale() const {scale15726,557844
inline void TransformationParameter::set_scale(float value) {set_scale15729,557917
inline bool TransformationParameter::has_mirror() const {has_mirror15735,558066
inline void TransformationParameter::set_has_mirror() {set_has_mirror15738,558171
inline void TransformationParameter::clear_has_mirror() {clear_has_mirror15741,558261
inline void TransformationParameter::clear_mirror() {clear_mirror15744,558354
inline bool TransformationParameter::mirror() const {mirror15748,558451
inline void TransformationParameter::set_mirror(bool value) {set_mirror15751,558525
inline bool TransformationParameter::has_crop_size() const {has_crop_size15757,558677
inline void TransformationParameter::set_has_crop_size() {set_has_crop_size15760,558785
inline void TransformationParameter::clear_has_crop_size() {clear_has_crop_size15763,558878
inline void TransformationParameter::clear_crop_size() {clear_crop_size15766,558974
inline ::google::protobuf::uint32 TransformationParameter::crop_size() const {crop_size15770,559077
inline void TransformationParameter::set_crop_size(::google::protobuf::uint32 value) {set_crop_size15773,559179
inline bool TransformationParameter::has_mean_file() const {has_mean_file15779,559348
inline void TransformationParameter::set_has_mean_file() {set_has_mean_file15782,559456
inline void TransformationParameter::clear_has_mean_file() {clear_has_mean_file15785,559549
inline void TransformationParameter::clear_mean_file() {clear_mean_file15788,559645
inline const ::std::string& TransformationParameter::mean_file() const {mean_file15794,559825
inline void TransformationParameter::set_mean_file(const ::std::string& value) {set_mean_file15797,559922
inline void TransformationParameter::set_mean_file(const char* value) {set_mean_file15804,560164
inline void TransformationParameter::set_mean_file(const char* value, size_t size) {set_mean_file15811,560397
inline ::std::string* TransformationParameter::mutable_mean_file() {mutable_mean_file15818,560680
inline ::std::string* TransformationParameter::release_mean_file() {release_mean_file15825,560902
inline void TransformationParameter::set_allocated_mean_file(::std::string* mean_file) {set_allocated_mean_file15835,561243
inline int TransformationParameter::mean_value_size() const {mean_value_size15849,561668
inline void TransformationParameter::clear_mean_value() {clear_mean_value15852,561761
inline float TransformationParameter::mean_value(int index) const {mean_value15855,561844
inline void TransformationParameter::set_mean_value(int index, float value) {set_mean_value15858,561947
inline void TransformationParameter::add_mean_value(float value) {add_mean_value15861,562060
TransformationParameter::mean_value() const {mean_value15865,562212
TransformationParameter::mutable_mean_value() {mutable_mean_value15869,562333
inline bool TransformationParameter::has_force_color() const {has_force_color15874,562459
inline void TransformationParameter::set_has_force_color() {set_has_force_color15877,562569
inline void TransformationParameter::clear_has_force_color() {clear_has_force_color15880,562664
inline void TransformationParameter::clear_force_color() {clear_force_color15883,562762
inline bool TransformationParameter::force_color() const {force_color15887,562874
inline void TransformationParameter::set_force_color(bool value) {set_force_color15890,562958
inline bool TransformationParameter::has_force_gray() const {has_force_gray15896,563128
inline void TransformationParameter::set_has_force_gray() {set_has_force_gray15899,563237
inline void TransformationParameter::clear_has_force_gray() {clear_has_force_gray15902,563331
inline void TransformationParameter::clear_force_gray() {clear_force_gray15905,563428
inline bool TransformationParameter::force_gray() const {force_gray15909,563537
inline void TransformationParameter::set_force_gray(bool value) {set_force_gray15912,563619
inline bool LossParameter::has_ignore_label() const {has_ignore_label15922,563861
inline void LossParameter::set_has_ignore_label() {set_has_ignore_label15925,563962
inline void LossParameter::clear_has_ignore_label() {clear_has_ignore_label15928,564048
inline void LossParameter::clear_ignore_label() {clear_ignore_label15931,564137
inline ::google::protobuf::int32 LossParameter::ignore_label() const {ignore_label15935,564238
inline void LossParameter::set_ignore_label(::google::protobuf::int32 value) {set_ignore_label15938,564335
inline bool LossParameter::has_normalization() const {has_normalization15944,564556
inline void LossParameter::set_has_normalization() {set_has_normalization15947,564658
inline void LossParameter::clear_has_normalization() {clear_has_normalization15950,564745
inline void LossParameter::clear_normalization() {clear_normalization15953,564835
inline ::caffe::LossParameter_NormalizationMode LossParameter::normalization() const {normalization15957,564939
inline void LossParameter::set_normalization(::caffe::LossParameter_NormalizationMode value) {set_normalization15960,565110
inline bool LossParameter::has_normalize() const {has_normalize15967,565360
inline void LossParameter::set_has_normalize() {set_has_normalize15970,565458
inline void LossParameter::clear_has_normalize() {clear_has_normalize15973,565541
inline void LossParameter::clear_normalize() {clear_normalize15976,565627
inline bool LossParameter::normalize() const {normalize15980,565723
inline void LossParameter::set_normalize(bool value) {set_normalize15983,565793
inline bool AccuracyParameter::has_top_k() const {has_top_k15993,566034
inline void AccuracyParameter::set_has_top_k() {set_has_top_k15996,566132
inline void AccuracyParameter::clear_has_top_k() {clear_has_top_k15999,566215
inline void AccuracyParameter::clear_top_k() {clear_top_k16002,566301
inline ::google::protobuf::uint32 AccuracyParameter::top_k() const {top_k16006,566386
inline void AccuracyParameter::set_top_k(::google::protobuf::uint32 value) {set_top_k16009,566474
inline bool AccuracyParameter::has_axis() const {has_axis16015,566633
inline void AccuracyParameter::set_has_axis() {set_has_axis16018,566730
inline void AccuracyParameter::clear_has_axis() {clear_has_axis16021,566812
inline void AccuracyParameter::clear_axis() {clear_axis16024,566897
inline ::google::protobuf::int32 AccuracyParameter::axis() const {axis16028,566978
inline void AccuracyParameter::set_axis(::google::protobuf::int32 value) {set_axis16031,567063
inline bool AccuracyParameter::has_ignore_label() const {has_ignore_label16037,567212
inline void AccuracyParameter::set_has_ignore_label() {set_has_ignore_label16040,567317
inline void AccuracyParameter::clear_has_ignore_label() {clear_has_ignore_label16043,567407
inline void AccuracyParameter::clear_ignore_label() {clear_ignore_label16046,567500
inline ::google::protobuf::int32 AccuracyParameter::ignore_label() const {ignore_label16050,567605
inline void AccuracyParameter::set_ignore_label(::google::protobuf::int32 value) {set_ignore_label16053,567706
inline bool ArgMaxParameter::has_out_max_val() const {has_out_max_val16063,567987
inline void ArgMaxParameter::set_has_out_max_val() {set_has_out_max_val16066,568089
inline void ArgMaxParameter::clear_has_out_max_val() {clear_has_out_max_val16069,568176
inline void ArgMaxParameter::clear_out_max_val() {clear_out_max_val16072,568266
inline bool ArgMaxParameter::out_max_val() const {out_max_val16076,568370
inline void ArgMaxParameter::set_out_max_val(bool value) {set_out_max_val16079,568446
inline bool ArgMaxParameter::has_top_k() const {has_top_k16085,568601
inline void ArgMaxParameter::set_has_top_k() {set_has_top_k16088,568697
inline void ArgMaxParameter::clear_has_top_k() {clear_has_top_k16091,568778
inline void ArgMaxParameter::clear_top_k() {clear_top_k16094,568862
inline ::google::protobuf::uint32 ArgMaxParameter::top_k() const {top_k16098,568945
inline void ArgMaxParameter::set_top_k(::google::protobuf::uint32 value) {set_top_k16101,569031
inline bool ArgMaxParameter::has_axis() const {has_axis16107,569174
inline void ArgMaxParameter::set_has_axis() {set_has_axis16110,569269
inline void ArgMaxParameter::clear_has_axis() {clear_has_axis16113,569349
inline void ArgMaxParameter::clear_axis() {clear_axis16116,569432
inline ::google::protobuf::int32 ArgMaxParameter::axis() const {axis16120,569511
inline void ArgMaxParameter::set_axis(::google::protobuf::int32 value) {set_axis16123,569594
inline bool ConcatParameter::has_axis() const {has_axis16133,569839
inline void ConcatParameter::set_has_axis() {set_has_axis16136,569934
inline void ConcatParameter::clear_has_axis() {clear_has_axis16139,570014
inline void ConcatParameter::clear_axis() {clear_axis16142,570097
inline ::google::protobuf::int32 ConcatParameter::axis() const {axis16146,570176
inline void ConcatParameter::set_axis(::google::protobuf::int32 value) {set_axis16149,570259
inline bool ConcatParameter::has_concat_dim() const {has_concat_dim16155,570419
inline void ConcatParameter::set_has_concat_dim() {set_has_concat_dim16158,570520
inline void ConcatParameter::clear_has_concat_dim() {clear_has_concat_dim16161,570606
inline void ConcatParameter::clear_concat_dim() {clear_concat_dim16164,570695
inline ::google::protobuf::uint32 ConcatParameter::concat_dim() const {concat_dim16168,570793
inline void ConcatParameter::set_concat_dim(::google::protobuf::uint32 value) {set_concat_dim16171,570889
inline bool BatchNormParameter::has_use_global_stats() const {has_use_global_stats16181,571153
inline void BatchNormParameter::set_has_use_global_stats() {set_has_use_global_stats16184,571263
inline void BatchNormParameter::clear_has_use_global_stats() {clear_has_use_global_stats16187,571358
inline void BatchNormParameter::clear_use_global_stats() {clear_use_global_stats16190,571456
inline bool BatchNormParameter::use_global_stats() const {use_global_stats16194,571578
inline void BatchNormParameter::set_use_global_stats(bool value) {set_use_global_stats16197,571667
inline bool BatchNormParameter::has_moving_average_fraction() const {has_moving_average_fraction16203,571861
inline void BatchNormParameter::set_has_moving_average_fraction() {set_has_moving_average_fraction16206,571978
inline void BatchNormParameter::clear_has_moving_average_fraction() {clear_has_moving_average_fraction16209,572080
inline void BatchNormParameter::clear_moving_average_fraction() {clear_moving_average_fraction16212,572185
inline float BatchNormParameter::moving_average_fraction() const {moving_average_fraction16216,572329
inline void BatchNormParameter::set_moving_average_fraction(float value) {set_moving_average_fraction16219,572433
inline bool BatchNormParameter::has_eps() const {has_eps16225,572629
inline void BatchNormParameter::set_has_eps() {set_has_eps16228,572726
inline void BatchNormParameter::clear_has_eps() {clear_has_eps16231,572808
inline void BatchNormParameter::clear_eps() {clear_eps16234,572893
inline float BatchNormParameter::eps() const {eps16238,572977
inline void BatchNormParameter::set_eps(float value) {set_eps16241,573041
inline bool BiasParameter::has_axis() const {has_axis16251,573264
inline void BiasParameter::set_has_axis() {set_has_axis16254,573357
inline void BiasParameter::clear_has_axis() {clear_has_axis16257,573435
inline void BiasParameter::clear_axis() {clear_axis16260,573516
inline ::google::protobuf::int32 BiasParameter::axis() const {axis16264,573593
inline void BiasParameter::set_axis(::google::protobuf::int32 value) {set_axis16267,573674
inline bool BiasParameter::has_num_axes() const {has_num_axes16273,573829
inline void BiasParameter::set_has_num_axes() {set_has_num_axes16276,573926
inline void BiasParameter::clear_has_num_axes() {clear_has_num_axes16279,574008
inline void BiasParameter::clear_num_axes() {clear_num_axes16282,574093
inline ::google::protobuf::int32 BiasParameter::num_axes() const {num_axes16286,574182
inline void BiasParameter::set_num_axes(::google::protobuf::int32 value) {set_num_axes16289,574271
inline bool BiasParameter::has_filler() const {has_filler16295,574439
inline void BiasParameter::set_has_filler() {set_has_filler16298,574534
inline void BiasParameter::clear_has_filler() {clear_has_filler16301,574614
inline void BiasParameter::clear_filler() {clear_filler16304,574697
inline const ::caffe::FillerParameter& BiasParameter::filler() const {filler16308,574832
inline ::caffe::FillerParameter* BiasParameter::mutable_filler() {mutable_filler16311,574972
inline ::caffe::FillerParameter* BiasParameter::release_filler() {release_filler16316,575142
inline void BiasParameter::set_allocated_filler(::caffe::FillerParameter* filler) {set_allocated_filler16322,575310
inline bool ContrastiveLossParameter::has_margin() const {has_margin16337,575657
inline void ContrastiveLossParameter::set_has_margin() {set_has_margin16340,575763
inline void ContrastiveLossParameter::clear_has_margin() {clear_has_margin16343,575854
inline void ContrastiveLossParameter::clear_margin() {clear_margin16346,575948
inline float ContrastiveLossParameter::margin() const {margin16350,576042
inline void ContrastiveLossParameter::set_margin(float value) {set_margin16353,576118
inline bool ContrastiveLossParameter::has_legacy_version() const {has_legacy_version16359,576279
inline void ContrastiveLossParameter::set_has_legacy_version() {set_has_legacy_version16362,576393
inline void ContrastiveLossParameter::clear_has_legacy_version() {clear_has_legacy_version16365,576492
inline void ContrastiveLossParameter::clear_legacy_version() {clear_legacy_version16368,576594
inline bool ContrastiveLossParameter::legacy_version() const {legacy_version16372,576716
inline void ContrastiveLossParameter::set_legacy_version(bool value) {set_legacy_version16375,576807
inline bool ConvolutionParameter::has_num_output() const {has_num_output16385,577068
inline void ConvolutionParameter::set_has_num_output() {set_has_num_output16388,577174
inline void ConvolutionParameter::clear_has_num_output() {clear_has_num_output16391,577265
inline void ConvolutionParameter::clear_num_output() {clear_num_output16394,577359
inline ::google::protobuf::uint32 ConvolutionParameter::num_output() const {num_output16398,577462
inline void ConvolutionParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output16401,577563
inline bool ConvolutionParameter::has_bias_term() const {has_bias_term16407,577747
inline void ConvolutionParameter::set_has_bias_term() {set_has_bias_term16410,577852
inline void ConvolutionParameter::clear_has_bias_term() {clear_has_bias_term16413,577942
inline void ConvolutionParameter::clear_bias_term() {clear_bias_term16416,578035
inline bool ConvolutionParameter::bias_term() const {bias_term16420,578137
inline void ConvolutionParameter::set_bias_term(bool value) {set_bias_term16423,578214
inline int ConvolutionParameter::pad_size() const {pad_size16429,578352
inline void ConvolutionParameter::clear_pad() {clear_pad16432,578428
inline ::google::protobuf::uint32 ConvolutionParameter::pad(int index) const {pad16435,578494
inline void ConvolutionParameter::set_pad(int index, ::google::protobuf::uint32 value) {set_pad16438,578601
inline void ConvolutionParameter::add_pad(::google::protobuf::uint32 value) {add_pad16441,578718
ConvolutionParameter::pad() const {pad16445,578895
ConvolutionParameter::mutable_pad() {mutable_pad16449,579020
inline int ConvolutionParameter::kernel_size_size() const {kernel_size_size16454,579113
inline void ConvolutionParameter::clear_kernel_size() {clear_kernel_size16457,579205
inline ::google::protobuf::uint32 ConvolutionParameter::kernel_size(int index) const {kernel_size16460,579287
inline void ConvolutionParameter::set_kernel_size(int index, ::google::protobuf::uint32 value) {set_kernel_size16463,579410
inline void ConvolutionParameter::add_kernel_size(::google::protobuf::uint32 value) {add_kernel_size16466,579543
ConvolutionParameter::kernel_size() const {kernel_size16470,579736
ConvolutionParameter::mutable_kernel_size() {mutable_kernel_size16474,579877
inline int ConvolutionParameter::stride_size() const {stride_size16479,579981
inline void ConvolutionParameter::clear_stride() {clear_stride16482,580063
inline ::google::protobuf::uint32 ConvolutionParameter::stride(int index) const {stride16485,580135
inline void ConvolutionParameter::set_stride(int index, ::google::protobuf::uint32 value) {set_stride16488,580248
inline void ConvolutionParameter::add_stride(::google::protobuf::uint32 value) {add_stride16491,580371
ConvolutionParameter::stride() const {stride16495,580554
ConvolutionParameter::mutable_stride() {mutable_stride16499,580685
inline int ConvolutionParameter::dilation_size() const {dilation_size16504,580782
inline void ConvolutionParameter::clear_dilation() {clear_dilation16507,580868
inline ::google::protobuf::uint32 ConvolutionParameter::dilation(int index) const {dilation16510,580944
inline void ConvolutionParameter::set_dilation(int index, ::google::protobuf::uint32 value) {set_dilation16513,581061
inline void ConvolutionParameter::add_dilation(::google::protobuf::uint32 value) {add_dilation16516,581188
ConvolutionParameter::dilation() const {dilation16520,581375
ConvolutionParameter::mutable_dilation() {mutable_dilation16524,581510
inline bool ConvolutionParameter::has_pad_h() const {has_pad_h16529,581621
inline void ConvolutionParameter::set_has_pad_h() {set_has_pad_h16532,581722
inline void ConvolutionParameter::clear_has_pad_h() {clear_has_pad_h16535,581808
inline void ConvolutionParameter::clear_pad_h() {clear_pad_h16538,581897
inline ::google::protobuf::uint32 ConvolutionParameter::pad_h() const {pad_h16542,581985
inline void ConvolutionParameter::set_pad_h(::google::protobuf::uint32 value) {set_pad_h16545,582076
inline bool ConvolutionParameter::has_pad_w() const {has_pad_w16551,582241
inline void ConvolutionParameter::set_has_pad_w() {set_has_pad_w16554,582342
inline void ConvolutionParameter::clear_has_pad_w() {clear_has_pad_w16557,582428
inline void ConvolutionParameter::clear_pad_w() {clear_pad_w16560,582517
inline ::google::protobuf::uint32 ConvolutionParameter::pad_w() const {pad_w16564,582605
inline void ConvolutionParameter::set_pad_w(::google::protobuf::uint32 value) {set_pad_w16567,582696
inline bool ConvolutionParameter::has_kernel_h() const {has_kernel_h16573,582850
inline void ConvolutionParameter::set_has_kernel_h() {set_has_kernel_h16576,582954
inline void ConvolutionParameter::clear_has_kernel_h() {clear_has_kernel_h16579,583043
inline void ConvolutionParameter::clear_kernel_h() {clear_kernel_h16582,583135
inline ::google::protobuf::uint32 ConvolutionParameter::kernel_h() const {kernel_h16586,583232
inline void ConvolutionParameter::set_kernel_h(::google::protobuf::uint32 value) {set_kernel_h16589,583329
inline bool ConvolutionParameter::has_kernel_w() const {has_kernel_w16595,583492
inline void ConvolutionParameter::set_has_kernel_w() {set_has_kernel_w16598,583596
inline void ConvolutionParameter::clear_has_kernel_w() {clear_has_kernel_w16601,583685
inline void ConvolutionParameter::clear_kernel_w() {clear_kernel_w16604,583777
inline ::google::protobuf::uint32 ConvolutionParameter::kernel_w() const {kernel_w16608,583874
inline void ConvolutionParameter::set_kernel_w(::google::protobuf::uint32 value) {set_kernel_w16611,583971
inline bool ConvolutionParameter::has_stride_h() const {has_stride_h16617,584134
inline void ConvolutionParameter::set_has_stride_h() {set_has_stride_h16620,584238
inline void ConvolutionParameter::clear_has_stride_h() {clear_has_stride_h16623,584327
inline void ConvolutionParameter::clear_stride_h() {clear_stride_h16626,584419
inline ::google::protobuf::uint32 ConvolutionParameter::stride_h() const {stride_h16630,584516
inline void ConvolutionParameter::set_stride_h(::google::protobuf::uint32 value) {set_stride_h16633,584613
inline bool ConvolutionParameter::has_stride_w() const {has_stride_w16639,584776
inline void ConvolutionParameter::set_has_stride_w() {set_has_stride_w16642,584880
inline void ConvolutionParameter::clear_has_stride_w() {clear_has_stride_w16645,584969
inline void ConvolutionParameter::clear_stride_w() {clear_stride_w16648,585061
inline ::google::protobuf::uint32 ConvolutionParameter::stride_w() const {stride_w16652,585158
inline void ConvolutionParameter::set_stride_w(::google::protobuf::uint32 value) {set_stride_w16655,585255
inline bool ConvolutionParameter::has_group() const {has_group16661,585428
inline void ConvolutionParameter::set_has_group() {set_has_group16664,585529
inline void ConvolutionParameter::clear_has_group() {clear_has_group16667,585615
inline void ConvolutionParameter::clear_group() {clear_group16670,585704
inline ::google::protobuf::uint32 ConvolutionParameter::group() const {group16674,585792
inline void ConvolutionParameter::set_group(::google::protobuf::uint32 value) {set_group16677,585883
inline bool ConvolutionParameter::has_weight_filler() const {has_weight_filler16683,586057
inline void ConvolutionParameter::set_has_weight_filler() {set_has_weight_filler16686,586166
inline void ConvolutionParameter::clear_has_weight_filler() {clear_has_weight_filler16689,586260
inline void ConvolutionParameter::clear_weight_filler() {clear_weight_filler16692,586357
inline const ::caffe::FillerParameter& ConvolutionParameter::weight_filler() const {weight_filler16696,586527
inline ::caffe::FillerParameter* ConvolutionParameter::mutable_weight_filler() {mutable_weight_filler16699,586702
inline ::caffe::FillerParameter* ConvolutionParameter::release_weight_filler() {release_weight_filler16704,586914
inline void ConvolutionParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler16710,587117
inline bool ConvolutionParameter::has_bias_filler() const {has_bias_filler16721,587434
inline void ConvolutionParameter::set_has_bias_filler() {set_has_bias_filler16724,587541
inline void ConvolutionParameter::clear_has_bias_filler() {clear_has_bias_filler16727,587633
inline void ConvolutionParameter::clear_bias_filler() {clear_bias_filler16730,587728
inline const ::caffe::FillerParameter& ConvolutionParameter::bias_filler() const {bias_filler16734,587890
inline ::caffe::FillerParameter* ConvolutionParameter::mutable_bias_filler() {mutable_bias_filler16737,588057
inline ::caffe::FillerParameter* ConvolutionParameter::release_bias_filler() {release_bias_filler16742,588259
inline void ConvolutionParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler16748,588454
inline bool ConvolutionParameter::has_engine() const {has_engine16759,588783
inline void ConvolutionParameter::set_has_engine() {set_has_engine16762,588885
inline void ConvolutionParameter::clear_has_engine() {clear_has_engine16765,588972
inline void ConvolutionParameter::clear_engine() {clear_engine16768,589062
inline ::caffe::ConvolutionParameter_Engine ConvolutionParameter::engine() const {engine16772,589152
inline void ConvolutionParameter::set_engine(::caffe::ConvolutionParameter_Engine value) {set_engine16775,589308
inline bool ConvolutionParameter::has_axis() const {has_axis16782,589547
inline void ConvolutionParameter::set_has_axis() {set_has_axis16785,589647
inline void ConvolutionParameter::clear_has_axis() {clear_has_axis16788,589732
inline void ConvolutionParameter::clear_axis() {clear_axis16791,589820
inline ::google::protobuf::int32 ConvolutionParameter::axis() const {axis16795,589904
inline void ConvolutionParameter::set_axis(::google::protobuf::int32 value) {set_axis16798,589992
inline bool ConvolutionParameter::has_force_nd_im2col() const {has_force_nd_im2col16804,590165
inline void ConvolutionParameter::set_has_force_nd_im2col() {set_has_force_nd_im2col16807,590276
inline void ConvolutionParameter::clear_has_force_nd_im2col() {clear_has_force_nd_im2col16810,590372
inline void ConvolutionParameter::clear_force_nd_im2col() {clear_force_nd_im2col16813,590471
inline bool ConvolutionParameter::force_nd_im2col() const {force_nd_im2col16817,590592
inline void ConvolutionParameter::set_force_nd_im2col(bool value) {set_force_nd_im2col16820,590681
inline bool CropParameter::has_axis() const {has_axis16830,590941
inline void CropParameter::set_has_axis() {set_has_axis16833,591034
inline void CropParameter::clear_has_axis() {clear_has_axis16836,591112
inline void CropParameter::clear_axis() {clear_axis16839,591193
inline ::google::protobuf::int32 CropParameter::axis() const {axis16843,591270
inline void CropParameter::set_axis(::google::protobuf::int32 value) {set_axis16846,591351
inline int CropParameter::offset_size() const {offset_size16852,591491
inline void CropParameter::clear_offset() {clear_offset16855,591566
inline ::google::protobuf::uint32 CropParameter::offset(int index) const {offset16858,591631
inline void CropParameter::set_offset(int index, ::google::protobuf::uint32 value) {set_offset16861,591737
inline void CropParameter::add_offset(::google::protobuf::uint32 value) {add_offset16864,591853
CropParameter::offset() const {offset16868,592029
CropParameter::mutable_offset() {mutable_offset16872,592153
inline bool DataParameter::has_source() const {has_source16881,592330
inline void DataParameter::set_has_source() {set_has_source16884,592425
inline void DataParameter::clear_has_source() {clear_has_source16887,592505
inline void DataParameter::clear_source() {clear_source16890,592588
inline const ::std::string& DataParameter::source() const {source16896,592746
inline void DataParameter::set_source(const ::std::string& value) {set_source16899,592827
inline void DataParameter::set_source(const char* value) {set_source16906,593044
inline void DataParameter::set_source(const char* value, size_t size) {set_source16913,593252
inline ::std::string* DataParameter::mutable_source() {mutable_source16920,593510
inline ::std::string* DataParameter::release_source() {release_source16927,593707
inline void DataParameter::set_allocated_source(::std::string* source) {set_allocated_source16937,594023
inline bool DataParameter::has_batch_size() const {has_batch_size16951,594409
inline void DataParameter::set_has_batch_size() {set_has_batch_size16954,594508
inline void DataParameter::clear_has_batch_size() {clear_has_batch_size16957,594592
inline void DataParameter::clear_batch_size() {clear_batch_size16960,594679
inline ::google::protobuf::uint32 DataParameter::batch_size() const {batch_size16964,594775
inline void DataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size16967,594869
inline bool DataParameter::has_rand_skip() const {has_rand_skip16973,595045
inline void DataParameter::set_has_rand_skip() {set_has_rand_skip16976,595143
inline void DataParameter::clear_has_rand_skip() {clear_has_rand_skip16979,595226
inline void DataParameter::clear_rand_skip() {clear_rand_skip16982,595312
inline ::google::protobuf::uint32 DataParameter::rand_skip() const {rand_skip16986,595405
inline void DataParameter::set_rand_skip(::google::protobuf::uint32 value) {set_rand_skip16989,595497
inline bool DataParameter::has_backend() const {has_backend16995,595691
inline void DataParameter::set_has_backend() {set_has_backend16998,595787
inline void DataParameter::clear_has_backend() {clear_has_backend17001,595868
inline void DataParameter::clear_backend() {clear_backend17004,595952
inline ::caffe::DataParameter_DB DataParameter::backend() const {backend17008,596038
inline void DataParameter::set_backend(::caffe::DataParameter_DB value) {set_backend17011,596167
inline bool DataParameter::has_scale() const {has_scale17018,596380
inline void DataParameter::set_has_scale() {set_has_scale17021,596474
inline void DataParameter::clear_has_scale() {clear_has_scale17024,596553
inline void DataParameter::clear_scale() {clear_scale17027,596635
inline float DataParameter::scale() const {scale17031,596715
inline void DataParameter::set_scale(float value) {set_scale17034,596778
inline bool DataParameter::has_mean_file() const {has_mean_file17040,596904
inline void DataParameter::set_has_mean_file() {set_has_mean_file17043,597002
inline void DataParameter::clear_has_mean_file() {clear_has_mean_file17046,597085
inline void DataParameter::clear_mean_file() {clear_mean_file17049,597171
inline const ::std::string& DataParameter::mean_file() const {mean_file17055,597341
inline void DataParameter::set_mean_file(const ::std::string& value) {set_mean_file17058,597428
inline void DataParameter::set_mean_file(const char* value) {set_mean_file17065,597660
inline void DataParameter::set_mean_file(const char* value, size_t size) {set_mean_file17072,597883
inline ::std::string* DataParameter::mutable_mean_file() {mutable_mean_file17079,598156
inline ::std::string* DataParameter::release_mean_file() {release_mean_file17086,598368
inline void DataParameter::set_allocated_mean_file(::std::string* mean_file) {set_allocated_mean_file17096,598699
inline bool DataParameter::has_crop_size() const {has_crop_size17110,599128
inline void DataParameter::set_has_crop_size() {set_has_crop_size17113,599226
inline void DataParameter::clear_has_crop_size() {clear_has_crop_size17116,599309
inline void DataParameter::clear_crop_size() {clear_crop_size17119,599395
inline ::google::protobuf::uint32 DataParameter::crop_size() const {crop_size17123,599488
inline void DataParameter::set_crop_size(::google::protobuf::uint32 value) {set_crop_size17126,599580
inline bool DataParameter::has_mirror() const {has_mirror17132,599752
inline void DataParameter::set_has_mirror() {set_has_mirror17135,599847
inline void DataParameter::clear_has_mirror() {clear_has_mirror17138,599927
inline void DataParameter::clear_mirror() {clear_mirror17141,600010
inline bool DataParameter::mirror() const {mirror17145,600097
inline void DataParameter::set_mirror(bool value) {set_mirror17148,600161
inline bool DataParameter::has_force_encoded_color() const {has_force_encoded_color17154,600315
inline void DataParameter::set_has_force_encoded_color() {set_has_force_encoded_color17157,600423
inline void DataParameter::clear_has_force_encoded_color() {clear_has_force_encoded_color17160,600516
inline void DataParameter::clear_force_encoded_color() {clear_force_encoded_color17163,600612
inline bool DataParameter::force_encoded_color() const {force_encoded_color17167,600738
inline void DataParameter::set_force_encoded_color(bool value) {set_force_encoded_color17170,600828
inline bool DataParameter::has_prefetch() const {has_prefetch17176,601009
inline void DataParameter::set_has_prefetch() {set_has_prefetch17179,601106
inline void DataParameter::clear_has_prefetch() {clear_has_prefetch17182,601188
inline void DataParameter::clear_prefetch() {clear_prefetch17185,601273
inline ::google::protobuf::uint32 DataParameter::prefetch() const {prefetch17189,601363
inline void DataParameter::set_prefetch(::google::protobuf::uint32 value) {set_prefetch17192,601453
inline bool DropoutParameter::has_dropout_ratio() const {has_dropout_ratio17202,601721
inline void DropoutParameter::set_has_dropout_ratio() {set_has_dropout_ratio17205,601826
inline void DropoutParameter::clear_has_dropout_ratio() {clear_has_dropout_ratio17208,601916
inline void DropoutParameter::clear_dropout_ratio() {clear_dropout_ratio17211,602009
inline float DropoutParameter::dropout_ratio() const {dropout_ratio17215,602119
inline void DropoutParameter::set_dropout_ratio(float value) {set_dropout_ratio17218,602201
inline int DummyDataParameter::data_filler_size() const {data_filler_size17228,602467
inline void DummyDataParameter::clear_data_filler() {clear_data_filler17231,602557
inline const ::caffe::FillerParameter& DummyDataParameter::data_filler(int index) const {data_filler17234,602637
inline ::caffe::FillerParameter* DummyDataParameter::mutable_data_filler(int index) {mutable_data_filler17237,602763
inline ::caffe::FillerParameter* DummyDataParameter::add_data_filler() {add_data_filler17240,602889
DummyDataParameter::data_filler() const {data_filler17244,603072
DummyDataParameter::mutable_data_filler() {mutable_data_filler17248,603212
inline int DummyDataParameter::shape_size() const {shape_size17253,603323
inline void DummyDataParameter::clear_shape() {clear_shape17256,603401
inline const ::caffe::BlobShape& DummyDataParameter::shape(int index) const {shape17259,603469
inline ::caffe::BlobShape* DummyDataParameter::mutable_shape(int index) {mutable_shape17262,603577
inline ::caffe::BlobShape* DummyDataParameter::add_shape() {add_shape17265,603685
DummyDataParameter::shape() const {shape17269,603844
DummyDataParameter::mutable_shape() {mutable_shape17273,603966
inline int DummyDataParameter::num_size() const {num_size17278,604053
inline void DummyDataParameter::clear_num() {clear_num17281,604127
inline ::google::protobuf::uint32 DummyDataParameter::num(int index) const {num17284,604191
inline void DummyDataParameter::set_num(int index, ::google::protobuf::uint32 value) {set_num17287,604296
inline void DummyDataParameter::add_num(::google::protobuf::uint32 value) {add_num17290,604411
DummyDataParameter::num() const {num17294,604586
DummyDataParameter::mutable_num() {mutable_num17298,604709
inline int DummyDataParameter::channels_size() const {channels_size17303,604797
inline void DummyDataParameter::clear_channels() {clear_channels17306,604881
inline ::google::protobuf::uint32 DummyDataParameter::channels(int index) const {channels17309,604955
inline void DummyDataParameter::set_channels(int index, ::google::protobuf::uint32 value) {set_channels17312,605070
inline void DummyDataParameter::add_channels(::google::protobuf::uint32 value) {add_channels17315,605195
DummyDataParameter::channels() const {channels17319,605380
DummyDataParameter::mutable_channels() {mutable_channels17323,605513
inline int DummyDataParameter::height_size() const {height_size17328,605609
inline void DummyDataParameter::clear_height() {clear_height17331,605689
inline ::google::protobuf::uint32 DummyDataParameter::height(int index) const {height17334,605759
inline void DummyDataParameter::set_height(int index, ::google::protobuf::uint32 value) {set_height17337,605870
inline void DummyDataParameter::add_height(::google::protobuf::uint32 value) {add_height17340,605991
DummyDataParameter::height() const {height17344,606172
DummyDataParameter::mutable_height() {mutable_height17348,606301
inline int DummyDataParameter::width_size() const {width_size17353,606392
inline void DummyDataParameter::clear_width() {clear_width17356,606470
inline ::google::protobuf::uint32 DummyDataParameter::width(int index) const {width17359,606538
inline void DummyDataParameter::set_width(int index, ::google::protobuf::uint32 value) {set_width17362,606647
inline void DummyDataParameter::add_width(::google::protobuf::uint32 value) {add_width17365,606766
DummyDataParameter::width() const {width17369,606945
DummyDataParameter::mutable_width() {mutable_width17373,607072
inline bool EltwiseParameter::has_operation() const {has_operation17382,607301
inline void EltwiseParameter::set_has_operation() {set_has_operation17385,607402
inline void EltwiseParameter::clear_has_operation() {clear_has_operation17388,607488
inline void EltwiseParameter::clear_operation() {clear_operation17391,607577
inline ::caffe::EltwiseParameter_EltwiseOp EltwiseParameter::operation() const {operation17395,607672
inline void EltwiseParameter::set_operation(::caffe::EltwiseParameter_EltwiseOp value) {set_operation17398,607828
inline int EltwiseParameter::coeff_size() const {coeff_size17405,608056
inline void EltwiseParameter::clear_coeff() {clear_coeff17408,608132
inline float EltwiseParameter::coeff(int index) const {coeff17411,608198
inline void EltwiseParameter::set_coeff(int index, float value) {set_coeff17414,608284
inline void EltwiseParameter::add_coeff(float value) {add_coeff17417,608380
EltwiseParameter::coeff() const {coeff17421,608515
EltwiseParameter::mutable_coeff() {mutable_coeff17425,608619
inline bool EltwiseParameter::has_stable_prod_grad() const {has_stable_prod_grad17430,608732
inline void EltwiseParameter::set_has_stable_prod_grad() {set_has_stable_prod_grad17433,608840
inline void EltwiseParameter::clear_has_stable_prod_grad() {clear_has_stable_prod_grad17436,608933
inline void EltwiseParameter::clear_stable_prod_grad() {clear_stable_prod_grad17439,609029
inline bool EltwiseParameter::stable_prod_grad() const {stable_prod_grad17443,609148
inline void EltwiseParameter::set_stable_prod_grad(bool value) {set_stable_prod_grad17446,609235
inline bool ELUParameter::has_alpha() const {has_alpha17456,609494
inline void ELUParameter::set_has_alpha() {set_has_alpha17459,609587
inline void ELUParameter::clear_has_alpha() {clear_has_alpha17462,609665
inline void ELUParameter::clear_alpha() {clear_alpha17465,609746
inline float ELUParameter::alpha() const {alpha17469,609825
inline void ELUParameter::set_alpha(float value) {set_alpha17472,609887
inline bool EmbedParameter::has_num_output() const {has_num_output17482,610104
inline void EmbedParameter::set_has_num_output() {set_has_num_output17485,610204
inline void EmbedParameter::clear_has_num_output() {clear_has_num_output17488,610289
inline void EmbedParameter::clear_num_output() {clear_num_output17491,610377
inline ::google::protobuf::uint32 EmbedParameter::num_output() const {num_output17495,610474
inline void EmbedParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output17498,610569
inline bool EmbedParameter::has_input_dim() const {has_input_dim17504,610732
inline void EmbedParameter::set_has_input_dim() {set_has_input_dim17507,610831
inline void EmbedParameter::clear_has_input_dim() {clear_has_input_dim17510,610915
inline void EmbedParameter::clear_input_dim() {clear_input_dim17513,611002
inline ::google::protobuf::uint32 EmbedParameter::input_dim() const {input_dim17517,611096
inline void EmbedParameter::set_input_dim(::google::protobuf::uint32 value) {set_input_dim17520,611189
inline bool EmbedParameter::has_bias_term() const {has_bias_term17526,611364
inline void EmbedParameter::set_has_bias_term() {set_has_bias_term17529,611463
inline void EmbedParameter::clear_has_bias_term() {clear_has_bias_term17532,611547
inline void EmbedParameter::clear_bias_term() {clear_bias_term17535,611634
inline bool EmbedParameter::bias_term() const {bias_term17539,611730
inline void EmbedParameter::set_bias_term(bool value) {set_bias_term17542,611801
inline bool EmbedParameter::has_weight_filler() const {has_weight_filler17548,611959
inline void EmbedParameter::set_has_weight_filler() {set_has_weight_filler17551,612062
inline void EmbedParameter::clear_has_weight_filler() {clear_has_weight_filler17554,612150
inline void EmbedParameter::clear_weight_filler() {clear_weight_filler17557,612241
inline const ::caffe::FillerParameter& EmbedParameter::weight_filler() const {weight_filler17561,612405
inline ::caffe::FillerParameter* EmbedParameter::mutable_weight_filler() {mutable_weight_filler17564,612574
inline ::caffe::FillerParameter* EmbedParameter::release_weight_filler() {release_weight_filler17569,612780
inline void EmbedParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler17575,612977
inline bool EmbedParameter::has_bias_filler() const {has_bias_filler17586,613288
inline void EmbedParameter::set_has_bias_filler() {set_has_bias_filler17589,613389
inline void EmbedParameter::clear_has_bias_filler() {clear_has_bias_filler17592,613475
inline void EmbedParameter::clear_bias_filler() {clear_bias_filler17595,613564
inline const ::caffe::FillerParameter& EmbedParameter::bias_filler() const {bias_filler17599,613720
inline ::caffe::FillerParameter* EmbedParameter::mutable_bias_filler() {mutable_bias_filler17602,613881
inline ::caffe::FillerParameter* EmbedParameter::release_bias_filler() {release_bias_filler17607,614077
inline void EmbedParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler17613,614266
inline bool ExpParameter::has_base() const {has_base17628,614641
inline void ExpParameter::set_has_base() {set_has_base17631,614733
inline void ExpParameter::clear_has_base() {clear_has_base17634,614810
inline void ExpParameter::clear_base() {clear_base17637,614890
inline float ExpParameter::base() const {base17641,614967
inline void ExpParameter::set_base(float value) {set_base17644,615027
inline bool ExpParameter::has_scale() const {has_scale17650,615158
inline void ExpParameter::set_has_scale() {set_has_scale17653,615251
inline void ExpParameter::clear_has_scale() {clear_has_scale17656,615329
inline void ExpParameter::clear_scale() {clear_scale17659,615410
inline float ExpParameter::scale() const {scale17663,615489
inline void ExpParameter::set_scale(float value) {set_scale17666,615551
inline bool ExpParameter::has_shift() const {has_shift17672,615685
inline void ExpParameter::set_has_shift() {set_has_shift17675,615778
inline void ExpParameter::clear_has_shift() {clear_has_shift17678,615856
inline void ExpParameter::clear_shift() {clear_shift17681,615937
inline float ExpParameter::shift() const {shift17685,616016
inline void ExpParameter::set_shift(float value) {set_shift17688,616078
inline bool FlattenParameter::has_axis() const {has_axis17698,616304
inline void FlattenParameter::set_has_axis() {set_has_axis17701,616400
inline void FlattenParameter::clear_has_axis() {clear_has_axis17704,616481
inline void FlattenParameter::clear_axis() {clear_axis17707,616565
inline ::google::protobuf::int32 FlattenParameter::axis() const {axis17711,616645
inline void FlattenParameter::set_axis(::google::protobuf::int32 value) {set_axis17714,616729
inline bool FlattenParameter::has_end_axis() const {has_end_axis17720,616888
inline void FlattenParameter::set_has_end_axis() {set_has_end_axis17723,616988
inline void FlattenParameter::clear_has_end_axis() {clear_has_end_axis17726,617073
inline void FlattenParameter::clear_end_axis() {clear_end_axis17729,617161
inline ::google::protobuf::int32 FlattenParameter::end_axis() const {end_axis17733,617254
inline void FlattenParameter::set_end_axis(::google::protobuf::int32 value) {set_end_axis17736,617346
inline bool HDF5DataParameter::has_source() const {has_source17746,617595
inline void HDF5DataParameter::set_has_source() {set_has_source17749,617694
inline void HDF5DataParameter::clear_has_source() {clear_has_source17752,617778
inline void HDF5DataParameter::clear_source() {clear_source17755,617865
inline const ::std::string& HDF5DataParameter::source() const {source17761,618027
inline void HDF5DataParameter::set_source(const ::std::string& value) {set_source17764,618112
inline void HDF5DataParameter::set_source(const char* value) {set_source17771,618333
inline void HDF5DataParameter::set_source(const char* value, size_t size) {set_source17778,618545
inline ::std::string* HDF5DataParameter::mutable_source() {mutable_source17785,618807
inline ::std::string* HDF5DataParameter::release_source() {release_source17792,619008
inline void HDF5DataParameter::set_allocated_source(::std::string* source) {set_allocated_source17802,619328
inline bool HDF5DataParameter::has_batch_size() const {has_batch_size17816,619718
inline void HDF5DataParameter::set_has_batch_size() {set_has_batch_size17819,619821
inline void HDF5DataParameter::clear_has_batch_size() {clear_has_batch_size17822,619909
inline void HDF5DataParameter::clear_batch_size() {clear_batch_size17825,620000
inline ::google::protobuf::uint32 HDF5DataParameter::batch_size() const {batch_size17829,620100
inline void HDF5DataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size17832,620198
inline bool HDF5DataParameter::has_shuffle() const {has_shuffle17838,620378
inline void HDF5DataParameter::set_has_shuffle() {set_has_shuffle17841,620478
inline void HDF5DataParameter::clear_has_shuffle() {clear_has_shuffle17844,620563
inline void HDF5DataParameter::clear_shuffle() {clear_shuffle17847,620651
inline bool HDF5DataParameter::shuffle() const {shuffle17851,620745
inline void HDF5DataParameter::set_shuffle(bool value) {set_shuffle17854,620815
inline bool HDF5OutputParameter::has_file_name() const {has_file_name17864,621046
inline void HDF5OutputParameter::set_has_file_name() {set_has_file_name17867,621150
inline void HDF5OutputParameter::clear_has_file_name() {clear_has_file_name17870,621239
inline void HDF5OutputParameter::clear_file_name() {clear_file_name17873,621331
inline const ::std::string& HDF5OutputParameter::file_name() const {file_name17879,621507
inline void HDF5OutputParameter::set_file_name(const ::std::string& value) {set_file_name17882,621600
inline void HDF5OutputParameter::set_file_name(const char* value) {set_file_name17889,621838
inline void HDF5OutputParameter::set_file_name(const char* value, size_t size) {set_file_name17896,622067
inline ::std::string* HDF5OutputParameter::mutable_file_name() {mutable_file_name17903,622346
inline ::std::string* HDF5OutputParameter::release_file_name() {release_file_name17910,622564
inline void HDF5OutputParameter::set_allocated_file_name(::std::string* file_name) {set_allocated_file_name17920,622901
inline bool HingeLossParameter::has_norm() const {has_norm17938,623451
inline void HingeLossParameter::set_has_norm() {set_has_norm17941,623549
inline void HingeLossParameter::clear_has_norm() {clear_has_norm17944,623632
inline void HingeLossParameter::clear_norm() {clear_norm17947,623718
inline ::caffe::HingeLossParameter_Norm HingeLossParameter::norm() const {norm17951,623800
inline void HingeLossParameter::set_norm(::caffe::HingeLossParameter_Norm value) {set_norm17954,623942
inline bool ImageDataParameter::has_source() const {has_source17965,624248
inline void ImageDataParameter::set_has_source() {set_has_source17968,624348
inline void ImageDataParameter::clear_has_source() {clear_has_source17971,624433
inline void ImageDataParameter::clear_source() {clear_source17974,624521
inline const ::std::string& ImageDataParameter::source() const {source17980,624684
inline void ImageDataParameter::set_source(const ::std::string& value) {set_source17983,624770
inline void ImageDataParameter::set_source(const char* value) {set_source17990,624992
inline void ImageDataParameter::set_source(const char* value, size_t size) {set_source17997,625205
inline ::std::string* ImageDataParameter::mutable_source() {mutable_source18004,625468
inline ::std::string* ImageDataParameter::release_source() {release_source18011,625670
inline void ImageDataParameter::set_allocated_source(::std::string* source) {set_allocated_source18021,625991
inline bool ImageDataParameter::has_batch_size() const {has_batch_size18035,626396
inline void ImageDataParameter::set_has_batch_size() {set_has_batch_size18038,626500
inline void ImageDataParameter::clear_has_batch_size() {clear_has_batch_size18041,626589
inline void ImageDataParameter::clear_batch_size() {clear_batch_size18044,626681
inline ::google::protobuf::uint32 ImageDataParameter::batch_size() const {batch_size18048,626782
inline void ImageDataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size18051,626881
inline bool ImageDataParameter::has_rand_skip() const {has_rand_skip18057,627062
inline void ImageDataParameter::set_has_rand_skip() {set_has_rand_skip18060,627165
inline void ImageDataParameter::clear_has_rand_skip() {clear_has_rand_skip18063,627253
inline void ImageDataParameter::clear_rand_skip() {clear_rand_skip18066,627344
inline ::google::protobuf::uint32 ImageDataParameter::rand_skip() const {rand_skip18070,627442
inline void ImageDataParameter::set_rand_skip(::google::protobuf::uint32 value) {set_rand_skip18073,627539
inline bool ImageDataParameter::has_shuffle() const {has_shuffle18079,627717
inline void ImageDataParameter::set_has_shuffle() {set_has_shuffle18082,627818
inline void ImageDataParameter::clear_has_shuffle() {clear_has_shuffle18085,627904
inline void ImageDataParameter::clear_shuffle() {clear_shuffle18088,627993
inline bool ImageDataParameter::shuffle() const {shuffle18092,628088
inline void ImageDataParameter::set_shuffle(bool value) {set_shuffle18095,628159
inline bool ImageDataParameter::has_new_height() const {has_new_height18101,628310
inline void ImageDataParameter::set_has_new_height() {set_has_new_height18104,628414
inline void ImageDataParameter::clear_has_new_height() {clear_has_new_height18107,628503
inline void ImageDataParameter::clear_new_height() {clear_new_height18110,628595
inline ::google::protobuf::uint32 ImageDataParameter::new_height() const {new_height18114,628696
inline void ImageDataParameter::set_new_height(::google::protobuf::uint32 value) {set_new_height18117,628795
inline bool ImageDataParameter::has_new_width() const {has_new_width18123,628977
inline void ImageDataParameter::set_has_new_width() {set_has_new_width18126,629080
inline void ImageDataParameter::clear_has_new_width() {clear_has_new_width18129,629168
inline void ImageDataParameter::clear_new_width() {clear_new_width18132,629259
inline ::google::protobuf::uint32 ImageDataParameter::new_width() const {new_width18136,629357
inline void ImageDataParameter::set_new_width(::google::protobuf::uint32 value) {set_new_width18139,629454
inline bool ImageDataParameter::has_is_color() const {has_is_color18145,629633
inline void ImageDataParameter::set_has_is_color() {set_has_is_color18148,629735
inline void ImageDataParameter::clear_has_is_color() {clear_has_is_color18151,629822
inline void ImageDataParameter::clear_is_color() {clear_is_color18154,629912
inline bool ImageDataParameter::is_color() const {is_color18158,630009
inline void ImageDataParameter::set_is_color(bool value) {set_is_color18161,630082
inline bool ImageDataParameter::has_scale() const {has_scale18167,630230
inline void ImageDataParameter::set_has_scale() {set_has_scale18170,630329
inline void ImageDataParameter::clear_has_scale() {clear_has_scale18173,630413
inline void ImageDataParameter::clear_scale() {clear_scale18176,630500
inline float ImageDataParameter::scale() const {scale18180,630585
inline void ImageDataParameter::set_scale(float value) {set_scale18183,630653
inline bool ImageDataParameter::has_mean_file() const {has_mean_file18189,630784
inline void ImageDataParameter::set_has_mean_file() {set_has_mean_file18192,630887
inline void ImageDataParameter::clear_has_mean_file() {clear_has_mean_file18195,630975
inline void ImageDataParameter::clear_mean_file() {clear_mean_file18198,631066
inline const ::std::string& ImageDataParameter::mean_file() const {mean_file18204,631241
inline void ImageDataParameter::set_mean_file(const ::std::string& value) {set_mean_file18207,631333
inline void ImageDataParameter::set_mean_file(const char* value) {set_mean_file18214,631570
inline void ImageDataParameter::set_mean_file(const char* value, size_t size) {set_mean_file18221,631798
inline ::std::string* ImageDataParameter::mutable_mean_file() {mutable_mean_file18228,632076
inline ::std::string* ImageDataParameter::release_mean_file() {release_mean_file18235,632293
inline void ImageDataParameter::set_allocated_mean_file(::std::string* mean_file) {set_allocated_mean_file18245,632629
inline bool ImageDataParameter::has_crop_size() const {has_crop_size18259,633063
inline void ImageDataParameter::set_has_crop_size() {set_has_crop_size18262,633166
inline void ImageDataParameter::clear_has_crop_size() {clear_has_crop_size18265,633254
inline void ImageDataParameter::clear_crop_size() {clear_crop_size18268,633345
inline ::google::protobuf::uint32 ImageDataParameter::crop_size() const {crop_size18272,633443
inline void ImageDataParameter::set_crop_size(::google::protobuf::uint32 value) {set_crop_size18275,633540
inline bool ImageDataParameter::has_mirror() const {has_mirror18281,633717
inline void ImageDataParameter::set_has_mirror() {set_has_mirror18284,633817
inline void ImageDataParameter::clear_has_mirror() {clear_has_mirror18287,633902
inline void ImageDataParameter::clear_mirror() {clear_mirror18290,633990
inline bool ImageDataParameter::mirror() const {mirror18294,634082
inline void ImageDataParameter::set_mirror(bool value) {set_mirror18297,634151
inline bool ImageDataParameter::has_root_folder() const {has_root_folder18303,634302
inline void ImageDataParameter::set_has_root_folder() {set_has_root_folder18306,634407
inline void ImageDataParameter::clear_has_root_folder() {clear_has_root_folder18309,634497
inline void ImageDataParameter::clear_root_folder() {clear_root_folder18312,634590
inline const ::std::string& ImageDataParameter::root_folder() const {root_folder18318,634773
inline void ImageDataParameter::set_root_folder(const ::std::string& value) {set_root_folder18321,634869
inline void ImageDataParameter::set_root_folder(const char* value) {set_root_folder18328,635116
inline void ImageDataParameter::set_root_folder(const char* value, size_t size) {set_root_folder18335,635354
inline ::std::string* ImageDataParameter::mutable_root_folder() {mutable_root_folder18342,635642
inline ::std::string* ImageDataParameter::release_root_folder() {release_root_folder18349,635869
inline void ImageDataParameter::set_allocated_root_folder(::std::string* root_folder) {set_allocated_root_folder18359,636215
inline bool InfogainLossParameter::has_source() const {has_source18377,636750
inline void InfogainLossParameter::set_has_source() {set_has_source18380,636853
inline void InfogainLossParameter::clear_has_source() {clear_has_source18383,636941
inline void InfogainLossParameter::clear_source() {clear_source18386,637032
inline const ::std::string& InfogainLossParameter::source() const {source18392,637198
inline void InfogainLossParameter::set_source(const ::std::string& value) {set_source18395,637287
inline void InfogainLossParameter::set_source(const char* value) {set_source18402,637512
inline void InfogainLossParameter::set_source(const char* value, size_t size) {set_source18409,637728
inline ::std::string* InfogainLossParameter::mutable_source() {mutable_source18416,637994
inline ::std::string* InfogainLossParameter::release_source() {release_source18423,638199
inline void InfogainLossParameter::set_allocated_source(::std::string* source) {set_allocated_source18433,638523
inline bool InfogainLossParameter::has_axis() const {has_axis18447,638924
inline void InfogainLossParameter::set_has_axis() {set_has_axis18450,639025
inline void InfogainLossParameter::clear_has_axis() {clear_has_axis18453,639111
inline void InfogainLossParameter::clear_axis() {clear_axis18456,639200
inline ::google::protobuf::int32 InfogainLossParameter::axis() const {axis18460,639285
inline void InfogainLossParameter::set_axis(::google::protobuf::int32 value) {set_axis18463,639374
inline bool InnerProductParameter::has_num_output() const {has_num_output18473,639624
inline void InnerProductParameter::set_has_num_output() {set_has_num_output18476,639731
inline void InnerProductParameter::clear_has_num_output() {clear_has_num_output18479,639823
inline void InnerProductParameter::clear_num_output() {clear_num_output18482,639918
inline ::google::protobuf::uint32 InnerProductParameter::num_output() const {num_output18486,640022
inline void InnerProductParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output18489,640124
inline bool InnerProductParameter::has_bias_term() const {has_bias_term18495,640309
inline void InnerProductParameter::set_has_bias_term() {set_has_bias_term18498,640415
inline void InnerProductParameter::clear_has_bias_term() {clear_has_bias_term18501,640506
inline void InnerProductParameter::clear_bias_term() {clear_bias_term18504,640600
inline bool InnerProductParameter::bias_term() const {bias_term18508,640703
inline void InnerProductParameter::set_bias_term(bool value) {set_bias_term18511,640781
inline bool InnerProductParameter::has_weight_filler() const {has_weight_filler18517,640946
inline void InnerProductParameter::set_has_weight_filler() {set_has_weight_filler18520,641056
inline void InnerProductParameter::clear_has_weight_filler() {clear_has_weight_filler18523,641151
inline void InnerProductParameter::clear_weight_filler() {clear_weight_filler18526,641249
inline const ::caffe::FillerParameter& InnerProductParameter::weight_filler() const {weight_filler18530,641420
inline ::caffe::FillerParameter* InnerProductParameter::mutable_weight_filler() {mutable_weight_filler18533,641596
inline ::caffe::FillerParameter* InnerProductParameter::release_weight_filler() {release_weight_filler18538,641809
inline void InnerProductParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler18544,642013
inline bool InnerProductParameter::has_bias_filler() const {has_bias_filler18555,642331
inline void InnerProductParameter::set_has_bias_filler() {set_has_bias_filler18558,642439
inline void InnerProductParameter::clear_has_bias_filler() {clear_has_bias_filler18561,642532
inline void InnerProductParameter::clear_bias_filler() {clear_bias_filler18564,642628
inline const ::caffe::FillerParameter& InnerProductParameter::bias_filler() const {bias_filler18568,642791
inline ::caffe::FillerParameter* InnerProductParameter::mutable_bias_filler() {mutable_bias_filler18571,642959
inline ::caffe::FillerParameter* InnerProductParameter::release_bias_filler() {release_bias_filler18576,643162
inline void InnerProductParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler18582,643358
inline bool InnerProductParameter::has_axis() const {has_axis18593,643650
inline void InnerProductParameter::set_has_axis() {set_has_axis18596,643751
inline void InnerProductParameter::clear_has_axis() {clear_has_axis18599,643837
inline void InnerProductParameter::clear_axis() {clear_axis18602,643926
inline ::google::protobuf::int32 InnerProductParameter::axis() const {axis18606,644011
inline void InnerProductParameter::set_axis(::google::protobuf::int32 value) {set_axis18609,644100
inline bool InnerProductParameter::has_transpose() const {has_transpose18615,644267
inline void InnerProductParameter::set_has_transpose() {set_has_transpose18618,644373
inline void InnerProductParameter::clear_has_transpose() {clear_has_transpose18621,644464
inline void InnerProductParameter::clear_transpose() {clear_transpose18624,644558
inline bool InnerProductParameter::transpose() const {transpose18628,644662
inline void InnerProductParameter::set_transpose(bool value) {set_transpose18631,644740
inline int InputParameter::shape_size() const {shape_size18641,644982
inline void InputParameter::clear_shape() {clear_shape18644,645056
inline const ::caffe::BlobShape& InputParameter::shape(int index) const {shape18647,645120
inline ::caffe::BlobShape* InputParameter::mutable_shape(int index) {mutable_shape18650,645224
inline ::caffe::BlobShape* InputParameter::add_shape() {add_shape18653,645328
InputParameter::shape() const {shape18657,645483
InputParameter::mutable_shape() {mutable_shape18661,645601
inline bool LogParameter::has_base() const {has_base18670,645788
inline void LogParameter::set_has_base() {set_has_base18673,645880
inline void LogParameter::clear_has_base() {clear_has_base18676,645957
inline void LogParameter::clear_base() {clear_base18679,646037
inline float LogParameter::base() const {base18683,646114
inline void LogParameter::set_base(float value) {set_base18686,646174
inline bool LogParameter::has_scale() const {has_scale18692,646305
inline void LogParameter::set_has_scale() {set_has_scale18695,646398
inline void LogParameter::clear_has_scale() {clear_has_scale18698,646476
inline void LogParameter::clear_scale() {clear_scale18701,646557
inline float LogParameter::scale() const {scale18705,646636
inline void LogParameter::set_scale(float value) {set_scale18708,646698
inline bool LogParameter::has_shift() const {has_shift18714,646832
inline void LogParameter::set_has_shift() {set_has_shift18717,646925
inline void LogParameter::clear_has_shift() {clear_has_shift18720,647003
inline void LogParameter::clear_shift() {clear_shift18723,647084
inline float LogParameter::shift() const {shift18727,647163
inline void LogParameter::set_shift(float value) {set_shift18730,647225
inline bool LRNParameter::has_local_size() const {has_local_size18740,647454
inline void LRNParameter::set_has_local_size() {set_has_local_size18743,647552
inline void LRNParameter::clear_has_local_size() {clear_has_local_size18746,647635
inline void LRNParameter::clear_local_size() {clear_local_size18749,647721
inline ::google::protobuf::uint32 LRNParameter::local_size() const {local_size18753,647816
inline void LRNParameter::set_local_size(::google::protobuf::uint32 value) {set_local_size18756,647909
inline bool LRNParameter::has_alpha() const {has_alpha18762,648079
inline void LRNParameter::set_has_alpha() {set_has_alpha18765,648172
inline void LRNParameter::clear_has_alpha() {clear_has_alpha18768,648250
inline void LRNParameter::clear_alpha() {clear_alpha18771,648331
inline float LRNParameter::alpha() const {alpha18775,648410
inline void LRNParameter::set_alpha(float value) {set_alpha18778,648472
inline bool LRNParameter::has_beta() const {has_beta18784,648608
inline void LRNParameter::set_has_beta() {set_has_beta18787,648700
inline void LRNParameter::clear_has_beta() {clear_has_beta18790,648777
inline void LRNParameter::clear_beta() {clear_beta18793,648857
inline float LRNParameter::beta() const {beta18797,648937
inline void LRNParameter::set_beta(float value) {set_beta18800,648997
inline bool LRNParameter::has_norm_region() const {has_norm_region18806,649173
inline void LRNParameter::set_has_norm_region() {set_has_norm_region18809,649272
inline void LRNParameter::clear_has_norm_region() {clear_has_norm_region18812,649356
inline void LRNParameter::clear_norm_region() {clear_norm_region18815,649443
inline ::caffe::LRNParameter_NormRegion LRNParameter::norm_region() const {norm_region18819,649540
inline void LRNParameter::set_norm_region(::caffe::LRNParameter_NormRegion value) {set_norm_region18822,649690
inline bool LRNParameter::has_k() const {has_k18829,649924
inline void LRNParameter::set_has_k() {set_has_k18832,650013
inline void LRNParameter::clear_has_k() {clear_has_k18835,650087
inline void LRNParameter::clear_k() {clear_k18838,650164
inline float LRNParameter::k() const {k18842,650231
inline void LRNParameter::set_k(float value) {set_k18845,650285
inline bool LRNParameter::has_engine() const {has_engine18851,650435
inline void LRNParameter::set_has_engine() {set_has_engine18854,650529
inline void LRNParameter::clear_has_engine() {clear_has_engine18857,650608
inline void LRNParameter::clear_engine() {clear_engine18860,650690
inline ::caffe::LRNParameter_Engine LRNParameter::engine() const {engine18864,650772
inline void LRNParameter::set_engine(::caffe::LRNParameter_Engine value) {set_engine18867,650904
inline bool MemoryDataParameter::has_batch_size() const {has_batch_size18878,651207
inline void MemoryDataParameter::set_has_batch_size() {set_has_batch_size18881,651312
inline void MemoryDataParameter::clear_has_batch_size() {clear_has_batch_size18884,651402
inline void MemoryDataParameter::clear_batch_size() {clear_batch_size18887,651495
inline ::google::protobuf::uint32 MemoryDataParameter::batch_size() const {batch_size18891,651597
inline void MemoryDataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size18894,651697
inline bool MemoryDataParameter::has_channels() const {has_channels18900,651864
inline void MemoryDataParameter::set_has_channels() {set_has_channels18903,651967
inline void MemoryDataParameter::clear_has_channels() {clear_has_channels18906,652055
inline void MemoryDataParameter::clear_channels() {clear_channels18909,652146
inline ::google::protobuf::uint32 MemoryDataParameter::channels() const {channels18913,652242
inline void MemoryDataParameter::set_channels(::google::protobuf::uint32 value) {set_channels18916,652338
inline bool MemoryDataParameter::has_height() const {has_height18922,652497
inline void MemoryDataParameter::set_has_height() {set_has_height18925,652598
inline void MemoryDataParameter::clear_has_height() {clear_has_height18928,652684
inline void MemoryDataParameter::clear_height() {clear_height18931,652773
inline ::google::protobuf::uint32 MemoryDataParameter::height() const {height18935,652863
inline void MemoryDataParameter::set_height(::google::protobuf::uint32 value) {set_height18938,652955
inline bool MemoryDataParameter::has_width() const {has_width18944,653107
inline void MemoryDataParameter::set_has_width() {set_has_width18947,653207
inline void MemoryDataParameter::clear_has_width() {clear_has_width18950,653292
inline void MemoryDataParameter::clear_width() {clear_width18953,653380
inline ::google::protobuf::uint32 MemoryDataParameter::width() const {width18957,653467
inline void MemoryDataParameter::set_width(::google::protobuf::uint32 value) {set_width18960,653557
inline bool MVNParameter::has_normalize_variance() const {has_normalize_variance18970,653823
inline void MVNParameter::set_has_normalize_variance() {set_has_normalize_variance18973,653929
inline void MVNParameter::clear_has_normalize_variance() {clear_has_normalize_variance18976,654020
inline void MVNParameter::clear_normalize_variance() {clear_normalize_variance18979,654114
inline bool MVNParameter::normalize_variance() const {normalize_variance18983,654235
inline void MVNParameter::set_normalize_variance(bool value) {set_normalize_variance18986,654322
inline bool MVNParameter::has_across_channels() const {has_across_channels18992,654507
inline void MVNParameter::set_has_across_channels() {set_has_across_channels18995,654610
inline void MVNParameter::clear_has_across_channels() {clear_has_across_channels18998,654698
inline void MVNParameter::clear_across_channels() {clear_across_channels19001,654789
inline bool MVNParameter::across_channels() const {across_channels19005,654902
inline void MVNParameter::set_across_channels(bool value) {set_across_channels19008,654983
inline bool MVNParameter::has_eps() const {has_eps19014,655148
inline void MVNParameter::set_has_eps() {set_has_eps19017,655239
inline void MVNParameter::clear_has_eps() {clear_has_eps19020,655315
inline void MVNParameter::clear_eps() {clear_eps19023,655394
inline float MVNParameter::eps() const {eps19027,655472
inline void MVNParameter::set_eps(float value) {set_eps19030,655530
inline bool ParameterParameter::has_shape() const {has_shape19040,655750
inline void ParameterParameter::set_has_shape() {set_has_shape19043,655849
inline void ParameterParameter::clear_has_shape() {clear_has_shape19046,655933
inline void ParameterParameter::clear_shape() {clear_shape19049,656020
inline const ::caffe::BlobShape& ParameterParameter::shape() const {shape19053,656150
inline ::caffe::BlobShape* ParameterParameter::mutable_shape() {mutable_shape19056,656285
inline ::caffe::BlobShape* ParameterParameter::release_shape() {release_shape19061,656443
inline void ParameterParameter::set_allocated_shape(::caffe::BlobShape* shape) {set_allocated_shape19067,656600
inline bool PoolingParameter::has_pool() const {has_pool19082,656959
inline void PoolingParameter::set_has_pool() {set_has_pool19085,657055
inline void PoolingParameter::clear_has_pool() {clear_has_pool19088,657136
inline void PoolingParameter::clear_pool() {clear_pool19091,657220
inline ::caffe::PoolingParameter_PoolMethod PoolingParameter::pool() const {pool19095,657300
inline void PoolingParameter::set_pool(::caffe::PoolingParameter_PoolMethod value) {set_pool19098,657448
inline bool PoolingParameter::has_pad() const {has_pad19105,657676
inline void PoolingParameter::set_has_pad() {set_has_pad19108,657771
inline void PoolingParameter::clear_has_pad() {clear_has_pad19111,657851
inline void PoolingParameter::clear_pad() {clear_pad19114,657934
inline ::google::protobuf::uint32 PoolingParameter::pad() const {pad19118,658012
inline void PoolingParameter::set_pad(::google::protobuf::uint32 value) {set_pad19121,658095
inline bool PoolingParameter::has_pad_h() const {has_pad_h19127,658249
inline void PoolingParameter::set_has_pad_h() {set_has_pad_h19130,658346
inline void PoolingParameter::clear_has_pad_h() {clear_has_pad_h19133,658428
inline void PoolingParameter::clear_pad_h() {clear_pad_h19136,658513
inline ::google::protobuf::uint32 PoolingParameter::pad_h() const {pad_h19140,658597
inline void PoolingParameter::set_pad_h(::google::protobuf::uint32 value) {set_pad_h19143,658684
inline bool PoolingParameter::has_pad_w() const {has_pad_w19149,658845
inline void PoolingParameter::set_has_pad_w() {set_has_pad_w19152,658942
inline void PoolingParameter::clear_has_pad_w() {clear_has_pad_w19155,659024
inline void PoolingParameter::clear_pad_w() {clear_pad_w19158,659109
inline ::google::protobuf::uint32 PoolingParameter::pad_w() const {pad_w19162,659193
inline void PoolingParameter::set_pad_w(::google::protobuf::uint32 value) {set_pad_w19165,659280
inline bool PoolingParameter::has_kernel_size() const {has_kernel_size19171,659432
inline void PoolingParameter::set_has_kernel_size() {set_has_kernel_size19174,659535
inline void PoolingParameter::clear_has_kernel_size() {clear_has_kernel_size19177,659623
inline void PoolingParameter::clear_kernel_size() {clear_kernel_size19180,659714
inline ::google::protobuf::uint32 PoolingParameter::kernel_size() const {kernel_size19184,659816
inline void PoolingParameter::set_kernel_size(::google::protobuf::uint32 value) {set_kernel_size19187,659915
inline bool PoolingParameter::has_kernel_h() const {has_kernel_h19193,660082
inline void PoolingParameter::set_has_kernel_h() {set_has_kernel_h19196,660182
inline void PoolingParameter::clear_has_kernel_h() {clear_has_kernel_h19199,660267
inline void PoolingParameter::clear_kernel_h() {clear_kernel_h19202,660355
inline ::google::protobuf::uint32 PoolingParameter::kernel_h() const {kernel_h19206,660448
inline void PoolingParameter::set_kernel_h(::google::protobuf::uint32 value) {set_kernel_h19209,660541
inline bool PoolingParameter::has_kernel_w() const {has_kernel_w19215,660699
inline void PoolingParameter::set_has_kernel_w() {set_has_kernel_w19218,660799
inline void PoolingParameter::clear_has_kernel_w() {clear_has_kernel_w19221,660884
inline void PoolingParameter::clear_kernel_w() {clear_kernel_w19224,660972
inline ::google::protobuf::uint32 PoolingParameter::kernel_w() const {kernel_w19228,661065
inline void PoolingParameter::set_kernel_w(::google::protobuf::uint32 value) {set_kernel_w19231,661158
inline bool PoolingParameter::has_stride() const {has_stride19237,661328
inline void PoolingParameter::set_has_stride() {set_has_stride19240,661426
inline void PoolingParameter::clear_has_stride() {clear_has_stride19243,661509
inline void PoolingParameter::clear_stride() {clear_stride19246,661595
inline ::google::protobuf::uint32 PoolingParameter::stride() const {stride19250,661682
inline void PoolingParameter::set_stride(::google::protobuf::uint32 value) {set_stride19253,661771
inline bool PoolingParameter::has_stride_h() const {has_stride_h19259,661923
inline void PoolingParameter::set_has_stride_h() {set_has_stride_h19262,662023
inline void PoolingParameter::clear_has_stride_h() {clear_has_stride_h19265,662108
inline void PoolingParameter::clear_stride_h() {clear_stride_h19268,662196
inline ::google::protobuf::uint32 PoolingParameter::stride_h() const {stride_h19272,662289
inline void PoolingParameter::set_stride_h(::google::protobuf::uint32 value) {set_stride_h19275,662382
inline bool PoolingParameter::has_stride_w() const {has_stride_w19281,662540
inline void PoolingParameter::set_has_stride_w() {set_has_stride_w19284,662640
inline void PoolingParameter::clear_has_stride_w() {clear_has_stride_w19287,662725
inline void PoolingParameter::clear_stride_w() {clear_stride_w19290,662813
inline ::google::protobuf::uint32 PoolingParameter::stride_w() const {stride_w19294,662906
inline void PoolingParameter::set_stride_w(::google::protobuf::uint32 value) {set_stride_w19297,662999
inline bool PoolingParameter::has_engine() const {has_engine19303,663200
inline void PoolingParameter::set_has_engine() {set_has_engine19306,663298
inline void PoolingParameter::clear_has_engine() {clear_has_engine19309,663381
inline void PoolingParameter::clear_engine() {clear_engine19312,663467
inline ::caffe::PoolingParameter_Engine PoolingParameter::engine() const {engine19316,663553
inline void PoolingParameter::set_engine(::caffe::PoolingParameter_Engine value) {set_engine19319,663697
inline bool PoolingParameter::has_global_pooling() const {has_global_pooling19326,663937
inline void PoolingParameter::set_has_global_pooling() {set_has_global_pooling19329,664043
inline void PoolingParameter::clear_has_global_pooling() {clear_has_global_pooling19332,664134
inline void PoolingParameter::clear_global_pooling() {clear_global_pooling19335,664228
inline bool PoolingParameter::global_pooling() const {global_pooling19339,664342
inline void PoolingParameter::set_global_pooling(bool value) {set_global_pooling19342,664425
inline bool PowerParameter::has_power() const {has_power19352,664680
inline void PowerParameter::set_has_power() {set_has_power19355,664775
inline void PowerParameter::clear_has_power() {clear_has_power19358,664855
inline void PowerParameter::clear_power() {clear_power19361,664938
inline float PowerParameter::power() const {power19365,665019
inline void PowerParameter::set_power(float value) {set_power19368,665083
inline bool PowerParameter::has_scale() const {has_scale19374,665219
inline void PowerParameter::set_has_scale() {set_has_scale19377,665314
inline void PowerParameter::clear_has_scale() {clear_has_scale19380,665394
inline void PowerParameter::clear_scale() {clear_scale19383,665477
inline float PowerParameter::scale() const {scale19387,665558
inline void PowerParameter::set_scale(float value) {set_scale19390,665622
inline bool PowerParameter::has_shift() const {has_shift19396,665758
inline void PowerParameter::set_has_shift() {set_has_shift19399,665853
inline void PowerParameter::clear_has_shift() {clear_has_shift19402,665933
inline void PowerParameter::clear_shift() {clear_shift19405,666016
inline float PowerParameter::shift() const {shift19409,666097
inline void PowerParameter::set_shift(float value) {set_shift19412,666161
inline bool PythonParameter::has_module() const {has_module19422,666377
inline void PythonParameter::set_has_module() {set_has_module19425,666474
inline void PythonParameter::clear_has_module() {clear_has_module19428,666556
inline void PythonParameter::clear_module() {clear_module19431,666641
inline const ::std::string& PythonParameter::module() const {module19437,666801
inline void PythonParameter::set_module(const ::std::string& value) {set_module19440,666884
inline void PythonParameter::set_module(const char* value) {set_module19447,667103
inline void PythonParameter::set_module(const char* value, size_t size) {set_module19454,667313
inline ::std::string* PythonParameter::mutable_module() {mutable_module19461,667573
inline ::std::string* PythonParameter::release_module() {release_module19468,667772
inline void PythonParameter::set_allocated_module(::std::string* module) {set_allocated_module19478,668090
inline bool PythonParameter::has_layer() const {has_layer19492,668473
inline void PythonParameter::set_has_layer() {set_has_layer19495,668569
inline void PythonParameter::clear_has_layer() {clear_has_layer19498,668650
inline void PythonParameter::clear_layer() {clear_layer19501,668734
inline const ::std::string& PythonParameter::layer() const {layer19507,668890
inline void PythonParameter::set_layer(const ::std::string& value) {set_layer19510,668971
inline void PythonParameter::set_layer(const char* value) {set_layer19517,669185
inline void PythonParameter::set_layer(const char* value, size_t size) {set_layer19524,669390
inline ::std::string* PythonParameter::mutable_layer() {mutable_layer19531,669645
inline ::std::string* PythonParameter::release_layer() {release_layer19538,669839
inline void PythonParameter::set_allocated_layer(::std::string* layer) {set_allocated_layer19548,670152
inline bool PythonParameter::has_param_str() const {has_param_str19562,670544
inline void PythonParameter::set_has_param_str() {set_has_param_str19565,670644
inline void PythonParameter::clear_has_param_str() {clear_has_param_str19568,670729
inline void PythonParameter::clear_param_str() {clear_param_str19571,670817
inline const ::std::string& PythonParameter::param_str() const {param_str19577,670989
inline void PythonParameter::set_param_str(const ::std::string& value) {set_param_str19580,671078
inline void PythonParameter::set_param_str(const char* value) {set_param_str19587,671312
inline void PythonParameter::set_param_str(const char* value, size_t size) {set_param_str19594,671537
inline ::std::string* PythonParameter::mutable_param_str() {mutable_param_str19601,671812
inline ::std::string* PythonParameter::release_param_str() {release_param_str19608,672026
inline void PythonParameter::set_allocated_param_str(::std::string* param_str) {set_allocated_param_str19618,672359
inline bool PythonParameter::has_share_in_parallel() const {has_share_in_parallel19632,672800
inline void PythonParameter::set_has_share_in_parallel() {set_has_share_in_parallel19635,672908
inline void PythonParameter::clear_has_share_in_parallel() {clear_has_share_in_parallel19638,673001
inline void PythonParameter::clear_share_in_parallel() {clear_share_in_parallel19641,673097
inline bool PythonParameter::share_in_parallel() const {share_in_parallel19645,673219
inline void PythonParameter::set_share_in_parallel(bool value) {set_share_in_parallel19648,673307
inline bool RecurrentParameter::has_num_output() const {has_num_output19658,673580
inline void RecurrentParameter::set_has_num_output() {set_has_num_output19661,673684
inline void RecurrentParameter::clear_has_num_output() {clear_has_num_output19664,673773
inline void RecurrentParameter::clear_num_output() {clear_num_output19667,673865
inline ::google::protobuf::uint32 RecurrentParameter::num_output() const {num_output19671,673966
inline void RecurrentParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output19674,674065
inline bool RecurrentParameter::has_weight_filler() const {has_weight_filler19680,674252
inline void RecurrentParameter::set_has_weight_filler() {set_has_weight_filler19683,674359
inline void RecurrentParameter::clear_has_weight_filler() {clear_has_weight_filler19686,674451
inline void RecurrentParameter::clear_weight_filler() {clear_weight_filler19689,674546
inline const ::caffe::FillerParameter& RecurrentParameter::weight_filler() const {weight_filler19693,674714
inline ::caffe::FillerParameter* RecurrentParameter::mutable_weight_filler() {mutable_weight_filler19696,674887
inline ::caffe::FillerParameter* RecurrentParameter::release_weight_filler() {release_weight_filler19701,675097
inline void RecurrentParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler19707,675298
inline bool RecurrentParameter::has_bias_filler() const {has_bias_filler19718,675613
inline void RecurrentParameter::set_has_bias_filler() {set_has_bias_filler19721,675718
inline void RecurrentParameter::clear_has_bias_filler() {clear_has_bias_filler19724,675808
inline void RecurrentParameter::clear_bias_filler() {clear_bias_filler19727,675901
inline const ::caffe::FillerParameter& RecurrentParameter::bias_filler() const {bias_filler19731,676061
inline ::caffe::FillerParameter* RecurrentParameter::mutable_bias_filler() {mutable_bias_filler19734,676226
inline ::caffe::FillerParameter* RecurrentParameter::release_bias_filler() {release_bias_filler19739,676426
inline void RecurrentParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler19745,676619
inline bool RecurrentParameter::has_debug_info() const {has_debug_info19756,676917
inline void RecurrentParameter::set_has_debug_info() {set_has_debug_info19759,677021
inline void RecurrentParameter::clear_has_debug_info() {clear_has_debug_info19762,677110
inline void RecurrentParameter::clear_debug_info() {clear_debug_info19765,677202
inline bool RecurrentParameter::debug_info() const {debug_info19769,677306
inline void RecurrentParameter::set_debug_info(bool value) {set_debug_info19772,677383
inline bool RecurrentParameter::has_expose_hidden() const {has_expose_hidden19778,677548
inline void RecurrentParameter::set_has_expose_hidden() {set_has_expose_hidden19781,677655
inline void RecurrentParameter::clear_has_expose_hidden() {clear_has_expose_hidden19784,677747
inline void RecurrentParameter::clear_expose_hidden() {clear_expose_hidden19787,677842
inline bool RecurrentParameter::expose_hidden() const {expose_hidden19791,677955
inline void RecurrentParameter::set_expose_hidden(bool value) {set_expose_hidden19794,678038
inline bool ReductionParameter::has_operation() const {has_operation19804,678334
inline void ReductionParameter::set_has_operation() {set_has_operation19807,678437
inline void ReductionParameter::clear_has_operation() {clear_has_operation19810,678525
inline void ReductionParameter::clear_operation() {clear_operation19813,678616
inline ::caffe::ReductionParameter_ReductionOp ReductionParameter::operation() const {operation19817,678713
inline void ReductionParameter::set_operation(::caffe::ReductionParameter_ReductionOp value) {set_operation19820,678879
inline bool ReductionParameter::has_axis() const {has_axis19827,679130
inline void ReductionParameter::set_has_axis() {set_has_axis19830,679228
inline void ReductionParameter::clear_has_axis() {clear_has_axis19833,679311
inline void ReductionParameter::clear_axis() {clear_axis19836,679397
inline ::google::protobuf::int32 ReductionParameter::axis() const {axis19840,679479
inline void ReductionParameter::set_axis(::google::protobuf::int32 value) {set_axis19843,679565
inline bool ReductionParameter::has_coeff() const {has_coeff19849,679722
inline void ReductionParameter::set_has_coeff() {set_has_coeff19852,679821
inline void ReductionParameter::clear_has_coeff() {clear_has_coeff19855,679905
inline void ReductionParameter::clear_coeff() {clear_coeff19858,679992
inline float ReductionParameter::coeff() const {coeff19862,680077
inline void ReductionParameter::set_coeff(float value) {set_coeff19865,680145
inline bool ReLUParameter::has_negative_slope() const {has_negative_slope19875,680384
inline void ReLUParameter::set_has_negative_slope() {set_has_negative_slope19878,680487
inline void ReLUParameter::clear_has_negative_slope() {clear_has_negative_slope19881,680575
inline void ReLUParameter::clear_negative_slope() {clear_negative_slope19884,680666
inline float ReLUParameter::negative_slope() const {negative_slope19888,680773
inline void ReLUParameter::set_negative_slope(float value) {set_negative_slope19891,680854
inline bool ReLUParameter::has_engine() const {has_engine19897,681045
inline void ReLUParameter::set_has_engine() {set_has_engine19900,681140
inline void ReLUParameter::clear_has_engine() {clear_has_engine19903,681220
inline void ReLUParameter::clear_engine() {clear_engine19906,681303
inline ::caffe::ReLUParameter_Engine ReLUParameter::engine() const {engine19910,681386
inline void ReLUParameter::set_engine(::caffe::ReLUParameter_Engine value) {set_engine19913,681521
inline bool ReshapeParameter::has_shape() const {has_shape19924,681829
inline void ReshapeParameter::set_has_shape() {set_has_shape19927,681926
inline void ReshapeParameter::clear_has_shape() {clear_has_shape19930,682008
inline void ReshapeParameter::clear_shape() {clear_shape19933,682093
inline const ::caffe::BlobShape& ReshapeParameter::shape() const {shape19937,682221
inline ::caffe::BlobShape* ReshapeParameter::mutable_shape() {mutable_shape19940,682354
inline ::caffe::BlobShape* ReshapeParameter::release_shape() {release_shape19945,682510
inline void ReshapeParameter::set_allocated_shape(::caffe::BlobShape* shape) {set_allocated_shape19951,682665
inline bool ReshapeParameter::has_axis() const {has_axis19962,682898
inline void ReshapeParameter::set_has_axis() {set_has_axis19965,682994
inline void ReshapeParameter::clear_has_axis() {clear_has_axis19968,683075
inline void ReshapeParameter::clear_axis() {clear_axis19971,683159
inline ::google::protobuf::int32 ReshapeParameter::axis() const {axis19975,683239
inline void ReshapeParameter::set_axis(::google::protobuf::int32 value) {set_axis19978,683323
inline bool ReshapeParameter::has_num_axes() const {has_num_axes19984,683482
inline void ReshapeParameter::set_has_num_axes() {set_has_num_axes19987,683582
inline void ReshapeParameter::clear_has_num_axes() {clear_has_num_axes19990,683667
inline void ReshapeParameter::clear_num_axes() {clear_num_axes19993,683755
inline ::google::protobuf::int32 ReshapeParameter::num_axes() const {num_axes19997,683848
inline void ReshapeParameter::set_num_axes(::google::protobuf::int32 value) {set_num_axes20000,683940
inline bool ScaleParameter::has_axis() const {has_axis20010,684197
inline void ScaleParameter::set_has_axis() {set_has_axis20013,684291
inline void ScaleParameter::clear_has_axis() {clear_has_axis20016,684370
inline void ScaleParameter::clear_axis() {clear_axis20019,684452
inline ::google::protobuf::int32 ScaleParameter::axis() const {axis20023,684530
inline void ScaleParameter::set_axis(::google::protobuf::int32 value) {set_axis20026,684612
inline bool ScaleParameter::has_num_axes() const {has_num_axes20032,684768
inline void ScaleParameter::set_has_num_axes() {set_has_num_axes20035,684866
inline void ScaleParameter::clear_has_num_axes() {clear_has_num_axes20038,684949
inline void ScaleParameter::clear_num_axes() {clear_num_axes20041,685035
inline ::google::protobuf::int32 ScaleParameter::num_axes() const {num_axes20045,685125
inline void ScaleParameter::set_num_axes(::google::protobuf::int32 value) {set_num_axes20048,685215
inline bool ScaleParameter::has_filler() const {has_filler20054,685384
inline void ScaleParameter::set_has_filler() {set_has_filler20057,685480
inline void ScaleParameter::clear_has_filler() {clear_has_filler20060,685561
inline void ScaleParameter::clear_filler() {clear_filler20063,685645
inline const ::caffe::FillerParameter& ScaleParameter::filler() const {filler20067,685781
inline ::caffe::FillerParameter* ScaleParameter::mutable_filler() {mutable_filler20070,685922
inline ::caffe::FillerParameter* ScaleParameter::release_filler() {release_filler20075,686093
inline void ScaleParameter::set_allocated_filler(::caffe::FillerParameter* filler) {set_allocated_filler20081,686262
inline bool ScaleParameter::has_bias_term() const {has_bias_term20092,686515
inline void ScaleParameter::set_has_bias_term() {set_has_bias_term20095,686614
inline void ScaleParameter::clear_has_bias_term() {clear_has_bias_term20098,686698
inline void ScaleParameter::clear_bias_term() {clear_bias_term20101,686785
inline bool ScaleParameter::bias_term() const {bias_term20105,686882
inline void ScaleParameter::set_bias_term(bool value) {set_bias_term20108,686953
inline bool ScaleParameter::has_bias_filler() const {has_bias_filler20114,687109
inline void ScaleParameter::set_has_bias_filler() {set_has_bias_filler20117,687210
inline void ScaleParameter::clear_has_bias_filler() {clear_has_bias_filler20120,687296
inline void ScaleParameter::clear_bias_filler() {clear_bias_filler20123,687385
inline const ::caffe::FillerParameter& ScaleParameter::bias_filler() const {bias_filler20127,687541
inline ::caffe::FillerParameter* ScaleParameter::mutable_bias_filler() {mutable_bias_filler20130,687702
inline ::caffe::FillerParameter* ScaleParameter::release_bias_filler() {release_bias_filler20135,687898
inline void ScaleParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler20141,688087
inline bool SigmoidParameter::has_engine() const {has_engine20156,688498
inline void SigmoidParameter::set_has_engine() {set_has_engine20159,688596
inline void SigmoidParameter::clear_has_engine() {clear_has_engine20162,688679
inline void SigmoidParameter::clear_engine() {clear_engine20165,688765
inline ::caffe::SigmoidParameter_Engine SigmoidParameter::engine() const {engine20169,688851
inline void SigmoidParameter::set_engine(::caffe::SigmoidParameter_Engine value) {set_engine20172,688995
inline bool SliceParameter::has_axis() const {has_axis20183,689312
inline void SliceParameter::set_has_axis() {set_has_axis20186,689406
inline void SliceParameter::clear_has_axis() {clear_has_axis20189,689485
inline void SliceParameter::clear_axis() {clear_axis20192,689567
inline ::google::protobuf::int32 SliceParameter::axis() const {axis20196,689645
inline void SliceParameter::set_axis(::google::protobuf::int32 value) {set_axis20199,689727
inline int SliceParameter::slice_point_size() const {slice_point_size20205,689873
inline void SliceParameter::clear_slice_point() {clear_slice_point20208,689959
inline ::google::protobuf::uint32 SliceParameter::slice_point(int index) const {slice_point20211,690035
inline void SliceParameter::set_slice_point(int index, ::google::protobuf::uint32 value) {set_slice_point20214,690152
inline void SliceParameter::add_slice_point(::google::protobuf::uint32 value) {add_slice_point20217,690279
SliceParameter::slice_point() const {slice_point20221,690466
SliceParameter::mutable_slice_point() {mutable_slice_point20225,690601
inline bool SliceParameter::has_slice_dim() const {has_slice_dim20230,690716
inline void SliceParameter::set_has_slice_dim() {set_has_slice_dim20233,690815
inline void SliceParameter::clear_has_slice_dim() {clear_has_slice_dim20236,690899
inline void SliceParameter::clear_slice_dim() {clear_slice_dim20239,690986
inline ::google::protobuf::uint32 SliceParameter::slice_dim() const {slice_dim20243,691080
inline void SliceParameter::set_slice_dim(::google::protobuf::uint32 value) {set_slice_dim20246,691173
inline bool SoftmaxParameter::has_engine() const {has_engine20256,691467
inline void SoftmaxParameter::set_has_engine() {set_has_engine20259,691565
inline void SoftmaxParameter::clear_has_engine() {clear_has_engine20262,691648
inline void SoftmaxParameter::clear_engine() {clear_engine20265,691734
inline ::caffe::SoftmaxParameter_Engine SoftmaxParameter::engine() const {engine20269,691820
inline void SoftmaxParameter::set_engine(::caffe::SoftmaxParameter_Engine value) {set_engine20272,691964
inline bool SoftmaxParameter::has_axis() const {has_axis20279,692190
inline void SoftmaxParameter::set_has_axis() {set_has_axis20282,692286
inline void SoftmaxParameter::clear_has_axis() {clear_has_axis20285,692367
inline void SoftmaxParameter::clear_axis() {clear_axis20288,692451
inline ::google::protobuf::int32 SoftmaxParameter::axis() const {axis20292,692531
inline void SoftmaxParameter::set_axis(::google::protobuf::int32 value) {set_axis20295,692615
inline bool TanHParameter::has_engine() const {has_engine20305,692889
inline void TanHParameter::set_has_engine() {set_has_engine20308,692984
inline void TanHParameter::clear_has_engine() {clear_has_engine20311,693064
inline void TanHParameter::clear_engine() {clear_engine20314,693147
inline ::caffe::TanHParameter_Engine TanHParameter::engine() const {engine20318,693230
inline void TanHParameter::set_engine(::caffe::TanHParameter_Engine value) {set_engine20321,693365
inline bool TileParameter::has_axis() const {has_axis20332,693672
inline void TileParameter::set_has_axis() {set_has_axis20335,693765
inline void TileParameter::clear_has_axis() {clear_has_axis20338,693843
inline void TileParameter::clear_axis() {clear_axis20341,693924
inline ::google::protobuf::int32 TileParameter::axis() const {axis20345,694001
inline void TileParameter::set_axis(::google::protobuf::int32 value) {set_axis20348,694082
inline bool TileParameter::has_tiles() const {has_tiles20354,694220
inline void TileParameter::set_has_tiles() {set_has_tiles20357,694314
inline void TileParameter::clear_has_tiles() {clear_has_tiles20360,694393
inline void TileParameter::clear_tiles() {clear_tiles20363,694475
inline ::google::protobuf::int32 TileParameter::tiles() const {tiles20367,694555
inline void TileParameter::set_tiles(::google::protobuf::int32 value) {set_tiles20370,694638
inline bool ThresholdParameter::has_threshold() const {has_threshold20380,694892
inline void ThresholdParameter::set_has_threshold() {set_has_threshold20383,694995
inline void ThresholdParameter::clear_has_threshold() {clear_has_threshold20386,695083
inline void ThresholdParameter::clear_threshold() {clear_threshold20389,695174
inline float ThresholdParameter::threshold() const {threshold20393,695271
inline void ThresholdParameter::set_threshold(float value) {set_threshold20396,695347
inline bool WindowDataParameter::has_source() const {has_source20406,695583
inline void WindowDataParameter::set_has_source() {set_has_source20409,695684
inline void WindowDataParameter::clear_has_source() {clear_has_source20412,695770
inline void WindowDataParameter::clear_source() {clear_source20415,695859
inline const ::std::string& WindowDataParameter::source() const {source20421,696023
inline void WindowDataParameter::set_source(const ::std::string& value) {set_source20424,696110
inline void WindowDataParameter::set_source(const char* value) {set_source20431,696333
inline void WindowDataParameter::set_source(const char* value, size_t size) {set_source20438,696547
inline ::std::string* WindowDataParameter::mutable_source() {mutable_source20445,696811
inline ::std::string* WindowDataParameter::release_source() {release_source20452,697014
inline void WindowDataParameter::set_allocated_source(::std::string* source) {set_allocated_source20462,697336
inline bool WindowDataParameter::has_scale() const {has_scale20476,697736
inline void WindowDataParameter::set_has_scale() {set_has_scale20479,697836
inline void WindowDataParameter::clear_has_scale() {clear_has_scale20482,697921
inline void WindowDataParameter::clear_scale() {clear_scale20485,698009
inline float WindowDataParameter::scale() const {scale20489,698095
inline void WindowDataParameter::set_scale(float value) {set_scale20492,698164
inline bool WindowDataParameter::has_mean_file() const {has_mean_file20498,698296
inline void WindowDataParameter::set_has_mean_file() {set_has_mean_file20501,698400
inline void WindowDataParameter::clear_has_mean_file() {clear_has_mean_file20504,698489
inline void WindowDataParameter::clear_mean_file() {clear_mean_file20507,698581
inline const ::std::string& WindowDataParameter::mean_file() const {mean_file20513,698757
inline void WindowDataParameter::set_mean_file(const ::std::string& value) {set_mean_file20516,698850
inline void WindowDataParameter::set_mean_file(const char* value) {set_mean_file20523,699088
inline void WindowDataParameter::set_mean_file(const char* value, size_t size) {set_mean_file20530,699317
inline ::std::string* WindowDataParameter::mutable_mean_file() {mutable_mean_file20537,699596
inline ::std::string* WindowDataParameter::release_mean_file() {release_mean_file20544,699814
inline void WindowDataParameter::set_allocated_mean_file(::std::string* mean_file) {set_allocated_mean_file20554,700151
inline bool WindowDataParameter::has_batch_size() const {has_batch_size20568,700573
inline void WindowDataParameter::set_has_batch_size() {set_has_batch_size20571,700678
inline void WindowDataParameter::clear_has_batch_size() {clear_has_batch_size20574,700768
inline void WindowDataParameter::clear_batch_size() {clear_batch_size20577,700861
inline ::google::protobuf::uint32 WindowDataParameter::batch_size() const {batch_size20581,700963
inline void WindowDataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size20584,701063
inline bool WindowDataParameter::has_crop_size() const {has_crop_size20590,701245
inline void WindowDataParameter::set_has_crop_size() {set_has_crop_size20593,701349
inline void WindowDataParameter::clear_has_crop_size() {clear_has_crop_size20596,701438
inline void WindowDataParameter::clear_crop_size() {clear_crop_size20599,701530
inline ::google::protobuf::uint32 WindowDataParameter::crop_size() const {crop_size20603,701629
inline void WindowDataParameter::set_crop_size(::google::protobuf::uint32 value) {set_crop_size20606,701727
inline bool WindowDataParameter::has_mirror() const {has_mirror20612,701905
inline void WindowDataParameter::set_has_mirror() {set_has_mirror20615,702006
inline void WindowDataParameter::clear_has_mirror() {clear_has_mirror20618,702092
inline void WindowDataParameter::clear_mirror() {clear_mirror20621,702181
inline bool WindowDataParameter::mirror() const {mirror20625,702274
inline void WindowDataParameter::set_mirror(bool value) {set_mirror20628,702344
inline bool WindowDataParameter::has_fg_threshold() const {has_fg_threshold20634,702496
inline void WindowDataParameter::set_has_fg_threshold() {set_has_fg_threshold20637,702603
inline void WindowDataParameter::clear_has_fg_threshold() {clear_has_fg_threshold20640,702695
inline void WindowDataParameter::clear_fg_threshold() {clear_fg_threshold20643,702790
inline float WindowDataParameter::fg_threshold() const {fg_threshold20647,702900
inline void WindowDataParameter::set_fg_threshold(float value) {set_fg_threshold20650,702983
inline bool WindowDataParameter::has_bg_threshold() const {has_bg_threshold20656,703154
inline void WindowDataParameter::set_has_bg_threshold() {set_has_bg_threshold20659,703261
inline void WindowDataParameter::clear_has_bg_threshold() {clear_has_bg_threshold20662,703353
inline void WindowDataParameter::clear_bg_threshold() {clear_bg_threshold20665,703448
inline float WindowDataParameter::bg_threshold() const {bg_threshold20669,703558
inline void WindowDataParameter::set_bg_threshold(float value) {set_bg_threshold20672,703641
inline bool WindowDataParameter::has_fg_fraction() const {has_fg_fraction20678,703812
inline void WindowDataParameter::set_has_fg_fraction() {set_has_fg_fraction20681,703918
inline void WindowDataParameter::clear_has_fg_fraction() {clear_has_fg_fraction20684,704009
inline void WindowDataParameter::clear_fg_fraction() {clear_fg_fraction20687,704103
inline float WindowDataParameter::fg_fraction() const {fg_fraction20691,704211
inline void WindowDataParameter::set_fg_fraction(float value) {set_fg_fraction20694,704292
inline bool WindowDataParameter::has_context_pad() const {has_context_pad20700,704459
inline void WindowDataParameter::set_has_context_pad() {set_has_context_pad20703,704565
inline void WindowDataParameter::clear_has_context_pad() {clear_has_context_pad20706,704656
inline void WindowDataParameter::clear_context_pad() {clear_context_pad20709,704750
inline ::google::protobuf::uint32 WindowDataParameter::context_pad() const {context_pad20713,704855
inline void WindowDataParameter::set_context_pad(::google::protobuf::uint32 value) {set_context_pad20716,704957
inline bool WindowDataParameter::has_crop_mode() const {has_crop_mode20722,705148
inline void WindowDataParameter::set_has_crop_mode() {set_has_crop_mode20725,705252
inline void WindowDataParameter::clear_has_crop_mode() {clear_has_crop_mode20728,705341
inline void WindowDataParameter::clear_crop_mode() {clear_crop_mode20731,705433
inline const ::std::string& WindowDataParameter::crop_mode() const {crop_mode20737,705606
inline void WindowDataParameter::set_crop_mode(const ::std::string& value) {set_crop_mode20740,705699
inline void WindowDataParameter::set_crop_mode(const char* value) {set_crop_mode20747,705913
inline void WindowDataParameter::set_crop_mode(const char* value, size_t size) {set_crop_mode20754,706118
inline ::std::string* WindowDataParameter::mutable_crop_mode() {mutable_crop_mode20761,706373
inline ::std::string* WindowDataParameter::release_crop_mode() {release_crop_mode20768,706589
inline void WindowDataParameter::set_allocated_crop_mode(::std::string* crop_mode) {set_allocated_crop_mode20778,706878
inline bool WindowDataParameter::has_cache_images() const {has_cache_images20792,707271
inline void WindowDataParameter::set_has_cache_images() {set_has_cache_images20795,707378
inline void WindowDataParameter::clear_has_cache_images() {clear_has_cache_images20798,707470
inline void WindowDataParameter::clear_cache_images() {clear_cache_images20801,707565
inline bool WindowDataParameter::cache_images() const {cache_images20805,707676
inline void WindowDataParameter::set_cache_images(bool value) {set_cache_images20808,707758
inline bool WindowDataParameter::has_root_folder() const {has_root_folder20814,707928
inline void WindowDataParameter::set_has_root_folder() {set_has_root_folder20817,708034
inline void WindowDataParameter::clear_has_root_folder() {clear_has_root_folder20820,708125
inline void WindowDataParameter::clear_root_folder() {clear_root_folder20823,708219
inline const ::std::string& WindowDataParameter::root_folder() const {root_folder20829,708403
inline void WindowDataParameter::set_root_folder(const ::std::string& value) {set_root_folder20832,708500
inline void WindowDataParameter::set_root_folder(const char* value) {set_root_folder20839,708748
inline void WindowDataParameter::set_root_folder(const char* value, size_t size) {set_root_folder20846,708987
inline ::std::string* WindowDataParameter::mutable_root_folder() {mutable_root_folder20853,709276
inline ::std::string* WindowDataParameter::release_root_folder() {release_root_folder20860,709504
inline void WindowDataParameter::set_allocated_root_folder(::std::string* root_folder) {set_allocated_root_folder20870,709851
inline bool SPPParameter::has_pyramid_height() const {has_pyramid_height20888,710386
inline void SPPParameter::set_has_pyramid_height() {set_has_pyramid_height20891,710488
inline void SPPParameter::clear_has_pyramid_height() {clear_has_pyramid_height20894,710575
inline void SPPParameter::clear_pyramid_height() {clear_pyramid_height20897,710665
inline ::google::protobuf::uint32 SPPParameter::pyramid_height() const {pyramid_height20901,710772
inline void SPPParameter::set_pyramid_height(::google::protobuf::uint32 value) {set_pyramid_height20904,710873
inline bool SPPParameter::has_pool() const {has_pool20910,711081
inline void SPPParameter::set_has_pool() {set_has_pool20913,711173
inline void SPPParameter::clear_has_pool() {clear_has_pool20916,711250
inline void SPPParameter::clear_pool() {clear_pool20919,711330
inline ::caffe::SPPParameter_PoolMethod SPPParameter::pool() const {pool20923,711406
inline void SPPParameter::set_pool(::caffe::SPPParameter_PoolMethod value) {set_pool20926,711542
inline bool SPPParameter::has_engine() const {has_engine20933,711787
inline void SPPParameter::set_has_engine() {set_has_engine20936,711881
inline void SPPParameter::clear_has_engine() {clear_has_engine20939,711960
inline void SPPParameter::clear_engine() {clear_engine20942,712042
inline ::caffe::SPPParameter_Engine SPPParameter::engine() const {engine20946,712124
inline void SPPParameter::set_engine(::caffe::SPPParameter_Engine value) {set_engine20949,712256
inline int V1LayerParameter::bottom_size() const {bottom_size20960,712552
inline void V1LayerParameter::clear_bottom() {clear_bottom20963,712630
inline const ::std::string& V1LayerParameter::bottom(int index) const {bottom20966,712698
inline ::std::string* V1LayerParameter::mutable_bottom(int index) {mutable_bottom20969,712801
inline void V1LayerParameter::set_bottom(int index, const ::std::string& value) {set_bottom20972,712904
inline void V1LayerParameter::set_bottom(int index, const char* value) {set_bottom20975,713029
inline void V1LayerParameter::set_bottom(int index, const char* value, size_t size) {set_bottom20978,713145
inline ::std::string* V1LayerParameter::add_bottom() {add_bottom20982,713316
inline void V1LayerParameter::add_bottom(const ::std::string& value) {add_bottom20985,713397
inline void V1LayerParameter::add_bottom(const char* value) {add_bottom20988,713502
inline void V1LayerParameter::add_bottom(const char* value, size_t size) {add_bottom20991,713598
V1LayerParameter::bottom() const {bottom20995,713811
V1LayerParameter::mutable_bottom() {mutable_bottom20999,713927
inline int V1LayerParameter::top_size() const {top_size21004,714014
inline void V1LayerParameter::clear_top() {clear_top21007,714086
inline const ::std::string& V1LayerParameter::top(int index) const {top21010,714148
inline ::std::string* V1LayerParameter::mutable_top(int index) {mutable_top21013,714245
inline void V1LayerParameter::set_top(int index, const ::std::string& value) {set_top21016,714342
inline void V1LayerParameter::set_top(int index, const char* value) {set_top21019,714461
inline void V1LayerParameter::set_top(int index, const char* value, size_t size) {set_top21022,714571
inline ::std::string* V1LayerParameter::add_top() {add_top21026,714736
inline void V1LayerParameter::add_top(const ::std::string& value) {add_top21029,714811
inline void V1LayerParameter::add_top(const char* value) {add_top21032,714910
inline void V1LayerParameter::add_top(const char* value, size_t size) {add_top21035,715000
V1LayerParameter::top() const {top21039,715207
V1LayerParameter::mutable_top() {mutable_top21043,715317
inline bool V1LayerParameter::has_name() const {has_name21048,715399
inline void V1LayerParameter::set_has_name() {set_has_name21051,715495
inline void V1LayerParameter::clear_has_name() {clear_has_name21054,715576
inline void V1LayerParameter::clear_name() {clear_name21057,715660
inline const ::std::string& V1LayerParameter::name() const {name21063,715813
inline void V1LayerParameter::set_name(const ::std::string& value) {set_name21066,715893
inline void V1LayerParameter::set_name(const char* value) {set_name21073,716103
inline void V1LayerParameter::set_name(const char* value, size_t size) {set_name21080,716304
inline ::std::string* V1LayerParameter::mutable_name() {mutable_name21087,716555
inline ::std::string* V1LayerParameter::release_name() {release_name21094,716745
inline void V1LayerParameter::set_allocated_name(::std::string* name) {set_allocated_name21104,717054
inline int V1LayerParameter::include_size() const {include_size21118,717434
inline void V1LayerParameter::clear_include() {clear_include21121,717514
inline const ::caffe::NetStateRule& V1LayerParameter::include(int index) const {include21124,717584
inline ::caffe::NetStateRule* V1LayerParameter::mutable_include(int index) {mutable_include21127,717697
inline ::caffe::NetStateRule* V1LayerParameter::add_include() {add_include21130,717810
V1LayerParameter::include() const {include21134,717977
V1LayerParameter::mutable_include() {mutable_include21138,718104
inline int V1LayerParameter::exclude_size() const {exclude_size21143,718211
inline void V1LayerParameter::clear_exclude() {clear_exclude21146,718291
inline const ::caffe::NetStateRule& V1LayerParameter::exclude(int index) const {exclude21149,718361
inline ::caffe::NetStateRule* V1LayerParameter::mutable_exclude(int index) {mutable_exclude21152,718474
inline ::caffe::NetStateRule* V1LayerParameter::add_exclude() {add_exclude21155,718587
V1LayerParameter::exclude() const {exclude21159,718754
V1LayerParameter::mutable_exclude() {mutable_exclude21163,718881
inline bool V1LayerParameter::has_type() const {has_type21168,718998
inline void V1LayerParameter::set_has_type() {set_has_type21171,719094
inline void V1LayerParameter::clear_has_type() {clear_has_type21174,719175
inline void V1LayerParameter::clear_type() {clear_type21177,719259
inline ::caffe::V1LayerParameter_LayerType V1LayerParameter::type() const {type21181,719339
inline void V1LayerParameter::set_type(::caffe::V1LayerParameter_LayerType value) {set_type21184,719485
inline int V1LayerParameter::blobs_size() const {blobs_size21191,719709
inline void V1LayerParameter::clear_blobs() {clear_blobs21194,719785
inline const ::caffe::BlobProto& V1LayerParameter::blobs(int index) const {blobs21197,719851
inline ::caffe::BlobProto* V1LayerParameter::mutable_blobs(int index) {mutable_blobs21200,719957
inline ::caffe::BlobProto* V1LayerParameter::add_blobs() {add_blobs21203,720063
V1LayerParameter::blobs() const {blobs21207,720220
V1LayerParameter::mutable_blobs() {mutable_blobs21211,720340
inline int V1LayerParameter::param_size() const {param_size21216,720430
inline void V1LayerParameter::clear_param() {clear_param21219,720506
inline const ::std::string& V1LayerParameter::param(int index) const {param21222,720572
inline ::std::string* V1LayerParameter::mutable_param(int index) {mutable_param21225,720673
inline void V1LayerParameter::set_param(int index, const ::std::string& value) {set_param21228,720774
inline void V1LayerParameter::set_param(int index, const char* value) {set_param21231,720897
inline void V1LayerParameter::set_param(int index, const char* value, size_t size) {set_param21234,721011
inline ::std::string* V1LayerParameter::add_param() {add_param21238,721180
inline void V1LayerParameter::add_param(const ::std::string& value) {add_param21241,721259
inline void V1LayerParameter::add_param(const char* value) {add_param21244,721362
inline void V1LayerParameter::add_param(const char* value, size_t size) {add_param21247,721456
V1LayerParameter::param() const {param21251,721667
V1LayerParameter::mutable_param() {mutable_param21255,721781
inline int V1LayerParameter::blob_share_mode_size() const {blob_share_mode_size21260,721911
inline void V1LayerParameter::clear_blob_share_mode() {clear_blob_share_mode21263,722007
inline ::caffe::V1LayerParameter_DimCheckMode V1LayerParameter::blob_share_mode(int index) const {blob_share_mode21266,722093
inline void V1LayerParameter::set_blob_share_mode(int index, ::caffe::V1LayerParameter_DimCheckMode value) {set_blob_share_mode21269,722287
inline void V1LayerParameter::add_blob_share_mode(::caffe::V1LayerParameter_DimCheckMode value) {add_blob_share_mode21273,722501
V1LayerParameter::blob_share_mode() const {blob_share_mode21278,722750
V1LayerParameter::mutable_blob_share_mode() {mutable_blob_share_mode21282,722870
inline int V1LayerParameter::blobs_lr_size() const {blobs_lr_size21287,722979
inline void V1LayerParameter::clear_blobs_lr() {clear_blobs_lr21290,723061
inline float V1LayerParameter::blobs_lr(int index) const {blobs_lr21293,723133
inline void V1LayerParameter::set_blobs_lr(int index, float value) {set_blobs_lr21296,723225
inline void V1LayerParameter::add_blobs_lr(float value) {add_blobs_lr21299,723327
V1LayerParameter::blobs_lr() const {blobs_lr21303,723468
V1LayerParameter::mutable_blobs_lr() {mutable_blobs_lr21307,723578
inline int V1LayerParameter::weight_decay_size() const {weight_decay_size21312,723677
inline void V1LayerParameter::clear_weight_decay() {clear_weight_decay21315,723767
inline float V1LayerParameter::weight_decay(int index) const {weight_decay21318,723847
inline void V1LayerParameter::set_weight_decay(int index, float value) {set_weight_decay21321,723947
inline void V1LayerParameter::add_weight_decay(float value) {add_weight_decay21324,724057
V1LayerParameter::weight_decay() const {weight_decay21328,724206
V1LayerParameter::mutable_weight_decay() {mutable_weight_decay21332,724324
inline int V1LayerParameter::loss_weight_size() const {loss_weight_size21337,724431
inline void V1LayerParameter::clear_loss_weight() {clear_loss_weight21340,724519
inline float V1LayerParameter::loss_weight(int index) const {loss_weight21343,724597
inline void V1LayerParameter::set_loss_weight(int index, float value) {set_loss_weight21346,724695
inline void V1LayerParameter::add_loss_weight(float value) {add_loss_weight21349,724803
V1LayerParameter::loss_weight() const {loss_weight21353,724950
V1LayerParameter::mutable_loss_weight() {mutable_loss_weight21357,725066
inline bool V1LayerParameter::has_accuracy_param() const {has_accuracy_param21362,725193
inline void V1LayerParameter::set_has_accuracy_param() {set_has_accuracy_param21365,725299
inline void V1LayerParameter::clear_has_accuracy_param() {clear_has_accuracy_param21368,725390
inline void V1LayerParameter::clear_accuracy_param() {clear_accuracy_param21371,725484
inline const ::caffe::AccuracyParameter& V1LayerParameter::accuracy_param() const {accuracy_param21375,725656
inline ::caffe::AccuracyParameter* V1LayerParameter::mutable_accuracy_param() {mutable_accuracy_param21378,725833
inline ::caffe::AccuracyParameter* V1LayerParameter::release_accuracy_param() {release_accuracy_param21383,726050
inline void V1LayerParameter::set_allocated_accuracy_param(::caffe::AccuracyParameter* accuracy_param) {set_allocated_accuracy_param21389,726257
inline bool V1LayerParameter::has_argmax_param() const {has_argmax_param21400,726582
inline void V1LayerParameter::set_has_argmax_param() {set_has_argmax_param21403,726686
inline void V1LayerParameter::clear_has_argmax_param() {clear_has_argmax_param21406,726775
inline void V1LayerParameter::clear_argmax_param() {clear_argmax_param21409,726867
inline const ::caffe::ArgMaxParameter& V1LayerParameter::argmax_param() const {argmax_param21413,727029
inline ::caffe::ArgMaxParameter* V1LayerParameter::mutable_argmax_param() {mutable_argmax_param21416,727196
inline ::caffe::ArgMaxParameter* V1LayerParameter::release_argmax_param() {release_argmax_param21421,727399
inline void V1LayerParameter::set_allocated_argmax_param(::caffe::ArgMaxParameter* argmax_param) {set_allocated_argmax_param21427,727594
inline bool V1LayerParameter::has_concat_param() const {has_concat_param21438,727900
inline void V1LayerParameter::set_has_concat_param() {set_has_concat_param21441,728004
inline void V1LayerParameter::clear_has_concat_param() {clear_has_concat_param21444,728093
inline void V1LayerParameter::clear_concat_param() {clear_concat_param21447,728185
inline const ::caffe::ConcatParameter& V1LayerParameter::concat_param() const {concat_param21451,728347
inline ::caffe::ConcatParameter* V1LayerParameter::mutable_concat_param() {mutable_concat_param21454,728514
inline ::caffe::ConcatParameter* V1LayerParameter::release_concat_param() {release_concat_param21459,728717
inline void V1LayerParameter::set_allocated_concat_param(::caffe::ConcatParameter* concat_param) {set_allocated_concat_param21465,728912
inline bool V1LayerParameter::has_contrastive_loss_param() const {has_contrastive_loss_param21476,729238
inline void V1LayerParameter::set_has_contrastive_loss_param() {set_has_contrastive_loss_param21479,729352
inline void V1LayerParameter::clear_has_contrastive_loss_param() {clear_has_contrastive_loss_param21482,729451
inline void V1LayerParameter::clear_contrastive_loss_param() {clear_contrastive_loss_param21485,729553
inline const ::caffe::ContrastiveLossParameter& V1LayerParameter::contrastive_loss_param() const {contrastive_loss_param21489,729764
inline ::caffe::ContrastiveLossParameter* V1LayerParameter::mutable_contrastive_loss_param() {mutable_contrastive_loss_param21492,729980
inline ::caffe::ContrastiveLossParameter* V1LayerParameter::release_contrastive_loss_param() {release_contrastive_loss_param21497,730251
inline void V1LayerParameter::set_allocated_contrastive_loss_param(::caffe::ContrastiveLossParameter* contrastive_loss_param) {set_allocated_contrastive_loss_param21503,730504
inline bool V1LayerParameter::has_convolution_param() const {has_convolution_param21514,730910
inline void V1LayerParameter::set_has_convolution_param() {set_has_convolution_param21517,731019
inline void V1LayerParameter::clear_has_convolution_param() {clear_has_convolution_param21520,731113
inline void V1LayerParameter::clear_convolution_param() {clear_convolution_param21523,731210
inline const ::caffe::ConvolutionParameter& V1LayerParameter::convolution_param() const {convolution_param21527,731397
inline ::caffe::ConvolutionParameter* V1LayerParameter::mutable_convolution_param() {mutable_convolution_param21530,731589
inline ::caffe::ConvolutionParameter* V1LayerParameter::release_convolution_param() {release_convolution_param21535,731827
inline void V1LayerParameter::set_allocated_convolution_param(::caffe::ConvolutionParameter* convolution_param) {set_allocated_convolution_param21541,732052
inline bool V1LayerParameter::has_data_param() const {has_data_param21552,732400
inline void V1LayerParameter::set_has_data_param() {set_has_data_param21555,732502
inline void V1LayerParameter::clear_has_data_param() {clear_has_data_param21558,732589
inline void V1LayerParameter::clear_data_param() {clear_data_param21561,732679
inline const ::caffe::DataParameter& V1LayerParameter::data_param() const {data_param21565,732831
inline ::caffe::DataParameter* V1LayerParameter::mutable_data_param() {mutable_data_param21568,732988
inline ::caffe::DataParameter* V1LayerParameter::release_data_param() {release_data_param21573,733177
inline void V1LayerParameter::set_allocated_data_param(::caffe::DataParameter* data_param) {set_allocated_data_param21579,733360
inline bool V1LayerParameter::has_dropout_param() const {has_dropout_param21590,733651
inline void V1LayerParameter::set_has_dropout_param() {set_has_dropout_param21593,733756
inline void V1LayerParameter::clear_has_dropout_param() {clear_has_dropout_param21596,733846
inline void V1LayerParameter::clear_dropout_param() {clear_dropout_param21599,733939
inline const ::caffe::DropoutParameter& V1LayerParameter::dropout_param() const {dropout_param21603,734106
inline ::caffe::DropoutParameter* V1LayerParameter::mutable_dropout_param() {mutable_dropout_param21606,734278
inline ::caffe::DropoutParameter* V1LayerParameter::release_dropout_param() {release_dropout_param21611,734488
inline void V1LayerParameter::set_allocated_dropout_param(::caffe::DropoutParameter* dropout_param) {set_allocated_dropout_param21617,734689
inline bool V1LayerParameter::has_dummy_data_param() const {has_dummy_data_param21628,735012
inline void V1LayerParameter::set_has_dummy_data_param() {set_has_dummy_data_param21631,735120
inline void V1LayerParameter::clear_has_dummy_data_param() {clear_has_dummy_data_param21634,735213
inline void V1LayerParameter::clear_dummy_data_param() {clear_dummy_data_param21637,735309
inline const ::caffe::DummyDataParameter& V1LayerParameter::dummy_data_param() const {dummy_data_param21641,735490
inline ::caffe::DummyDataParameter* V1LayerParameter::mutable_dummy_data_param() {mutable_dummy_data_param21644,735676
inline ::caffe::DummyDataParameter* V1LayerParameter::release_dummy_data_param() {release_dummy_data_param21649,735905
inline void V1LayerParameter::set_allocated_dummy_data_param(::caffe::DummyDataParameter* dummy_data_param) {set_allocated_dummy_data_param21655,736122
inline bool V1LayerParameter::has_eltwise_param() const {has_eltwise_param21666,736466
inline void V1LayerParameter::set_has_eltwise_param() {set_has_eltwise_param21669,736571
inline void V1LayerParameter::clear_has_eltwise_param() {clear_has_eltwise_param21672,736661
inline void V1LayerParameter::clear_eltwise_param() {clear_eltwise_param21675,736754
inline const ::caffe::EltwiseParameter& V1LayerParameter::eltwise_param() const {eltwise_param21679,736921
inline ::caffe::EltwiseParameter* V1LayerParameter::mutable_eltwise_param() {mutable_eltwise_param21682,737093
inline ::caffe::EltwiseParameter* V1LayerParameter::release_eltwise_param() {release_eltwise_param21687,737303
inline void V1LayerParameter::set_allocated_eltwise_param(::caffe::EltwiseParameter* eltwise_param) {set_allocated_eltwise_param21693,737504
inline bool V1LayerParameter::has_exp_param() const {has_exp_param21704,737814
inline void V1LayerParameter::set_has_exp_param() {set_has_exp_param21707,737915
inline void V1LayerParameter::clear_has_exp_param() {clear_has_exp_param21710,738001
inline void V1LayerParameter::clear_exp_param() {clear_exp_param21713,738090
inline const ::caffe::ExpParameter& V1LayerParameter::exp_param() const {exp_param21717,738237
inline ::caffe::ExpParameter* V1LayerParameter::mutable_exp_param() {mutable_exp_param21720,738389
inline ::caffe::ExpParameter* V1LayerParameter::release_exp_param() {release_exp_param21725,738571
inline void V1LayerParameter::set_allocated_exp_param(::caffe::ExpParameter* exp_param) {set_allocated_exp_param21731,738748
inline bool V1LayerParameter::has_hdf5_data_param() const {has_hdf5_data_param21742,739033
inline void V1LayerParameter::set_has_hdf5_data_param() {set_has_hdf5_data_param21745,739140
inline void V1LayerParameter::clear_has_hdf5_data_param() {clear_has_hdf5_data_param21748,739232
inline void V1LayerParameter::clear_hdf5_data_param() {clear_hdf5_data_param21751,739327
inline const ::caffe::HDF5DataParameter& V1LayerParameter::hdf5_data_param() const {hdf5_data_param21755,739503
inline ::caffe::HDF5DataParameter* V1LayerParameter::mutable_hdf5_data_param() {mutable_hdf5_data_param21758,739684
inline ::caffe::HDF5DataParameter* V1LayerParameter::release_hdf5_data_param() {release_hdf5_data_param21763,739906
inline void V1LayerParameter::set_allocated_hdf5_data_param(::caffe::HDF5DataParameter* hdf5_data_param) {set_allocated_hdf5_data_param21769,740117
inline bool V1LayerParameter::has_hdf5_output_param() const {has_hdf5_output_param21780,740459
inline void V1LayerParameter::set_has_hdf5_output_param() {set_has_hdf5_output_param21783,740568
inline void V1LayerParameter::clear_has_hdf5_output_param() {clear_has_hdf5_output_param21786,740662
inline void V1LayerParameter::clear_hdf5_output_param() {clear_hdf5_output_param21789,740759
inline const ::caffe::HDF5OutputParameter& V1LayerParameter::hdf5_output_param() const {hdf5_output_param21793,740945
inline ::caffe::HDF5OutputParameter* V1LayerParameter::mutable_hdf5_output_param() {mutable_hdf5_output_param21796,741136
inline ::caffe::HDF5OutputParameter* V1LayerParameter::release_hdf5_output_param() {release_hdf5_output_param21801,741372
inline void V1LayerParameter::set_allocated_hdf5_output_param(::caffe::HDF5OutputParameter* hdf5_output_param) {set_allocated_hdf5_output_param21807,741595
inline bool V1LayerParameter::has_hinge_loss_param() const {has_hinge_loss_param21818,741953
inline void V1LayerParameter::set_has_hinge_loss_param() {set_has_hinge_loss_param21821,742061
inline void V1LayerParameter::clear_has_hinge_loss_param() {clear_has_hinge_loss_param21824,742154
inline void V1LayerParameter::clear_hinge_loss_param() {clear_hinge_loss_param21827,742250
inline const ::caffe::HingeLossParameter& V1LayerParameter::hinge_loss_param() const {hinge_loss_param21831,742431
inline ::caffe::HingeLossParameter* V1LayerParameter::mutable_hinge_loss_param() {mutable_hinge_loss_param21834,742617
inline ::caffe::HingeLossParameter* V1LayerParameter::release_hinge_loss_param() {release_hinge_loss_param21839,742846
inline void V1LayerParameter::set_allocated_hinge_loss_param(::caffe::HingeLossParameter* hinge_loss_param) {set_allocated_hinge_loss_param21845,743063
inline bool V1LayerParameter::has_image_data_param() const {has_image_data_param21856,743412
inline void V1LayerParameter::set_has_image_data_param() {set_has_image_data_param21859,743520
inline void V1LayerParameter::clear_has_image_data_param() {clear_has_image_data_param21862,743613
inline void V1LayerParameter::clear_image_data_param() {clear_image_data_param21865,743709
inline const ::caffe::ImageDataParameter& V1LayerParameter::image_data_param() const {image_data_param21869,743890
inline ::caffe::ImageDataParameter* V1LayerParameter::mutable_image_data_param() {mutable_image_data_param21872,744076
inline ::caffe::ImageDataParameter* V1LayerParameter::release_image_data_param() {release_image_data_param21877,744305
inline void V1LayerParameter::set_allocated_image_data_param(::caffe::ImageDataParameter* image_data_param) {set_allocated_image_data_param21883,744522
inline bool V1LayerParameter::has_infogain_loss_param() const {has_infogain_loss_param21894,744877
inline void V1LayerParameter::set_has_infogain_loss_param() {set_has_infogain_loss_param21897,744988
inline void V1LayerParameter::clear_has_infogain_loss_param() {clear_has_infogain_loss_param21900,745084
inline void V1LayerParameter::clear_infogain_loss_param() {clear_infogain_loss_param21903,745183
inline const ::caffe::InfogainLossParameter& V1LayerParameter::infogain_loss_param() const {infogain_loss_param21907,745379
inline ::caffe::InfogainLossParameter* V1LayerParameter::mutable_infogain_loss_param() {mutable_infogain_loss_param21910,745580
inline ::caffe::InfogainLossParameter* V1LayerParameter::release_infogain_loss_param() {release_infogain_loss_param21915,745830
inline void V1LayerParameter::set_allocated_infogain_loss_param(::caffe::InfogainLossParameter* infogain_loss_param) {set_allocated_infogain_loss_param21921,746065
inline bool V1LayerParameter::has_inner_product_param() const {has_inner_product_param21932,746447
inline void V1LayerParameter::set_has_inner_product_param() {set_has_inner_product_param21935,746558
inline void V1LayerParameter::clear_has_inner_product_param() {clear_has_inner_product_param21938,746654
inline void V1LayerParameter::clear_inner_product_param() {clear_inner_product_param21941,746753
inline const ::caffe::InnerProductParameter& V1LayerParameter::inner_product_param() const {inner_product_param21945,746949
inline ::caffe::InnerProductParameter* V1LayerParameter::mutable_inner_product_param() {mutable_inner_product_param21948,747150
inline ::caffe::InnerProductParameter* V1LayerParameter::release_inner_product_param() {release_inner_product_param21953,747400
inline void V1LayerParameter::set_allocated_inner_product_param(::caffe::InnerProductParameter* inner_product_param) {set_allocated_inner_product_param21959,747635
inline bool V1LayerParameter::has_lrn_param() const {has_lrn_param21970,747998
inline void V1LayerParameter::set_has_lrn_param() {set_has_lrn_param21973,748099
inline void V1LayerParameter::clear_has_lrn_param() {clear_has_lrn_param21976,748185
inline void V1LayerParameter::clear_lrn_param() {clear_lrn_param21979,748274
inline const ::caffe::LRNParameter& V1LayerParameter::lrn_param() const {lrn_param21983,748421
inline ::caffe::LRNParameter* V1LayerParameter::mutable_lrn_param() {mutable_lrn_param21986,748573
inline ::caffe::LRNParameter* V1LayerParameter::release_lrn_param() {release_lrn_param21991,748755
inline void V1LayerParameter::set_allocated_lrn_param(::caffe::LRNParameter* lrn_param) {set_allocated_lrn_param21997,748932
inline bool V1LayerParameter::has_memory_data_param() const {has_memory_data_param22008,749221
inline void V1LayerParameter::set_has_memory_data_param() {set_has_memory_data_param22011,749330
inline void V1LayerParameter::clear_has_memory_data_param() {clear_has_memory_data_param22014,749424
inline void V1LayerParameter::clear_memory_data_param() {clear_memory_data_param22017,749521
inline const ::caffe::MemoryDataParameter& V1LayerParameter::memory_data_param() const {memory_data_param22021,749707
inline ::caffe::MemoryDataParameter* V1LayerParameter::mutable_memory_data_param() {mutable_memory_data_param22024,749898
inline ::caffe::MemoryDataParameter* V1LayerParameter::release_memory_data_param() {release_memory_data_param22029,750134
inline void V1LayerParameter::set_allocated_memory_data_param(::caffe::MemoryDataParameter* memory_data_param) {set_allocated_memory_data_param22035,750357
inline bool V1LayerParameter::has_mvn_param() const {has_mvn_param22046,750702
inline void V1LayerParameter::set_has_mvn_param() {set_has_mvn_param22049,750803
inline void V1LayerParameter::clear_has_mvn_param() {clear_has_mvn_param22052,750889
inline void V1LayerParameter::clear_mvn_param() {clear_mvn_param22055,750978
inline const ::caffe::MVNParameter& V1LayerParameter::mvn_param() const {mvn_param22059,751125
inline ::caffe::MVNParameter* V1LayerParameter::mutable_mvn_param() {mutable_mvn_param22062,751277
inline ::caffe::MVNParameter* V1LayerParameter::release_mvn_param() {release_mvn_param22067,751459
inline void V1LayerParameter::set_allocated_mvn_param(::caffe::MVNParameter* mvn_param) {set_allocated_mvn_param22073,751636
inline bool V1LayerParameter::has_pooling_param() const {has_pooling_param22084,751918
inline void V1LayerParameter::set_has_pooling_param() {set_has_pooling_param22087,752023
inline void V1LayerParameter::clear_has_pooling_param() {clear_has_pooling_param22090,752113
inline void V1LayerParameter::clear_pooling_param() {clear_pooling_param22093,752206
inline const ::caffe::PoolingParameter& V1LayerParameter::pooling_param() const {pooling_param22097,752373
inline ::caffe::PoolingParameter* V1LayerParameter::mutable_pooling_param() {mutable_pooling_param22100,752545
inline ::caffe::PoolingParameter* V1LayerParameter::release_pooling_param() {release_pooling_param22105,752755
inline void V1LayerParameter::set_allocated_pooling_param(::caffe::PoolingParameter* pooling_param) {set_allocated_pooling_param22111,752956
inline bool V1LayerParameter::has_power_param() const {has_power_param22122,753270
inline void V1LayerParameter::set_has_power_param() {set_has_power_param22125,753373
inline void V1LayerParameter::clear_has_power_param() {clear_has_power_param22128,753461
inline void V1LayerParameter::clear_power_param() {clear_power_param22131,753552
inline const ::caffe::PowerParameter& V1LayerParameter::power_param() const {power_param22135,753709
inline ::caffe::PowerParameter* V1LayerParameter::mutable_power_param() {mutable_power_param22138,753871
inline ::caffe::PowerParameter* V1LayerParameter::release_power_param() {release_power_param22143,754067
inline void V1LayerParameter::set_allocated_power_param(::caffe::PowerParameter* power_param) {set_allocated_power_param22149,754256
inline bool V1LayerParameter::has_relu_param() const {has_relu_param22160,754550
inline void V1LayerParameter::set_has_relu_param() {set_has_relu_param22163,754652
inline void V1LayerParameter::clear_has_relu_param() {clear_has_relu_param22166,754739
inline void V1LayerParameter::clear_relu_param() {clear_relu_param22169,754829
inline const ::caffe::ReLUParameter& V1LayerParameter::relu_param() const {relu_param22173,754981
inline ::caffe::ReLUParameter* V1LayerParameter::mutable_relu_param() {mutable_relu_param22176,755138
inline ::caffe::ReLUParameter* V1LayerParameter::release_relu_param() {release_relu_param22181,755327
inline void V1LayerParameter::set_allocated_relu_param(::caffe::ReLUParameter* relu_param) {set_allocated_relu_param22187,755510
inline bool V1LayerParameter::has_sigmoid_param() const {has_sigmoid_param22198,755801
inline void V1LayerParameter::set_has_sigmoid_param() {set_has_sigmoid_param22201,755906
inline void V1LayerParameter::clear_has_sigmoid_param() {clear_has_sigmoid_param22204,755996
inline void V1LayerParameter::clear_sigmoid_param() {clear_sigmoid_param22207,756089
inline const ::caffe::SigmoidParameter& V1LayerParameter::sigmoid_param() const {sigmoid_param22211,756256
inline ::caffe::SigmoidParameter* V1LayerParameter::mutable_sigmoid_param() {mutable_sigmoid_param22214,756428
inline ::caffe::SigmoidParameter* V1LayerParameter::release_sigmoid_param() {release_sigmoid_param22219,756638
inline void V1LayerParameter::set_allocated_sigmoid_param(::caffe::SigmoidParameter* sigmoid_param) {set_allocated_sigmoid_param22225,756839
inline bool V1LayerParameter::has_softmax_param() const {has_softmax_param22236,757157
inline void V1LayerParameter::set_has_softmax_param() {set_has_softmax_param22239,757262
inline void V1LayerParameter::clear_has_softmax_param() {clear_has_softmax_param22242,757352
inline void V1LayerParameter::clear_softmax_param() {clear_softmax_param22245,757445
inline const ::caffe::SoftmaxParameter& V1LayerParameter::softmax_param() const {softmax_param22249,757612
inline ::caffe::SoftmaxParameter* V1LayerParameter::mutable_softmax_param() {mutable_softmax_param22252,757784
inline ::caffe::SoftmaxParameter* V1LayerParameter::release_softmax_param() {release_softmax_param22257,757994
inline void V1LayerParameter::set_allocated_softmax_param(::caffe::SoftmaxParameter* softmax_param) {set_allocated_softmax_param22263,758195
inline bool V1LayerParameter::has_slice_param() const {has_slice_param22274,758509
inline void V1LayerParameter::set_has_slice_param() {set_has_slice_param22277,758612
inline void V1LayerParameter::clear_has_slice_param() {clear_has_slice_param22280,758700
inline void V1LayerParameter::clear_slice_param() {clear_slice_param22283,758791
inline const ::caffe::SliceParameter& V1LayerParameter::slice_param() const {slice_param22287,758948
inline ::caffe::SliceParameter* V1LayerParameter::mutable_slice_param() {mutable_slice_param22290,759110
inline ::caffe::SliceParameter* V1LayerParameter::release_slice_param() {release_slice_param22295,759306
inline void V1LayerParameter::set_allocated_slice_param(::caffe::SliceParameter* slice_param) {set_allocated_slice_param22301,759495
inline bool V1LayerParameter::has_tanh_param() const {has_tanh_param22312,759789
inline void V1LayerParameter::set_has_tanh_param() {set_has_tanh_param22315,759891
inline void V1LayerParameter::clear_has_tanh_param() {clear_has_tanh_param22318,759978
inline void V1LayerParameter::clear_tanh_param() {clear_tanh_param22321,760068
inline const ::caffe::TanHParameter& V1LayerParameter::tanh_param() const {tanh_param22325,760220
inline ::caffe::TanHParameter* V1LayerParameter::mutable_tanh_param() {mutable_tanh_param22328,760377
inline ::caffe::TanHParameter* V1LayerParameter::release_tanh_param() {release_tanh_param22333,760566
inline void V1LayerParameter::set_allocated_tanh_param(::caffe::TanHParameter* tanh_param) {set_allocated_tanh_param22339,760749
inline bool V1LayerParameter::has_threshold_param() const {has_threshold_param22350,761044
inline void V1LayerParameter::set_has_threshold_param() {set_has_threshold_param22353,761151
inline void V1LayerParameter::clear_has_threshold_param() {clear_has_threshold_param22356,761243
inline void V1LayerParameter::clear_threshold_param() {clear_threshold_param22359,761338
inline const ::caffe::ThresholdParameter& V1LayerParameter::threshold_param() const {threshold_param22363,761515
inline ::caffe::ThresholdParameter* V1LayerParameter::mutable_threshold_param() {mutable_threshold_param22366,761697
inline ::caffe::ThresholdParameter* V1LayerParameter::release_threshold_param() {release_threshold_param22371,761921
inline void V1LayerParameter::set_allocated_threshold_param(::caffe::ThresholdParameter* threshold_param) {set_allocated_threshold_param22377,762134
inline bool V1LayerParameter::has_window_data_param() const {has_window_data_param22388,762477
inline void V1LayerParameter::set_has_window_data_param() {set_has_window_data_param22391,762586
inline void V1LayerParameter::clear_has_window_data_param() {clear_has_window_data_param22394,762680
inline void V1LayerParameter::clear_window_data_param() {clear_window_data_param22397,762777
inline const ::caffe::WindowDataParameter& V1LayerParameter::window_data_param() const {window_data_param22401,762963
inline ::caffe::WindowDataParameter* V1LayerParameter::mutable_window_data_param() {mutable_window_data_param22404,763154
inline ::caffe::WindowDataParameter* V1LayerParameter::release_window_data_param() {release_window_data_param22409,763390
inline void V1LayerParameter::set_allocated_window_data_param(::caffe::WindowDataParameter* window_data_param) {set_allocated_window_data_param22415,763613
inline bool V1LayerParameter::has_transform_param() const {has_transform_param22426,763975
inline void V1LayerParameter::set_has_transform_param() {set_has_transform_param22429,764082
inline void V1LayerParameter::clear_has_transform_param() {clear_has_transform_param22432,764174
inline void V1LayerParameter::clear_transform_param() {clear_transform_param22435,764269
inline const ::caffe::TransformationParameter& V1LayerParameter::transform_param() const {transform_param22439,764451
inline ::caffe::TransformationParameter* V1LayerParameter::mutable_transform_param() {mutable_transform_param22442,764638
inline ::caffe::TransformationParameter* V1LayerParameter::release_transform_param() {release_transform_param22447,764872
inline void V1LayerParameter::set_allocated_transform_param(::caffe::TransformationParameter* transform_param) {set_allocated_transform_param22453,765095
inline bool V1LayerParameter::has_loss_param() const {has_loss_param22464,765430
inline void V1LayerParameter::set_has_loss_param() {set_has_loss_param22467,765532
inline void V1LayerParameter::clear_has_loss_param() {clear_has_loss_param22470,765619
inline void V1LayerParameter::clear_loss_param() {clear_loss_param22473,765709
inline const ::caffe::LossParameter& V1LayerParameter::loss_param() const {loss_param22477,765861
inline ::caffe::LossParameter* V1LayerParameter::mutable_loss_param() {mutable_loss_param22480,766018
inline ::caffe::LossParameter* V1LayerParameter::release_loss_param() {release_loss_param22485,766207
inline void V1LayerParameter::set_allocated_loss_param(::caffe::LossParameter* loss_param) {set_allocated_loss_param22491,766390
inline bool V1LayerParameter::has_layer() const {has_layer22502,766672
inline void V1LayerParameter::set_has_layer() {set_has_layer22505,766769
inline void V1LayerParameter::clear_has_layer() {clear_has_layer22508,766851
inline void V1LayerParameter::clear_layer() {clear_layer22511,766936
inline const ::caffe::V0LayerParameter& V1LayerParameter::layer() const {layer22515,767071
inline ::caffe::V0LayerParameter* V1LayerParameter::mutable_layer() {mutable_layer22518,767211
inline ::caffe::V0LayerParameter* V1LayerParameter::release_layer() {release_layer22523,767381
inline void V1LayerParameter::set_allocated_layer(::caffe::V0LayerParameter* layer) {set_allocated_layer22529,767550
inline bool V0LayerParameter::has_name() const {has_name22544,767870
inline void V0LayerParameter::set_has_name() {set_has_name22547,767966
inline void V0LayerParameter::clear_has_name() {clear_has_name22550,768047
inline void V0LayerParameter::clear_name() {clear_name22553,768131
inline const ::std::string& V0LayerParameter::name() const {name22559,768284
inline void V0LayerParameter::set_name(const ::std::string& value) {set_name22562,768364
inline void V0LayerParameter::set_name(const char* value) {set_name22569,768574
inline void V0LayerParameter::set_name(const char* value, size_t size) {set_name22576,768775
inline ::std::string* V0LayerParameter::mutable_name() {mutable_name22583,769026
inline ::std::string* V0LayerParameter::release_name() {release_name22590,769216
inline void V0LayerParameter::set_allocated_name(::std::string* name) {set_allocated_name22600,769525
inline bool V0LayerParameter::has_type() const {has_type22614,769888
inline void V0LayerParameter::set_has_type() {set_has_type22617,769984
inline void V0LayerParameter::clear_has_type() {clear_has_type22620,770065
inline void V0LayerParameter::clear_type() {clear_type22623,770149
inline const ::std::string& V0LayerParameter::type() const {type22629,770302
inline void V0LayerParameter::set_type(const ::std::string& value) {set_type22632,770382
inline void V0LayerParameter::set_type(const char* value) {set_type22639,770592
inline void V0LayerParameter::set_type(const char* value, size_t size) {set_type22646,770793
inline ::std::string* V0LayerParameter::mutable_type() {mutable_type22653,771044
inline ::std::string* V0LayerParameter::release_type() {release_type22660,771234
inline void V0LayerParameter::set_allocated_type(::std::string* type) {set_allocated_type22670,771543
inline bool V0LayerParameter::has_num_output() const {has_num_output22684,771912
inline void V0LayerParameter::set_has_num_output() {set_has_num_output22687,772014
inline void V0LayerParameter::clear_has_num_output() {clear_has_num_output22690,772101
inline void V0LayerParameter::clear_num_output() {clear_num_output22693,772191
inline ::google::protobuf::uint32 V0LayerParameter::num_output() const {num_output22697,772290
inline void V0LayerParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output22700,772387
inline bool V0LayerParameter::has_biasterm() const {has_biasterm22706,772566
inline void V0LayerParameter::set_has_biasterm() {set_has_biasterm22709,772666
inline void V0LayerParameter::clear_has_biasterm() {clear_has_biasterm22712,772751
inline void V0LayerParameter::clear_biasterm() {clear_biasterm22715,772839
inline bool V0LayerParameter::biasterm() const {biasterm22719,772934
inline void V0LayerParameter::set_biasterm(bool value) {set_biasterm22722,773005
inline bool V0LayerParameter::has_weight_filler() const {has_weight_filler22728,773162
inline void V0LayerParameter::set_has_weight_filler() {set_has_weight_filler22731,773267
inline void V0LayerParameter::clear_has_weight_filler() {clear_has_weight_filler22734,773357
inline void V0LayerParameter::clear_weight_filler() {clear_weight_filler22737,773450
inline const ::caffe::FillerParameter& V0LayerParameter::weight_filler() const {weight_filler22741,773616
inline ::caffe::FillerParameter* V0LayerParameter::mutable_weight_filler() {mutable_weight_filler22744,773787
inline ::caffe::FillerParameter* V0LayerParameter::release_weight_filler() {release_weight_filler22749,773995
inline void V0LayerParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler22755,774194
inline bool V0LayerParameter::has_bias_filler() const {has_bias_filler22766,774507
inline void V0LayerParameter::set_has_bias_filler() {set_has_bias_filler22769,774610
inline void V0LayerParameter::clear_has_bias_filler() {clear_has_bias_filler22772,774698
inline void V0LayerParameter::clear_bias_filler() {clear_bias_filler22775,774789
inline const ::caffe::FillerParameter& V0LayerParameter::bias_filler() const {bias_filler22779,774947
inline ::caffe::FillerParameter* V0LayerParameter::mutable_bias_filler() {mutable_bias_filler22782,775110
inline ::caffe::FillerParameter* V0LayerParameter::release_bias_filler() {release_bias_filler22787,775308
inline void V0LayerParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler22793,775499
inline bool V0LayerParameter::has_pad() const {has_pad22804,775786
inline void V0LayerParameter::set_has_pad() {set_has_pad22807,775881
inline void V0LayerParameter::clear_has_pad() {clear_has_pad22810,775961
inline void V0LayerParameter::clear_pad() {clear_pad22813,776044
inline ::google::protobuf::uint32 V0LayerParameter::pad() const {pad22817,776122
inline void V0LayerParameter::set_pad(::google::protobuf::uint32 value) {set_pad22820,776205
inline bool V0LayerParameter::has_kernelsize() const {has_kernelsize22826,776350
inline void V0LayerParameter::set_has_kernelsize() {set_has_kernelsize22829,776452
inline void V0LayerParameter::clear_has_kernelsize() {clear_has_kernelsize22832,776539
inline void V0LayerParameter::clear_kernelsize() {clear_kernelsize22835,776629
inline ::google::protobuf::uint32 V0LayerParameter::kernelsize() const {kernelsize22839,776728
inline void V0LayerParameter::set_kernelsize(::google::protobuf::uint32 value) {set_kernelsize22842,776825
inline bool V0LayerParameter::has_group() const {has_group22848,777000
inline void V0LayerParameter::set_has_group() {set_has_group22851,777097
inline void V0LayerParameter::clear_has_group() {clear_has_group22854,777179
inline void V0LayerParameter::clear_group() {clear_group22857,777264
inline ::google::protobuf::uint32 V0LayerParameter::group() const {group22861,777348
inline void V0LayerParameter::set_group(::google::protobuf::uint32 value) {set_group22864,777435
inline bool V0LayerParameter::has_stride() const {has_stride22870,777597
inline void V0LayerParameter::set_has_stride() {set_has_stride22873,777695
inline void V0LayerParameter::clear_has_stride() {clear_has_stride22876,777778
inline void V0LayerParameter::clear_stride() {clear_stride22879,777864
inline ::google::protobuf::uint32 V0LayerParameter::stride() const {stride22883,777951
inline void V0LayerParameter::set_stride(::google::protobuf::uint32 value) {set_stride22886,778040
inline bool V0LayerParameter::has_pool() const {has_pool22892,778233
inline void V0LayerParameter::set_has_pool() {set_has_pool22895,778329
inline void V0LayerParameter::clear_has_pool() {clear_has_pool22898,778410
inline void V0LayerParameter::clear_pool() {clear_pool22901,778494
inline ::caffe::V0LayerParameter_PoolMethod V0LayerParameter::pool() const {pool22905,778574
inline void V0LayerParameter::set_pool(::caffe::V0LayerParameter_PoolMethod value) {set_pool22908,778722
inline bool V0LayerParameter::has_dropout_ratio() const {has_dropout_ratio22915,778962
inline void V0LayerParameter::set_has_dropout_ratio() {set_has_dropout_ratio22918,779067
inline void V0LayerParameter::clear_has_dropout_ratio() {clear_has_dropout_ratio22921,779157
inline void V0LayerParameter::clear_dropout_ratio() {clear_dropout_ratio22924,779250
inline float V0LayerParameter::dropout_ratio() const {dropout_ratio22928,779360
inline void V0LayerParameter::set_dropout_ratio(float value) {set_dropout_ratio22931,779442
inline bool V0LayerParameter::has_local_size() const {has_local_size22937,779611
inline void V0LayerParameter::set_has_local_size() {set_has_local_size22940,779713
inline void V0LayerParameter::clear_has_local_size() {clear_has_local_size22943,779800
inline void V0LayerParameter::clear_local_size() {clear_local_size22946,779890
inline ::google::protobuf::uint32 V0LayerParameter::local_size() const {local_size22950,779989
inline void V0LayerParameter::set_local_size(::google::protobuf::uint32 value) {set_local_size22953,780086
inline bool V0LayerParameter::has_alpha() const {has_alpha22959,780261
inline void V0LayerParameter::set_has_alpha() {set_has_alpha22962,780358
inline void V0LayerParameter::clear_has_alpha() {clear_has_alpha22965,780440
inline void V0LayerParameter::clear_alpha() {clear_alpha22968,780525
inline float V0LayerParameter::alpha() const {alpha22972,780608
inline void V0LayerParameter::set_alpha(float value) {set_alpha22975,780674
inline bool V0LayerParameter::has_beta() const {has_beta22981,780815
inline void V0LayerParameter::set_has_beta() {set_has_beta22984,780911
inline void V0LayerParameter::clear_has_beta() {clear_has_beta22987,780992
inline void V0LayerParameter::clear_beta() {clear_beta22990,781076
inline float V0LayerParameter::beta() const {beta22994,781160
inline void V0LayerParameter::set_beta(float value) {set_beta22997,781224
inline bool V0LayerParameter::has_k() const {has_k23003,781356
inline void V0LayerParameter::set_has_k() {set_has_k23006,781449
inline void V0LayerParameter::clear_has_k() {clear_has_k23009,781527
inline void V0LayerParameter::clear_k() {clear_k23012,781608
inline float V0LayerParameter::k() const {k23016,781679
inline void V0LayerParameter::set_k(float value) {set_k23019,781737
inline bool V0LayerParameter::has_source() const {has_source23025,781852
inline void V0LayerParameter::set_has_source() {set_has_source23028,781950
inline void V0LayerParameter::clear_has_source() {clear_has_source23031,782033
inline void V0LayerParameter::clear_source() {clear_source23034,782119
inline const ::std::string& V0LayerParameter::source() const {source23040,782280
inline void V0LayerParameter::set_source(const ::std::string& value) {set_source23043,782364
inline void V0LayerParameter::set_source(const char* value) {set_source23050,782584
inline void V0LayerParameter::set_source(const char* value, size_t size) {set_source23057,782795
inline ::std::string* V0LayerParameter::mutable_source() {mutable_source23064,783056
inline ::std::string* V0LayerParameter::release_source() {release_source23071,783256
inline void V0LayerParameter::set_allocated_source(::std::string* source) {set_allocated_source23081,783575
inline bool V0LayerParameter::has_scale() const {has_scale23095,783973
inline void V0LayerParameter::set_has_scale() {set_has_scale23098,784070
inline void V0LayerParameter::clear_has_scale() {clear_has_scale23101,784152
inline void V0LayerParameter::clear_scale() {clear_scale23104,784237
inline float V0LayerParameter::scale() const {scale23108,784320
inline void V0LayerParameter::set_scale(float value) {set_scale23111,784386
inline bool V0LayerParameter::has_meanfile() const {has_meanfile23117,784515
inline void V0LayerParameter::set_has_meanfile() {set_has_meanfile23120,784615
inline void V0LayerParameter::clear_has_meanfile() {clear_has_meanfile23123,784700
inline void V0LayerParameter::clear_meanfile() {clear_meanfile23126,784788
inline const ::std::string& V0LayerParameter::meanfile() const {meanfile23132,784957
inline void V0LayerParameter::set_meanfile(const ::std::string& value) {set_meanfile23135,785045
inline void V0LayerParameter::set_meanfile(const char* value) {set_meanfile23142,785275
inline void V0LayerParameter::set_meanfile(const char* value, size_t size) {set_meanfile23149,785496
inline ::std::string* V0LayerParameter::mutable_meanfile() {mutable_meanfile23156,785767
inline ::std::string* V0LayerParameter::release_meanfile() {release_meanfile23163,785977
inline void V0LayerParameter::set_allocated_meanfile(::std::string* meanfile) {set_allocated_meanfile23173,786306
inline bool V0LayerParameter::has_batchsize() const {has_batchsize23187,786715
inline void V0LayerParameter::set_has_batchsize() {set_has_batchsize23190,786816
inline void V0LayerParameter::clear_has_batchsize() {clear_has_batchsize23193,786902
inline void V0LayerParameter::clear_batchsize() {clear_batchsize23196,786991
inline ::google::protobuf::uint32 V0LayerParameter::batchsize() const {batchsize23200,787087
inline void V0LayerParameter::set_batchsize(::google::protobuf::uint32 value) {set_batchsize23203,787182
inline bool V0LayerParameter::has_cropsize() const {has_cropsize23209,787358
inline void V0LayerParameter::set_has_cropsize() {set_has_cropsize23212,787458
inline void V0LayerParameter::clear_has_cropsize() {clear_has_cropsize23215,787543
inline void V0LayerParameter::clear_cropsize() {clear_cropsize23218,787631
inline ::google::protobuf::uint32 V0LayerParameter::cropsize() const {cropsize23222,787724
inline void V0LayerParameter::set_cropsize(::google::protobuf::uint32 value) {set_cropsize23225,787817
inline bool V0LayerParameter::has_mirror() const {has_mirror23231,787990
inline void V0LayerParameter::set_has_mirror() {set_has_mirror23234,788088
inline void V0LayerParameter::clear_has_mirror() {clear_has_mirror23237,788171
inline void V0LayerParameter::clear_mirror() {clear_mirror23240,788257
inline bool V0LayerParameter::mirror() const {mirror23244,788347
inline void V0LayerParameter::set_mirror(bool value) {set_mirror23247,788414
inline int V0LayerParameter::blobs_size() const {blobs_size23253,788552
inline void V0LayerParameter::clear_blobs() {clear_blobs23256,788628
inline const ::caffe::BlobProto& V0LayerParameter::blobs(int index) const {blobs23259,788694
inline ::caffe::BlobProto* V0LayerParameter::mutable_blobs(int index) {mutable_blobs23262,788800
inline ::caffe::BlobProto* V0LayerParameter::add_blobs() {add_blobs23265,788906
V0LayerParameter::blobs() const {blobs23269,789063
V0LayerParameter::mutable_blobs() {mutable_blobs23273,789183
inline int V0LayerParameter::blobs_lr_size() const {blobs_lr_size23278,789273
inline void V0LayerParameter::clear_blobs_lr() {clear_blobs_lr23281,789355
inline float V0LayerParameter::blobs_lr(int index) const {blobs_lr23284,789427
inline void V0LayerParameter::set_blobs_lr(int index, float value) {set_blobs_lr23287,789519
inline void V0LayerParameter::add_blobs_lr(float value) {add_blobs_lr23290,789621
V0LayerParameter::blobs_lr() const {blobs_lr23294,789762
V0LayerParameter::mutable_blobs_lr() {mutable_blobs_lr23298,789872
inline int V0LayerParameter::weight_decay_size() const {weight_decay_size23303,789972
inline void V0LayerParameter::clear_weight_decay() {clear_weight_decay23306,790062
inline float V0LayerParameter::weight_decay(int index) const {weight_decay23309,790142
inline void V0LayerParameter::set_weight_decay(int index, float value) {set_weight_decay23312,790242
inline void V0LayerParameter::add_weight_decay(float value) {add_weight_decay23315,790352
V0LayerParameter::weight_decay() const {weight_decay23319,790501
V0LayerParameter::mutable_weight_decay() {mutable_weight_decay23323,790619
inline bool V0LayerParameter::has_rand_skip() const {has_rand_skip23328,790739
inline void V0LayerParameter::set_has_rand_skip() {set_has_rand_skip23331,790840
inline void V0LayerParameter::clear_has_rand_skip() {clear_has_rand_skip23334,790926
inline void V0LayerParameter::clear_rand_skip() {clear_rand_skip23337,791015
inline ::google::protobuf::uint32 V0LayerParameter::rand_skip() const {rand_skip23341,791111
inline void V0LayerParameter::set_rand_skip(::google::protobuf::uint32 value) {set_rand_skip23344,791206
inline bool V0LayerParameter::has_det_fg_threshold() const {has_det_fg_threshold23350,791391
inline void V0LayerParameter::set_has_det_fg_threshold() {set_has_det_fg_threshold23353,791499
inline void V0LayerParameter::clear_has_det_fg_threshold() {clear_has_det_fg_threshold23356,791592
inline void V0LayerParameter::clear_det_fg_threshold() {clear_det_fg_threshold23359,791688
inline float V0LayerParameter::det_fg_threshold() const {det_fg_threshold23363,791807
inline void V0LayerParameter::set_det_fg_threshold(float value) {set_det_fg_threshold23366,791895
inline bool V0LayerParameter::has_det_bg_threshold() const {has_det_bg_threshold23372,792080
inline void V0LayerParameter::set_has_det_bg_threshold() {set_has_det_bg_threshold23375,792188
inline void V0LayerParameter::clear_has_det_bg_threshold() {clear_has_det_bg_threshold23378,792281
inline void V0LayerParameter::clear_det_bg_threshold() {clear_det_bg_threshold23381,792377
inline float V0LayerParameter::det_bg_threshold() const {det_bg_threshold23385,792496
inline void V0LayerParameter::set_det_bg_threshold(float value) {set_det_bg_threshold23388,792584
inline bool V0LayerParameter::has_det_fg_fraction() const {has_det_fg_fraction23394,792769
inline void V0LayerParameter::set_has_det_fg_fraction() {set_has_det_fg_fraction23397,792876
inline void V0LayerParameter::clear_has_det_fg_fraction() {clear_has_det_fg_fraction23400,792968
inline void V0LayerParameter::clear_det_fg_fraction() {clear_det_fg_fraction23403,793063
inline float V0LayerParameter::det_fg_fraction() const {det_fg_fraction23407,793180
inline void V0LayerParameter::set_det_fg_fraction(float value) {set_det_fg_fraction23410,793266
inline bool V0LayerParameter::has_det_context_pad() const {has_det_context_pad23416,793446
inline void V0LayerParameter::set_has_det_context_pad() {set_has_det_context_pad23419,793553
inline void V0LayerParameter::clear_has_det_context_pad() {clear_has_det_context_pad23422,793645
inline void V0LayerParameter::clear_det_context_pad() {clear_det_context_pad23425,793740
inline ::google::protobuf::uint32 V0LayerParameter::det_context_pad() const {det_context_pad23429,793854
inline void V0LayerParameter::set_det_context_pad(::google::protobuf::uint32 value) {set_det_context_pad23432,793961
inline bool V0LayerParameter::has_det_crop_mode() const {has_det_crop_mode23438,794165
inline void V0LayerParameter::set_has_det_crop_mode() {set_has_det_crop_mode23441,794270
inline void V0LayerParameter::clear_has_det_crop_mode() {clear_has_det_crop_mode23444,794360
inline void V0LayerParameter::clear_det_crop_mode() {clear_det_crop_mode23447,794453
inline const ::std::string& V0LayerParameter::det_crop_mode() const {det_crop_mode23453,794647
inline void V0LayerParameter::set_det_crop_mode(const ::std::string& value) {set_det_crop_mode23456,794745
inline void V0LayerParameter::set_det_crop_mode(const char* value) {set_det_crop_mode23463,794980
inline void V0LayerParameter::set_det_crop_mode(const char* value, size_t size) {set_det_crop_mode23470,795206
inline ::std::string* V0LayerParameter::mutable_det_crop_mode() {mutable_det_crop_mode23477,795482
inline ::std::string* V0LayerParameter::release_det_crop_mode() {release_det_crop_mode23484,795723
inline void V0LayerParameter::set_allocated_det_crop_mode(::std::string* det_crop_mode) {set_allocated_det_crop_mode23494,796037
inline bool V0LayerParameter::has_new_num() const {has_new_num23508,796467
inline void V0LayerParameter::set_has_new_num() {set_has_new_num23511,796566
inline void V0LayerParameter::clear_has_new_num() {clear_has_new_num23514,796650
inline void V0LayerParameter::clear_new_num() {clear_new_num23517,796737
inline ::google::protobuf::int32 V0LayerParameter::new_num() const {new_num23521,796826
inline void V0LayerParameter::set_new_num(::google::protobuf::int32 value) {set_new_num23524,796916
inline bool V0LayerParameter::has_new_channels() const {has_new_channels23530,797088
inline void V0LayerParameter::set_has_new_channels() {set_has_new_channels23533,797192
inline void V0LayerParameter::clear_has_new_channels() {clear_has_new_channels23536,797281
inline void V0LayerParameter::clear_new_channels() {clear_new_channels23539,797373
inline ::google::protobuf::int32 V0LayerParameter::new_channels() const {new_channels23543,797477
inline void V0LayerParameter::set_new_channels(::google::protobuf::int32 value) {set_new_channels23546,797577
inline bool V0LayerParameter::has_new_height() const {has_new_height23552,797762
inline void V0LayerParameter::set_has_new_height() {set_has_new_height23555,797864
inline void V0LayerParameter::clear_has_new_height() {clear_has_new_height23558,797951
inline void V0LayerParameter::clear_new_height() {clear_new_height23561,798041
inline ::google::protobuf::int32 V0LayerParameter::new_height() const {new_height23565,798139
inline void V0LayerParameter::set_new_height(::google::protobuf::int32 value) {set_new_height23568,798235
inline bool V0LayerParameter::has_new_width() const {has_new_width23574,798413
inline void V0LayerParameter::set_has_new_width() {set_has_new_width23577,798514
inline void V0LayerParameter::clear_has_new_width() {clear_has_new_width23580,798600
inline void V0LayerParameter::clear_new_width() {clear_new_width23583,798689
inline ::google::protobuf::int32 V0LayerParameter::new_width() const {new_width23587,798784
inline void V0LayerParameter::set_new_width(::google::protobuf::int32 value) {set_new_width23590,798878
inline bool V0LayerParameter::has_shuffle_images() const {has_shuffle_images23596,799061
inline void V0LayerParameter::set_has_shuffle_images() {set_has_shuffle_images23599,799167
inline void V0LayerParameter::clear_has_shuffle_images() {clear_has_shuffle_images23602,799258
inline void V0LayerParameter::clear_shuffle_images() {clear_shuffle_images23605,799352
inline bool V0LayerParameter::shuffle_images() const {shuffle_images23609,799466
inline void V0LayerParameter::set_shuffle_images(bool value) {set_shuffle_images23612,799549
inline bool V0LayerParameter::has_concat_dim() const {has_concat_dim23618,799720
inline void V0LayerParameter::set_has_concat_dim() {set_has_concat_dim23621,799822
inline void V0LayerParameter::clear_has_concat_dim() {clear_has_concat_dim23624,799909
inline void V0LayerParameter::clear_concat_dim() {clear_concat_dim23627,799999
inline ::google::protobuf::uint32 V0LayerParameter::concat_dim() const {concat_dim23631,800098
inline void V0LayerParameter::set_concat_dim(::google::protobuf::uint32 value) {set_concat_dim23634,800195
inline bool V0LayerParameter::has_hdf5_output_param() const {has_hdf5_output_param23640,800391
inline void V0LayerParameter::set_has_hdf5_output_param() {set_has_hdf5_output_param23643,800500
inline void V0LayerParameter::clear_has_hdf5_output_param() {clear_has_hdf5_output_param23646,800594
inline void V0LayerParameter::clear_hdf5_output_param() {clear_hdf5_output_param23649,800691
inline const ::caffe::HDF5OutputParameter& V0LayerParameter::hdf5_output_param() const {hdf5_output_param23653,800877
inline ::caffe::HDF5OutputParameter* V0LayerParameter::mutable_hdf5_output_param() {mutable_hdf5_output_param23656,801068
inline ::caffe::HDF5OutputParameter* V0LayerParameter::release_hdf5_output_param() {release_hdf5_output_param23661,801304
inline void V0LayerParameter::set_allocated_hdf5_output_param(::caffe::HDF5OutputParameter* hdf5_output_param) {set_allocated_hdf5_output_param23667,801527
inline bool PReLUParameter::has_filler() const {has_filler23682,801962
inline void PReLUParameter::set_has_filler() {set_has_filler23685,802058
inline void PReLUParameter::clear_has_filler() {clear_has_filler23688,802139
inline void PReLUParameter::clear_filler() {clear_filler23691,802223
inline const ::caffe::FillerParameter& PReLUParameter::filler() const {filler23695,802359
inline ::caffe::FillerParameter* PReLUParameter::mutable_filler() {mutable_filler23698,802500
inline ::caffe::FillerParameter* PReLUParameter::release_filler() {release_filler23703,802671
inline void PReLUParameter::set_allocated_filler(::caffe::FillerParameter* filler) {set_allocated_filler23709,802840
inline bool PReLUParameter::has_channel_shared() const {has_channel_shared23720,803098
inline void PReLUParameter::set_has_channel_shared() {set_has_channel_shared23723,803202
inline void PReLUParameter::clear_has_channel_shared() {clear_has_channel_shared23726,803291
inline void PReLUParameter::clear_channel_shared() {clear_channel_shared23729,803383
inline bool PReLUParameter::channel_shared() const {channel_shared23733,803495
inline void PReLUParameter::set_channel_shared(bool value) {set_channel_shared23736,803576
inline bool QuantizationParameter::has_round_method() const {has_round_method23746,803882
inline void QuantizationParameter::set_has_round_method() {set_has_round_method23749,803991
inline void QuantizationParameter::clear_has_round_method() {clear_has_round_method23752,804085
inline void QuantizationParameter::clear_round_method() {clear_round_method23755,804182
inline ::caffe::QuantizationParameter_RoundMethod QuantizationParameter::round_method() const {round_method23759,804291
inline void QuantizationParameter::set_round_method(::caffe::QuantizationParameter_RoundMethod value) {set_round_method23762,804472
inline bool QuantizationParameter::has_round_strategy() const {has_round_strategy23769,804799
inline void QuantizationParameter::set_has_round_strategy() {set_has_round_strategy23772,804910
inline void QuantizationParameter::clear_has_round_strategy() {clear_has_round_strategy23775,805006
inline void QuantizationParameter::clear_round_strategy() {clear_round_strategy23778,805105
inline ::caffe::QuantizationParameter_RoundStrategy QuantizationParameter::round_strategy() const {round_strategy23782,805220
inline void QuantizationParameter::set_round_strategy(::caffe::QuantizationParameter_RoundStrategy value) {set_round_strategy23785,805409
inline bool QuantizationParameter::has_bit_width() const {has_bit_width23792,805693
inline void QuantizationParameter::set_has_bit_width() {set_has_bit_width23795,805799
inline void QuantizationParameter::clear_has_bit_width() {clear_has_bit_width23798,805890
inline void QuantizationParameter::clear_bit_width() {clear_bit_width23801,805984
inline ::google::protobuf::int32 QuantizationParameter::bit_width() const {bit_width23805,806084
inline void QuantizationParameter::set_bit_width(::google::protobuf::int32 value) {set_bit_width23808,806183
inline int QuantizationParameter::range_size() const {range_size23814,806360
inline void QuantizationParameter::clear_range() {clear_range23817,806441
inline float QuantizationParameter::range(int index) const {range23820,806512
inline void QuantizationParameter::set_range(int index, float value) {set_range23823,806603
inline void QuantizationParameter::add_range(float value) {add_range23826,806704
QuantizationParameter::range() const {range23830,806844
QuantizationParameter::mutable_range() {mutable_range23834,806953
namespace google {google23844,807098
namespace protobuf {protobuf23845,807117
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::FillerParameter_VarianceNorm>() {GetEnumDescriptor23848,807151
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SolverParameter_SnapshotFormat>() {GetEnumDescriptor23852,807317
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SolverParameter_SolverMode>() {GetEnumDescriptor23856,807487
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SolverParameter_SolverType>() {GetEnumDescriptor23860,807649
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ParamSpec_DimCheckMode>() {GetEnumDescriptor23864,807811
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::LossParameter_NormalizationMode>() {GetEnumDescriptor23868,807965
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ConvolutionParameter_Engine>() {GetEnumDescriptor23872,808137
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::DataParameter_DB>() {GetEnumDescriptor23876,808301
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::EltwiseParameter_EltwiseOp>() {GetEnumDescriptor23880,808443
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::HingeLossParameter_Norm>() {GetEnumDescriptor23884,808605
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::LRNParameter_NormRegion>() {GetEnumDescriptor23888,808761
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::LRNParameter_Engine>() {GetEnumDescriptor23892,808917
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::PoolingParameter_PoolMethod>() {GetEnumDescriptor23896,809065
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::PoolingParameter_Engine>() {GetEnumDescriptor23900,809229
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ReductionParameter_ReductionOp>() {GetEnumDescriptor23904,809385
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ReLUParameter_Engine>() {GetEnumDescriptor23908,809555
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SigmoidParameter_Engine>() {GetEnumDescriptor23912,809705
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SoftmaxParameter_Engine>() {GetEnumDescriptor23916,809861
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::TanHParameter_Engine>() {GetEnumDescriptor23920,810017
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SPPParameter_PoolMethod>() {GetEnumDescriptor23924,810167
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SPPParameter_Engine>() {GetEnumDescriptor23928,810323
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::V1LayerParameter_LayerType>() {GetEnumDescriptor23932,810471
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::V1LayerParameter_DimCheckMode>() {GetEnumDescriptor23936,810633
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::V0LayerParameter_PoolMethod>() {GetEnumDescriptor23940,810801
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::QuantizationParameter_RoundMethod>() {GetEnumDescriptor23944,810965
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::QuantizationParameter_RoundStrategy>() {GetEnumDescriptor23948,811141
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::Phase>() {GetEnumDescriptor23952,811321

python/classify.py,28
def main(argv):main17,278

python/caffe/coord_map.py,613
PASS_THROUGH_LAYERS = ['AbsVal', 'BatchNorm', 'Bias', 'BNLL', 'Dropout',PASS_THROUGH_LAYERS12,352
def conv_params(fn):conv_params18,618
def crop_params(fn):crop_params40,1567
class UndefinedMapException(Exception):UndefinedMapException50,1868
def coord_map(fn):coord_map57,2014
class AxisMismatchException(Exception):AxisMismatchException82,2960
def compose(base_map, next_map):compose89,3085
def inverse(coord_map):inverse106,3555
def coord_map_from_to(top_from, top_to):coord_map_from_to115,3759
    def collect_bottoms(top):collect_bottoms126,4308
def crop(top_from, top_to):crop172,6004

python/caffe/__init__.py,0

python/caffe/detector.py,391
class Detector(caffe.Net):Detector22,609
    def __init__(self, model_file, pretrained_file, mean=None,__init__35,1063
    def detect_windows(self, images_windows):detect_windows56,1937
    def detect_selective_search(self, image_fnames):detect_selective_search101,3677
    def crop(self, im, window):crop125,4582
    def configure_crop(self, context_pad):configure_crop181,6878

python/caffe/net_spec.py,1481
def param_name_dict():param_name_dict28,1034
def to_proto(*tops):to_proto43,1805
def assign_proto(proto, name, val):assign_proto56,2135
class Top(object):Top82,3196
    def __init__(self, fn, n):__init__86,3320
    def to_proto(self):to_proto90,3392
    def _to_proto(self, layers, names, autonames):_to_proto96,3547
class Function(object):Function100,3659
    def __init__(self, type_name, inputs, params):__init__104,3795
    def _get_name(self, names, autonames):_get_name121,4568
    def _get_top_name(self, top, names, autonames):_get_top_name129,4913
    def _to_proto(self, layers, names, autonames):_to_proto135,5143
class NetSpec(object):NetSpec167,6246
    def __init__(self):__init__173,6509
    def __setattr__(self, name, value):__setattr__176,6598
    def __getattr__(self, name):__getattr__179,6671
    def __setitem__(self, key, value):__setitem__182,6736
    def __getitem__(self, item):__getitem__185,6813
    def to_proto(self):to_proto188,6885
class Layers(object):Layers199,7235
    def __getattr__(self, name):__getattr__204,7475
        def layer_fn(*args, **kwargs):layer_fn205,7508
class Parameters(object):Parameters216,7788
    def __getattr__(self, name):__getattr__221,7997
       class Param:Param222,8030
            def __getattr__(self, param_name):__getattr__223,8050
_param_names = param_name_dict()_param_names228,8204
layers = Layers()layers229,8237
params = Parameters()params230,8255

python/caffe/classifier.py,196
class Classifier(caffe.Net):Classifier11,123
    def __init__(self, model_file, pretrained_file, image_dims=None,__init__23,527
    def predict(self, inputs, oversample=True):predict47,1529

python/caffe/test/test_solver.py,240
class TestSolver(unittest.TestCase):TestSolver11,125
    def setUp(self):setUp12,162
    def test_solve(self):test_solve36,1223
    def test_net_memory(self):test_net_memory41,1372
    def test_snapshot(self):test_snapshot56,1884

python/caffe/test/test_net.py,1687
def simple_net_file(num_output):simple_net_file11,124
class TestNet(unittest.TestCase):TestNet38,1343
    def setUp(self):setUp39,1377
    def test_memory(self):test_memory49,1749
    def test_layer_dict(self):test_layer_dict63,2217
    def test_forward_backward(self):test_forward_backward70,2532
    def test_forward_start_end(self):test_forward_start_end74,2625
    def test_backward_start_end(self):test_backward_start_end92,3388
    def test_clear_param_diffs(self):test_clear_param_diffs111,4204
    def test_inputs_outputs(self):test_inputs_outputs122,4611
    def test_top_bottom_names(self):test_top_bottom_names126,4746
    def test_save_and_read(self):test_save_and_read138,5359
    def test_save_hdf5(self):test_save_hdf5155,6057
class TestLevels(unittest.TestCase):TestLevels169,6610
    def setUp(self):setUp219,7569
    def tearDown(self):tearDown224,7720
    def check_net(self, net, blobs):check_net227,7776
    def test_0(self):test_0231,7926
    def test_1(self):test_1235,8065
class TestStages(unittest.TestCase):TestStages240,8226
    def setUp(self):setUp284,9012
    def tearDown(self):tearDown289,9163
    def check_net(self, net, blobs):check_net292,9219
    def test_A(self):test_A296,9369
    def test_B(self):test_B300,9498
    def test_AandB(self):test_AandB304,9627
class TestAllInOne(unittest.TestCase):TestAllInOne309,9780
    def setUp(self):setUp366,10878
    def tearDown(self):tearDown371,11029
    def check_net(self, net, outputs):check_net374,11085
    def test_train(self):test_train378,11241
    def test_val(self):test_val382,11374
    def test_deploy(self):test_deploy386,11502

python/caffe/test/test_nccl.py,93
class TestNCCL(unittest.TestCase):TestNCCL7,43
    def test_newuid(self):test_newuid9,79

python/caffe/test/test_coord_map.py,831
def coord_net_spec(ks=3, stride=1, pad=0, pool=2, dstride=2, dpad=0):coord_net_spec12,178
class TestCoordMap(unittest.TestCase):TestCoordMap34,959
    def setUp(self):setUp35,998
    def test_conv_pool_deconv(self):test_conv_pool_deconv38,1033
    def test_pass(self):test_pass55,1607
    def test_padding(self):test_padding71,2213
    def test_multi_conv(self):test_multi_conv94,3072
    def test_rect(self):test_rect109,3616
    def test_nd_conv(self):test_nd_conv125,4351
    def test_crop_of_crop(self):test_crop_of_crop146,5214
    def test_crop_helper(self):test_crop_helper160,5774
    def test_catch_unconnected(self):test_catch_unconnected167,5928
    def test_catch_scale_mismatch(self):test_catch_scale_mismatch176,6215
    def test_catch_negative_crop(self):test_catch_negative_crop185,6563

python/caffe/test/test_draw.py,140
def getFilenames():getFilenames9,121
class TestDraw(unittest.TestCase):TestDraw27,778
    def test_draw_net(self):test_draw_net28,813

python/caffe/test/test_python_layer_with_param_str.py,542
class SimpleParamLayer(caffe.Layer):SimpleParamLayer9,69
    def setup(self, bottom, top):setup12,187
    def reshape(self, bottom, top):reshape18,382
    def forward(self, bottom, top):forward21,465
    def backward(self, top, propagate_down, bottom):backward24,557
def python_param_net_file():python_param_net_file28,667
class TestLayerWithParam(unittest.TestCase):TestLayerWithParam43,1420
    def setUp(self):setUp44,1465
    def test_forward(self):test_forward49,1610
    def test_backward(self):test_backward56,1820

python/caffe/test/test_python_layer.py,1455
class SimpleLayer(caffe.Layer):SimpleLayer9,69
    def setup(self, bottom, top):setup12,148
    def reshape(self, bottom, top):reshape15,196
    def forward(self, bottom, top):forward18,279
    def backward(self, top, propagate_down, bottom):backward21,363
class ExceptionLayer(caffe.Layer):ExceptionLayer25,465
    def setup(self, bottom, top):setup28,555
class ParameterLayer(caffe.Layer):ParameterLayer31,617
    def setup(self, bottom, top):setup34,699
    def reshape(self, bottom, top):reshape38,799
    def forward(self, bottom, top):forward41,882
    def backward(self, top, propagate_down, bottom):backward44,932
class PhaseLayer(caffe.Layer):PhaseLayer47,1020
    def setup(self, bottom, top):setup50,1101
    def reshape(self, bootom, top):reshape53,1149
    def forward(self, bottom, top):forward56,1211
def python_net_file():python_net_file59,1285
def exception_net_file():exception_net_file72,1965
def parameter_net_file():parameter_net_file82,2368
def phase_net_file():phase_net_file91,2770
class TestPythonLayer(unittest.TestCase):TestPythonLayer102,3198
    def setUp(self):setUp103,3240
    def test_forward(self):test_forward108,3379
    def test_backward(self):test_backward115,3589
    def test_reshape(self):test_reshape122,3801
    def test_exception(self):test_exception130,4051
    def test_parameter(self):test_parameter135,4223
    def test_phase(self):test_phase164,5297

python/caffe/test/test_io.py,409
class TestBlobProtoToArray(unittest.TestCase):TestBlobProtoToArray6,50
    def test_old_format(self):test_old_format8,98
    def test_new_format(self):test_new_format18,444
    def test_no_shape(self):test_no_shape27,750
    def test_scalar(self):test_scalar35,1000
class TestArrayToDatum(unittest.TestCase):TestArrayToDatum44,1243
    def test_label_none_size(self):test_label_none_size46,1287

python/caffe/test/test_layer_type_list.py,127
class TestLayerTypeList(unittest.TestCase):TestLayerTypeList5,31
    def test_standard_types(self):test_standard_types7,76

python/caffe/test/test_net_spec.py,382
def lenet(batch_size):lenet7,106
def anon_lenet(batch_size):anon_lenet26,1061
def silent_net():silent_net44,1954
class TestNetSpec(unittest.TestCase):TestNetSpec51,2178
    def load_net(self, net_proto):load_net52,2216
    def test_lenet(self):test_lenet58,2412
    def test_zero_tops(self):test_zero_tops76,3079
    def test_type_error(self):test_type_error83,3288

python/caffe/pycaffe.py,887
def _Net_blobs(self):_Net_blobs25,618
def _Net_blob_loss_weights(self):_Net_blob_loss_weights36,907
def _Net_layer_dict(self):_Net_layer_dict47,1323
def _Net_params(self):_Net_params58,1619
def _Net_inputs(self):_Net_inputs73,2164
def _Net_outputs(self):_Net_outputs81,2366
def _Net_forward(self, blobs=None, start=None, end=None, **kwargs):_Net_forward88,2563
def _Net_backward(self, diffs=None, start=None, end=None, **kwargs):_Net_backward137,4202
def _Net_forward_all(self, blobs=None, **kwargs):_Net_forward_all185,5786
def _Net_forward_backward_all(self, blobs=None, diffs=None, **kwargs):_Net_forward_backward_all216,6762
def _Net_set_input_arrays(self, data, labels):_Net_set_input_arrays261,8819
def _Net_batch(self, blobs):_Net_batch272,9217
def _Net_get_id_name(func, field):_Net_get_id_name305,10296
    def get_id_name(self):get_id_name321,10669

python/caffe/proto/__init__.py,0

python/caffe/proto/caffe_pb2.py,124011
DESCRIPTOR = _descriptor.FileDescriptor(DESCRIPTOR14,376
  name='caffe.proto',name15,417
  package='caffe',package16,439
  serialized_pb='\n\x0b\x63\x61\x66\x66\x65.proto\x12\x05\x63\x61\x66\x66\x65\"\x1c\n\tBlobShape\x12\x0f\n\x03\x64im\x18\x01 \x03(\x03\x42\x02\x10\x01\"\xcc\x01\n\tBlobProto\x12\x1f\n\x05shape\x18\x07 \x01(\x0b\x32\x10.caffe.BlobShape\x12\x10\n\x04\x64\x61ta\x18\x05 \x03(\x02\x42\x02\x10\x01\x12\x10\n\x04\x64iff\x18\x06 \x03(\x02\x42\x02\x10\x01\x12\x17\n\x0b\x64ouble_data\x18\x08 \x03(\x01\x42\x02\x10\x01\x12\x17\n\x0b\x64ouble_diff\x18\t \x03(\x01\x42\x02\x10\x01\x12\x0e\n\x03num\x18\x01 \x01(\x05:\x01\x30\x12\x13\n\x08\x63hannels\x18\x02 \x01(\x05:\x01\x30\x12\x11\n\x06height\x18\x03 \x01(\x05:\x01\x30\x12\x10\n\x05width\x18\x04 \x01(\x05:\x01\x30\"2\n\x0f\x42lobProtoVector\x12\x1f\n\x05\x62lobs\x18\x01 \x03(\x0b\x32\x10.caffe.BlobProto\"\x81\x01\n\x05\x44\x61tum\x12\x10\n\x08\x63hannels\x18\x01 \x01(\x05\x12\x0e\n\x06height\x18\x02 \x01(\x05\x12\r\n\x05width\x18\x03 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c\x12\r\n\x05label\x18\x05 \x01(\x05\x12\x12\n\nfloat_data\x18\x06 \x03(\x02\x12\x16\n\x07\x65ncoded\x18\x07 \x01(\x08:\x05\x66\x61lse\"\x8a\x02\n\x0f\x46illerParameter\x12\x16\n\x04type\x18\x01 \x01(\t:\x08\x63onstant\x12\x10\n\x05value\x18\x02 \x01(\x02:\x01\x30\x12\x0e\n\x03min\x18\x03 \x01(\x02:\x01\x30\x12\x0e\n\x03max\x18\x04 \x01(\x02:\x01\x31\x12\x0f\n\x04mean\x18\x05 \x01(\x02:\x01\x30\x12\x0e\n\x03std\x18\x06 \x01(\x02:\x01\x31\x12\x12\n\x06sparse\x18\x07 \x01(\x05:\x02-1\x12\x42\n\rvariance_norm\x18\x08 \x01(\x0e\x32#.caffe.FillerParameter.VarianceNorm:\x06\x46\x41N_IN\"4\n\x0cVarianceNorm\x12\n\n\x06\x46\x41N_IN\x10\x00\x12\x0b\n\x07\x46\x41N_OUT\x10\x01\x12\x0b\n\x07\x41VERAGE\x10\x02\"\x8e\x02\n\x0cNetParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05input\x18\x03 \x03(\t\x12%\n\x0binput_shape\x18\x08 \x03(\x0b\x32\x10.caffe.BlobShape\x12\x11\n\tinput_dim\x18\x04 \x03(\x05\x12\x1d\n\x0e\x66orce_backward\x18\x05 \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x05state\x18\x06 \x01(\x0b\x32\x0f.caffe.NetState\x12\x19\n\ndebug_info\x18\x07 \x01(\x08:\x05\x66\x61lse\x12$\n\x05layer\x18\x64 \x03(\x0b\x32\x15.caffe.LayerParameter\x12\'\n\x06layers\x18\x02 \x03(\x0b\x32\x17.caffe.V1LayerParameter\"\xc3\n\n\x0fSolverParameter\x12\x0b\n\x03net\x18\x18 \x01(\t\x12&\n\tnet_param\x18\x19 \x01(\x0b\x32\x13.caffe.NetParameter\x12\x11\n\ttrain_net\x18\x01 \x01(\t\x12\x10\n\x08test_net\x18\x02 \x03(\t\x12,\n\x0ftrain_net_param\x18\x15 \x01(\x0b\x32\x13.caffe.NetParameter\x12+\n\x0etest_net_param\x18\x16 \x03(\x0b\x32\x13.caffe.NetParameter\x12$\n\x0btrain_state\x18\x1a \x01(\x0b\x32\x0f.caffe.NetState\x12#\n\ntest_state\x18\x1b \x03(\x0b\x32\x0f.caffe.NetState\x12\x11\n\ttest_iter\x18\x03 \x03(\x05\x12\x18\n\rtest_interval\x18\x04 \x01(\x05:\x01\x30\x12 \n\x11test_compute_loss\x18\x13 \x01(\x08:\x05\x66\x61lse\x12!\n\x13test_initialization\x18  \x01(\x08:\x04true\x12\x0f\n\x07\x62\x61se_lr\x18\x05 \x01(\x02\x12\x0f\n\x07\x64isplay\x18\x06 \x01(\x05\x12\x17\n\x0c\x61verage_loss\x18! \x01(\x05:\x01\x31\x12\x10\n\x08max_iter\x18\x07 \x01(\x05\x12\x14\n\titer_size\x18$ \x01(\x05:\x01\x31\x12\x11\n\tlr_policy\x18\x08 \x01(\t\x12\r\n\x05gamma\x18\t \x01(\x02\x12\r\n\x05power\x18\n \x01(\x02\x12\x10\n\x08momentum\x18\x0b \x01(\x02\x12\x14\n\x0cweight_decay\x18\x0c \x01(\x02\x12\x1f\n\x13regularization_type\x18\x1d \x01(\t:\x02L2\x12\x10\n\x08stepsize\x18\r \x01(\x05\x12\x11\n\tstepvalue\x18\" \x03(\x05\x12\x1a\n\x0e\x63lip_gradients\x18# \x01(\x02:\x02-1\x12\x13\n\x08snapshot\x18\x0e \x01(\x05:\x01\x30\x12\x17\n\x0fsnapshot_prefix\x18\x0f \x01(\t\x12\x1c\n\rsnapshot_diff\x18\x10 \x01(\x08:\x05\x66\x61lse\x12K\n\x0fsnapshot_format\x18% \x01(\x0e\x32%.caffe.SolverParameter.SnapshotFormat:\x0b\x42INARYPROTO\x12;\n\x0bsolver_mode\x18\x11 \x01(\x0e\x32!.caffe.SolverParameter.SolverMode:\x03GPU\x12\x14\n\tdevice_id\x18\x12 \x01(\x05:\x01\x30\x12\x17\n\x0brandom_seed\x18\x14 \x01(\x03:\x02-1\x12\x11\n\x04type\x18( \x01(\t:\x03SGD\x12\x14\n\x05\x64\x65lta\x18\x1f \x01(\x02:\x05\x31\x65-08\x12\x18\n\tmomentum2\x18\' \x01(\x02:\x05\x30.999\x12\x17\n\trms_decay\x18& \x01(\x02:\x04\x30.99\x12\x19\n\ndebug_info\x18\x17 \x01(\x08:\x05\x66\x61lse\x12\"\n\x14snapshot_after_train\x18\x1c \x01(\x08:\x04true\x12;\n\x0bsolver_type\x18\x1e \x01(\x0e\x32!.caffe.SolverParameter.SolverType:\x03SGD\x12\x1f\n\x11layer_wise_reduce\x18) \x01(\x08:\x04true\"+\n\x0eSnapshotFormat\x12\x08\n\x04HDF5\x10\x00\x12\x0f\n\x0b\x42INARYPROTO\x10\x01\"\x1e\n\nSolverMode\x12\x07\n\x03\x43PU\x10\x00\x12\x07\n\x03GPU\x10\x01\"U\n\nSolverType\x12\x07\n\x03SGD\x10\x00\x12\x0c\n\x08NESTEROV\x10\x01\x12\x0b\n\x07\x41\x44\x41GRAD\x10\x02\x12\x0b\n\x07RMSPROP\x10\x03\x12\x0c\n\x08\x41\x44\x41\x44\x45LTA\x10\x04\x12\x08\n\x04\x41\x44\x41M\x10\x05\"l\n\x0bSolverState\x12\x0c\n\x04iter\x18\x01 \x01(\x05\x12\x13\n\x0blearned_net\x18\x02 \x01(\t\x12!\n\x07history\x18\x03 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x17\n\x0c\x63urrent_step\x18\x04 \x01(\x05:\x01\x30\"N\n\x08NetState\x12!\n\x05phase\x18\x01 \x01(\x0e\x32\x0c.caffe.Phase:\x04TEST\x12\x10\n\x05level\x18\x02 \x01(\x05:\x01\x30\x12\r\n\x05stage\x18\x03 \x03(\t\"s\n\x0cNetStateRule\x12\x1b\n\x05phase\x18\x01 \x01(\x0e\x32\x0c.caffe.Phase\x12\x11\n\tmin_level\x18\x02 \x01(\x05\x12\x11\n\tmax_level\x18\x03 \x01(\x05\x12\r\n\x05stage\x18\x04 \x03(\t\x12\x11\n\tnot_stage\x18\x05 \x03(\t\"\xa3\x01\n\tParamSpec\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x31\n\nshare_mode\x18\x02 \x01(\x0e\x32\x1d.caffe.ParamSpec.DimCheckMode\x12\x12\n\x07lr_mult\x18\x03 \x01(\x02:\x01\x31\x12\x15\n\ndecay_mult\x18\x04 \x01(\x02:\x01\x31\"*\n\x0c\x44imCheckMode\x12\n\n\x06STRICT\x10\x00\x12\x0e\n\nPERMISSIVE\x10\x01\"\xbd\x14\n\x0eLayerParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0e\n\x06\x62ottom\x18\x03 \x03(\t\x12\x0b\n\x03top\x18\x04 \x03(\t\x12\x1b\n\x05phase\x18\n \x01(\x0e\x32\x0c.caffe.Phase\x12\x13\n\x0bloss_weight\x18\x05 \x03(\x02\x12\x1f\n\x05param\x18\x06 \x03(\x0b\x32\x10.caffe.ParamSpec\x12\x1f\n\x05\x62lobs\x18\x07 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x16\n\x0epropagate_down\x18\x0b \x03(\x08\x12$\n\x07include\x18\x08 \x03(\x0b\x32\x13.caffe.NetStateRule\x12$\n\x07\x65xclude\x18\t \x03(\x0b\x32\x13.caffe.NetStateRule\x12\x37\n\x0ftransform_param\x18\x64 \x01(\x0b\x32\x1e.caffe.TransformationParameter\x12(\n\nloss_param\x18\x65 \x01(\x0b\x32\x14.caffe.LossParameter\x12\x30\n\x0e\x61\x63\x63uracy_param\x18\x66 \x01(\x0b\x32\x18.caffe.AccuracyParameter\x12,\n\x0c\x61rgmax_param\x18g \x01(\x0b\x32\x16.caffe.ArgMaxParameter\x12\x34\n\x10\x62\x61tch_norm_param\x18\x8b\x01 \x01(\x0b\x32\x19.caffe.BatchNormParameter\x12)\n\nbias_param\x18\x8d\x01 \x01(\x0b\x32\x14.caffe.BiasParameter\x12,\n\x0c\x63oncat_param\x18h \x01(\x0b\x32\x16.caffe.ConcatParameter\x12?\n\x16\x63ontrastive_loss_param\x18i \x01(\x0b\x32\x1f.caffe.ContrastiveLossParameter\x12\x36\n\x11\x63onvolution_param\x18j \x01(\x0b\x32\x1b.caffe.ConvolutionParameter\x12)\n\ncrop_param\x18\x90\x01 \x01(\x0b\x32\x14.caffe.CropParameter\x12(\n\ndata_param\x18k \x01(\x0b\x32\x14.caffe.DataParameter\x12.\n\rdropout_param\x18l \x01(\x0b\x32\x17.caffe.DropoutParameter\x12\x33\n\x10\x64ummy_data_param\x18m \x01(\x0b\x32\x19.caffe.DummyDataParameter\x12.\n\reltwise_param\x18n \x01(\x0b\x32\x17.caffe.EltwiseParameter\x12\'\n\telu_param\x18\x8c\x01 \x01(\x0b\x32\x13.caffe.ELUParameter\x12+\n\x0b\x65mbed_param\x18\x89\x01 \x01(\x0b\x32\x15.caffe.EmbedParameter\x12&\n\texp_param\x18o \x01(\x0b\x32\x13.caffe.ExpParameter\x12/\n\rflatten_param\x18\x87\x01 \x01(\x0b\x32\x17.caffe.FlattenParameter\x12\x31\n\x0fhdf5_data_param\x18p \x01(\x0b\x32\x18.caffe.HDF5DataParameter\x12\x35\n\x11hdf5_output_param\x18q \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter\x12\x33\n\x10hinge_loss_param\x18r \x01(\x0b\x32\x19.caffe.HingeLossParameter\x12\x33\n\x10image_data_param\x18s \x01(\x0b\x32\x19.caffe.ImageDataParameter\x12\x39\n\x13infogain_loss_param\x18t \x01(\x0b\x32\x1c.caffe.InfogainLossParameter\x12\x39\n\x13inner_product_param\x18u \x01(\x0b\x32\x1c.caffe.InnerProductParameter\x12+\n\x0binput_param\x18\x8f\x01 \x01(\x0b\x32\x15.caffe.InputParameter\x12\'\n\tlog_param\x18\x86\x01 \x01(\x0b\x32\x13.caffe.LogParameter\x12&\n\tlrn_param\x18v \x01(\x0b\x32\x13.caffe.LRNParameter\x12\x35\n\x11memory_data_param\x18w \x01(\x0b\x32\x1a.caffe.MemoryDataParameter\x12&\n\tmvn_param\x18x \x01(\x0b\x32\x13.caffe.MVNParameter\x12\x33\n\x0fparameter_param\x18\x91\x01 \x01(\x0b\x32\x19.caffe.ParameterParameter\x12.\n\rpooling_param\x18y \x01(\x0b\x32\x17.caffe.PoolingParameter\x12*\n\x0bpower_param\x18z \x01(\x0b\x32\x15.caffe.PowerParameter\x12+\n\x0bprelu_param\x18\x83\x01 \x01(\x0b\x32\x15.caffe.PReLUParameter\x12-\n\x0cpython_param\x18\x82\x01 \x01(\x0b\x32\x16.caffe.PythonParameter\x12\x33\n\x0frecurrent_param\x18\x92\x01 \x01(\x0b\x32\x19.caffe.RecurrentParameter\x12\x33\n\x0freduction_param\x18\x88\x01 \x01(\x0b\x32\x19.caffe.ReductionParameter\x12(\n\nrelu_param\x18{ \x01(\x0b\x32\x14.caffe.ReLUParameter\x12/\n\rreshape_param\x18\x85\x01 \x01(\x0b\x32\x17.caffe.ReshapeParameter\x12+\n\x0bscale_param\x18\x8e\x01 \x01(\x0b\x32\x15.caffe.ScaleParameter\x12.\n\rsigmoid_param\x18| \x01(\x0b\x32\x17.caffe.SigmoidParameter\x12.\n\rsoftmax_param\x18} \x01(\x0b\x32\x17.caffe.SoftmaxParameter\x12\'\n\tspp_param\x18\x84\x01 \x01(\x0b\x32\x13.caffe.SPPParameter\x12*\n\x0bslice_param\x18~ \x01(\x0b\x32\x15.caffe.SliceParameter\x12(\n\ntanh_param\x18\x7f \x01(\x0b\x32\x14.caffe.TanHParameter\x12\x33\n\x0fthreshold_param\x18\x80\x01 \x01(\x0b\x32\x19.caffe.ThresholdParameter\x12)\n\ntile_param\x18\x8a\x01 \x01(\x0b\x32\x14.caffe.TileParameter\x12\x36\n\x11window_data_param\x18\x81\x01 \x01(\x0b\x32\x1a.caffe.WindowDataParameter\x12\x39\n\x12quantization_param\x18\xb4\x01 \x01(\x0b\x32\x1c.caffe.QuantizationParameter\"\xb6\x01\n\x17TransformationParameter\x12\x10\n\x05scale\x18\x01 \x01(\x02:\x01\x31\x12\x15\n\x06mirror\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x14\n\tcrop_size\x18\x03 \x01(\r:\x01\x30\x12\x11\n\tmean_file\x18\x04 \x01(\t\x12\x12\n\nmean_value\x18\x05 \x03(\x02\x12\x1a\n\x0b\x66orce_color\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x19\n\nforce_gray\x18\x07 \x01(\x08:\x05\x66\x61lse\"\xc2\x01\n\rLossParameter\x12\x14\n\x0cignore_label\x18\x01 \x01(\x05\x12\x44\n\rnormalization\x18\x03 \x01(\x0e\x32&.caffe.LossParameter.NormalizationMode:\x05VALID\x12\x11\n\tnormalize\x18\x02 \x01(\x08\"B\n\x11NormalizationMode\x12\x08\n\x04\x46ULL\x10\x00\x12\t\n\x05VALID\x10\x01\x12\x0e\n\nBATCH_SIZE\x10\x02\x12\x08\n\x04NONE\x10\x03\"L\n\x11\x41\x63\x63uracyParameter\x12\x10\n\x05top_k\x18\x01 \x01(\r:\x01\x31\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\x12\x14\n\x0cignore_label\x18\x03 \x01(\x05\"M\n\x0f\x41rgMaxParameter\x12\x1a\n\x0bout_max_val\x18\x01 \x01(\x08:\x05\x66\x61lse\x12\x10\n\x05top_k\x18\x02 \x01(\r:\x01\x31\x12\x0c\n\x04\x61xis\x18\x03 \x01(\x05\"9\n\x0f\x43oncatParameter\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\x12\x15\n\nconcat_dim\x18\x01 \x01(\r:\x01\x31\"j\n\x12\x42\x61tchNormParameter\x12\x18\n\x10use_global_stats\x18\x01 \x01(\x08\x12&\n\x17moving_average_fraction\x18\x02 \x01(\x02:\x05\x30.999\x12\x12\n\x03\x65ps\x18\x03 \x01(\x02:\x05\x31\x65-05\"]\n\rBiasParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x13\n\x08num_axes\x18\x02 \x01(\x05:\x01\x31\x12&\n\x06\x66iller\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\"L\n\x18\x43ontrastiveLossParameter\x12\x11\n\x06margin\x18\x01 \x01(\x02:\x01\x31\x12\x1d\n\x0elegacy_version\x18\x02 \x01(\x08:\x05\x66\x61lse\"\xfc\x03\n\x14\x43onvolutionParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x17\n\tbias_term\x18\x02 \x01(\x08:\x04true\x12\x0b\n\x03pad\x18\x03 \x03(\r\x12\x13\n\x0bkernel_size\x18\x04 \x03(\r\x12\x0e\n\x06stride\x18\x06 \x03(\r\x12\x10\n\x08\x64ilation\x18\x12 \x03(\r\x12\x10\n\x05pad_h\x18\t \x01(\r:\x01\x30\x12\x10\n\x05pad_w\x18\n \x01(\r:\x01\x30\x12\x10\n\x08kernel_h\x18\x0b \x01(\r\x12\x10\n\x08kernel_w\x18\x0c \x01(\r\x12\x10\n\x08stride_h\x18\r \x01(\r\x12\x10\n\x08stride_w\x18\x0e \x01(\r\x12\x10\n\x05group\x18\x05 \x01(\r:\x01\x31\x12-\n\rweight_filler\x18\x07 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x08 \x01(\x0b\x32\x16.caffe.FillerParameter\x12;\n\x06\x65ngine\x18\x0f \x01(\x0e\x32\".caffe.ConvolutionParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x0f\n\x04\x61xis\x18\x10 \x01(\x05:\x01\x31\x12\x1e\n\x0f\x66orce_nd_im2col\x18\x11 \x01(\x08:\x05\x66\x61lse\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"0\n\rCropParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x32\x12\x0e\n\x06offset\x18\x02 \x03(\r\"\xa4\x02\n\rDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x12\n\nbatch_size\x18\x04 \x01(\r\x12\x14\n\trand_skip\x18\x07 \x01(\r:\x01\x30\x12\x31\n\x07\x62\x61\x63kend\x18\x08 \x01(\x0e\x32\x17.caffe.DataParameter.DB:\x07LEVELDB\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\"\n\x13\x66orce_encoded_color\x18\t \x01(\x08:\x05\x66\x61lse\x12\x13\n\x08prefetch\x18\n \x01(\r:\x01\x34\"\x1b\n\x02\x44\x42\x12\x0b\n\x07LEVELDB\x10\x00\x12\x08\n\x04LMDB\x10\x01\".\n\x10\x44ropoutParameter\x12\x1a\n\rdropout_ratio\x18\x01 \x01(\x02:\x03\x30.5\"\xa0\x01\n\x12\x44ummyDataParameter\x12+\n\x0b\x64\x61ta_filler\x18\x01 \x03(\x0b\x32\x16.caffe.FillerParameter\x12\x1f\n\x05shape\x18\x06 \x03(\x0b\x32\x10.caffe.BlobShape\x12\x0b\n\x03num\x18\x02 \x03(\r\x12\x10\n\x08\x63hannels\x18\x03 \x03(\r\x12\x0e\n\x06height\x18\x04 \x03(\r\x12\r\n\x05width\x18\x05 \x03(\r\"\xa5\x01\n\x10\x45ltwiseParameter\x12\x39\n\toperation\x18\x01 \x01(\x0e\x32!.caffe.EltwiseParameter.EltwiseOp:\x03SUM\x12\r\n\x05\x63oeff\x18\x02 \x03(\x02\x12\x1e\n\x10stable_prod_grad\x18\x03 \x01(\x08:\x04true\"\'\n\tEltwiseOp\x12\x08\n\x04PROD\x10\x00\x12\x07\n\x03SUM\x10\x01\x12\x07\n\x03MAX\x10\x02\" \n\x0c\x45LUParameter\x12\x10\n\x05\x61lpha\x18\x01 \x01(\x02:\x01\x31\"\xac\x01\n\x0e\x45mbedParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x11\n\tinput_dim\x18\x02 \x01(\r\x12\x17\n\tbias_term\x18\x03 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x04 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter\"D\n\x0c\x45xpParameter\x12\x10\n\x04\x62\x61se\x18\x01 \x01(\x02:\x02-1\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30\"9\n\x10\x46lattenParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x14\n\x08\x65nd_axis\x18\x02 \x01(\x05:\x02-1\"O\n\x11HDF5DataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x12\n\nbatch_size\x18\x02 \x01(\r\x12\x16\n\x07shuffle\x18\x03 \x01(\x08:\x05\x66\x61lse\"(\n\x13HDF5OutputParameter\x12\x11\n\tfile_name\x18\x01 \x01(\t\"^\n\x12HingeLossParameter\x12\x30\n\x04norm\x18\x01 \x01(\x0e\x32\x1e.caffe.HingeLossParameter.Norm:\x02L1\"\x16\n\x04Norm\x12\x06\n\x02L1\x10\x01\x12\x06\n\x02L2\x10\x02\"\x97\x02\n\x12ImageDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x15\n\nbatch_size\x18\x04 \x01(\r:\x01\x31\x12\x14\n\trand_skip\x18\x07 \x01(\r:\x01\x30\x12\x16\n\x07shuffle\x18\x08 \x01(\x08:\x05\x66\x61lse\x12\x15\n\nnew_height\x18\t \x01(\r:\x01\x30\x12\x14\n\tnew_width\x18\n \x01(\r:\x01\x30\x12\x16\n\x08is_color\x18\x0b \x01(\x08:\x04true\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x15\n\x0broot_folder\x18\x0c \x01(\t:\x00\"8\n\x15InfogainLossParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\"\xcb\x01\n\x15InnerProductParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x17\n\tbias_term\x18\x02 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x04 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x0f\n\x04\x61xis\x18\x05 \x01(\x05:\x01\x31\x12\x18\n\ttranspose\x18\x06 \x01(\x08:\x05\x66\x61lse\"1\n\x0eInputParameter\x12\x1f\n\x05shape\x18\x01 \x03(\x0b\x32\x10.caffe.BlobShape\"D\n\x0cLogParameter\x12\x10\n\x04\x62\x61se\x18\x01 \x01(\x02:\x02-1\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30\"\xb8\x02\n\x0cLRNParameter\x12\x15\n\nlocal_size\x18\x01 \x01(\r:\x01\x35\x12\x10\n\x05\x61lpha\x18\x02 \x01(\x02:\x01\x31\x12\x12\n\x04\x62\x65ta\x18\x03 \x01(\x02:\x04\x30.75\x12\x44\n\x0bnorm_region\x18\x04 \x01(\x0e\x32\x1e.caffe.LRNParameter.NormRegion:\x0f\x41\x43ROSS_CHANNELS\x12\x0c\n\x01k\x18\x05 \x01(\x02:\x01\x31\x12\x33\n\x06\x65ngine\x18\x06 \x01(\x0e\x32\x1a.caffe.LRNParameter.Engine:\x07\x44\x45\x46\x41ULT\"5\n\nNormRegion\x12\x13\n\x0f\x41\x43ROSS_CHANNELS\x10\x00\x12\x12\n\x0eWITHIN_CHANNEL\x10\x01\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"Z\n\x13MemoryDataParameter\x12\x12\n\nbatch_size\x18\x01 \x01(\r\x12\x10\n\x08\x63hannels\x18\x02 \x01(\r\x12\x0e\n\x06height\x18\x03 \x01(\r\x12\r\n\x05width\x18\x04 \x01(\r\"d\n\x0cMVNParameter\x12 \n\x12normalize_variance\x18\x01 \x01(\x08:\x04true\x12\x1e\n\x0f\x61\x63ross_channels\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x12\n\x03\x65ps\x18\x03 \x01(\x02:\x05\x31\x65-09\"5\n\x12ParameterParameter\x12\x1f\n\x05shape\x18\x01 \x01(\x0b\x32\x10.caffe.BlobShape\"\xa2\x03\n\x10PoolingParameter\x12\x35\n\x04pool\x18\x01 \x01(\x0e\x32\".caffe.PoolingParameter.PoolMethod:\x03MAX\x12\x0e\n\x03pad\x18\x04 \x01(\r:\x01\x30\x12\x10\n\x05pad_h\x18\t \x01(\r:\x01\x30\x12\x10\n\x05pad_w\x18\n \x01(\r:\x01\x30\x12\x13\n\x0bkernel_size\x18\x02 \x01(\r\x12\x10\n\x08kernel_h\x18\x05 \x01(\r\x12\x10\n\x08kernel_w\x18\x06 \x01(\r\x12\x11\n\x06stride\x18\x03 \x01(\r:\x01\x31\x12\x10\n\x08stride_h\x18\x07 \x01(\r\x12\x10\n\x08stride_w\x18\x08 \x01(\r\x12\x37\n\x06\x65ngine\x18\x0b \x01(\x0e\x32\x1e.caffe.PoolingParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x1d\n\x0eglobal_pooling\x18\x0c \x01(\x08:\x05\x66\x61lse\".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"F\n\x0ePowerParameter\x12\x10\n\x05power\x18\x01 \x01(\x02:\x01\x31\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30\"g\n\x0fPythonParameter\x12\x0e\n\x06module\x18\x01 \x01(\t\x12\r\n\x05layer\x18\x02 \x01(\t\x12\x13\n\tparam_str\x18\x03 \x01(\t:\x00\x12 \n\x11share_in_parallel\x18\x04 \x01(\x08:\x05\x66\x61lse\"\xc0\x01\n\x12RecurrentParameter\x12\x15\n\nnum_output\x18\x01 \x01(\r:\x01\x30\x12-\n\rweight_filler\x18\x02 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x19\n\ndebug_info\x18\x04 \x01(\x08:\x05\x66\x61lse\x12\x1c\n\rexpose_hidden\x18\x05 \x01(\x08:\x05\x66\x61lse\"\xad\x01\n\x12ReductionParameter\x12=\n\toperation\x18\x01 \x01(\x0e\x32%.caffe.ReductionParameter.ReductionOp:\x03SUM\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x30\x12\x10\n\x05\x63oeff\x18\x03 \x01(\x02:\x01\x31\"5\n\x0bReductionOp\x12\x07\n\x03SUM\x10\x01\x12\x08\n\x04\x41SUM\x10\x02\x12\t\n\x05SUMSQ\x10\x03\x12\x08\n\x04MEAN\x10\x04\"\x8d\x01\n\rReLUParameter\x12\x19\n\x0enegative_slope\x18\x01 \x01(\x02:\x01\x30\x12\x34\n\x06\x65ngine\x18\x02 \x01(\x0e\x32\x1b.caffe.ReLUParameter.Engine:\x07\x44\x45\x46\x41ULT\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"Z\n\x10ReshapeParameter\x12\x1f\n\x05shape\x18\x01 \x01(\x0b\x32\x10.caffe.BlobShape\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x30\x12\x14\n\x08num_axes\x18\x03 \x01(\x05:\x02-1\"\xa5\x01\n\x0eScaleParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x13\n\x08num_axes\x18\x02 \x01(\x05:\x01\x31\x12&\n\x06\x66iller\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x18\n\tbias_term\x18\x04 \x01(\x08:\x05\x66\x61lse\x12+\n\x0b\x62ias_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter\"x\n\x10SigmoidParameter\x12\x37\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1e.caffe.SigmoidParameter.Engine:\x07\x44\x45\x46\x41ULT\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"L\n\x0eSliceParameter\x12\x0f\n\x04\x61xis\x18\x03 \x01(\x05:\x01\x31\x12\x13\n\x0bslice_point\x18\x02 \x03(\r\x12\x14\n\tslice_dim\x18\x01 \x01(\r:\x01\x31\"\x89\x01\n\x10SoftmaxParameter\x12\x37\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1e.caffe.SoftmaxParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"r\n\rTanHParameter\x12\x34\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1b.caffe.TanHParameter.Engine:\x07\x44\x45\x46\x41ULT\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"/\n\rTileParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\r\n\x05tiles\x18\x02 \x01(\x05\"*\n\x12ThresholdParameter\x12\x14\n\tthreshold\x18\x01 \x01(\x02:\x01\x30\"\xc1\x02\n\x13WindowDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x12\n\nbatch_size\x18\x04 \x01(\r\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x19\n\x0c\x66g_threshold\x18\x07 \x01(\x02:\x03\x30.5\x12\x19\n\x0c\x62g_threshold\x18\x08 \x01(\x02:\x03\x30.5\x12\x19\n\x0b\x66g_fraction\x18\t \x01(\x02:\x04\x30.25\x12\x16\n\x0b\x63ontext_pad\x18\n \x01(\r:\x01\x30\x12\x17\n\tcrop_mode\x18\x0b \x01(\t:\x04warp\x12\x1b\n\x0c\x63\x61\x63he_images\x18\x0c \x01(\x08:\x05\x66\x61lse\x12\x15\n\x0broot_folder\x18\r \x01(\t:\x00\"\xeb\x01\n\x0cSPPParameter\x12\x16\n\x0epyramid_height\x18\x01 \x01(\r\x12\x31\n\x04pool\x18\x02 \x01(\x0e\x32\x1e.caffe.SPPParameter.PoolMethod:\x03MAX\x12\x33\n\x06\x65ngine\x18\x06 \x01(\x0e\x32\x1a.caffe.SPPParameter.Engine:\x07\x44\x45\x46\x41ULT\".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"\xe0\x13\n\x10V1LayerParameter\x12\x0e\n\x06\x62ottom\x18\x02 \x03(\t\x12\x0b\n\x03top\x18\x03 \x03(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12$\n\x07include\x18  \x03(\x0b\x32\x13.caffe.NetStateRule\x12$\n\x07\x65xclude\x18! \x03(\x0b\x32\x13.caffe.NetStateRule\x12/\n\x04type\x18\x05 \x01(\x0e\x32!.caffe.V1LayerParameter.LayerType\x12\x1f\n\x05\x62lobs\x18\x06 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x0e\n\x05param\x18\xe9\x07 \x03(\t\x12>\n\x0f\x62lob_share_mode\x18\xea\x07 \x03(\x0e\x32$.caffe.V1LayerParameter.DimCheckMode\x12\x10\n\x08\x62lobs_lr\x18\x07 \x03(\x02\x12\x14\n\x0cweight_decay\x18\x08 \x03(\x02\x12\x13\n\x0bloss_weight\x18# \x03(\x02\x12\x30\n\x0e\x61\x63\x63uracy_param\x18\x1b \x01(\x0b\x32\x18.caffe.AccuracyParameter\x12,\n\x0c\x61rgmax_param\x18\x17 \x01(\x0b\x32\x16.caffe.ArgMaxParameter\x12,\n\x0c\x63oncat_param\x18\t \x01(\x0b\x32\x16.caffe.ConcatParameter\x12?\n\x16\x63ontrastive_loss_param\x18( \x01(\x0b\x32\x1f.caffe.ContrastiveLossParameter\x12\x36\n\x11\x63onvolution_param\x18\n \x01(\x0b\x32\x1b.caffe.ConvolutionParameter\x12(\n\ndata_param\x18\x0b \x01(\x0b\x32\x14.caffe.DataParameter\x12.\n\rdropout_param\x18\x0c \x01(\x0b\x32\x17.caffe.DropoutParameter\x12\x33\n\x10\x64ummy_data_param\x18\x1a \x01(\x0b\x32\x19.caffe.DummyDataParameter\x12.\n\reltwise_param\x18\x18 \x01(\x0b\x32\x17.caffe.EltwiseParameter\x12&\n\texp_param\x18) \x01(\x0b\x32\x13.caffe.ExpParameter\x12\x31\n\x0fhdf5_data_param\x18\r \x01(\x0b\x32\x18.caffe.HDF5DataParameter\x12\x35\n\x11hdf5_output_param\x18\x0e \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter\x12\x33\n\x10hinge_loss_param\x18\x1d \x01(\x0b\x32\x19.caffe.HingeLossParameter\x12\x33\n\x10image_data_param\x18\x0f \x01(\x0b\x32\x19.caffe.ImageDataParameter\x12\x39\n\x13infogain_loss_param\x18\x10 \x01(\x0b\x32\x1c.caffe.InfogainLossParameter\x12\x39\n\x13inner_product_param\x18\x11 \x01(\x0b\x32\x1c.caffe.InnerProductParameter\x12&\n\tlrn_param\x18\x12 \x01(\x0b\x32\x13.caffe.LRNParameter\x12\x35\n\x11memory_data_param\x18\x16 \x01(\x0b\x32\x1a.caffe.MemoryDataParameter\x12&\n\tmvn_param\x18\" \x01(\x0b\x32\x13.caffe.MVNParameter\x12.\n\rpooling_param\x18\x13 \x01(\x0b\x32\x17.caffe.PoolingParameter\x12*\n\x0bpower_param\x18\x15 \x01(\x0b\x32\x15.caffe.PowerParameter\x12(\n\nrelu_param\x18\x1e \x01(\x0b\x32\x14.caffe.ReLUParameter\x12.\n\rsigmoid_param\x18& \x01(\x0b\x32\x17.caffe.SigmoidParameter\x12.\n\rsoftmax_param\x18\' \x01(\x0b\x32\x17.caffe.SoftmaxParameter\x12*\n\x0bslice_param\x18\x1f \x01(\x0b\x32\x15.caffe.SliceParameter\x12(\n\ntanh_param\x18% \x01(\x0b\x32\x14.caffe.TanHParameter\x12\x32\n\x0fthreshold_param\x18\x19 \x01(\x0b\x32\x19.caffe.ThresholdParameter\x12\x35\n\x11window_data_param\x18\x14 \x01(\x0b\x32\x1a.caffe.WindowDataParameter\x12\x37\n\x0ftransform_param\x18$ \x01(\x0b\x32\x1e.caffe.TransformationParameter\x12(\n\nloss_param\x18* \x01(\x0b\x32\x14.caffe.LossParameter\x12&\n\x05layer\x18\x01 \x01(\x0b\x32\x17.caffe.V0LayerParameter\"\xd8\x04\n\tLayerType\x12\x08\n\x04NONE\x10\x00\x12\n\n\x06\x41\x42SVAL\x10#\x12\x0c\n\x08\x41\x43\x43URACY\x10\x01\x12\n\n\x06\x41RGMAX\x10\x1e\x12\x08\n\x04\x42NLL\x10\x02\x12\n\n\x06\x43ONCAT\x10\x03\x12\x14\n\x10\x43ONTRASTIVE_LOSS\x10%\x12\x0f\n\x0b\x43ONVOLUTION\x10\x04\x12\x08\n\x04\x44\x41TA\x10\x05\x12\x11\n\rDECONVOLUTION\x10\'\x12\x0b\n\x07\x44ROPOUT\x10\x06\x12\x0e\n\nDUMMY_DATA\x10 \x12\x12\n\x0e\x45UCLIDEAN_LOSS\x10\x07\x12\x0b\n\x07\x45LTWISE\x10\x19\x12\x07\n\x03\x45XP\x10&\x12\x0b\n\x07\x46LATTEN\x10\x08\x12\r\n\tHDF5_DATA\x10\t\x12\x0f\n\x0bHDF5_OUTPUT\x10\n\x12\x0e\n\nHINGE_LOSS\x10\x1c\x12\n\n\x06IM2COL\x10\x0b\x12\x0e\n\nIMAGE_DATA\x10\x0c\x12\x11\n\rINFOGAIN_LOSS\x10\r\x12\x11\n\rINNER_PRODUCT\x10\x0e\x12\x07\n\x03LRN\x10\x0f\x12\x0f\n\x0bMEMORY_DATA\x10\x1d\x12\x1d\n\x19MULTINOMIAL_LOGISTIC_LOSS\x10\x10\x12\x07\n\x03MVN\x10\"\x12\x0b\n\x07POOLING\x10\x11\x12\t\n\x05POWER\x10\x1a\x12\x08\n\x04RELU\x10\x12\x12\x0b\n\x07SIGMOID\x10\x13\x12\x1e\n\x1aSIGMOID_CROSS_ENTROPY_LOSS\x10\x1b\x12\x0b\n\x07SILENCE\x10$\x12\x0b\n\x07SOFTMAX\x10\x14\x12\x10\n\x0cSOFTMAX_LOSS\x10\x15\x12\t\n\x05SPLIT\x10\x16\x12\t\n\x05SLICE\x10!\x12\x08\n\x04TANH\x10\x17\x12\x0f\n\x0bWINDOW_DATA\x10\x18\x12\r\n\tTHRESHOLD\x10\x1f\"*\n\x0c\x44imCheckMode\x12\n\n\x06STRICT\x10\x00\x12\x0e\n\nPERMISSIVE\x10\x01\"\xfd\x07\n\x10V0LayerParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x12\n\nnum_output\x18\x03 \x01(\r\x12\x16\n\x08\x62iasterm\x18\x04 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x06 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x0e\n\x03pad\x18\x07 \x01(\r:\x01\x30\x12\x12\n\nkernelsize\x18\x08 \x01(\r\x12\x10\n\x05group\x18\t \x01(\r:\x01\x31\x12\x11\n\x06stride\x18\n \x01(\r:\x01\x31\x12\x35\n\x04pool\x18\x0b \x01(\x0e\x32\".caffe.V0LayerParameter.PoolMethod:\x03MAX\x12\x1a\n\rdropout_ratio\x18\x0c \x01(\x02:\x03\x30.5\x12\x15\n\nlocal_size\x18\r \x01(\r:\x01\x35\x12\x10\n\x05\x61lpha\x18\x0e \x01(\x02:\x01\x31\x12\x12\n\x04\x62\x65ta\x18\x0f \x01(\x02:\x04\x30.75\x12\x0c\n\x01k\x18\x16 \x01(\x02:\x01\x31\x12\x0e\n\x06source\x18\x10 \x01(\t\x12\x10\n\x05scale\x18\x11 \x01(\x02:\x01\x31\x12\x10\n\x08meanfile\x18\x12 \x01(\t\x12\x11\n\tbatchsize\x18\x13 \x01(\r\x12\x13\n\x08\x63ropsize\x18\x14 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x15 \x01(\x08:\x05\x66\x61lse\x12\x1f\n\x05\x62lobs\x18\x32 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x10\n\x08\x62lobs_lr\x18\x33 \x03(\x02\x12\x14\n\x0cweight_decay\x18\x34 \x03(\x02\x12\x14\n\trand_skip\x18\x35 \x01(\r:\x01\x30\x12\x1d\n\x10\x64\x65t_fg_threshold\x18\x36 \x01(\x02:\x03\x30.5\x12\x1d\n\x10\x64\x65t_bg_threshold\x18\x37 \x01(\x02:\x03\x30.5\x12\x1d\n\x0f\x64\x65t_fg_fraction\x18\x38 \x01(\x02:\x04\x30.25\x12\x1a\n\x0f\x64\x65t_context_pad\x18: \x01(\r:\x01\x30\x12\x1b\n\rdet_crop_mode\x18; \x01(\t:\x04warp\x12\x12\n\x07new_num\x18< \x01(\x05:\x01\x30\x12\x17\n\x0cnew_channels\x18= \x01(\x05:\x01\x30\x12\x15\n\nnew_height\x18> \x01(\x05:\x01\x30\x12\x14\n\tnew_width\x18? \x01(\x05:\x01\x30\x12\x1d\n\x0eshuffle_images\x18@ \x01(\x08:\x05\x66\x61lse\x12\x15\n\nconcat_dim\x18\x41 \x01(\r:\x01\x31\x12\x36\n\x11hdf5_output_param\x18\xe9\x07 \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter\".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02\"W\n\x0ePReLUParameter\x12&\n\x06\x66iller\x18\x01 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x1d\n\x0e\x63hannel_shared\x18\x02 \x01(\x08:\x05\x66\x61lse\"\xd3\x02\n\x15QuantizationParameter\x12\x45\n\x0cround_method\x18\x01 \x01(\x0e\x32(.caffe.QuantizationParameter.RoundMethod:\x05ROUND\x12P\n\x0eround_strategy\x18\x02 \x01(\x0e\x32*.caffe.QuantizationParameter.RoundStrategy:\x0c\x43ONSERVATIVE\x12\x14\n\tbit_width\x18\x03 \x01(\x05:\x01\x30\x12\x11\n\x05range\x18\x04 \x03(\x02\x42\x02\x10\x01\"8\n\x0bRoundMethod\x12\t\n\x05ROUND\x10\x00\x12\t\n\x05\x46LOOR\x10\x01\x12\x08\n\x04\x43\x45IL\x10\x02\x12\t\n\x05TRUNC\x10\x03\">\n\rRoundStrategy\x12\x10\n\x0c\x43ONSERVATIVE\x10\x00\x12\x0b\n\x07NEUTRAL\x10\x01\x12\x0e\n\nAGGRESSIVE\x10\x02*\x1c\n\x05Phase\x12\t\n\x05TRAIN\x10\x00\x12\x08\n\x04TEST\x10\x01')serialized_pb17,458
_PHASE = _descriptor.EnumDescriptor(_PHASE19,30030
  name='Phase',name20,30067
  full_name='caffe.Phase',full_name21,30083
  filename=None,filename22,30110
  file=DESCRIPTOR,file23,30127
  values=[values24,30146
      options=None,options27,30233
      type=None),type28,30253
      options=None,options31,30346
      type=None),type32,30366
  containing_type=None,containing_type34,30389
  options=None,options35,30413
  serialized_start=15804,serialized_start36,30429
  serialized_end=15832,serialized_end37,30455
Phase = enum_type_wrapper.EnumTypeWrapper(_PHASE)Phase40,30482
TRAIN = 0TRAIN41,30532
TEST = 1TEST42,30542
_FILLERPARAMETER_VARIANCENORM = _descriptor.EnumDescriptor(_FILLERPARAMETER_VARIANCENORM45,30553
  name='VarianceNorm',name46,30613
  full_name='caffe.FillerParameter.VarianceNorm',full_name47,30636
  filename=None,filename48,30686
  file=DESCRIPTOR,file49,30703
  values=[values50,30722
      options=None,options53,30810
      type=None),type54,30830
      options=None,options57,30926
      type=None),type58,30946
      options=None,options61,31042
      type=None),type62,31062
  containing_type=None,containing_type64,31085
  options=None,options65,31109
  serialized_start=658,serialized_start66,31125
  serialized_end=710,serialized_end67,31149
_SOLVERPARAMETER_SNAPSHOTFORMAT = _descriptor.EnumDescriptor(_SOLVERPARAMETER_SNAPSHOTFORMAT70,31174
  name='SnapshotFormat',name71,31236
  full_name='caffe.SolverParameter.SnapshotFormat',full_name72,31261
  filename=None,filename73,31313
  file=DESCRIPTOR,file74,31330
  values=[values75,31349
      options=None,options78,31435
      type=None),type79,31455
      options=None,options82,31555
      type=None),type83,31575
  containing_type=None,containing_type85,31598
  options=None,options86,31622
  serialized_start=2171,serialized_start87,31638
  serialized_end=2214,serialized_end88,31663
_SOLVERPARAMETER_SOLVERMODE = _descriptor.EnumDescriptor(_SOLVERPARAMETER_SOLVERMODE91,31689
  name='SolverMode',name92,31747
  full_name='caffe.SolverParameter.SolverMode',full_name93,31768
  filename=None,filename94,31816
  file=DESCRIPTOR,file95,31833
  values=[values96,31852
      options=None,options99,31937
      type=None),type100,31957
      options=None,options103,32049
      type=None),type104,32069
  containing_type=None,containing_type106,32092
  options=None,options107,32116
  serialized_start=2216,serialized_start108,32132
  serialized_end=2246,serialized_end109,32157
_SOLVERPARAMETER_SOLVERTYPE = _descriptor.EnumDescriptor(_SOLVERPARAMETER_SOLVERTYPE112,32183
  name='SolverType',name113,32241
  full_name='caffe.SolverParameter.SolverType',full_name114,32262
  filename=None,filename115,32310
  file=DESCRIPTOR,file116,32327
  values=[values117,32346
      options=None,options120,32431
      type=None),type121,32451
      options=None,options124,32548
      type=None),type125,32568
      options=None,options128,32664
      type=None),type129,32684
      options=None,options132,32780
      type=None),type133,32800
      options=None,options136,32897
      type=None),type137,32917
      options=None,options140,33010
      type=None),type141,33030
  containing_type=None,containing_type143,33053
  options=None,options144,33077
  serialized_start=2248,serialized_start145,33093
  serialized_end=2333,serialized_end146,33118
_PARAMSPEC_DIMCHECKMODE = _descriptor.EnumDescriptor(_PARAMSPEC_DIMCHECKMODE149,33144
  name='DimCheckMode',name150,33198
  full_name='caffe.ParamSpec.DimCheckMode',full_name151,33221
  filename=None,filename152,33265
  file=DESCRIPTOR,file153,33282
  values=[values154,33301
      options=None,options157,33389
      type=None),type158,33409
      options=None,options161,33508
      type=None),type162,33528
  containing_type=None,containing_type164,33551
  options=None,options165,33575
  serialized_start=2764,serialized_start166,33591
  serialized_end=2806,serialized_end167,33616
_LOSSPARAMETER_NORMALIZATIONMODE = _descriptor.EnumDescriptor(_LOSSPARAMETER_NORMALIZATIONMODE170,33642
  name='NormalizationMode',name171,33705
  full_name='caffe.LossParameter.NormalizationMode',full_name172,33733
  filename=None,filename173,33786
  file=DESCRIPTOR,file174,33803
  values=[values175,33822
      options=None,options178,33908
      type=None),type179,33928
      options=None,options182,34022
      type=None),type183,34042
      options=None,options186,34141
      type=None),type187,34161
      options=None,options190,34254
      type=None),type191,34274
  containing_type=None,containing_type193,34297
  options=None,options194,34321
  serialized_start=5746,serialized_start195,34337
  serialized_end=5812,serialized_end196,34362
_CONVOLUTIONPARAMETER_ENGINE = _descriptor.EnumDescriptor(_CONVOLUTIONPARAMETER_ENGINE199,34388
  name='Engine',name200,34447
  full_name='caffe.ConvolutionParameter.Engine',full_name201,34464
  filename=None,filename202,34513
  file=DESCRIPTOR,file203,34530
  values=[values204,34549
      options=None,options207,34638
      type=None),type208,34658
      options=None,options211,34752
      type=None),type212,34772
      options=None,options215,34866
      type=None),type216,34886
  containing_type=None,containing_type218,34909
  options=None,options219,34933
  serialized_start=6777,serialized_start220,34949
  serialized_end=6820,serialized_end221,34974
_DATAPARAMETER_DB = _descriptor.EnumDescriptor(_DATAPARAMETER_DB224,35000
  name='DB',name225,35048
  full_name='caffe.DataParameter.DB',full_name226,35061
  filename=None,filename227,35099
  file=DESCRIPTOR,file228,35116
  values=[values229,35135
      options=None,options232,35224
      type=None),type233,35244
      options=None,options236,35337
      type=None),type237,35357
  containing_type=None,containing_type239,35380
  options=None,options240,35404
  serialized_start=7138,serialized_start241,35420
  serialized_end=7165,serialized_end242,35445
_ELTWISEPARAMETER_ELTWISEOP = _descriptor.EnumDescriptor(_ELTWISEPARAMETER_ELTWISEOP245,35471
  name='EltwiseOp',name246,35529
  full_name='caffe.EltwiseParameter.EltwiseOp',full_name247,35549
  filename=None,filename248,35597
  file=DESCRIPTOR,file249,35614
  values=[values250,35633
      options=None,options253,35719
      type=None),type254,35739
      options=None,options257,35831
      type=None),type258,35851
      options=None,options261,35943
      type=None),type262,35963
  containing_type=None,containing_type264,35986
  options=None,options265,36010
  serialized_start=7505,serialized_start266,36026
  serialized_end=7544,serialized_end267,36051
_HINGELOSSPARAMETER_NORM = _descriptor.EnumDescriptor(_HINGELOSSPARAMETER_NORM270,36077
  name='Norm',name271,36132
  full_name='caffe.HingeLossParameter.Norm',full_name272,36147
  filename=None,filename273,36192
  file=DESCRIPTOR,file274,36209
  values=[values275,36228
      options=None,options278,36312
      type=None),type279,36332
      options=None,options282,36423
      type=None),type283,36443
  containing_type=None,containing_type285,36466
  options=None,options286,36490
  serialized_start=8079,serialized_start287,36506
  serialized_end=8101,serialized_end288,36531
_LRNPARAMETER_NORMREGION = _descriptor.EnumDescriptor(_LRNPARAMETER_NORMREGION291,36557
  name='NormRegion',name292,36612
  full_name='caffe.LRNParameter.NormRegion',full_name293,36633
  filename=None,filename294,36678
  file=DESCRIPTOR,file295,36695
  values=[values296,36714
      options=None,options299,36811
      type=None),type300,36831
      options=None,options303,36934
      type=None),type304,36954
  containing_type=None,containing_type306,36977
  options=None,options307,37001
  serialized_start=8985,serialized_start308,37017
  serialized_end=9038,serialized_end309,37042
_LRNPARAMETER_ENGINE = _descriptor.EnumDescriptor(_LRNPARAMETER_ENGINE312,37068
  name='Engine',name313,37119
  full_name='caffe.LRNParameter.Engine',full_name314,37136
  filename=None,filename315,37177
  file=DESCRIPTOR,file316,37194
  values=[values317,37213
      options=None,options320,37302
      type=None),type321,37322
      options=None,options324,37416
      type=None),type325,37436
      options=None,options328,37530
      type=None),type329,37550
  containing_type=None,containing_type331,37573
  options=None,options332,37597
  serialized_start=6777,serialized_start333,37613
  serialized_end=6820,serialized_end334,37638
_POOLINGPARAMETER_POOLMETHOD = _descriptor.EnumDescriptor(_POOLINGPARAMETER_POOLMETHOD337,37664
  name='PoolMethod',name338,37723
  full_name='caffe.PoolingParameter.PoolMethod',full_name339,37744
  filename=None,filename340,37793
  file=DESCRIPTOR,file341,37810
  values=[values342,37829
      options=None,options345,37914
      type=None),type346,37934
      options=None,options349,38026
      type=None),type350,38046
      options=None,options353,38145
      type=None),type354,38165
  containing_type=None,containing_type356,38188
  options=None,options357,38212
  serialized_start=9662,serialized_start358,38228
  serialized_end=9708,serialized_end359,38253
_POOLINGPARAMETER_ENGINE = _descriptor.EnumDescriptor(_POOLINGPARAMETER_ENGINE362,38279
  name='Engine',name363,38334
  full_name='caffe.PoolingParameter.Engine',full_name364,38351
  filename=None,filename365,38396
  file=DESCRIPTOR,file366,38413
  values=[values367,38432
      options=None,options370,38521
      type=None),type371,38541
      options=None,options374,38635
      type=None),type375,38655
      options=None,options378,38749
      type=None),type379,38769
  containing_type=None,containing_type381,38792
  options=None,options382,38816
  serialized_start=6777,serialized_start383,38832
  serialized_end=6820,serialized_end384,38857
_REDUCTIONPARAMETER_REDUCTIONOP = _descriptor.EnumDescriptor(_REDUCTIONPARAMETER_REDUCTIONOP387,38883
  name='ReductionOp',name388,38945
  full_name='caffe.ReductionParameter.ReductionOp',full_name389,38967
  filename=None,filename390,39019
  file=DESCRIPTOR,file391,39036
  values=[values392,39055
      options=None,options395,39140
      type=None),type396,39160
      options=None,options399,39253
      type=None),type400,39273
      options=None,options403,39367
      type=None),type404,39387
      options=None,options407,39480
      type=None),type408,39500
  containing_type=None,containing_type410,39523
  options=None,options411,39547
  serialized_start=10248,serialized_start412,39563
  serialized_end=10301,serialized_end413,39589
_RELUPARAMETER_ENGINE = _descriptor.EnumDescriptor(_RELUPARAMETER_ENGINE416,39616
  name='Engine',name417,39668
  full_name='caffe.ReLUParameter.Engine',full_name418,39685
  filename=None,filename419,39727
  file=DESCRIPTOR,file420,39744
  values=[values421,39763
      options=None,options424,39852
      type=None),type425,39872
      options=None,options428,39966
      type=None),type429,39986
      options=None,options432,40080
      type=None),type433,40100
  containing_type=None,containing_type435,40123
  options=None,options436,40147
  serialized_start=6777,serialized_start437,40163
  serialized_end=6820,serialized_end438,40188
_SIGMOIDPARAMETER_ENGINE = _descriptor.EnumDescriptor(_SIGMOIDPARAMETER_ENGINE441,40214
  name='Engine',name442,40269
  full_name='caffe.SigmoidParameter.Engine',full_name443,40286
  filename=None,filename444,40331
  file=DESCRIPTOR,file445,40348
  values=[values446,40367
      options=None,options449,40456
      type=None),type450,40476
      options=None,options453,40570
      type=None),type454,40590
      options=None,options457,40684
      type=None),type458,40704
  containing_type=None,containing_type460,40727
  options=None,options461,40751
  serialized_start=6777,serialized_start462,40767
  serialized_end=6820,serialized_end463,40792
_SOFTMAXPARAMETER_ENGINE = _descriptor.EnumDescriptor(_SOFTMAXPARAMETER_ENGINE466,40818
  name='Engine',name467,40873
  full_name='caffe.SoftmaxParameter.Engine',full_name468,40890
  filename=None,filename469,40935
  file=DESCRIPTOR,file470,40952
  values=[values471,40971
      options=None,options474,41060
      type=None),type475,41080
      options=None,options478,41174
      type=None),type479,41194
      options=None,options482,41288
      type=None),type483,41308
  containing_type=None,containing_type485,41331
  options=None,options486,41355
  serialized_start=6777,serialized_start487,41371
  serialized_end=6820,serialized_end488,41396
_TANHPARAMETER_ENGINE = _descriptor.EnumDescriptor(_TANHPARAMETER_ENGINE491,41422
  name='Engine',name492,41474
  full_name='caffe.TanHParameter.Engine',full_name493,41491
  filename=None,filename494,41533
  file=DESCRIPTOR,file495,41550
  values=[values496,41569
      options=None,options499,41658
      type=None),type500,41678
      options=None,options503,41772
      type=None),type504,41792
      options=None,options507,41886
      type=None),type508,41906
  containing_type=None,containing_type510,41929
  options=None,options511,41953
  serialized_start=6777,serialized_start512,41969
  serialized_end=6820,serialized_end513,41994
_SPPPARAMETER_POOLMETHOD = _descriptor.EnumDescriptor(_SPPPARAMETER_POOLMETHOD516,42020
  name='PoolMethod',name517,42075
  full_name='caffe.SPPParameter.PoolMethod',full_name518,42096
  filename=None,filename519,42141
  file=DESCRIPTOR,file520,42158
  values=[values521,42177
      options=None,options524,42262
      type=None),type525,42282
      options=None,options528,42374
      type=None),type529,42394
      options=None,options532,42493
      type=None),type533,42513
  containing_type=None,containing_type535,42536
  options=None,options536,42560
  serialized_start=9662,serialized_start537,42576
  serialized_end=9708,serialized_end538,42601
_SPPPARAMETER_ENGINE = _descriptor.EnumDescriptor(_SPPPARAMETER_ENGINE541,42627
  name='Engine',name542,42678
  full_name='caffe.SPPParameter.Engine',full_name543,42695
  filename=None,filename544,42736
  file=DESCRIPTOR,file545,42753
  values=[values546,42772
      options=None,options549,42861
      type=None),type550,42881
      options=None,options553,42975
      type=None),type554,42995
      options=None,options557,43089
      type=None),type558,43109
  containing_type=None,containing_type560,43132
  options=None,options561,43156
  serialized_start=6777,serialized_start562,43172
  serialized_end=6820,serialized_end563,43197
_V1LAYERPARAMETER_LAYERTYPE = _descriptor.EnumDescriptor(_V1LAYERPARAMETER_LAYERTYPE566,43223
  name='LayerType',name567,43281
  full_name='caffe.V1LayerParameter.LayerType',full_name568,43301
  filename=None,filename569,43349
  file=DESCRIPTOR,file570,43366
  values=[values571,43385
      options=None,options574,43471
      type=None),type575,43491
      options=None,options578,43587
      type=None),type579,43607
      options=None,options582,43704
      type=None),type583,43724
      options=None,options586,43820
      type=None),type587,43840
      options=None,options590,43933
      type=None),type591,43953
      options=None,options594,44048
      type=None),type595,44068
      options=None,options598,44174
      type=None),type599,44194
      options=None,options602,44294
      type=None),type603,44314
      options=None,options606,44407
      type=None),type607,44427
      options=None,options610,44530
      type=None),type611,44550
      options=None,options614,44647
      type=None),type615,44667
      options=None,options618,44768
      type=None),type619,44788
      options=None,options622,44892
      type=None),type623,44912
      options=None,options626,45010
      type=None),type627,45030
      options=None,options630,45124
      type=None),type631,45144
      options=None,options634,45241
      type=None),type635,45261
      options=None,options638,45360
      type=None),type639,45380
      options=None,options642,45482
      type=None),type643,45502
      options=None,options646,45603
      type=None),type647,45623
      options=None,options650,45720
      type=None),type651,45740
      options=None,options654,45841
      type=None),type655,45861
      options=None,options658,45965
      type=None),type659,45985
      options=None,options662,46089
      type=None),type663,46109
      options=None,options666,46203
      type=None),type667,46223
      options=None,options670,46325
      type=None),type671,46345
      options=None,options674,46461
      type=None),type675,46481
      options=None,options678,46575
      type=None),type679,46595
      options=None,options682,46693
      type=None),type683,46713
      options=None,options686,46809
      type=None),type687,46829
      options=None,options690,46924
      type=None),type691,46944
      options=None,options694,47042
      type=None),type695,47062
      options=None,options698,47179
      type=None),type699,47199
      options=None,options702,47297
      type=None),type703,47317
      options=None,options706,47415
      type=None),type707,47435
      options=None,options710,47538
      type=None),type711,47558
      options=None,options714,47654
      type=None),type715,47674
      options=None,options718,47770
      type=None),type719,47790
      options=None,options722,47885
      type=None),type723,47905
      options=None,options726,48007
      type=None),type727,48027
      options=None,options730,48127
      type=None),type731,48147
  containing_type=None,containing_type733,48170
  options=None,options734,48194
  serialized_start=13703,serialized_start735,48210
  serialized_end=14303,serialized_end736,48236
_V1LAYERPARAMETER_DIMCHECKMODE = _descriptor.EnumDescriptor(_V1LAYERPARAMETER_DIMCHECKMODE739,48263
  name='DimCheckMode',name740,48324
  full_name='caffe.V1LayerParameter.DimCheckMode',full_name741,48347
  filename=None,filename742,48398
  file=DESCRIPTOR,file743,48415
  values=[values744,48434
      options=None,options747,48522
      type=None),type748,48542
      options=None,options751,48641
      type=None),type752,48661
  containing_type=None,containing_type754,48684
  options=None,options755,48708
  serialized_start=2764,serialized_start756,48724
  serialized_end=2806,serialized_end757,48749
_V0LAYERPARAMETER_POOLMETHOD = _descriptor.EnumDescriptor(_V0LAYERPARAMETER_POOLMETHOD760,48775
  name='PoolMethod',name761,48834
  full_name='caffe.V0LayerParameter.PoolMethod',full_name762,48855
  filename=None,filename763,48904
  file=DESCRIPTOR,file764,48921
  values=[values765,48940
      options=None,options768,49025
      type=None),type769,49045
      options=None,options772,49137
      type=None),type773,49157
      options=None,options776,49256
      type=None),type777,49276
  containing_type=None,containing_type779,49299
  options=None,options780,49323
  serialized_start=9662,serialized_start781,49339
  serialized_end=9708,serialized_end782,49364
_QUANTIZATIONPARAMETER_ROUNDMETHOD = _descriptor.EnumDescriptor(_QUANTIZATIONPARAMETER_ROUNDMETHOD785,49390
  name='RoundMethod',name786,49455
  full_name='caffe.QuantizationParameter.RoundMethod',full_name787,49477
  filename=None,filename788,49532
  file=DESCRIPTOR,file789,49549
  values=[values790,49568
      options=None,options793,49655
      type=None),type794,49675
      options=None,options797,49769
      type=None),type798,49789
      options=None,options801,49882
      type=None),type802,49902
      options=None,options805,49996
      type=None),type806,50016
  containing_type=None,containing_type808,50039
  options=None,options809,50063
  serialized_start=15682,serialized_start810,50079
  serialized_end=15738,serialized_end811,50105
_QUANTIZATIONPARAMETER_ROUNDSTRATEGY = _descriptor.EnumDescriptor(_QUANTIZATIONPARAMETER_ROUNDSTRATEGY814,50132
  name='RoundStrategy',name815,50199
  full_name='caffe.QuantizationParameter.RoundStrategy',full_name816,50223
  filename=None,filename817,50280
  file=DESCRIPTOR,file818,50297
  values=[values819,50316
      options=None,options822,50410
      type=None),type823,50430
      options=None,options826,50526
      type=None),type827,50546
      options=None,options830,50645
      type=None),type831,50665
  containing_type=None,containing_type833,50688
  options=None,options834,50712
  serialized_start=15740,serialized_start835,50728
  serialized_end=15802,serialized_end836,50754
_BLOBSHAPE = _descriptor.Descriptor(_BLOBSHAPE840,50782
  name='BlobShape',name841,50819
  full_name='caffe.BlobShape',full_name842,50839
  filename=None,filename843,50870
  file=DESCRIPTOR,file844,50887
  containing_type=None,containing_type845,50906
  fields=[fields846,50930
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\020\001')),options853,51239
  extensions=[extensions855,51329
  nested_types=[],nested_types857,51349
  enum_types=[enum_types858,51368
  options=None,options860,51388
  is_extendable=False,is_extendable861,51404
  extension_ranges=[],extension_ranges862,51427
  serialized_start=22,serialized_start863,51450
  serialized_end=50,serialized_end864,51473
_BLOBPROTO = _descriptor.Descriptor(_BLOBPROTO868,51498
  name='BlobProto',name869,51535
  full_name='caffe.BlobProto',full_name870,51555
  filename=None,filename871,51586
  file=DESCRIPTOR,file872,51603
  containing_type=None,containing_type873,51622
  fields=[fields874,51646
      options=None),options881,51963
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\020\001')),options888,52284
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\020\001')),options895,52669
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\020\001')),options902,53068
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\020\001')),options909,53467
      options=None),options916,53848
      options=None),options923,54175
      options=None),options930,54498
      options=None),options937,54819
  extensions=[extensions939,54845
  nested_types=[],nested_types941,54865
  enum_types=[enum_types942,54884
  options=None,options944,54904
  is_extendable=False,is_extendable945,54920
  extension_ranges=[],extension_ranges946,54943
  serialized_start=53,serialized_start947,54966
  serialized_end=257,serialized_end948,54989
_BLOBPROTOVECTOR = _descriptor.Descriptor(_BLOBPROTOVECTOR952,55015
  name='BlobProtoVector',name953,55058
  full_name='caffe.BlobProtoVector',full_name954,55084
  filename=None,filename955,55121
  file=DESCRIPTOR,file956,55138
  containing_type=None,containing_type957,55157
  fields=[fields958,55181
      options=None),options965,55502
  extensions=[extensions967,55528
  nested_types=[],nested_types969,55548
  enum_types=[enum_types970,55567
  options=None,options972,55587
  is_extendable=False,is_extendable973,55603
  extension_ranges=[],extension_ranges974,55626
  serialized_start=259,serialized_start975,55649
  serialized_end=309,serialized_end976,55673
_DATUM = _descriptor.Descriptor(_DATUM980,55699
  name='Datum',name981,55732
  full_name='caffe.Datum',full_name982,55748
  filename=None,filename983,55775
  file=DESCRIPTOR,file984,55792
  containing_type=None,containing_type985,55811
  fields=[fields986,55835
      options=None),options993,56149
      options=None),options1000,56469
      options=None),options1007,56787
      options=None),options1014,57105
      options=None),options1021,57423
      options=None),options1028,57752
      options=None),options1035,58077
  extensions=[extensions1037,58103
  nested_types=[],nested_types1039,58123
  enum_types=[enum_types1040,58142
  options=None,options1042,58162
  is_extendable=False,is_extendable1043,58178
  extension_ranges=[],extension_ranges1044,58201
  serialized_start=312,serialized_start1045,58224
  serialized_end=441,serialized_end1046,58248
_FILLERPARAMETER = _descriptor.Descriptor(_FILLERPARAMETER1050,58274
  name='FillerParameter',name1051,58317
  full_name='caffe.FillerParameter',full_name1052,58343
  filename=None,filename1053,58380
  file=DESCRIPTOR,file1054,58397
  containing_type=None,containing_type1055,58416
  fields=[fields1056,58440
      options=None),options1063,58782
      options=None),options1070,59109
      options=None),options1077,59432
      options=None),options1084,59755
      options=None),options1091,60080
      options=None),options1098,60403
      options=None),options1105,60733
      options=None),options1112,61077
  extensions=[extensions1114,61103
  nested_types=[],nested_types1116,61123
  enum_types=[enum_types1117,61142
  options=None,options1120,61197
  is_extendable=False,is_extendable1121,61213
  extension_ranges=[],extension_ranges1122,61236
  serialized_start=444,serialized_start1123,61259
  serialized_end=710,serialized_end1124,61283
_NETPARAMETER = _descriptor.Descriptor(_NETPARAMETER1128,61309
  name='NetParameter',name1129,61349
  full_name='caffe.NetParameter',full_name1130,61372
  filename=None,filename1131,61406
  file=DESCRIPTOR,file1132,61423
  containing_type=None,containing_type1133,61442
  fields=[fields1134,61466
      options=None),options1141,61798
      options=None),options1148,62124
      options=None),options1155,62464
      options=None),options1162,62798
      options=None),options1169,63144
      options=None),options1176,63474
      options=None),options1183,63812
      options=None),options1190,64142
      options=None),options1197,64472
  extensions=[extensions1199,64498
  nested_types=[],nested_types1201,64518
  enum_types=[enum_types1202,64537
  options=None,options1204,64557
  is_extendable=False,is_extendable1205,64573
  extension_ranges=[],extension_ranges1206,64596
  serialized_start=713,serialized_start1207,64619
  serialized_end=983,serialized_end1208,64643
_SOLVERPARAMETER = _descriptor.Descriptor(_SOLVERPARAMETER1212,64669
  name='SolverParameter',name1213,64712
  full_name='caffe.SolverParameter',full_name1214,64738
  filename=None,filename1215,64775
  file=DESCRIPTOR,file1216,64792
  containing_type=None,containing_type1217,64811
  fields=[fields1218,64835
      options=None),options1225,65169
      options=None),options1232,65511
      options=None),options1239,65866
      options=None),options1246,66201
      options=None),options1253,66555
      options=None),options1260,66905
      options=None),options1267,67251
      options=None),options1274,67593
      options=None),options1281,67930
      options=None),options1288,68273
      options=None),options1295,68630
      options=None),options1302,68990
      options=None),options1309,69323
      options=None),options1316,69656
      options=None),options1323,69999
      options=None),options1330,70334
      options=None),options1337,70671
      options=None),options1344,71027
      options=None),options1351,71356
      options=None),options1358,71686
      options=None),options1365,72022
      options=None),options1372,72366
      options=None),options1379,72744
      options=None),options1386,73080
      options=None),options1393,73419
      options=None),options1400,73767
      options=None),options1407,74102
      options=None),options1414,74471
      options=None),options1421,74820
      options=None),options1428,75170
      options=None),options1435,75512
      options=None),options1442,75849
      options=None),options1449,76191
      options=None),options1456,76540
      options=None),options1463,76873
      options=None),options1470,77214
      options=None),options1477,77554
      options=None),options1484,77897
      options=None),options1491,78259
      options=None),options1498,78601
      options=None),options1505,78957
  extensions=[extensions1507,78983
  nested_types=[],nested_types1509,79003
  enum_types=[enum_types1510,79022
  options=None,options1515,79145
  is_extendable=False,is_extendable1516,79161
  extension_ranges=[],extension_ranges1517,79184
  serialized_start=986,serialized_start1518,79207
  serialized_end=2333,serialized_end1519,79231
_SOLVERSTATE = _descriptor.Descriptor(_SOLVERSTATE1523,79258
  name='SolverState',name1524,79297
  full_name='caffe.SolverState',full_name1525,79319
  filename=None,filename1526,79352
  file=DESCRIPTOR,file1527,79369
  containing_type=None,containing_type1528,79388
  fields=[fields1529,79412
      options=None),options1536,79724
      options=None),options1543,80079
      options=None),options1550,80410
      options=None),options1557,80747
  extensions=[extensions1559,80773
  nested_types=[],nested_types1561,80793
  enum_types=[enum_types1562,80812
  options=None,options1564,80832
  is_extendable=False,is_extendable1565,80848
  extension_ranges=[],extension_ranges1566,80871
  serialized_start=2335,serialized_start1567,80894
  serialized_end=2443,serialized_end1568,80919
_NETSTATE = _descriptor.Descriptor(_NETSTATE1572,80946
  name='NetState',name1573,80982
  full_name='caffe.NetState',full_name1574,81001
  filename=None,filename1575,81031
  file=DESCRIPTOR,file1576,81048
  containing_type=None,containing_type1577,81067
  fields=[fields1578,81091
      options=None),options1585,81402
      options=None),options1592,81722
      options=None),options1599,82044
  extensions=[extensions1601,82070
  nested_types=[],nested_types1603,82090
  enum_types=[enum_types1604,82109
  options=None,options1606,82129
  is_extendable=False,is_extendable1607,82145
  extension_ranges=[],extension_ranges1608,82168
  serialized_start=2445,serialized_start1609,82191
  serialized_end=2523,serialized_end1610,82216
_NETSTATERULE = _descriptor.Descriptor(_NETSTATERULE1614,82243
  name='NetStateRule',name1615,82283
  full_name='caffe.NetStateRule',full_name1616,82306
  filename=None,filename1617,82340
  file=DESCRIPTOR,file1618,82357
  containing_type=None,containing_type1619,82376
  fields=[fields1620,82400
      options=None),options1627,82716
      options=None),options1634,83049
      options=None),options1641,83382
      options=None),options1648,83708
      options=None),options1655,84042
  extensions=[extensions1657,84068
  nested_types=[],nested_types1659,84088
  enum_types=[enum_types1660,84107
  options=None,options1662,84127
  is_extendable=False,is_extendable1663,84143
  extension_ranges=[],extension_ranges1664,84166
  serialized_start=2525,serialized_start1665,84189
  serialized_end=2640,serialized_end1666,84214
_PARAMSPEC = _descriptor.Descriptor(_PARAMSPEC1670,84241
  name='ParamSpec',name1671,84278
  full_name='caffe.ParamSpec',full_name1672,84298
  filename=None,filename1673,84329
  file=DESCRIPTOR,file1674,84346
  containing_type=None,containing_type1675,84365
  fields=[fields1676,84389
      options=None),options1683,84718
      options=None),options1690,85051
      options=None),options1697,85376
      options=None),options1704,85707
  extensions=[extensions1706,85733
  nested_types=[],nested_types1708,85753
  enum_types=[enum_types1709,85772
  options=None,options1712,85821
  is_extendable=False,is_extendable1713,85837
  extension_ranges=[],extension_ranges1714,85860
  serialized_start=2643,serialized_start1715,85883
  serialized_end=2806,serialized_end1716,85908
_LAYERPARAMETER = _descriptor.Descriptor(_LAYERPARAMETER1720,85935
  name='LayerParameter',name1721,85977
  full_name='caffe.LayerParameter',full_name1722,86002
  filename=None,filename1723,86038
  file=DESCRIPTOR,file1724,86055
  containing_type=None,containing_type1725,86074
  fields=[fields1726,86098
      options=None),options1733,86432
      options=None),options1740,86776
      options=None),options1747,87106
      options=None),options1754,87430
      options=None),options1761,87759
      options=None),options1768,88099
      options=None),options1775,88429
      options=None),options1782,88759
      options=None),options1789,89106
      options=None),options1796,89440
      options=None),options1803,89775
      options=None),options1810,90130
      options=None),options1817,90475
      options=None),options1824,90828
      options=None),options1831,91177
      options=None),options1838,91534
      options=None),options1845,91879
      options=None),options1852,92228
      options=None),options1859,92597
      options=None),options1866,92956
      options=None),options1873,93301
      options=None),options1880,93646
      options=None),options1887,93997
      options=None),options1894,94354
      options=None),options1901,94705
      options=None),options1908,95048
      options=None),options1915,95395
      options=None),options1922,95738
      options=None),options1929,96089
      options=None),options1936,96444
      options=None),options1943,96803
      options=None),options1950,97160
      options=None),options1957,97517
      options=None),options1964,97880
      options=None),options1971,98243
      options=None),options1978,98590
      options=None),options1985,98933
      options=None),options1992,99276
      options=None),options1999,99635
      options=None),options2006,99978
      options=None),options2013,100333
      options=None),options2020,100684
      options=None),options2027,101031
      options=None),options2034,101378
      options=None),options2041,101727
      options=None),options2048,102082
      options=None),options2055,102437
      options=None),options2062,102782
      options=None),options2069,103133
      options=None),options2076,103480
      options=None),options2083,103831
      options=None),options2090,104182
      options=None),options2097,104525
      options=None),options2104,104872
      options=None),options2111,105217
      options=None),options2118,105572
      options=None),options2125,105917
      options=None),options2132,106276
      options=None),options2139,106637
  extensions=[extensions2141,106663
  nested_types=[],nested_types2143,106683
  enum_types=[enum_types2144,106702
  options=None,options2146,106722
  is_extendable=False,is_extendable2147,106738
  extension_ranges=[],extension_ranges2148,106761
  serialized_start=2809,serialized_start2149,106784
  serialized_end=5430,serialized_end2150,106809
_TRANSFORMATIONPARAMETER = _descriptor.Descriptor(_TRANSFORMATIONPARAMETER2154,106836
  name='TransformationParameter',name2155,106887
  full_name='caffe.TransformationParameter',full_name2156,106921
  filename=None,filename2157,106966
  file=DESCRIPTOR,file2158,106983
  containing_type=None,containing_type2159,107002
  fields=[fields2160,107026
      options=None),options2167,107351
      options=None),options2174,107692
      options=None),options2181,108036
      options=None),options2188,108399
      options=None),options2195,108746
      options=None),options2202,109097
      options=None),options2209,109446
  extensions=[extensions2211,109472
  nested_types=[],nested_types2213,109492
  enum_types=[enum_types2214,109511
  options=None,options2216,109531
  is_extendable=False,is_extendable2217,109547
  extension_ranges=[],extension_ranges2218,109570
  serialized_start=5433,serialized_start2219,109593
  serialized_end=5615,serialized_end2220,109618
_LOSSPARAMETER = _descriptor.Descriptor(_LOSSPARAMETER2224,109645
  name='LossParameter',name2225,109686
  full_name='caffe.LossParameter',full_name2226,109710
  filename=None,filename2227,109745
  file=DESCRIPTOR,file2228,109762
  containing_type=None,containing_type2229,109781
  fields=[fields2230,109805
      options=None),options2237,110135
      options=None),options2244,110477
      options=None),options2251,110815
  extensions=[extensions2253,110841
  nested_types=[],nested_types2255,110861
  enum_types=[enum_types2256,110880
  options=None,options2259,110938
  is_extendable=False,is_extendable2260,110954
  extension_ranges=[],extension_ranges2261,110977
  serialized_start=5618,serialized_start2262,111000
  serialized_end=5812,serialized_end2263,111025
_ACCURACYPARAMETER = _descriptor.Descriptor(_ACCURACYPARAMETER2267,111052
  name='AccuracyParameter',name2268,111097
  full_name='caffe.AccuracyParameter',full_name2269,111125
  filename=None,filename2270,111164
  file=DESCRIPTOR,file2271,111181
  containing_type=None,containing_type2272,111200
  fields=[fields2273,111224
      options=None),options2280,111544
      options=None),options2287,111871
      options=None),options2294,112215
  extensions=[extensions2296,112241
  nested_types=[],nested_types2298,112261
  enum_types=[enum_types2299,112280
  options=None,options2301,112300
  is_extendable=False,is_extendable2302,112316
  extension_ranges=[],extension_ranges2303,112339
  serialized_start=5814,serialized_start2304,112362
  serialized_end=5890,serialized_end2305,112387
_ARGMAXPARAMETER = _descriptor.Descriptor(_ARGMAXPARAMETER2309,112414
  name='ArgMaxParameter',name2310,112457
  full_name='caffe.ArgMaxParameter',full_name2311,112483
  filename=None,filename2312,112520
  file=DESCRIPTOR,file2313,112537
  containing_type=None,containing_type2314,112556
  fields=[fields2315,112580
      options=None),options2322,112913
      options=None),options2329,113241
      options=None),options2336,113567
  extensions=[extensions2338,113593
  nested_types=[],nested_types2340,113613
  enum_types=[enum_types2341,113632
  options=None,options2343,113652
  is_extendable=False,is_extendable2344,113668
  extension_ranges=[],extension_ranges2345,113691
  serialized_start=5892,serialized_start2346,113714
  serialized_end=5969,serialized_end2347,113739
_CONCATPARAMETER = _descriptor.Descriptor(_CONCATPARAMETER2351,113766
  name='ConcatParameter',name2352,113809
  full_name='caffe.ConcatParameter',full_name2353,113835
  filename=None,filename2354,113872
  file=DESCRIPTOR,file2355,113889
  containing_type=None,containing_type2356,113908
  fields=[fields2357,113932
      options=None),options2364,114247
      options=None),options2371,114585
  extensions=[extensions2373,114611
  nested_types=[],nested_types2375,114631
  enum_types=[enum_types2376,114650
  options=None,options2378,114670
  is_extendable=False,is_extendable2379,114686
  extension_ranges=[],extension_ranges2380,114709
  serialized_start=5971,serialized_start2381,114732
  serialized_end=6028,serialized_end2382,114757
_BATCHNORMPARAMETER = _descriptor.Descriptor(_BATCHNORMPARAMETER2386,114784
  name='BatchNormParameter',name2387,114830
  full_name='caffe.BatchNormParameter',full_name2388,114859
  filename=None,filename2389,114899
  file=DESCRIPTOR,file2390,114916
  containing_type=None,containing_type2391,114935
  fields=[fields2392,114959
      options=None),options2399,115306
      options=None),options2406,115676
      options=None),options2413,116006
  extensions=[extensions2415,116032
  nested_types=[],nested_types2417,116052
  enum_types=[enum_types2418,116071
  options=None,options2420,116091
  is_extendable=False,is_extendable2421,116107
  extension_ranges=[],extension_ranges2422,116130
  serialized_start=6030,serialized_start2423,116153
  serialized_end=6136,serialized_end2424,116178
_BIASPARAMETER = _descriptor.Descriptor(_BIASPARAMETER2428,116205
  name='BiasParameter',name2429,116246
  full_name='caffe.BiasParameter',full_name2430,116270
  filename=None,filename2431,116305
  file=DESCRIPTOR,file2432,116322
  containing_type=None,containing_type2433,116341
  fields=[fields2434,116365
      options=None),options2441,116678
      options=None),options2448,117009
      options=None),options2455,117342
  extensions=[extensions2457,117368
  nested_types=[],nested_types2459,117388
  enum_types=[enum_types2460,117407
  options=None,options2462,117427
  is_extendable=False,is_extendable2463,117443
  extension_ranges=[],extension_ranges2464,117466
  serialized_start=6138,serialized_start2465,117489
  serialized_end=6231,serialized_end2466,117514
_CONTRASTIVELOSSPARAMETER = _descriptor.Descriptor(_CONTRASTIVELOSSPARAMETER2470,117541
  name='ContrastiveLossParameter',name2471,117593
  full_name='caffe.ContrastiveLossParameter',full_name2472,117628
  filename=None,filename2473,117674
  file=DESCRIPTOR,file2474,117691
  containing_type=None,containing_type2475,117710
  fields=[fields2476,117734
      options=None),options2483,118062
      options=None),options2490,118420
  extensions=[extensions2492,118446
  nested_types=[],nested_types2494,118466
  enum_types=[enum_types2495,118485
  options=None,options2497,118505
  is_extendable=False,is_extendable2498,118521
  extension_ranges=[],extension_ranges2499,118544
  serialized_start=6233,serialized_start2500,118567
  serialized_end=6309,serialized_end2501,118592
_CONVOLUTIONPARAMETER = _descriptor.Descriptor(_CONVOLUTIONPARAMETER2505,118619
  name='ConvolutionParameter',name2506,118667
  full_name='caffe.ConvolutionParameter',full_name2507,118698
  filename=None,filename2508,118740
  file=DESCRIPTOR,file2509,118757
  containing_type=None,containing_type2510,118776
  fields=[fields2511,118800
      options=None),options2518,119134
      options=None),options2525,119477
      options=None),options2532,119808
      options=None),options2539,120155
      options=None),options2546,120492
      options=None),options2553,120834
      options=None),options2560,121167
      options=None),options2567,121501
      options=None),options2574,121842
      options=None),options2581,122183
      options=None),options2588,122525
      options=None),options2595,122867
      options=None),options2602,123201
      options=None),options2609,123556
      options=None),options2616,123907
      options=None),options2623,124244
      options=None),options2630,124576
      options=None),options2637,124934
  extensions=[extensions2639,124960
  nested_types=[],nested_types2641,124980
  enum_types=[enum_types2642,124999
  options=None,options2645,125053
  is_extendable=False,is_extendable2646,125069
  extension_ranges=[],extension_ranges2647,125092
  serialized_start=6312,serialized_start2648,125115
  serialized_end=6820,serialized_end2649,125140
_CROPPARAMETER = _descriptor.Descriptor(_CROPPARAMETER2653,125167
  name='CropParameter',name2654,125208
  full_name='caffe.CropParameter',full_name2655,125232
  filename=None,filename2656,125267
  file=DESCRIPTOR,file2657,125284
  containing_type=None,containing_type2658,125303
  fields=[fields2659,125327
      options=None),options2666,125640
      options=None),options2673,125970
  extensions=[extensions2675,125996
  nested_types=[],nested_types2677,126016
  enum_types=[enum_types2678,126035
  options=None,options2680,126055
  is_extendable=False,is_extendable2681,126071
  extension_ranges=[],extension_ranges2682,126094
  serialized_start=6822,serialized_start2683,126117
  serialized_end=6870,serialized_end2684,126142
_DATAPARAMETER = _descriptor.Descriptor(_DATAPARAMETER2688,126169
  name='DataParameter',name2689,126210
  full_name='caffe.DataParameter',full_name2690,126234
  filename=None,filename2691,126269
  file=DESCRIPTOR,file2692,126286
  containing_type=None,containing_type2693,126305
  fields=[fields2694,126329
      options=None),options2701,126666
      options=None),options2708,127003
      options=None),options2715,127337
      options=None),options2722,127667
      options=None),options2729,127992
      options=None),options2736,128345
      options=None),options2743,128679
      options=None),options2750,129010
      options=None),options2757,129367
      options=None),options2764,129700
  extensions=[extensions2766,129726
  nested_types=[],nested_types2768,129746
  enum_types=[enum_types2769,129765
  options=None,options2772,129808
  is_extendable=False,is_extendable2773,129824
  extension_ranges=[],extension_ranges2774,129847
  serialized_start=6873,serialized_start2775,129870
  serialized_end=7165,serialized_end2776,129895
_DROPOUTPARAMETER = _descriptor.Descriptor(_DROPOUTPARAMETER2780,129922
  name='DropoutParameter',name2781,129966
  full_name='caffe.DropoutParameter',full_name2782,129993
  filename=None,filename2783,130031
  file=DESCRIPTOR,file2784,130048
  containing_type=None,containing_type2785,130067
  fields=[fields2786,130091
      options=None),options2793,130427
  extensions=[extensions2795,130453
  nested_types=[],nested_types2797,130473
  enum_types=[enum_types2798,130492
  options=None,options2800,130512
  is_extendable=False,is_extendable2801,130528
  extension_ranges=[],extension_ranges2802,130551
  serialized_start=7167,serialized_start2803,130574
  serialized_end=7213,serialized_end2804,130599
_DUMMYDATAPARAMETER = _descriptor.Descriptor(_DUMMYDATAPARAMETER2808,130626
  name='DummyDataParameter',name2809,130672
  full_name='caffe.DummyDataParameter',full_name2810,130701
  filename=None,filename2811,130741
  file=DESCRIPTOR,file2812,130758
  containing_type=None,containing_type2813,130777
  fields=[fields2814,130801
      options=None),options2821,131137
      options=None),options2828,131471
      options=None),options2835,131800
      options=None),options2842,132139
      options=None),options2849,132474
      options=None),options2856,132807
  extensions=[extensions2858,132833
  nested_types=[],nested_types2860,132853
  enum_types=[enum_types2861,132872
  options=None,options2863,132892
  is_extendable=False,is_extendable2864,132908
  extension_ranges=[],extension_ranges2865,132931
  serialized_start=7216,serialized_start2866,132954
  serialized_end=7376,serialized_end2867,132979
_ELTWISEPARAMETER = _descriptor.Descriptor(_ELTWISEPARAMETER2871,133006
  name='EltwiseParameter',name2872,133050
  full_name='caffe.EltwiseParameter',full_name2873,133077
  filename=None,filename2874,133115
  file=DESCRIPTOR,file2875,133132
  containing_type=None,containing_type2876,133151
  fields=[fields2877,133175
      options=None),options2884,133502
      options=None),options2891,133832
      options=None),options2898,134185
  extensions=[extensions2900,134211
  nested_types=[],nested_types2902,134231
  enum_types=[enum_types2903,134250
  options=None,options2906,134303
  is_extendable=False,is_extendable2907,134319
  extension_ranges=[],extension_ranges2908,134342
  serialized_start=7379,serialized_start2909,134365
  serialized_end=7544,serialized_end2910,134390
_ELUPARAMETER = _descriptor.Descriptor(_ELUPARAMETER2914,134417
  name='ELUParameter',name2915,134457
  full_name='caffe.ELUParameter',full_name2916,134480
  filename=None,filename2917,134514
  file=DESCRIPTOR,file2918,134531
  containing_type=None,containing_type2919,134550
  fields=[fields2920,134574
      options=None),options2927,134888
  extensions=[extensions2929,134914
  nested_types=[],nested_types2931,134934
  enum_types=[enum_types2932,134953
  options=None,options2934,134973
  is_extendable=False,is_extendable2935,134989
  extension_ranges=[],extension_ranges2936,135012
  serialized_start=7546,serialized_start2937,135035
  serialized_end=7578,serialized_end2938,135060
_EMBEDPARAMETER = _descriptor.Descriptor(_EMBEDPARAMETER2942,135087
  name='EmbedParameter',name2943,135129
  full_name='caffe.EmbedParameter',full_name2944,135154
  filename=None,filename2945,135190
  file=DESCRIPTOR,file2946,135207
  containing_type=None,containing_type2947,135226
  fields=[fields2948,135250
      options=None),options2955,135578
      options=None),options2962,135914
      options=None),options2969,136251
      options=None),options2976,136599
      options=None),options2983,136943
  extensions=[extensions2985,136969
  nested_types=[],nested_types2987,136989
  enum_types=[enum_types2988,137008
  options=None,options2990,137028
  is_extendable=False,is_extendable2991,137044
  extension_ranges=[],extension_ranges2992,137067
  serialized_start=7581,serialized_start2993,137090
  serialized_end=7753,serialized_end2994,137115
_EXPPARAMETER = _descriptor.Descriptor(_EXPPARAMETER2998,137142
  name='ExpParameter',name2999,137182
  full_name='caffe.ExpParameter',full_name3000,137205
  filename=None,filename3001,137239
  file=DESCRIPTOR,file3002,137256
  containing_type=None,containing_type3003,137275
  fields=[fields3004,137299
      options=None),options3011,137612
      options=None),options3018,137936
      options=None),options3025,138260
  extensions=[extensions3027,138286
  nested_types=[],nested_types3029,138306
  enum_types=[enum_types3030,138325
  options=None,options3032,138345
  is_extendable=False,is_extendable3033,138361
  extension_ranges=[],extension_ranges3034,138384
  serialized_start=7755,serialized_start3035,138407
  serialized_end=7823,serialized_end3036,138432
_FLATTENPARAMETER = _descriptor.Descriptor(_FLATTENPARAMETER3040,138459
  name='FlattenParameter',name3041,138503
  full_name='caffe.FlattenParameter',full_name3042,138530
  filename=None,filename3043,138568
  file=DESCRIPTOR,file3044,138585
  containing_type=None,containing_type3045,138604
  fields=[fields3046,138628
      options=None),options3053,138944
      options=None),options3060,139279
  extensions=[extensions3062,139305
  nested_types=[],nested_types3064,139325
  enum_types=[enum_types3065,139344
  options=None,options3067,139364
  is_extendable=False,is_extendable3068,139380
  extension_ranges=[],extension_ranges3069,139403
  serialized_start=7825,serialized_start3070,139426
  serialized_end=7882,serialized_end3071,139451
_HDF5DATAPARAMETER = _descriptor.Descriptor(_HDF5DATAPARAMETER3075,139478
  name='HDF5DataParameter',name3076,139523
  full_name='caffe.HDF5DataParameter',full_name3077,139551
  filename=None,filename3078,139590
  file=DESCRIPTOR,file3079,139607
  containing_type=None,containing_type3080,139626
  fields=[fields3081,139650
      options=None),options3088,139991
      options=None),options3095,140332
      options=None),options3102,140669
  extensions=[extensions3104,140695
  nested_types=[],nested_types3106,140715
  enum_types=[enum_types3107,140734
  options=None,options3109,140754
  is_extendable=False,is_extendable3110,140770
  extension_ranges=[],extension_ranges3111,140793
  serialized_start=7884,serialized_start3112,140816
  serialized_end=7963,serialized_end3113,140841
_HDF5OUTPUTPARAMETER = _descriptor.Descriptor(_HDF5OUTPUTPARAMETER3117,140868
  name='HDF5OutputParameter',name3118,140915
  full_name='caffe.HDF5OutputParameter',full_name3119,140945
  filename=None,filename3120,140986
  file=DESCRIPTOR,file3121,141003
  containing_type=None,containing_type3122,141022
  fields=[fields3123,141046
      options=None),options3130,141395
  extensions=[extensions3132,141421
  nested_types=[],nested_types3134,141441
  enum_types=[enum_types3135,141460
  options=None,options3137,141480
  is_extendable=False,is_extendable3138,141496
  extension_ranges=[],extension_ranges3139,141519
  serialized_start=7965,serialized_start3140,141542
  serialized_end=8005,serialized_end3141,141567
_HINGELOSSPARAMETER = _descriptor.Descriptor(_HINGELOSSPARAMETER3145,141594
  name='HingeLossParameter',name3146,141640
  full_name='caffe.HingeLossParameter',full_name3147,141669
  filename=None,filename3148,141709
  file=DESCRIPTOR,file3149,141726
  containing_type=None,containing_type3150,141745
  fields=[fields3151,141769
      options=None),options3158,142088
  extensions=[extensions3160,142114
  nested_types=[],nested_types3162,142134
  enum_types=[enum_types3163,142153
  options=None,options3166,142203
  is_extendable=False,is_extendable3167,142219
  extension_ranges=[],extension_ranges3168,142242
  serialized_start=8007,serialized_start3169,142265
  serialized_end=8101,serialized_end3170,142290
_IMAGEDATAPARAMETER = _descriptor.Descriptor(_IMAGEDATAPARAMETER3174,142317
  name='ImageDataParameter',name3175,142363
  full_name='caffe.ImageDataParameter',full_name3176,142392
  filename=None,filename3177,142432
  file=DESCRIPTOR,file3178,142449
  containing_type=None,containing_type3179,142468
  fields=[fields3180,142492
      options=None),options3187,142834
      options=None),options3194,143175
      options=None),options3201,143514
      options=None),options3208,143852
      options=None),options3215,144193
      options=None),options3222,144533
      options=None),options3229,144873
      options=None),options3236,145203
      options=None),options3243,145561
      options=None),options3250,145900
      options=None),options3257,146237
      options=None),options3264,146600
  extensions=[extensions3266,146626
  nested_types=[],nested_types3268,146646
  enum_types=[enum_types3269,146665
  options=None,options3271,146685
  is_extendable=False,is_extendable3272,146701
  extension_ranges=[],extension_ranges3273,146724
  serialized_start=8104,serialized_start3274,146747
  serialized_end=8383,serialized_end3275,146772
_INFOGAINLOSSPARAMETER = _descriptor.Descriptor(_INFOGAINLOSSPARAMETER3279,146799
  name='InfogainLossParameter',name3280,146848
  full_name='caffe.InfogainLossParameter',full_name3281,146880
  filename=None,filename3282,146923
  file=DESCRIPTOR,file3283,146940
  containing_type=None,containing_type3284,146959
  fields=[fields3285,146983
      options=None),options3292,147328
      options=None),options3299,147659
  extensions=[extensions3301,147685
  nested_types=[],nested_types3303,147705
  enum_types=[enum_types3304,147724
  options=None,options3306,147744
  is_extendable=False,is_extendable3307,147760
  extension_ranges=[],extension_ranges3308,147783
  serialized_start=8385,serialized_start3309,147806
  serialized_end=8441,serialized_end3310,147831
_INNERPRODUCTPARAMETER = _descriptor.Descriptor(_INNERPRODUCTPARAMETER3314,147858
  name='InnerProductParameter',name3315,147907
  full_name='caffe.InnerProductParameter',full_name3316,147939
  filename=None,filename3317,147982
  file=DESCRIPTOR,file3318,147999
  containing_type=None,containing_type3319,148018
  fields=[fields3320,148042
      options=None),options3327,148377
      options=None),options3334,148721
      options=None),options3341,149076
      options=None),options3348,149427
      options=None),options3355,149758
      options=None),options3362,150103
  extensions=[extensions3364,150129
  nested_types=[],nested_types3366,150149
  enum_types=[enum_types3367,150168
  options=None,options3369,150188
  is_extendable=False,is_extendable3370,150204
  extension_ranges=[],extension_ranges3371,150227
  serialized_start=8444,serialized_start3372,150250
  serialized_end=8647,serialized_end3373,150275
_INPUTPARAMETER = _descriptor.Descriptor(_INPUTPARAMETER3377,150302
  name='InputParameter',name3378,150344
  full_name='caffe.InputParameter',full_name3379,150369
  filename=None,filename3380,150405
  file=DESCRIPTOR,file3381,150422
  containing_type=None,containing_type3382,150441
  fields=[fields3383,150465
      options=None),options3390,150785
  extensions=[extensions3392,150811
  nested_types=[],nested_types3394,150831
  enum_types=[enum_types3395,150850
  options=None,options3397,150870
  is_extendable=False,is_extendable3398,150886
  extension_ranges=[],extension_ranges3399,150909
  serialized_start=8649,serialized_start3400,150932
  serialized_end=8698,serialized_end3401,150957
_LOGPARAMETER = _descriptor.Descriptor(_LOGPARAMETER3405,150984
  name='LogParameter',name3406,151024
  full_name='caffe.LogParameter',full_name3407,151047
  filename=None,filename3408,151081
  file=DESCRIPTOR,file3409,151098
  containing_type=None,containing_type3410,151117
  fields=[fields3411,151141
      options=None),options3418,151454
      options=None),options3425,151778
      options=None),options3432,152102
  extensions=[extensions3434,152128
  nested_types=[],nested_types3436,152148
  enum_types=[enum_types3437,152167
  options=None,options3439,152187
  is_extendable=False,is_extendable3440,152203
  extension_ranges=[],extension_ranges3441,152226
  serialized_start=8700,serialized_start3442,152249
  serialized_end=8768,serialized_end3443,152274
_LRNPARAMETER = _descriptor.Descriptor(_LRNPARAMETER3447,152301
  name='LRNParameter',name3448,152341
  full_name='caffe.LRNParameter',full_name3449,152364
  filename=None,filename3450,152398
  file=DESCRIPTOR,file3451,152415
  containing_type=None,containing_type3452,152434
  fields=[fields3453,152458
      options=None),options3460,152783
      options=None),options3467,153107
      options=None),options3474,153432
      options=None),options3481,153769
      options=None),options3488,154085
      options=None),options3495,154412
  extensions=[extensions3497,154438
  nested_types=[],nested_types3499,154458
  enum_types=[enum_types3500,154477
  options=None,options3504,154553
  is_extendable=False,is_extendable3505,154569
  extension_ranges=[],extension_ranges3506,154592
  serialized_start=8771,serialized_start3507,154615
  serialized_end=9083,serialized_end3508,154640
_MEMORYDATAPARAMETER = _descriptor.Descriptor(_MEMORYDATAPARAMETER3512,154667
  name='MemoryDataParameter',name3513,154714
  full_name='caffe.MemoryDataParameter',full_name3514,154744
  filename=None,filename3515,154785
  file=DESCRIPTOR,file3516,154802
  containing_type=None,containing_type3517,154821
  fields=[fields3518,154845
      options=None),options3525,155178
      options=None),options3532,155517
      options=None),options3539,155852
      options=None),options3546,156185
  extensions=[extensions3548,156211
  nested_types=[],nested_types3550,156231
  enum_types=[enum_types3551,156250
  options=None,options3553,156270
  is_extendable=False,is_extendable3554,156286
  extension_ranges=[],extension_ranges3555,156309
  serialized_start=9085,serialized_start3556,156332
  serialized_end=9175,serialized_end3557,156357
_MVNPARAMETER = _descriptor.Descriptor(_MVNPARAMETER3561,156384
  name='MVNParameter',name3562,156424
  full_name='caffe.MVNParameter',full_name3563,156447
  filename=None,filename3564,156481
  file=DESCRIPTOR,file3565,156498
  containing_type=None,containing_type3566,156517
  fields=[fields3567,156541
      options=None),options3574,156884
      options=None),options3581,157232
      options=None),options3588,157556
  extensions=[extensions3590,157582
  nested_types=[],nested_types3592,157602
  enum_types=[enum_types3593,157621
  options=None,options3595,157641
  is_extendable=False,is_extendable3596,157657
  extension_ranges=[],extension_ranges3597,157680
  serialized_start=9177,serialized_start3598,157703
  serialized_end=9277,serialized_end3599,157728
_PARAMETERPARAMETER = _descriptor.Descriptor(_PARAMETERPARAMETER3603,157755
  name='ParameterParameter',name3604,157801
  full_name='caffe.ParameterParameter',full_name3605,157830
  filename=None,filename3606,157870
  file=DESCRIPTOR,file3607,157887
  containing_type=None,containing_type3608,157906
  fields=[fields3609,157930
      options=None),options3616,158256
  extensions=[extensions3618,158282
  nested_types=[],nested_types3620,158302
  enum_types=[enum_types3621,158321
  options=None,options3623,158341
  is_extendable=False,is_extendable3624,158357
  extension_ranges=[],extension_ranges3625,158380
  serialized_start=9279,serialized_start3626,158403
  serialized_end=9332,serialized_end3627,158428
_POOLINGPARAMETER = _descriptor.Descriptor(_POOLINGPARAMETER3631,158455
  name='PoolingParameter',name3632,158499
  full_name='caffe.PoolingParameter',full_name3633,158526
  filename=None,filename3634,158564
  file=DESCRIPTOR,file3635,158581
  containing_type=None,containing_type3636,158600
  fields=[fields3637,158624
      options=None),options3644,158941
      options=None),options3651,159266
      options=None),options3658,159595
      options=None),options3665,159925
      options=None),options3672,160267
      options=None),options3679,160603
      options=None),options3686,160939
      options=None),options3693,161270
      options=None),options3700,161606
      options=None),options3707,161942
      options=None),options3714,162275
      options=None),options3721,162627
  extensions=[extensions3723,162653
  nested_types=[],nested_types3725,162673
  enum_types=[enum_types3726,162692
  options=None,options3730,162776
  is_extendable=False,is_extendable3731,162792
  extension_ranges=[],extension_ranges3732,162815
  serialized_start=9335,serialized_start3733,162838
  serialized_end=9753,serialized_end3734,162863
_POWERPARAMETER = _descriptor.Descriptor(_POWERPARAMETER3738,162890
  name='PowerParameter',name3739,162932
  full_name='caffe.PowerParameter',full_name3740,162957
  filename=None,filename3741,162993
  file=DESCRIPTOR,file3742,163010
  containing_type=None,containing_type3743,163029
  fields=[fields3744,163053
      options=None),options3751,163369
      options=None),options3758,163695
      options=None),options3765,164021
  extensions=[extensions3767,164047
  nested_types=[],nested_types3769,164067
  enum_types=[enum_types3770,164086
  options=None,options3772,164106
  is_extendable=False,is_extendable3773,164122
  extension_ranges=[],extension_ranges3774,164145
  serialized_start=9755,serialized_start3775,164168
  serialized_end=9825,serialized_end3776,164193
_PYTHONPARAMETER = _descriptor.Descriptor(_PYTHONPARAMETER3780,164220
  name='PythonParameter',name3781,164263
  full_name='caffe.PythonParameter',full_name3782,164289
  filename=None,filename3783,164326
  file=DESCRIPTOR,file3784,164343
  containing_type=None,containing_type3785,164362
  fields=[fields3786,164386
      options=None),options3793,164725
      options=None),options3800,165072
      options=None),options3807,165426
      options=None),options3814,165781
  extensions=[extensions3816,165807
  nested_types=[],nested_types3818,165827
  enum_types=[enum_types3819,165846
  options=None,options3821,165866
  is_extendable=False,is_extendable3822,165882
  extension_ranges=[],extension_ranges3823,165905
  serialized_start=9827,serialized_start3824,165928
  serialized_end=9930,serialized_end3825,165953
_RECURRENTPARAMETER = _descriptor.Descriptor(_RECURRENTPARAMETER3829,165980
  name='RecurrentParameter',name3830,166026
  full_name='caffe.RecurrentParameter',full_name3831,166055
  filename=None,filename3832,166095
  file=DESCRIPTOR,file3833,166112
  containing_type=None,containing_type3834,166131
  fields=[fields3835,166155
      options=None),options3842,166486
      options=None),options3849,166838
      options=None),options3856,167186
      options=None),options3863,167530
      options=None),options3870,167880
  extensions=[extensions3872,167906
  nested_types=[],nested_types3874,167926
  enum_types=[enum_types3875,167945
  options=None,options3877,167965
  is_extendable=False,is_extendable3878,167981
  extension_ranges=[],extension_ranges3879,168004
  serialized_start=9933,serialized_start3880,168027
  serialized_end=10125,serialized_end3881,168052
_REDUCTIONPARAMETER = _descriptor.Descriptor(_REDUCTIONPARAMETER3885,168080
  name='ReductionParameter',name3886,168126
  full_name='caffe.ReductionParameter',full_name3887,168155
  filename=None,filename3888,168195
  file=DESCRIPTOR,file3889,168212
  containing_type=None,containing_type3890,168231
  fields=[fields3891,168255
      options=None),options3898,168584
      options=None),options3905,168912
      options=None),options3912,169242
  extensions=[extensions3914,169268
  nested_types=[],nested_types3916,169288
  enum_types=[enum_types3917,169307
  options=None,options3920,169364
  is_extendable=False,is_extendable3921,169380
  extension_ranges=[],extension_ranges3922,169403
  serialized_start=10128,serialized_start3923,169426
  serialized_end=10301,serialized_end3924,169452
_RELUPARAMETER = _descriptor.Descriptor(_RELUPARAMETER3928,169480
  name='ReLUParameter',name3929,169521
  full_name='caffe.ReLUParameter',full_name3930,169545
  filename=None,filename3931,169580
  file=DESCRIPTOR,file3932,169597
  containing_type=None,containing_type3933,169616
  fields=[fields3934,169640
      options=None),options3941,169973
      options=None),options3948,170301
  extensions=[extensions3950,170327
  nested_types=[],nested_types3952,170347
  enum_types=[enum_types3953,170366
  options=None,options3956,170413
  is_extendable=False,is_extendable3957,170429
  extension_ranges=[],extension_ranges3958,170452
  serialized_start=10304,serialized_start3959,170475
  serialized_end=10445,serialized_end3960,170501
_RESHAPEPARAMETER = _descriptor.Descriptor(_RESHAPEPARAMETER3964,170529
  name='ReshapeParameter',name3965,170573
  full_name='caffe.ReshapeParameter',full_name3966,170600
  filename=None,filename3967,170638
  file=DESCRIPTOR,file3968,170655
  containing_type=None,containing_type3969,170674
  fields=[fields3970,170698
      options=None),options3977,171022
      options=None),options3984,171348
      options=None),options3991,171683
  extensions=[extensions3993,171709
  nested_types=[],nested_types3995,171729
  enum_types=[enum_types3996,171748
  options=None,options3998,171768
  is_extendable=False,is_extendable3999,171784
  extension_ranges=[],extension_ranges4000,171807
  serialized_start=10447,serialized_start4001,171830
  serialized_end=10537,serialized_end4002,171856
_SCALEPARAMETER = _descriptor.Descriptor(_SCALEPARAMETER4006,171884
  name='ScaleParameter',name4007,171926
  full_name='caffe.ScaleParameter',full_name4008,171951
  filename=None,filename4009,171987
  file=DESCRIPTOR,file4010,172004
  containing_type=None,containing_type4011,172023
  fields=[fields4012,172047
      options=None),options4019,172361
      options=None),options4026,172693
      options=None),options4033,173027
      options=None),options4040,173365
      options=None),options4047,173709
  extensions=[extensions4049,173735
  nested_types=[],nested_types4051,173755
  enum_types=[enum_types4052,173774
  options=None,options4054,173794
  is_extendable=False,is_extendable4055,173810
  extension_ranges=[],extension_ranges4056,173833
  serialized_start=10540,serialized_start4057,173856
  serialized_end=10705,serialized_end4058,173882
_SIGMOIDPARAMETER = _descriptor.Descriptor(_SIGMOIDPARAMETER4062,173910
  name='SigmoidParameter',name4063,173954
  full_name='caffe.SigmoidParameter',full_name4064,173981
  filename=None,filename4065,174019
  file=DESCRIPTOR,file4066,174036
  containing_type=None,containing_type4067,174055
  fields=[fields4068,174079
      options=None),options4075,174400
  extensions=[extensions4077,174426
  nested_types=[],nested_types4079,174446
  enum_types=[enum_types4080,174465
  options=None,options4083,174515
  is_extendable=False,is_extendable4084,174531
  extension_ranges=[],extension_ranges4085,174554
  serialized_start=10707,serialized_start4086,174577
  serialized_end=10827,serialized_end4087,174603
_SLICEPARAMETER = _descriptor.Descriptor(_SLICEPARAMETER4091,174631
  name='SliceParameter',name4092,174673
  full_name='caffe.SliceParameter',full_name4093,174698
  filename=None,filename4094,174734
  file=DESCRIPTOR,file4095,174751
  containing_type=None,containing_type4096,174770
  fields=[fields4097,174794
      options=None),options4104,175108
      options=None),options4111,175449
      options=None),options4118,175784
  extensions=[extensions4120,175810
  nested_types=[],nested_types4122,175830
  enum_types=[enum_types4123,175849
  options=None,options4125,175869
  is_extendable=False,is_extendable4126,175885
  extension_ranges=[],extension_ranges4127,175908
  serialized_start=10829,serialized_start4128,175931
  serialized_end=10905,serialized_end4129,175957
_SOFTMAXPARAMETER = _descriptor.Descriptor(_SOFTMAXPARAMETER4133,175985
  name='SoftmaxParameter',name4134,176029
  full_name='caffe.SoftmaxParameter',full_name4135,176056
  filename=None,filename4136,176094
  file=DESCRIPTOR,file4137,176111
  containing_type=None,containing_type4138,176130
  fields=[fields4139,176154
      options=None),options4146,176475
      options=None),options4153,176801
  extensions=[extensions4155,176827
  nested_types=[],nested_types4157,176847
  enum_types=[enum_types4158,176866
  options=None,options4161,176916
  is_extendable=False,is_extendable4162,176932
  extension_ranges=[],extension_ranges4163,176955
  serialized_start=10908,serialized_start4164,176978
  serialized_end=11045,serialized_end4165,177004
_TANHPARAMETER = _descriptor.Descriptor(_TANHPARAMETER4169,177032
  name='TanHParameter',name4170,177073
  full_name='caffe.TanHParameter',full_name4171,177097
  filename=None,filename4172,177132
  file=DESCRIPTOR,file4173,177149
  containing_type=None,containing_type4174,177168
  fields=[fields4175,177192
      options=None),options4182,177510
  extensions=[extensions4184,177536
  nested_types=[],nested_types4186,177556
  enum_types=[enum_types4187,177575
  options=None,options4190,177622
  is_extendable=False,is_extendable4191,177638
  extension_ranges=[],extension_ranges4192,177661
  serialized_start=11047,serialized_start4193,177684
  serialized_end=11161,serialized_end4194,177710
_TILEPARAMETER = _descriptor.Descriptor(_TILEPARAMETER4198,177738
  name='TileParameter',name4199,177779
  full_name='caffe.TileParameter',full_name4200,177803
  filename=None,filename4201,177838
  file=DESCRIPTOR,file4202,177855
  containing_type=None,containing_type4203,177874
  fields=[fields4204,177898
      options=None),options4211,178211
      options=None),options4218,178537
  extensions=[extensions4220,178563
  nested_types=[],nested_types4222,178583
  enum_types=[enum_types4223,178602
  options=None,options4225,178622
  is_extendable=False,is_extendable4226,178638
  extension_ranges=[],extension_ranges4227,178661
  serialized_start=11163,serialized_start4228,178684
  serialized_end=11210,serialized_end4229,178710
_THRESHOLDPARAMETER = _descriptor.Descriptor(_THRESHOLDPARAMETER4233,178738
  name='ThresholdParameter',name4234,178784
  full_name='caffe.ThresholdParameter',full_name4235,178813
  filename=None,filename4236,178853
  file=DESCRIPTOR,file4237,178870
  containing_type=None,containing_type4238,178889
  fields=[fields4239,178913
      options=None),options4246,179241
  extensions=[extensions4248,179267
  nested_types=[],nested_types4250,179287
  enum_types=[enum_types4251,179306
  options=None,options4253,179326
  is_extendable=False,is_extendable4254,179342
  extension_ranges=[],extension_ranges4255,179365
  serialized_start=11212,serialized_start4256,179388
  serialized_end=11254,serialized_end4257,179414
_WINDOWDATAPARAMETER = _descriptor.Descriptor(_WINDOWDATAPARAMETER4261,179442
  name='WindowDataParameter',name4262,179489
  full_name='caffe.WindowDataParameter',full_name4263,179519
  filename=None,filename4264,179560
  file=DESCRIPTOR,file4265,179577
  containing_type=None,containing_type4266,179596
  fields=[fields4267,179620
      options=None),options4274,179963
      options=None),options4281,180294
      options=None),options4288,180653
      options=None),options4295,180996
      options=None),options4302,181336
      options=None),options4309,181673
      options=None),options4316,182020
      options=None),options4323,182367
      options=None),options4330,182713
      options=None),options4337,183058
      options=None),options4344,183422
      options=None),options4351,183773
      options=None),options4358,184137
  extensions=[extensions4360,184163
  nested_types=[],nested_types4362,184183
  enum_types=[enum_types4363,184202
  options=None,options4365,184222
  is_extendable=False,is_extendable4366,184238
  extension_ranges=[],extension_ranges4367,184261
  serialized_start=11257,serialized_start4368,184284
  serialized_end=11578,serialized_end4369,184310
_SPPPARAMETER = _descriptor.Descriptor(_SPPPARAMETER4373,184338
  name='SPPParameter',name4374,184378
  full_name='caffe.SPPParameter',full_name4375,184401
  filename=None,filename4376,184435
  file=DESCRIPTOR,file4377,184452
  containing_type=None,containing_type4378,184471
  fields=[fields4379,184495
      options=None),options4386,184829
      options=None),options4393,185152
      options=None),options4400,185479
  extensions=[extensions4402,185505
  nested_types=[],nested_types4404,185525
  enum_types=[enum_types4405,185544
  options=None,options4409,185620
  is_extendable=False,is_extendable4410,185636
  extension_ranges=[],extension_ranges4411,185659
  serialized_start=11581,serialized_start4412,185682
  serialized_end=11816,serialized_end4413,185708
_V1LAYERPARAMETER = _descriptor.Descriptor(_V1LAYERPARAMETER4417,185736
  name='V1LayerParameter',name4418,185780
  full_name='caffe.V1LayerParameter',full_name4419,185807
  filename=None,filename4420,185845
  file=DESCRIPTOR,file4421,185862
  containing_type=None,containing_type4422,185881
  fields=[fields4423,185905
      options=None),options4430,186227
      options=None),options4437,186553
      options=None),options4444,186899
      options=None),options4451,187236
      options=None),options4458,187573
      options=None),options4465,187901
      options=None),options4472,188233
      options=None),options4479,188566
      options=None),options4486,188920
      options=None),options4493,189256
      options=None),options4500,189601
      options=None),options4507,189945
      options=None),options4514,190299
      options=None),options4521,190649
      options=None),options4528,190998
      options=None),options4535,191368
      options=None),options4542,191728
      options=None),options4549,192074
      options=None),options4556,192426
      options=None),options4563,192784
      options=None),options4570,193136
      options=None),options4577,193480
      options=None),options4584,193836
      options=None),options4591,194196
      options=None),options4598,194554
      options=None),options4605,194912
      options=None),options4612,195276
      options=None),options4619,195640
      options=None),options4626,195984
      options=None),options4633,196344
      options=None),options4640,196688
      options=None),options4647,197040
      options=None),options4654,197388
      options=None),options4661,197734
      options=None),options4668,198086
      options=None),options4675,198438
      options=None),options4682,198786
      options=None),options4689,199132
      options=None),options4696,199488
      options=None),options4703,199848
      options=None),options4710,200204
      options=None),options4717,200550
      options=None),options4724,200885
  extensions=[extensions4726,200911
  nested_types=[],nested_types4728,200931
  enum_types=[enum_types4729,200950
  options=None,options4733,201039
  is_extendable=False,is_extendable4734,201055
  extension_ranges=[],extension_ranges4735,201078
  serialized_start=11819,serialized_start4736,201101
  serialized_end=14347,serialized_end4737,201127
_V0LAYERPARAMETER = _descriptor.Descriptor(_V0LAYERPARAMETER4741,201155
  name='V0LayerParameter',name4742,201199
  full_name='caffe.V0LayerParameter',full_name4743,201226
  filename=None,filename4744,201264
  file=DESCRIPTOR,file4745,201281
  containing_type=None,containing_type4746,201300
  fields=[fields4747,201324
      options=None),options4754,201660
      options=None),options4761,202006
      options=None),options4768,202346
      options=None),options4775,202683
      options=None),options4782,203033
      options=None),options4789,203379
      options=None),options4796,203704
      options=None),options4803,204044
      options=None),options4810,204373
      options=None),options4817,204705
      options=None),options4824,205034
      options=None),options4831,205382
      options=None),options4838,205723
      options=None),options4845,206053
      options=None),options4852,206384
      options=None),options4859,206706
      options=None),options4866,207058
      options=None),options4873,207388
      options=None),options4880,207744
      options=None),options4887,208084
      options=None),options4894,208421
      options=None),options4901,208757
      options=None),options4908,209091
      options=None),options4915,209429
      options=None),options4922,209775
      options=None),options4929,210114
      options=None),options4936,210468
      options=None),options4943,210822
      options=None),options4950,211175
      options=None),options4957,211526
      options=None),options4964,211895
      options=None),options4971,212229
      options=None),options4978,212573
      options=None),options4985,212913
      options=None),options4992,213251
      options=None),options4999,213603
      options=None),options5006,213944
      options=None),options5013,214306
  extensions=[extensions5015,214332
  nested_types=[],nested_types5017,214352
  enum_types=[enum_types5018,214371
  options=None,options5021,214425
  is_extendable=False,is_extendable5022,214441
  extension_ranges=[],extension_ranges5023,214464
  serialized_start=14350,serialized_start5024,214487
  serialized_end=15371,serialized_end5025,214513
_PRELUPARAMETER = _descriptor.Descriptor(_PRELUPARAMETER5029,214541
  name='PReLUParameter',name5030,214583
  full_name='caffe.PReLUParameter',full_name5031,214608
  filename=None,filename5032,214644
  file=DESCRIPTOR,file5033,214661
  containing_type=None,containing_type5034,214680
  fields=[fields5035,214704
      options=None),options5042,215028
      options=None),options5049,215376
  extensions=[extensions5051,215402
  nested_types=[],nested_types5053,215422
  enum_types=[enum_types5054,215441
  options=None,options5056,215461
  is_extendable=False,is_extendable5057,215477
  extension_ranges=[],extension_ranges5058,215500
  serialized_start=15373,serialized_start5059,215523
  serialized_end=15460,serialized_end5060,215549
_QUANTIZATIONPARAMETER = _descriptor.Descriptor(_QUANTIZATIONPARAMETER5064,215577
  name='QuantizationParameter',name5065,215626
  full_name='caffe.QuantizationParameter',full_name5066,215658
  filename=None,filename5067,215701
  file=DESCRIPTOR,file5068,215718
  containing_type=None,containing_type5069,215737
  fields=[fields5070,215761
      options=None),options5077,216099
      options=None),options5084,216451
      options=None),options5091,216792
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\020\001')),options5098,217127
  extensions=[extensions5100,217217
  nested_types=[],nested_types5102,217237
  enum_types=[enum_types5103,217256
  options=None,options5107,217358
  is_extendable=False,is_extendable5108,217374
  extension_ranges=[],extension_ranges5109,217397
  serialized_start=15463,serialized_start5110,217420
  serialized_end=15802,serialized_end5111,217446
class BlobShape(_message.Message):BlobShape5351,235352
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5352,235387
  DESCRIPTOR = _BLOBSHAPEDESCRIPTOR5353,235446
class BlobProto(_message.Message):BlobProto5357,235532
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5358,235567
  DESCRIPTOR = _BLOBPROTODESCRIPTOR5359,235626
class BlobProtoVector(_message.Message):BlobProtoVector5363,235712
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5364,235753
  DESCRIPTOR = _BLOBPROTOVECTORDESCRIPTOR5365,235812
class Datum(_message.Message):Datum5369,235910
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5370,235941
  DESCRIPTOR = _DATUMDESCRIPTOR5371,236000
class FillerParameter(_message.Message):FillerParameter5375,236078
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5376,236119
  DESCRIPTOR = _FILLERPARAMETERDESCRIPTOR5377,236178
class NetParameter(_message.Message):NetParameter5381,236276
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5382,236314
  DESCRIPTOR = _NETPARAMETERDESCRIPTOR5383,236373
class SolverParameter(_message.Message):SolverParameter5387,236465
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5388,236506
  DESCRIPTOR = _SOLVERPARAMETERDESCRIPTOR5389,236565
class SolverState(_message.Message):SolverState5393,236663
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5394,236700
  DESCRIPTOR = _SOLVERSTATEDESCRIPTOR5395,236759
class NetState(_message.Message):NetState5399,236849
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5400,236883
  DESCRIPTOR = _NETSTATEDESCRIPTOR5401,236942
class NetStateRule(_message.Message):NetStateRule5405,237026
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5406,237064
  DESCRIPTOR = _NETSTATERULEDESCRIPTOR5407,237123
class ParamSpec(_message.Message):ParamSpec5411,237215
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5412,237250
  DESCRIPTOR = _PARAMSPECDESCRIPTOR5413,237309
class LayerParameter(_message.Message):LayerParameter5417,237395
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5418,237435
  DESCRIPTOR = _LAYERPARAMETERDESCRIPTOR5419,237494
class TransformationParameter(_message.Message):TransformationParameter5423,237590
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5424,237639
  DESCRIPTOR = _TRANSFORMATIONPARAMETERDESCRIPTOR5425,237698
class LossParameter(_message.Message):LossParameter5429,237812
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5430,237851
  DESCRIPTOR = _LOSSPARAMETERDESCRIPTOR5431,237910
class AccuracyParameter(_message.Message):AccuracyParameter5435,238004
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5436,238047
  DESCRIPTOR = _ACCURACYPARAMETERDESCRIPTOR5437,238106
class ArgMaxParameter(_message.Message):ArgMaxParameter5441,238208
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5442,238249
  DESCRIPTOR = _ARGMAXPARAMETERDESCRIPTOR5443,238308
class ConcatParameter(_message.Message):ConcatParameter5447,238406
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5448,238447
  DESCRIPTOR = _CONCATPARAMETERDESCRIPTOR5449,238506
class BatchNormParameter(_message.Message):BatchNormParameter5453,238604
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5454,238648
  DESCRIPTOR = _BATCHNORMPARAMETERDESCRIPTOR5455,238707
class BiasParameter(_message.Message):BiasParameter5459,238811
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5460,238850
  DESCRIPTOR = _BIASPARAMETERDESCRIPTOR5461,238909
class ContrastiveLossParameter(_message.Message):ContrastiveLossParameter5465,239003
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5466,239053
  DESCRIPTOR = _CONTRASTIVELOSSPARAMETERDESCRIPTOR5467,239112
class ConvolutionParameter(_message.Message):ConvolutionParameter5471,239228
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5472,239274
  DESCRIPTOR = _CONVOLUTIONPARAMETERDESCRIPTOR5473,239333
class CropParameter(_message.Message):CropParameter5477,239441
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5478,239480
  DESCRIPTOR = _CROPPARAMETERDESCRIPTOR5479,239539
class DataParameter(_message.Message):DataParameter5483,239633
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5484,239672
  DESCRIPTOR = _DATAPARAMETERDESCRIPTOR5485,239731
class DropoutParameter(_message.Message):DropoutParameter5489,239825
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5490,239867
  DESCRIPTOR = _DROPOUTPARAMETERDESCRIPTOR5491,239926
class DummyDataParameter(_message.Message):DummyDataParameter5495,240026
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5496,240070
  DESCRIPTOR = _DUMMYDATAPARAMETERDESCRIPTOR5497,240129
class EltwiseParameter(_message.Message):EltwiseParameter5501,240233
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5502,240275
  DESCRIPTOR = _ELTWISEPARAMETERDESCRIPTOR5503,240334
class ELUParameter(_message.Message):ELUParameter5507,240434
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5508,240472
  DESCRIPTOR = _ELUPARAMETERDESCRIPTOR5509,240531
class EmbedParameter(_message.Message):EmbedParameter5513,240623
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5514,240663
  DESCRIPTOR = _EMBEDPARAMETERDESCRIPTOR5515,240722
class ExpParameter(_message.Message):ExpParameter5519,240818
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5520,240856
  DESCRIPTOR = _EXPPARAMETERDESCRIPTOR5521,240915
class FlattenParameter(_message.Message):FlattenParameter5525,241007
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5526,241049
  DESCRIPTOR = _FLATTENPARAMETERDESCRIPTOR5527,241108
class HDF5DataParameter(_message.Message):HDF5DataParameter5531,241208
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5532,241251
  DESCRIPTOR = _HDF5DATAPARAMETERDESCRIPTOR5533,241310
class HDF5OutputParameter(_message.Message):HDF5OutputParameter5537,241412
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5538,241457
  DESCRIPTOR = _HDF5OUTPUTPARAMETERDESCRIPTOR5539,241516
class HingeLossParameter(_message.Message):HingeLossParameter5543,241622
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5544,241666
  DESCRIPTOR = _HINGELOSSPARAMETERDESCRIPTOR5545,241725
class ImageDataParameter(_message.Message):ImageDataParameter5549,241829
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5550,241873
  DESCRIPTOR = _IMAGEDATAPARAMETERDESCRIPTOR5551,241932
class InfogainLossParameter(_message.Message):InfogainLossParameter5555,242036
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5556,242083
  DESCRIPTOR = _INFOGAINLOSSPARAMETERDESCRIPTOR5557,242142
class InnerProductParameter(_message.Message):InnerProductParameter5561,242252
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5562,242299
  DESCRIPTOR = _INNERPRODUCTPARAMETERDESCRIPTOR5563,242358
class InputParameter(_message.Message):InputParameter5567,242468
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5568,242508
  DESCRIPTOR = _INPUTPARAMETERDESCRIPTOR5569,242567
class LogParameter(_message.Message):LogParameter5573,242663
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5574,242701
  DESCRIPTOR = _LOGPARAMETERDESCRIPTOR5575,242760
class LRNParameter(_message.Message):LRNParameter5579,242852
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5580,242890
  DESCRIPTOR = _LRNPARAMETERDESCRIPTOR5581,242949
class MemoryDataParameter(_message.Message):MemoryDataParameter5585,243041
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5586,243086
  DESCRIPTOR = _MEMORYDATAPARAMETERDESCRIPTOR5587,243145
class MVNParameter(_message.Message):MVNParameter5591,243251
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5592,243289
  DESCRIPTOR = _MVNPARAMETERDESCRIPTOR5593,243348
class ParameterParameter(_message.Message):ParameterParameter5597,243440
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5598,243484
  DESCRIPTOR = _PARAMETERPARAMETERDESCRIPTOR5599,243543
class PoolingParameter(_message.Message):PoolingParameter5603,243647
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5604,243689
  DESCRIPTOR = _POOLINGPARAMETERDESCRIPTOR5605,243748
class PowerParameter(_message.Message):PowerParameter5609,243848
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5610,243888
  DESCRIPTOR = _POWERPARAMETERDESCRIPTOR5611,243947
class PythonParameter(_message.Message):PythonParameter5615,244043
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5616,244084
  DESCRIPTOR = _PYTHONPARAMETERDESCRIPTOR5617,244143
class RecurrentParameter(_message.Message):RecurrentParameter5621,244241
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5622,244285
  DESCRIPTOR = _RECURRENTPARAMETERDESCRIPTOR5623,244344
class ReductionParameter(_message.Message):ReductionParameter5627,244448
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5628,244492
  DESCRIPTOR = _REDUCTIONPARAMETERDESCRIPTOR5629,244551
class ReLUParameter(_message.Message):ReLUParameter5633,244655
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5634,244694
  DESCRIPTOR = _RELUPARAMETERDESCRIPTOR5635,244753
class ReshapeParameter(_message.Message):ReshapeParameter5639,244847
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5640,244889
  DESCRIPTOR = _RESHAPEPARAMETERDESCRIPTOR5641,244948
class ScaleParameter(_message.Message):ScaleParameter5645,245048
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5646,245088
  DESCRIPTOR = _SCALEPARAMETERDESCRIPTOR5647,245147
class SigmoidParameter(_message.Message):SigmoidParameter5651,245243
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5652,245285
  DESCRIPTOR = _SIGMOIDPARAMETERDESCRIPTOR5653,245344
class SliceParameter(_message.Message):SliceParameter5657,245444
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5658,245484
  DESCRIPTOR = _SLICEPARAMETERDESCRIPTOR5659,245543
class SoftmaxParameter(_message.Message):SoftmaxParameter5663,245639
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5664,245681
  DESCRIPTOR = _SOFTMAXPARAMETERDESCRIPTOR5665,245740
class TanHParameter(_message.Message):TanHParameter5669,245840
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5670,245879
  DESCRIPTOR = _TANHPARAMETERDESCRIPTOR5671,245938
class TileParameter(_message.Message):TileParameter5675,246032
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5676,246071
  DESCRIPTOR = _TILEPARAMETERDESCRIPTOR5677,246130
class ThresholdParameter(_message.Message):ThresholdParameter5681,246224
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5682,246268
  DESCRIPTOR = _THRESHOLDPARAMETERDESCRIPTOR5683,246327
class WindowDataParameter(_message.Message):WindowDataParameter5687,246431
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5688,246476
  DESCRIPTOR = _WINDOWDATAPARAMETERDESCRIPTOR5689,246535
class SPPParameter(_message.Message):SPPParameter5693,246641
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5694,246679
  DESCRIPTOR = _SPPPARAMETERDESCRIPTOR5695,246738
class V1LayerParameter(_message.Message):V1LayerParameter5699,246830
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5700,246872
  DESCRIPTOR = _V1LAYERPARAMETERDESCRIPTOR5701,246931
class V0LayerParameter(_message.Message):V0LayerParameter5705,247031
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5706,247073
  DESCRIPTOR = _V0LAYERPARAMETERDESCRIPTOR5707,247132
class PReLUParameter(_message.Message):PReLUParameter5711,247232
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5712,247272
  DESCRIPTOR = _PRELUPARAMETERDESCRIPTOR5713,247331
class QuantizationParameter(_message.Message):QuantizationParameter5717,247427
  __metaclass__ = _reflection.GeneratedProtocolMessageType__metaclass__5718,247474
  DESCRIPTOR = _QUANTIZATIONPARAMETERDESCRIPTOR5719,247533

python/caffe/_caffe.cpp,3810
#define NPY_NO_DEPRECATED_API NPY_NO_DEPRECATED_API4,133
#define NPY_ARRAY_C_CONTIGUOUS NPY_ARRAY_C_CONTIGUOUS25,863
#define PyArray_SetBaseObject(PyArray_SetBaseObject26,911
#define BP_REGISTER_SHARED_PTR_TO_PYTHON(BP_REGISTER_SHARED_PTR_TO_PYTHON30,1043
namespace caffe {caffe44,1528
typedef float Dtype;Dtype47,1612
const int NPY_DTYPE = NPY_FLOAT32;NPY_DTYPE48,1633
void set_mode_cpu() { Caffe::set_mode(Caffe::CPU); }set_mode_cpu51,1688
void set_mode_gpu() { Caffe::set_mode(Caffe::GPU); }set_mode_gpu52,1741
void InitLog() {InitLog54,1795
void InitLogLevel(int level) {InitLogLevel58,1892
void InitLogLevelPipe(int level, bool stderr) {InitLogLevelPipe62,1967
void Log(const string& s) {Log67,2089
void set_random_seed(unsigned int seed) { Caffe::set_random_seed(seed); }set_random_seed71,2138
static void CheckFile(const string& filename) {CheckFile77,2479
void CheckContiguousArray(PyArrayObject* arr, string name,CheckContiguousArray86,2695
shared_ptr<Net<Dtype> > Net_Init(string network_file, int phase,Net_Init109,3451
shared_ptr<Net<Dtype> > Net_Init_Load(Net_Init_Load137,4259
void Net_Save(const Net<Dtype>& net, string filename) {Net_Save153,4867
void Net_SaveHDF5(const Net<Dtype>& net, string filename) {Net_SaveHDF5159,5041
void Net_LoadHDF5(Net<Dtype>* net, string filename) {Net_LoadHDF5163,5128
void Net_SetInputArrays(Net<Dtype>* net, bp::object data_obj,Net_SetInputArrays167,5237
Solver<Dtype>* GetSolverFromFile(const string& filename) {GetSolverFromFile199,6570
struct NdarrayConverterGenerator {NdarrayConverterGenerator205,6765
struct NdarrayConverterGenerator::apply<Dtype*> {apply210,6854
  struct type {type211,6904
    PyObject* operator() (Dtype* data) const {operator ()212,6920
    const PyTypeObject* get_pytype() {get_pytype216,7120
struct NdarrayCallPolicies : public bp::default_call_policies {NdarrayCallPolicies222,7202
  typedef NdarrayConverterGenerator result_converter;result_converter223,7266
  PyObject* postcall(PyObject* pyargs, PyObject* result) {postcall224,7320
bp::object Blob_Reshape(bp::tuple args, bp::dict kwargs) {Blob_Reshape244,8211
bp::object BlobVec_add_blob(bp::tuple args, bp::dict kwargs) {BlobVec_add_blob258,8671
class SolverCallback: public Solver<Dtype>::Callback {SolverCallback274,9254
  bp::object on_start_, on_gradients_ready_;on_start_276,9321
  bp::object on_start_, on_gradients_ready_;on_gradients_ready_276,9321
  SolverCallback(bp::object on_start, bp::object on_gradients_ready)SolverCallback279,9376
  virtual void on_gradients_ready() {on_gradients_ready281,9516
  virtual void on_start() {on_start284,9585
void Solver_add_callback(Solver<Dtype> * solver, bp::object on_start,Solver_add_callback289,9662
void Solver_add_nccl(Solver<Dtype>* solverSolver_add_nccl295,9903
void share_weights(Solver<Dtype>* solver, Net<Dtype>* net) {share_weights305,10051
class NetCallback: public Net<Dtype>::Callback {NetCallback310,10192
  explicit NetCallback(bp::object run) : run_(run) {}NetCallback312,10250
  virtual void run(int layer) {run315,10317
  bp::object run_;run_318,10370
void Net_before_forward(Net<Dtype>* net, bp::object run) {Net_before_forward320,10392
void Net_after_forward(Net<Dtype>* net, bp::object run) {Net_after_forward323,10509
void Net_before_backward(Net<Dtype>* net, bp::object run) {Net_before_backward326,10624
void Net_after_backward(Net<Dtype>* net, bp::object run) {Net_after_backward329,10743
void Net_add_nccl(Net<Dtype>* netNet_add_nccl333,10861
class NCCL {NCCL344,11044
  NCCL(shared_ptr<Solver<Dtype> > solver, const string& uid) {}NCCL346,11066
bool HasNCCL() {HasNCCL350,11141
bp::object NCCL_New_Uid() {NCCL_New_Uid359,11237
BOOST_PYTHON_MODULE(_caffe) {BOOST_PYTHON_MODULE381,12027

python/caffe/io.py,1188
def blobproto_to_array(blob, return_diff=False):blobproto_to_array18,400
def array_to_blobproto(arr, diff=None):array_to_blobproto36,1049
def arraylist_to_blobprotovector_str(arraylist):arraylist_to_blobprotovector_str49,1512
def blobprotovector_str_to_arraylist(str):blobprotovector_str_to_arraylist58,1836
def array_to_datum(arr, label=None):array_to_datum66,2079
def datum_to_array(datum):datum_to_array84,2680
class Transformer:Transformer98,3138
    def __init__(self, inputs):__init__109,3446
    def __check_input(self, in_):__check_input117,3648
    def preprocess(self, in_, data):preprocess122,3827
    def deprocess(self, in_, data):deprocess164,5301
    def set_transpose(self, in_, order):set_transpose187,6128
    def set_channel_swap(self, in_, order):set_channel_swap203,6717
    def set_raw_scale(self, in_, scale):set_raw_scale221,7435
    def set_mean(self, in_, mean):set_mean236,7959
    def set_input_scale(self, in_, scale):set_input_scale267,9118
def load_image(filename, color=True):load_image284,9592
def resize_image(im, new_dims, interp_order=1):resize_image311,10366
def oversample(images, crop_dims):oversample346,11660

python/caffe/draw.py,702
LAYER_STYLE_DEFAULT = {'shape': 'record',LAYER_STYLE_DEFAULT25,548
NEURON_LAYER_STYLE = {'shape': 'record',NEURON_LAYER_STYLE28,679
BLOB_STYLE = {'shape': 'octagon',BLOB_STYLE31,807
def get_pooling_types_dict():get_pooling_types_dict36,914
def get_edge_label(layer):get_edge_label46,1170
def get_layer_label(layer, rankdir):get_layer_label62,1641
def choose_color_by_layertype(layertype):choose_color_by_layertype117,3727
def get_pydot_graph(caffe_net, rankdir, label_edges=True, phase=None):get_pydot_graph130,4101
def draw_net(caffe_net, rankdir, ext='png', phase=None):draw_net205,7251
def draw_net_to_file(caffe_net, filename, rankdir='LR', phase=None):draw_net_to_file226,7937

python/train.py,523
def train(train10,121
    uid = caffe.NCCL.new_uid()uid17,379
    procs = []procs22,479
        p = Process(target=solve,p24,528
                    args=(solver, snapshot, gpus, timing, uid, rank))args25,562
def time(solver, nccl):time33,737
    def show_time():show_time43,995
def solve(proto, snapshot, gpus, timing, uid, rank):solve65,2004
    parser = argparse.ArgumentParser()parser91,2650
                        help="List of device ids.")help96,2916
    args = parser.parse_args()args98,3051

python/detect.py,152
CROP_MODES = ['list', 'selective_search']CROP_MODES26,751
COORD_COLS = ['ymin', 'xmin', 'ymax', 'xmax']COORD_COLS27,793
def main(argv):main30,841

python/draw_net.py,61
def parse_args():parse_args13,243
def main():main41,1367

docs/_layouts/default.html,0

Makefile,10343
PROJECT := caffePROJECT1,0
CONFIG_FILE := Makefile.configCONFIG_FILE3,18
BUILD_DIR_LINK := $(BUILD_DIR)BUILD_DIR_LINK10,256
	RELEASE_BUILD_DIR := .$(BUILD_DIR)_releaseRELEASE_BUILD_DIR12,316
	DEBUG_BUILD_DIR := .$(BUILD_DIR)_debugDEBUG_BUILD_DIR15,393
DEBUG ?= 0DEBUG18,440
	BUILD_DIR := $(DEBUG_BUILD_DIR)BUILD_DIR20,470
	OTHER_BUILD_DIR := $(RELEASE_BUILD_DIR)OTHER_BUILD_DIR21,503
	BUILD_DIR := $(RELEASE_BUILD_DIR)BUILD_DIR23,549
	OTHER_BUILD_DIR := $(DEBUG_BUILD_DIR)OTHER_BUILD_DIR24,584
SRC_DIRS := $(shell find * -type d -exec bash -c "find {} -maxdepth 1 \SRC_DIRS28,672
LIBRARY_NAME := $(PROJECT)LIBRARY_NAME32,842
LIB_BUILD_DIR := $(BUILD_DIR)/libLIB_BUILD_DIR33,869
STATIC_NAME := $(LIB_BUILD_DIR)/lib$(LIBRARY_NAME).aSTATIC_NAME34,903
DYNAMIC_VERSION_MAJOR 		:= 1DYNAMIC_VERSION_MAJOR35,956
DYNAMIC_VERSION_MINOR 		:= 0DYNAMIC_VERSION_MINOR36,985
DYNAMIC_VERSION_REVISION 	:= 0DYNAMIC_VERSION_REVISION37,1014
DYNAMIC_NAME_SHORT := lib$(LIBRARY_NAME).soDYNAMIC_NAME_SHORT38,1045
DYNAMIC_VERSIONED_NAME_SHORT := $(DYNAMIC_NAME_SHORT).$(DYNAMIC_VERSION_MAJOR).$(DYNAMIC_VERSION_MINOR).$(DYNAMIC_VERSION_REVISION)DYNAMIC_VERSIONED_NAME_SHORT40,1161
DYNAMIC_NAME := $(LIB_BUILD_DIR)/$(DYNAMIC_VERSIONED_NAME_SHORT)DYNAMIC_NAME41,1293
CXX_SRCS := $(shell find src/$(PROJECT) ! -name "test_*.cpp" -name "*.cpp")CXX_SRCS48,1611
CU_SRCS := $(shell find src/$(PROJECT) ! -name "test_*.cu" -name "*.cu")CU_SRCS50,1723
TEST_MAIN_SRC := src/$(PROJECT)/test/test_caffe_main.cppTEST_MAIN_SRC52,1834
TEST_SRCS := $(shell find src/$(PROJECT) -name "test_*.cpp")TEST_SRCS53,1891
TEST_SRCS := $(filter-out $(TEST_MAIN_SRC), $(TEST_SRCS))TEST_SRCS54,1952
TEST_CU_SRCS := $(shell find src/$(PROJECT) -name "test_*.cu")TEST_CU_SRCS55,2010
GTEST_SRC := src/gtest/gtest-all.cppGTEST_SRC56,2073
TOOL_SRCS := $(shell find tools -name "*.cpp")TOOL_SRCS58,2165
EXAMPLE_SRCS := $(shell find examples -name "*.cpp")EXAMPLE_SRCS60,2273
BUILD_INCLUDE_DIR := $(BUILD_DIR)/srcBUILD_INCLUDE_DIR62,2402
PROTO_SRC_DIR := src/$(PROJECT)/protoPROTO_SRC_DIR64,2489
PROTO_SRCS := $(wildcard $(PROTO_SRC_DIR)/*.proto)PROTO_SRCS65,2527
PROTO_BUILD_DIR := $(BUILD_DIR)/$(PROTO_SRC_DIR)PROTO_BUILD_DIR68,2717
PROTO_BUILD_INCLUDE_DIR := $(BUILD_INCLUDE_DIR)/$(PROJECT)/protoPROTO_BUILD_INCLUDE_DIR69,2766
NONGEN_CXX_SRCS := $(shell find \NONGEN_CXX_SRCS72,2939
LINT_SCRIPT := scripts/cpp_lint.pyLINT_SCRIPT80,3154
LINT_OUTPUT_DIR := $(BUILD_DIR)/.lintLINT_OUTPUT_DIR81,3189
LINT_EXT := lint.txtLINT_EXT82,3227
LINT_OUTPUTS := $(addsuffix .$(LINT_EXT), $(addprefix $(LINT_OUTPUT_DIR)/, $(NONGEN_CXX_SRCS)))LINT_OUTPUTS83,3248
EMPTY_LINT_REPORT := $(BUILD_DIR)/.$(LINT_EXT)EMPTY_LINT_REPORT84,3344
NONEMPTY_LINT_REPORT := $(BUILD_DIR)/$(LINT_EXT)NONEMPTY_LINT_REPORT85,3391
PY$(PROJECT)_SRC := python/$(PROJECT)/_$(PROJECT).cpp_SRC87,3496
PY$(PROJECT)_SO := python/$(PROJECT)/_$(PROJECT).so_SO88,3550
PY$(PROJECT)_HXX := include/$(PROJECT)/layers/python_layer.hpp_HXX89,3602
MAT$(PROJECT)_SRC := matlab/+$(PROJECT)/private/$(PROJECT)_.cpp_SRC91,3744
	MAT_SO_EXT := $(shell $(MATLAB_DIR)/bin/mexext)MAT_SO_EXT93,3831
MAT$(PROJECT)_SO := matlab/+$(PROJECT)/private/$(PROJECT)_.$(MAT_SO_EXT)_SO95,3886
PROTO_GEN_HEADER_SRCS := $(addprefix $(PROTO_BUILD_DIR)/, \PROTO_GEN_HEADER_SRCS101,4090
PROTO_GEN_HEADER := $(addprefix $(PROTO_BUILD_INCLUDE_DIR)/, \PROTO_GEN_HEADER103,4190
PROTO_GEN_CC := $(addprefix $(BUILD_DIR)/, ${PROTO_SRCS:.proto=.pb.cc})PROTO_GEN_CC105,4293
PY_PROTO_BUILD_DIR := python/$(PROJECT)/protoPY_PROTO_BUILD_DIR106,4365
PY_PROTO_INIT := python/$(PROJECT)/proto/__init__.pyPY_PROTO_INIT107,4411
PROTO_GEN_PY := $(foreach file,${PROTO_SRCS:.proto=_pb2.py}, \PROTO_GEN_PY108,4464
CXX_OBJS := $(addprefix $(BUILD_DIR)/, ${CXX_SRCS:.cpp=.o})CXX_OBJS113,4733
CU_OBJS := $(addprefix $(BUILD_DIR)/cuda/, ${CU_SRCS:.cu=.o})CU_OBJS114,4793
PROTO_OBJS := ${PROTO_GEN_CC:.cc=.o}PROTO_OBJS115,4855
OBJS := $(PROTO_OBJS) $(CXX_OBJS) $(CU_OBJS)OBJS116,4892
TOOL_OBJS := $(addprefix $(BUILD_DIR)/, ${TOOL_SRCS:.cpp=.o})TOOL_OBJS118,4971
TOOL_BUILD_DIR := $(BUILD_DIR)/toolsTOOL_BUILD_DIR119,5033
TEST_CXX_BUILD_DIR := $(BUILD_DIR)/src/$(PROJECT)/testTEST_CXX_BUILD_DIR120,5070
TEST_CU_BUILD_DIR := $(BUILD_DIR)/cuda/src/$(PROJECT)/testTEST_CU_BUILD_DIR121,5125
TEST_CXX_OBJS := $(addprefix $(BUILD_DIR)/, ${TEST_SRCS:.cpp=.o})TEST_CXX_OBJS122,5184
TEST_CU_OBJS := $(addprefix $(BUILD_DIR)/cuda/, ${TEST_CU_SRCS:.cu=.o})TEST_CU_OBJS123,5250
TEST_OBJS := $(TEST_CXX_OBJS) $(TEST_CU_OBJS)TEST_OBJS124,5322
GTEST_OBJ := $(addprefix $(BUILD_DIR)/, ${GTEST_SRC:.cpp=.o})GTEST_OBJ125,5368
EXAMPLE_OBJS := $(addprefix $(BUILD_DIR)/, ${EXAMPLE_SRCS:.cpp=.o})EXAMPLE_OBJS126,5430
DEPS := ${CXX_OBJS:.o=.d} ${CU_OBJS:.o=.d} ${TEST_CXX_OBJS:.o=.d} \DEPS128,5549
TOOL_BINS := ${TOOL_OBJS:.o=.bin}TOOL_BINS131,5722
EXAMPLE_BINS := ${EXAMPLE_OBJS:.o=.bin}EXAMPLE_BINS132,5756
TOOL_BIN_LINKS := ${TOOL_BINS:.bin=}TOOL_BIN_LINKS134,5849
TEST_BIN_DIR := $(BUILD_DIR)/testTEST_BIN_DIR136,5941
TEST_CU_BINS := $(addsuffix .testbin,$(addprefix $(TEST_BIN_DIR)/, \TEST_CU_BINS137,5975
TEST_CXX_BINS := $(addsuffix .testbin,$(addprefix $(TEST_BIN_DIR)/, \TEST_CXX_BINS139,6108
TEST_BINS := $(TEST_CXX_BINS) $(TEST_CU_BINS)TEST_BINS141,6243
TEST_ALL_BIN := $(TEST_BIN_DIR)/test_all.testbinTEST_ALL_BIN143,6353
WARNS_EXT := warnings.txtWARNS_EXT148,6506
CXX_WARNS := $(addprefix $(BUILD_DIR)/, ${CXX_SRCS:.cpp=.o.$(WARNS_EXT)})CXX_WARNS149,6532
CU_WARNS := $(addprefix $(BUILD_DIR)/cuda/, ${CU_SRCS:.cu=.o.$(WARNS_EXT)})CU_WARNS150,6606
TOOL_WARNS := $(addprefix $(BUILD_DIR)/, ${TOOL_SRCS:.cpp=.o.$(WARNS_EXT)})TOOL_WARNS151,6682
EXAMPLE_WARNS := $(addprefix $(BUILD_DIR)/, ${EXAMPLE_SRCS:.cpp=.o.$(WARNS_EXT)})EXAMPLE_WARNS152,6758
TEST_WARNS := $(addprefix $(BUILD_DIR)/, ${TEST_SRCS:.cpp=.o.$(WARNS_EXT)})TEST_WARNS153,6840
TEST_CU_WARNS := $(addprefix $(BUILD_DIR)/cuda/, ${TEST_CU_SRCS:.cu=.o.$(WARNS_EXT)})TEST_CU_WARNS154,6916
ALL_CXX_WARNS := $(CXX_WARNS) $(TOOL_WARNS) $(EXAMPLE_WARNS) $(TEST_WARNS)ALL_CXX_WARNS155,7002
ALL_CU_WARNS := $(CU_WARNS) $(TEST_CU_WARNS)ALL_CU_WARNS156,7077
ALL_WARNS := $(ALL_CXX_WARNS) $(ALL_CU_WARNS)ALL_WARNS157,7122
EMPTY_WARN_REPORT := $(BUILD_DIR)/.$(WARNS_EXT)EMPTY_WARN_REPORT159,7169
NONEMPTY_WARN_REPORT := $(BUILD_DIR)/$(WARNS_EXT)NONEMPTY_WARN_REPORT160,7217
CUDA_INCLUDE_DIR := $(CUDA_DIR)/includeCUDA_INCLUDE_DIR165,7367
CUDA_LIB_DIR :=CUDA_LIB_DIR167,7408
	LIBRARIES := cudart cublas curandLIBRARIES178,7724
USE_LEVELDB ?= 1USE_LEVELDB184,7871
USE_LMDB ?= 1USE_LMDB185,7888
USE_OPENCV ?= 1USE_OPENCV186,7902
PYTHON_LIBRARIES ?= boost_python python2.7PYTHON_LIBRARIES202,8199
WARNINGS := -Wall -Wno-sign-compareWARNINGS203,8242
DISTRIBUTE_DIR ?= distributeDISTRIBUTE_DIR209,8366
DISTRIBUTE_SUBDIRS := $(DISTRIBUTE_DIR)/bin $(DISTRIBUTE_DIR)/libDISTRIBUTE_SUBDIRS210,8395
DIST_ALIASES := distDIST_ALIASES211,8461
ALL_BUILD_DIRS := $(sort $(BUILD_DIR) $(addprefix $(BUILD_DIR)/, $(SRC_DIRS)) \ALL_BUILD_DIRS216,8564
DOXYGEN_CONFIG_FILE ?= ./.DoxyfileDOXYGEN_CONFIG_FILE224,8935
DOXYGEN_OUTPUT_DIR ?= ./doxygenDOXYGEN_OUTPUT_DIR226,9028
DOXYGEN_COMMAND ?= doxygenDOXYGEN_COMMAND227,9060
DOXYGEN_SOURCES := $(shell find \DOXYGEN_SOURCES229,9142
UNAME := $(shell uname -s)UNAME246,9517
	LINUX := 1LINUX248,9567
	OSX := 1OSX250,9608
	OSX_MAJOR_VERSION := $(shell sw_vers -productVersion | cut -f 1 -d .)OSX_MAJOR_VERSION251,9618
	OSX_MINOR_VERSION := $(shell sw_vers -productVersion | cut -f 2 -d .)OSX_MINOR_VERSION252,9689
	CXX ?= /usr/bin/g++CXX257,9794
	GCCVERSION := $(shell $(CXX) -dumpversion | cut -f1,2 -d.)GCCVERSION258,9815
	CXX := /usr/bin/clang++CXX273,10420
		CUDA_VERSION := $(shell $(CUDA_DIR)/bin/nvcc -V | grep -o 'release [0-9.]*' | tr -d '[a-z ]')CUDA_VERSION275,10469
		OSX_10_OR_LATER   := $(shell [ $(OSX_MAJOR_VERSION) -ge 10 ] && echo true)OSX_10_OR_LATER283,10876
		OSX_10_5_OR_LATER := $(shell [ $(OSX_MINOR_VERSION) -ge 5 ] && echo true)OSX_10_5_OR_LATER284,10953
	ORIGIN := @loader_pathORIGIN296,11432
	ORIGIN := \$$ORIGINORIGIN299,11572
	CXX := $(CUSTOM_CXX)CXX304,11635
	STATIC_LINK_COMMAND := -Wl,-force_load $(STATIC_NAME)STATIC_LINK_COMMAND309,11719
	STATIC_LINK_COMMAND := -Wl,--whole-archive $(STATIC_NAME) -Wl,--no-whole-archiveSTATIC_LINK_COMMAND311,11813
	OBJS := $(PROTO_OBJS) $(CXX_OBJS)OBJS353,12723
	TEST_OBJS := $(TEST_CXX_OBJS)TEST_OBJS354,12758
	TEST_BINS := $(TEST_CXX_BINS)TEST_BINS355,12789
	ALL_WARNS := $(ALL_CXX_WARNS)ALL_WARNS356,12820
	TEST_FILTER := --gtest_filter="-*GPU*"TEST_FILTER357,12851
BLAS ?= atlasBLAS368,13097
	MKLROOT ?= /opt/intel/mklMKLROOT373,13186
	BLAS_INCLUDE ?= $(MKLROOT)/includeBLAS_INCLUDE374,13213
	BLAS_LIB ?= $(MKLROOT)/lib $(MKLROOT)/lib/intel64BLAS_LIB375,13249
		XCODE_CLT_VER := $(shell pkgutil --pkg-info=com.apple.pkg.CLTools_Executables | grep 'version' | sed 's/[^0-9]*\([0-9]\).*/\1/')XCODE_CLT_VER390,13632
		XCODE_CLT_GEQ_7 := $(shell [ $(XCODE_CLT_VER) -gt 6 ] && echo 1)XCODE_CLT_GEQ_7391,13763
		XCODE_CLT_GEQ_6 := $(shell [ $(XCODE_CLT_VER) -gt 5 ] && echo 1)XCODE_CLT_GEQ_6392,13830
			BLAS_INCLUDE ?= /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/$(shell ls /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ | sort | tail -1)/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/HeadersBLAS_INCLUDE394,13928
			BLAS_INCLUDE ?= /System/Library/Frameworks/Accelerate.framework/Versions/Current/Frameworks/vecLib.framework/Headers/BLAS_INCLUDE396,14286
			BLAS_INCLUDE ?= /System/Library/Frameworks/vecLib.framework/Versions/Current/Headers/BLAS_INCLUDE399,14450
MATLAB_CXXFLAGS := $(CXXFLAGS) -Wno-uninitializedMATLAB_CXXFLAGS417,15051
USE_PKG_CONFIG ?= 0USE_PKG_CONFIG420,15158
	PKG_CONFIG := $(shell pkg-config opencv --libs)PKG_CONFIG422,15206
	PKG_CONFIG :=PKG_CONFIG424,15260
PYTHON_LDFLAGS := $(LDFLAGS) $(foreach library,$(PYTHON_LIBRARIES),-l$(library))PYTHON_LDFLAGS428,15409
SUPERCLEAN_EXTS := .so .a .o .bin .testbin .pb.cc .pb.h _pb2.py .cuoSUPERCLEAN_EXTS439,15933
EVERYTHING_TARGETS := all py$(PROJECT) test warn lintEVERYTHING_TARGETS442,16053

grep_try-qnn.sh,0

src/caffe/solver.cpp,1303
namespace caffe {caffe12,218
void Solver<Dtype>::SetActionFunction(ActionCallback func) {SetActionFunction15,262
SolverAction::Enum Solver<Dtype>::GetRequestedAction() {GetRequestedAction20,386
Solver<Dtype>::Solver(const SolverParameter& param)Solver29,641
Solver<Dtype>::Solver(const string& param_file)Solver35,796
void Solver<Dtype>::Init(const SolverParameter& param) {Init43,1029
void Solver<Dtype>::InitTrainNet() {InitTrainNet63,1652
void Solver<Dtype>::InitTestNets() {InitTestNets104,3515
void Solver<Dtype>::Step(int iters) {Step180,6915
void Solver<Dtype>::Solve(const char* resume_file) {Solve270,10091
void Solver<Dtype>::TestAll() {TestAll319,11928
void Solver<Dtype>::Test(const int test_net_id) {Test328,12134
void Solver<Dtype>::Snapshot() {Snapshot403,14750
void Solver<Dtype>::CheckSnapshotWritePermissions() {CheckSnapshotWritePermissions421,15227
string Solver<Dtype>::SnapshotFilename(const string extension) {SnapshotFilename439,15887
string Solver<Dtype>::SnapshotToBinaryProto() {SnapshotToBinaryProto445,16070
string Solver<Dtype>::SnapshotToHDF5() {SnapshotToHDF5455,16434
void Solver<Dtype>::Restore(const char* state_file) {Restore463,16710
void Solver<Dtype>::UpdateSmoothedLoss(Dtype loss, int start_iter,UpdateSmoothedLoss474,17058

src/caffe/util/upgrade_proto.cpp,2302
namespace caffe {caffe13,307
bool NetNeedsUpgrade(const NetParameter& net_param) {NetNeedsUpgrade15,326
bool UpgradeNetAsNeeded(const string& param_file, NetParameter* param) {UpgradeNetAsNeeded21,582
void ReadNetParamsFromTextFileOrDie(const string& param_file,ReadNetParamsFromTextFileOrDie86,3686
void ReadNetParamsFromBinaryFileOrDie(const string& param_file,ReadNetParamsFromBinaryFileOrDie93,3963
bool NetNeedsV0ToV1Upgrade(const NetParameter& net_param) {NetNeedsV0ToV1Upgrade100,4246
bool NetNeedsV1ToV2Upgrade(const NetParameter& net_param) {NetNeedsV1ToV2Upgrade109,4451
bool UpgradeV0Net(const NetParameter& v0_net_param_padding_layers,UpgradeV0Net113,4552
void UpgradeV0PaddingLayers(const NetParameter& param,UpgradeV0PaddingLayers140,5584
bool UpgradeV0LayerParameter(const V1LayerParameter& v0_layer_connection,UpgradeV0LayerParameter199,8363
V1LayerParameter_LayerType UpgradeV0LayerType(const string& type) {UpgradeV0LayerType551,21690
bool NetNeedsDataUpgrade(const NetParameter& net_param) {NetNeedsDataUpgrade606,23872
#define CONVERT_LAYER_TRANSFORM_PARAM(CONVERT_LAYER_TRANSFORM_PARAM633,25136
void UpgradeNetDataTransformation(NetParameter* net_param) {UpgradeNetDataTransformation659,26171
bool UpgradeV1Net(const NetParameter& v1_net_param, NetParameter* net_param) {UpgradeV1Net667,26490
bool UpgradeV1LayerParameter(const V1LayerParameter& v1_layer_param,UpgradeV1LayerParameter689,27437
const char* UpgradeV1LayerType(const V1LayerParameter_LayerType type) {UpgradeV1LayerType874,34333
bool NetNeedsInputUpgrade(const NetParameter& net_param) {NetNeedsInputUpgrade962,37244
void UpgradeNetInput(NetParameter* net_param) {UpgradeNetInput966,37343
bool NetNeedsBatchNormUpgrade(const NetParameter& net_param) {NetNeedsBatchNormUpgrade1003,38823
void UpgradeNetBatchNorm(NetParameter* net_param) {UpgradeNetBatchNorm1015,39209
bool SolverNeedsTypeUpgrade(const SolverParameter& solver_param) {SolverNeedsTypeUpgrade1033,39970
bool UpgradeSolverType(SolverParameter* solver_param) {UpgradeSolverType1040,40117
bool UpgradeSolverAsNeeded(const string& param_file, SolverParameter* param) {UpgradeSolverAsNeeded1078,41325
void ReadSolverParamsFromTextFileOrDie(const string& param_file,ReadSolverParamsFromTextFileOrDie1099,42267

src/caffe/util/io.cpp,1472
const int kProtoReadBytesLimit = INT_MAX;  // Max size of 2 GB minus 1 byte.kProtoReadBytesLimit22,571
namespace caffe {caffe24,649
bool ReadProtoFromTextFile(const char* filename, Message* proto) {ReadProtoFromTextFile34,985
void WriteProtoToTextFile(const Message& proto, const char* filename) {WriteProtoToTextFile44,1313
bool ReadProtoFromBinaryFile(const char* filename, Message* proto) {ReadProtoFromBinaryFile52,1597
void WriteProtoToBinaryFile(const Message& proto, const char* filename) {WriteProtoToBinaryFile67,2089
cv::Mat ReadImageToCVMat(const string& filename,ReadImageToCVMat73,2293
cv::Mat ReadImageToCVMat(const string& filename,ReadImageToCVMat91,2850
cv::Mat ReadImageToCVMat(const string& filename,ReadImageToCVMat96,3001
cv::Mat ReadImageToCVMat(const string& filename) {ReadImageToCVMat101,3133
static bool matchExt(const std::string & fn,matchExt106,3281
bool ReadImageToDatum(const string& filename, const int label,ReadImageToDatum119,3686
bool ReadFileToDatum(const string& filename, const int label,ReadFileToDatum145,4554
cv::Mat DecodeDatumToCVMatNative(const Datum& datum) {DecodeDatumToCVMatNative166,5047
cv::Mat DecodeDatumToCVMat(const Datum& datum, bool is_color) {DecodeDatumToCVMat177,5407
bool DecodeDatumNative(Datum* datum) {DecodeDatumNative193,5993
bool DecodeDatum(Datum* datum, bool is_color) {DecodeDatum202,6200
void CVMatToDatum(const cv::Mat& cv_img, Datum* datum) {CVMatToDatum212,6421

src/caffe/util/hdf5.cpp,948
namespace caffe {caffe6,69
void hdf5_load_nd_dataset_helper(hdf5_load_nd_dataset_helper10,192
void hdf5_load_nd_dataset<float>(hid_t file_id, const char* dataset_name_,hdf5_load_nd_dataset87,2813
void hdf5_load_nd_dataset<double>(hid_t file_id, const char* dataset_name_,hdf5_load_nd_dataset97,3262
void hdf5_save_nd_dataset<float>(hdf5_save_nd_dataset107,3715
void hdf5_save_nd_dataset<double>(hdf5_save_nd_dataset128,4317
string hdf5_load_string(hid_t loc_id, const string& dataset_name) {hdf5_load_string148,4906
void hdf5_save_string(hid_t loc_id, const string& dataset_name,hdf5_save_string164,5449
int hdf5_load_int(hid_t loc_id, const string& dataset_name) {hdf5_load_int172,5736
void hdf5_save_int(hid_t loc_id, const string& dataset_name, int i) {hdf5_save_int180,5988
int hdf5_get_num_links(hid_t loc_id) {hdf5_get_num_links188,6255
string hdf5_get_name_by_idx(hid_t loc_id, int idx) {hdf5_get_name_by_idx195,6445

src/caffe/util/db_lmdb.cpp,453
namespace caffe { namespace db {caffe8,93
namespace caffe { namespace db {db8,93
void LMDB::Open(const string& source, Mode mode) {Open10,127
LMDBCursor* LMDB::NewCursor() {NewCursor38,958
LMDBTransaction* LMDB::NewTransaction() {NewTransaction47,1269
void LMDBTransaction::Put(const string& key, const string& value) {Put51,1354
void LMDBTransaction::Commit() {Commit56,1475
void LMDBTransaction::DoubleMapSize() {DoubleMapSize103,2779

src/caffe/util/im2col.cpp,554
namespace caffe {caffe6,94
inline bool is_a_ge_zero_and_a_lt_b(int a, int b) {is_a_ge_zero_and_a_lt_b14,524
void im2col_cpu(const Dtype* data_im, const int channels,im2col_cpu19,667
inline void im2col_nd_core_cpu(const Dtype* data_input, const bool im2col,im2col_nd_core_cpu70,2865
void im2col_nd_cpu(const Dtype* data_im, const int num_spatial_axes,im2col_nd_cpu141,5457
void col2im_cpu(const Dtype* data_col, const int channels,col2im_cpu163,6399
void col2im_nd_cpu(const Dtype* data_col, const int num_spatial_axes,col2im_nd_cpu212,8533

src/caffe/util/db.cpp,186
namespace caffe { namespace db {caffe7,120
namespace caffe { namespace db {db7,120
DB* GetDB(DataParameter::DB backend) {GetDB9,154
DB* GetDB(const string& backend) {GetDB25,485

src/caffe/util/cudnn.cpp,456
namespace caffe {caffe4,50
namespace cudnn {cudnn5,68
float dataType<float>::oneval = 1.0;oneval7,87
float dataType<float>::zeroval = 0.0;zeroval8,124
const void* dataType<float>::one =one9,162
const void* dataType<float>::zero =zero11,248
double dataType<double>::oneval = 1.0;oneval14,337
double dataType<double>::zeroval = 0.0;zeroval15,376
const void* dataType<double>::one =one16,416
const void* dataType<double>::zero =zero18,504

src/caffe/util/db_leveldb.cpp,150
namespace caffe { namespace db {caffe6,76
namespace caffe { namespace db {db6,76
void LevelDB::Open(const string& source, Mode mode) {Open8,110

src/caffe/util/insert_splits.cpp,421
namespace caffe {caffe10,162
void InsertSplits(const NetParameter& param, NetParameter* param_split) {InsertSplits12,181
void ConfigureSplitLayer(const string& layer_name, const string& blob_name,ConfigureSplitLayer90,3806
string SplitLayerName(const string& layer_name, const string& blob_name,SplitLayerName110,4506
string SplitBlobName(const string& layer_name, const string& blob_name,SplitBlobName118,4766

src/caffe/util/qnn.cpp,203
namespace caffecaffe19,311
  void Linear_quant(double& scaling_factor, double& min_value, double& max_value)Linear_quant22,357
  double Weight_Quantization(Dtype weights)Weight_Quantization71,2363

src/caffe/util/signal_handler.cpp,768
  static volatile sig_atomic_t got_sigint = false;got_sigint10,145
  static volatile sig_atomic_t got_sighup = false;got_sighup11,196
  static bool already_hooked_up = false;already_hooked_up12,247
  void handle_signal(int signal) {handle_signal14,289
  void HookupHandler() {HookupHandler25,467
  void UnhookHandler() {UnhookHandler48,1167
  bool GotSIGINT() {GotSIGINT71,1885
  bool GotSIGHUP() {GotSIGHUP79,2083
namespace caffe {caffe86,2198
SignalHandler::SignalHandler(SolverAction::Enum SIGINT_action,SignalHandler88,2217
SignalHandler::~SignalHandler() {~SignalHandler95,2433
SolverAction::Enum SignalHandler::CheckForSignals() const {CheckForSignals99,2489
ActionCallback SignalHandler::GetActionFunction() {GetActionFunction111,2795

src/caffe/util/benchmark.cpp,565
namespace caffe {caffe6,119
Timer::Timer()Timer8,138
Timer::~Timer() {~Timer15,250
void Timer::Start() {Start26,445
void Timer::Stop() {Stop42,770
float Timer::MicroSeconds() {MicroSeconds58,1058
float Timer::MilliSeconds() {MilliSeconds82,1716
float Timer::Seconds() {Seconds104,2278
void Timer::Init() {Init108,2339
CPUTimer::CPUTimer() {CPUTimer122,2592
void CPUTimer::Start() {Start128,2709
void CPUTimer::Stop() {Stop136,2901
float CPUTimer::MilliSeconds() {MilliSeconds143,3050
float CPUTimer::MicroSeconds() {MicroSeconds156,3403

src/caffe/util/math_functions.cpp,4167
namespace caffe {caffe10,197
void caffe_cpu_gemm<float>(const CBLAS_TRANSPOSE TransA,caffe_cpu_gemm13,227
void caffe_cpu_gemm<double>(const CBLAS_TRANSPOSE TransA,caffe_cpu_gemm24,648
void caffe_cpu_gemv<float>(const CBLAS_TRANSPOSE TransA, const int M,caffe_cpu_gemv35,1076
void caffe_cpu_gemv<double>(const CBLAS_TRANSPOSE TransA, const int M,caffe_cpu_gemv42,1338
void caffe_axpy<float>(const int N, const float alpha, const float* X,caffe_axpy49,1606
void caffe_axpy<double>(const int N, const double alpha, const double* X,caffe_axpy53,1743
void caffe_set(const int N, const Dtype alpha, Dtype* Y) {caffe_set57,1898
void caffe_add_scalar(const int N, const float alpha, float* Y) {caffe_add_scalar72,2344
void caffe_add_scalar(const int N, const double alpha, double* Y) {caffe_add_scalar79,2480
void caffe_copy(const int N, const Dtype* X, Dtype* Y) {caffe_copy86,2632
void caffe_scal<float>(const int N, const float alpha, float *X) {caffe_scal108,3315
void caffe_scal<double>(const int N, const double alpha, double *X) {caffe_scal113,3428
void caffe_cpu_axpby<float>(const int N, const float alpha, const float* X,caffe_cpu_axpby118,3544
void caffe_cpu_axpby<double>(const int N, const double alpha, const double* X,caffe_cpu_axpby124,3737
void caffe_add<float>(const int n, const float* a, const float* b,caffe_add130,3936
void caffe_add<double>(const int n, const double* a, const double* b,caffe_add136,4055
void caffe_sub<float>(const int n, const float* a, const float* b,caffe_sub142,4178
void caffe_sub<double>(const int n, const double* a, const double* b,caffe_sub148,4297
void caffe_mul<float>(const int n, const float* a, const float* b,caffe_mul154,4420
void caffe_mul<double>(const int n, const double* a, const double* b,caffe_mul160,4539
void caffe_div<float>(const int n, const float* a, const float* b,caffe_div166,4662
void caffe_div<double>(const int n, const double* a, const double* b,caffe_div172,4781
void caffe_powx<float>(const int n, const float* a, const float b,caffe_powx178,4904
void caffe_powx<double>(const int n, const double* a, const double b,caffe_powx184,5024
void caffe_sqr<float>(const int n, const float* a, float* y) {caffe_sqr190,5148
void caffe_sqr<double>(const int n, const double* a, double* y) {caffe_sqr195,5244
void caffe_sqrt<float>(const int n, const float* a, float* y) {caffe_sqrt200,5343
void caffe_sqrt<double>(const int n, const double* a, double* y) {caffe_sqrt205,5441
void caffe_exp<float>(const int n, const float* a, float* y) {caffe_exp210,5542
void caffe_exp<double>(const int n, const double* a, double* y) {caffe_exp215,5638
void caffe_log<float>(const int n, const float* a, float* y) {caffe_log220,5737
void caffe_log<double>(const int n, const double* a, double* y) {caffe_log225,5832
void caffe_abs<float>(const int n, const float* a, float* y) {caffe_abs230,5930
void caffe_abs<double>(const int n, const double* a, double* y) {caffe_abs235,6028
unsigned int caffe_rng_rand() {caffe_rng_rand239,6117
Dtype caffe_nextafter(const Dtype b) {caffe_nextafter244,6205
void caffe_rng_uniform(const int n, const Dtype a, const Dtype b, Dtype* r) {caffe_rng_uniform256,6456
void caffe_rng_gaussian(const int n, const Dtype a,caffe_rng_gaussian277,7142
void caffe_rng_bernoulli(const int n, const Dtype p, int* r) {caffe_rng_bernoulli299,7869
void caffe_rng_bernoulli(const int n, const Dtype p, unsigned int* r) {caffe_rng_bernoulli319,8458
float caffe_cpu_strided_dot<float>(const int n, const float* x, const int incx,caffe_cpu_strided_dot339,9087
double caffe_cpu_strided_dot<double>(const int n, const double* x,caffe_cpu_strided_dot345,9262
Dtype caffe_cpu_dot(const int n, const Dtype* x, const Dtype* y) {caffe_cpu_dot351,9455
float caffe_cpu_asum<float>(const int n, const float* x) {caffe_cpu_asum362,9754
double caffe_cpu_asum<double>(const int n, const double* x) {caffe_cpu_asum367,9859
void caffe_cpu_scale<float>(const int n, const float alpha, const float *x,caffe_cpu_scale372,9967
void caffe_cpu_scale<double>(const int n, const double alpha, const double *x,caffe_cpu_scale379,10159

src/caffe/util/blocking_queue.cpp,555
namespace caffe {caffe8,163
class BlockingQueue<T>::sync {sync11,203
  mutable boost::mutex mutex_;mutex_13,243
  boost::condition_variable condition_;condition_14,274
BlockingQueue<T>::BlockingQueue()BlockingQueue18,339
void BlockingQueue<T>::push(const T& t) {push23,423
bool BlockingQueue<T>::try_pop(T* t) {try_pop31,607
T BlockingQueue<T>::pop(const string& log_on_wait) {pop44,821
bool BlockingQueue<T>::try_peek(T* t) {try_peek60,1149
T BlockingQueue<T>::peek() {peek72,1348
size_t BlockingQueue<T>::size() const {size83,1542

src/caffe/net.cpp,2734
namespace caffe {caffe20,423
Net<Dtype>::Net(const NetParameter& param) {Net23,468
Net<Dtype>::Net(const string& param_file, Phase phase,Net28,557
void Net<Dtype>::Init(const NetParameter& in_param) {Init44,1039
void Net<Dtype>::FilterNet(const NetParameter& param,FilterNet259,10623
bool Net<Dtype>::StateMeetsRule(const NetState& state,StateMeetsRule289,11843
void Net<Dtype>::AppendTop(const NetParameter& param, const int layer_id,AppendTop356,14450
int Net<Dtype>::AppendBottom(const NetParameter& param, const int layer_id,AppendBottom396,16307
void Net<Dtype>::AppendParam(const NetParameter& param, const int layer_id,AppendParam421,17449
Dtype Net<Dtype>::ForwardFromTo(int start, int end) {ForwardFromTo516,22158
Dtype Net<Dtype>::ForwardFrom(int start) {ForwardFrom535,22705
Dtype Net<Dtype>::ForwardTo(int end) {ForwardTo540,22828
const vector<Blob<Dtype>*>& Net<Dtype>::Forward(Dtype* loss) {Forward545,22928
const vector<Blob<Dtype>*>& Net<Dtype>::Forward(Forward555,23177
void Net<Dtype>::BackwardFromTo(int start, int end) {BackwardFromTo567,23599
void Net<Dtype>::ForwardDebugInfo(const int layer_id) {ForwardDebugInfo586,24158
void Net<Dtype>::BackwardDebugInfo(const int layer_id) {BackwardDebugInfo612,25278
void Net<Dtype>::UpdateDebugInfo(const int param_id) {UpdateDebugInfo639,26480
void Net<Dtype>::ShareTrainedLayersWith(const Net* other) {ShareTrainedLayersWith665,27618
void Net<Dtype>::BackwardFrom(int start) {BackwardFrom697,29040
void Net<Dtype>::BackwardTo(int end) {BackwardTo702,29140
void Net<Dtype>::Backward() {Backward707,29251
void Net<Dtype>::Reshape() {Reshape726,30055
void Net<Dtype>::CopyTrainedLayersFrom(const NetParameter& param) {CopyTrainedLayersFrom733,30218
void Net<Dtype>::CopyTrainedLayersFrom(const string trained_filename) {CopyTrainedLayersFrom771,31927
void Net<Dtype>::CopyTrainedLayersFromBinaryProto(CopyTrainedLayersFromBinaryProto780,32194
void Net<Dtype>::CopyTrainedLayersFromHDF5(const string trained_filename) {CopyTrainedLayersFromHDF5788,32427
void Net<Dtype>::ToProto(NetParameter* param, bool write_diff) const {ToProto838,34609
void Net<Dtype>::ToHDF5(const string& filename, bool write_diff) const {ToHDF5850,34993
void Net<Dtype>::Update() {Update907,37172
void Net<Dtype>::ClearParamDiffs() {ClearParamDiffs914,37324
void Net<Dtype>::ShareWeights() {ShareWeights935,37844
bool Net<Dtype>::has_blob(const string& blob_name) const {has_blob944,38110
const shared_ptr<Blob<Dtype> > Net<Dtype>::blob_by_name(blob_by_name949,38269
bool Net<Dtype>::has_layer(const string& layer_name) const {has_layer962,38655
const shared_ptr<Layer<Dtype> > Net<Dtype>::layer_by_name(layer_by_name967,38819

src/caffe/common.cpp,2410
namespace caffe {caffe10,166
static boost::thread_specific_ptr<Caffe> thread_instance_;thread_instance_13,237
Caffe& Caffe::Get() {Get15,297
int64_t cluster_seedgen(void) {cluster_seedgen23,454
void GlobalInit(int* pargc, char*** pargv) {GlobalInit43,916
Caffe::Caffe()Caffe54,1221
Caffe::~Caffe() { }~Caffe58,1349
void Caffe::set_random_seed(const unsigned int seed) {set_random_seed60,1370
void Caffe::SetDevice(const int device_id) {SetDevice65,1490
void Caffe::DeviceQuery() {DeviceQuery69,1548
bool Caffe::CheckDevice(const int device_id) {CheckDevice73,1589
int Caffe::FindDevice(const int start_id) {FindDevice78,1665
class Caffe::RNG::Generator {Generator83,1735
  Generator() : rng_(new caffe::rng_t(cluster_seedgen())) {}Generator85,1774
  explicit Generator(unsigned int seed) : rng_(new caffe::rng_t(seed)) {}Generator86,1835
  caffe::rng_t* rng() { return rng_.get(); }rng87,1909
  shared_ptr<caffe::rng_t> rng_;rng_89,1964
Caffe::RNG::RNG() : generator_(new Generator()) { }RNG92,2001
Caffe::RNG::RNG(unsigned int seed) : generator_(new Generator(seed)) { }RNG94,2054
Caffe::RNG& Caffe::RNG::operator=(const RNG& other) {operator =96,2128
void* Caffe::RNG::generator() {generator101,2234
Caffe::Caffe()Caffe107,2352
Caffe::~Caffe() {~Caffe125,3168
void Caffe::set_random_seed(const unsigned int seed) {set_random_seed132,3348
void Caffe::SetDevice(const int device_id) {SetDevice150,3925
void Caffe::DeviceQuery() {DeviceQuery170,4689
bool Caffe::CheckDevice(const int device_id) {CheckDevice205,6401
int Caffe::FindDevice(const int start_id) {FindDevice226,7412
class Caffe::RNG::Generator {Generator239,7893
  Generator() : rng_(new caffe::rng_t(cluster_seedgen())) {}Generator241,7932
  explicit Generator(unsigned int seed) : rng_(new caffe::rng_t(seed)) {}Generator242,7993
  caffe::rng_t* rng() { return rng_.get(); }rng243,8067
  shared_ptr<caffe::rng_t> rng_;rng_245,8122
Caffe::RNG::RNG() : generator_(new Generator()) { }RNG248,8159
Caffe::RNG::RNG(unsigned int seed) : generator_(new Generator(seed)) { }RNG250,8212
Caffe::RNG& Caffe::RNG::operator=(const RNG& other) {operator =252,8286
void* Caffe::RNG::generator() {generator257,8403
const char* cublasGetErrorString(cublasStatus_t error) {cublasGetErrorString261,8486
const char* curandGetErrorString(curandStatus_t error) {curandGetErrorString291,9445

src/caffe/layer_factory.cpp,770
namespace caffe {caffe34,1022
shared_ptr<Layer<Dtype> > GetConvolutionLayer(GetConvolutionLayer38,1113
shared_ptr<Layer<Dtype> > GetPoolingLayer(const LayerParameter& param) {GetPoolingLayer78,2407
shared_ptr<Layer<Dtype> > GetLRNLayer(const LayerParameter& param) {GetLRNLayer116,3942
shared_ptr<Layer<Dtype> > GetReLULayer(const LayerParameter& param) {GetReLULayer154,5167
shared_ptr<Layer<Dtype> > GetSigmoidLayer(const LayerParameter& param) {GetSigmoidLayer178,5964
shared_ptr<Layer<Dtype> > GetSoftmaxLayer(const LayerParameter& param) {GetSoftmaxLayer202,6797
shared_ptr<Layer<Dtype> > GetTanHLayer(const LayerParameter& param) {GetTanHLayer226,7627
shared_ptr<Layer<Dtype> > GetPythonLayer(const LayerParameter& param) {GetPythonLayer250,8407

src/caffe/parallel.cpp,1960
namespace caffe {caffe14,235
enum Op {Op16,254
  copy,copy17,264
  replace_cpu,replace_cpu18,272
  replace_gpu,replace_gpu19,287
  replace_cpu_diff,replace_cpu_diff20,302
  replace_gpu_diffreplace_gpu_diff21,322
static void apply_buffers(const vector<Blob<Dtype>*>& blobs,apply_buffers25,370
static size_t total_size(const vector<Blob<Dtype>*>& params) {total_size59,1385
Params<Dtype>::Params(shared_ptr<Solver<Dtype> > root_solver)Params69,1703
GPUParams<Dtype>::GPUParams(shared_ptr<Solver<Dtype> > root_solver, int device)GPUParams76,1890
GPUParams<Dtype>::~GPUParams() {~GPUParams97,2513
void GPUParams<Dtype>::Configure(Solver<Dtype>* solver) const {Configure103,2636
static int getDevice() {getDevice110,2881
NCCL<Dtype>::NCCL(shared_ptr<Solver<Dtype> > solver)NCCL117,3007
NCCL<Dtype>::NCCL(shared_ptr<Solver<Dtype> > solver, const string& uid)NCCL125,3217
void NCCL<Dtype>::Init() {Init140,3757
NCCL<Dtype>::~NCCL() {~NCCL147,3938
boost::barrier* NCCL<Dtype>::barrier() {barrier157,4130
void NCCL<Dtype>::set_barrier(boost::barrier* value) {set_barrier161,4217
void NCCL<Dtype>::InitSingleProcess(vector<NCCL<Dtype>*>* nccls) {InitSingleProcess166,4320
string NCCL<Dtype>::new_uid() {new_uid179,4783
void NCCL<Dtype>::Broadcast() {Broadcast189,5051
void NCCL<Dtype>::run(int layer) {run202,5391
void NCCL<Dtype>::on_gradients_ready() {on_gradients_ready238,6726
class Worker : public InternalThread {Worker259,7526
  explicit Worker(shared_ptr<Solver<Dtype> > rank0, int device,Worker261,7574
  virtual ~Worker() {}~Worker267,7851
  void InternalThreadEntry() {InternalThreadEntry270,7887
  shared_ptr<Solver<Dtype> > rank0_;rank0_320,9577
  int device_;device_321,9614
  boost::barrier* barrier_;barrier_322,9629
  vector<NCCL<Dtype>*>* nccls_;nccls_323,9657
  const char* restore_;restore_324,9689
void NCCL<Dtype>::Run(const vector<int>& gpus, const char* restore) {Run328,9742

src/caffe/syncedmem.cpp,822
namespace caffe {caffe5,101
SyncedMemory::SyncedMemory()SyncedMemory6,119
SyncedMemory::SyncedMemory(size_t size)SyncedMemory16,380
SyncedMemory::~SyncedMemory() {~SyncedMemory26,655
inline void SyncedMemory::to_cpu() {to_cpu39,911
inline void SyncedMemory::to_gpu() {to_gpu66,1490
const void* SyncedMemory::cpu_data() {cpu_data93,2039
void SyncedMemory::set_cpu_data(void* data) {set_cpu_data99,2143
const void* SyncedMemory::gpu_data() {gpu_data110,2370
void SyncedMemory::set_gpu_data(void* data) {set_gpu_data121,2529
void* SyncedMemory::mutable_cpu_data() {mutable_cpu_data136,2781
void* SyncedMemory::mutable_gpu_data() {mutable_gpu_data143,2897
void SyncedMemory::async_gpu_push(const cudaStream_t& stream) {async_gpu_push156,3085
void SyncedMemory::check_device() {check_device170,3513

src/caffe/test/test_lrn_layer.cpp,2446
namespace caffe {caffe22,427
class LRNLayerTest : public MultiDeviceTest<TypeParam> {LRNLayerTest25,476
  typedef typename TypeParam::Dtype Dtype;Dtype26,533
  LRNLayerTest()LRNLayerTest29,589
  virtual void SetUp() {SetUp33,718
  virtual ~LRNLayerTest() { delete blob_bottom_; delete blob_top_; }~LRNLayerTest43,1048
  Dtype epsilon_;epsilon_47,1242
  Blob<Dtype>* const blob_bottom_;blob_bottom_48,1260
  Blob<Dtype>* const blob_top_;blob_top_49,1295
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_50,1327
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_51,1368
void LRNLayerTest<TypeParam>::ReferenceLRNForward(ReferenceLRNForward55,1440
TYPED_TEST(LRNLayerTest, TestSetupAcrossChannels) {TYPED_TEST119,3955
TYPED_TEST(LRNLayerTest, TestForwardAcrossChannels) {TYPED_TEST130,4351
TYPED_TEST(LRNLayerTest, TestForwardAcrossChannelsLargeRegion) {TYPED_TEST145,4929
TYPED_TEST(LRNLayerTest, TestGradientAcrossChannels) {TYPED_TEST161,5573
TYPED_TEST(LRNLayerTest, TestGradientAcrossChannelsLargeRegion) {TYPED_TEST182,6438
TYPED_TEST(LRNLayerTest, TestSetupWithinChannel) {TYPED_TEST204,7369
TYPED_TEST(LRNLayerTest, TestForwardWithinChannel) {TYPED_TEST218,7917
TYPED_TEST(LRNLayerTest, TestGradientWithinChannel) {TYPED_TEST236,8647
class CuDNNLRNLayerTest : public GPUDeviceTest<Dtype> {CuDNNLRNLayerTest255,9381
  CuDNNLRNLayerTest()CuDNNLRNLayerTest257,9449
  virtual void SetUp() {SetUp261,9583
  virtual ~CuDNNLRNLayerTest() { delete blob_bottom_; delete blob_top_; }~CuDNNLRNLayerTest271,9913
  Dtype epsilon_;epsilon_275,10112
  Blob<Dtype>* const blob_bottom_;blob_bottom_276,10130
  Blob<Dtype>* const blob_top_;blob_top_277,10165
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_278,10197
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_279,10238
void CuDNNLRNLayerTest<TypeParam>::ReferenceLRNForward(ReferenceLRNForward283,10310
TYPED_TEST(CuDNNLRNLayerTest, TestForwardAcrossChannelsCuDNN) {TYPED_TEST347,12817
TYPED_TEST(CuDNNLRNLayerTest, TestForwardAcrossChannelsLargeRegionCuDNN) {TYPED_TEST362,13421
TYPED_TEST(CuDNNLRNLayerTest, TestGradientAcrossChannelsCuDNN) {TYPED_TEST378,14064
TYPED_TEST(CuDNNLRNLayerTest, TestForwardWithinChannel) {TYPED_TEST395,14766
TYPED_TEST(CuDNNLRNLayerTest, TestGradientWithinChannel) {TYPED_TEST413,15490
TYPED_TEST(CuDNNLRNLayerTest, TestGradientAcrossChannelsLargeRegionCuDNN) {TYPED_TEST430,16175

src/caffe/test/test_random_number_generator.cpp,3478
namespace caffe {caffe11,188
class RandomNumberGeneratorTest : public ::testing::Test {RandomNumberGeneratorTest14,233
  RandomNumberGeneratorTest()RandomNumberGeneratorTest16,304
  virtual void SetUp() {SetUp25,718
  Dtype sample_mean(const Dtype* const seqs, const int sample_size) {sample_mean29,789
  Dtype sample_mean(const Dtype* const seqs) {sample_mean37,985
  Dtype sample_mean(const int* const seqs, const int sample_size) {sample_mean41,1081
  Dtype sample_mean(const int* const seqs) {sample_mean49,1282
  Dtype mean_bound(const Dtype std, const int sample_size) {mean_bound53,1376
  Dtype mean_bound(const Dtype std) {mean_bound57,1523
  void RngGaussianFill(const Dtype mu, const Dtype sigma, void* cpu_data) {RngGaussianFill61,1608
  void RngGaussianChecks(const Dtype mu, const Dtype sigma,RngGaussianChecks66,1801
  void RngUniformFill(const Dtype lower, const Dtype upper, void* cpu_data) {RngUniformFill104,3232
  void RngUniformChecks(const Dtype lower, const Dtype upper,RngUniformChecks110,3457
  void RngBernoulliFill(const Dtype p, void* cpu_data) {RngBernoulliFill157,5202
  void RngBernoulliChecks(const Dtype p, const void* cpu_data) {RngBernoulliChecks162,5365
  void RngGaussianFillGPU(const Dtype mu, const Dtype sigma, void* gpu_data) {RngGaussianFillGPU173,5750
  void RngUniformFillGPU(const Dtype lower, const Dtype upper, void* gpu_data) {RngUniformFillGPU178,5950
  void RngUniformIntFillGPU(void* gpu_data) {RngUniformIntFillGPU186,6285
  int num_above_mean;num_above_mean193,6462
  int num_below_mean;num_below_mean194,6484
  Dtype mean_bound_multiplier_;mean_bound_multiplier_196,6507
  size_t sample_size_;sample_size_198,6540
  uint32_t seed_;seed_199,6563
  shared_ptr<SyncedMemory> data_;data_201,6582
  shared_ptr<SyncedMemory> data_2_;data_2_202,6616
  shared_ptr<SyncedMemory> int_data_;int_data_203,6652
  shared_ptr<SyncedMemory> int_data_2_;int_data_2_204,6690
TYPED_TEST(RandomNumberGeneratorTest, TestRngGaussian) {TYPED_TEST209,6791
TYPED_TEST(RandomNumberGeneratorTest, TestRngGaussian2) {TYPED_TEST218,7068
TYPED_TEST(RandomNumberGeneratorTest, TestRngUniform) {TYPED_TEST227,7347
TYPED_TEST(RandomNumberGeneratorTest, TestRngUniform2) {TYPED_TEST236,7627
TYPED_TEST(RandomNumberGeneratorTest, TestRngBernoulli) {TYPED_TEST245,7914
TYPED_TEST(RandomNumberGeneratorTest, TestRngBernoulli2) {TYPED_TEST253,8157
TYPED_TEST(RandomNumberGeneratorTest, TestRngGaussianTimesGaussian) {TYPED_TEST261,8401
TYPED_TEST(RandomNumberGeneratorTest, TestRngUniformTimesUniform) {TYPED_TEST287,9226
TYPED_TEST(RandomNumberGeneratorTest, TestRngGaussianTimesBernoulli) {TYPED_TEST315,10239
TYPED_TEST(RandomNumberGeneratorTest, TestRngUniformTimesBernoulli) {TYPED_TEST340,11099
TYPED_TEST(RandomNumberGeneratorTest, TestRngBernoulliTimesBernoulli) {TYPED_TEST365,11985
TYPED_TEST(RandomNumberGeneratorTest, TestRngGaussianGPU) {TYPED_TEST400,13150
TYPED_TEST(RandomNumberGeneratorTest, TestRngGaussian2GPU) {TYPED_TEST410,13496
TYPED_TEST(RandomNumberGeneratorTest, TestRngUniformGPU) {TYPED_TEST420,13844
TYPED_TEST(RandomNumberGeneratorTest, TestRngUniform2GPU) {TYPED_TEST430,14192
TYPED_TEST(RandomNumberGeneratorTest, TestRngUniformIntGPU) {TYPED_TEST440,14547
TYPED_TEST(RandomNumberGeneratorTest, TestRngGaussianTimesGaussianGPU) {TYPED_TEST457,15226
TYPED_TEST(RandomNumberGeneratorTest, TestRngUniformTimesUniformGPU) {TYPED_TEST488,16353

src/caffe/test/test_caffe_main.cpp,141
namespace caffe {caffe4,70
  cudaDeviceProp CAFFE_TEST_CUDA_PROP;CAFFE_TEST_CUDA_PROP6,105
int main(int argc, char** argv) {main14,214

src/caffe/test/test_im2col_layer.cpp,1069
namespace caffe {caffe13,263
class Im2colLayerTest : public MultiDeviceTest<TypeParam> {Im2colLayerTest16,312
  typedef typename TypeParam::Dtype Dtype;Dtype17,372
  Im2colLayerTest()Im2colLayerTest19,427
  virtual ~Im2colLayerTest() { delete blob_bottom_; delete blob_top_; }~Im2colLayerTest30,803
  Blob<Dtype>* const blob_bottom_;blob_bottom_31,875
  Blob<Dtype>* const blob_top_;blob_top_32,910
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_33,942
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_34,983
TYPED_TEST(Im2colLayerTest, TestSetup) {TYPED_TEST39,1082
TYPED_TEST(Im2colLayerTest, TestForward) {TYPED_TEST61,1868
TYPED_TEST(Im2colLayerTest, TestGradient) {TYPED_TEST78,2533
TYPED_TEST(Im2colLayerTest, TestDilatedGradient) {TYPED_TEST91,3002
TYPED_TEST(Im2colLayerTest, TestGradientForceND) {TYPED_TEST111,3734
TYPED_TEST(Im2colLayerTest, TestDilatedGradientForceND) {TYPED_TEST125,4258
TYPED_TEST(Im2colLayerTest, TestRect) {TYPED_TEST146,5045
TYPED_TEST(Im2colLayerTest, TestRectGradient) {TYPED_TEST164,5743

src/caffe/test/test_dummy_data_layer.cpp,780
namespace caffe {caffe13,240
class DummyDataLayerTest : public CPUDeviceTest<Dtype> {DummyDataLayerTest16,285
  DummyDataLayerTest()DummyDataLayerTest18,354
  virtual void SetUp() {SetUp23,500
  virtual ~DummyDataLayerTest() {~DummyDataLayerTest31,713
  Blob<Dtype>* const blob_top_a_;blob_top_a_37,824
  Blob<Dtype>* const blob_top_b_;blob_top_b_38,858
  Blob<Dtype>* const blob_top_c_;blob_top_c_39,892
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_40,926
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_41,967
TYPED_TEST(DummyDataLayerTest, TestOneTopConstant) {TYPED_TEST46,1059
TYPED_TEST(DummyDataLayerTest, TestTwoTopConstant) {TYPED_TEST75,2195
TYPED_TEST(DummyDataLayerTest, TestThreeTopConstantGaussianConstant) {TYPED_TEST113,3786

src/caffe/test/test_data_layer.cpp,2222
namespace caffe {caffe18,370
class DataLayerTest : public MultiDeviceTest<TypeParam> {DataLayerTest23,445
  typedef typename TypeParam::Dtype Dtype;Dtype24,503
  DataLayerTest()DataLayerTest27,559
  virtual void SetUp() {SetUp32,731
  void Fill(const bool unique_pixels, DataParameter_DB backend) {Fill43,1123
  void TestRead() {TestRead70,1942
  void TestSkip() {TestSkip108,3233
  void TestReshape(DataParameter_DB backend) {TestReshape134,4117
  void TestReadCrop(Phase phase) {TestReadCrop199,6488
  void TestReadCropTrainSequenceSeeded() {TestReadCropTrainSequenceSeeded253,8485
  void TestReadCropTrainSequenceUnseeded() {TestReadCropTrainSequenceUnseeded308,10431
  virtual ~DataLayerTest() { delete blob_top_data_; delete blob_top_label_; }~DataLayerTest365,12471
  DataParameter_DB backend_;backend_367,12550
  shared_ptr<string> filename_;filename_368,12579
  Blob<Dtype>* const blob_top_data_;blob_top_data_369,12611
  Blob<Dtype>* const blob_top_label_;blob_top_label_370,12648
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_371,12686
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_372,12727
  int seed_;seed_373,12765
TYPED_TEST(DataLayerTest, TestReadLevelDB) {TYPED_TEST379,12856
TYPED_TEST(DataLayerTest, TestSkipLevelDB) {TYPED_TEST385,13057
TYPED_TEST(DataLayerTest, TestReshapeLevelDB) {TYPED_TEST390,13172
TYPED_TEST(DataLayerTest, TestReadCropTrainLevelDB) {TYPED_TEST394,13270
TYPED_TEST(DataLayerTest, TestReadCropTrainSequenceSeededLevelDB) {TYPED_TEST402,13582
TYPED_TEST(DataLayerTest, TestReadCropTrainSequenceUnseededLevelDB) {TYPED_TEST410,13976
TYPED_TEST(DataLayerTest, TestReadCropTestLevelDB) {TYPED_TEST416,14226
TYPED_TEST(DataLayerTest, TestReadLMDB) {TYPED_TEST424,14481
TYPED_TEST(DataLayerTest, TestSkipLMDB) {TYPED_TEST430,14676
TYPED_TEST(DataLayerTest, TestReshapeLMDB) {TYPED_TEST435,14785
TYPED_TEST(DataLayerTest, TestReadCropTrainLMDB) {TYPED_TEST439,14877
TYPED_TEST(DataLayerTest, TestReadCropTrainSequenceSeededLMDB) {TYPED_TEST447,15183
TYPED_TEST(DataLayerTest, TestReadCropTrainSequenceUnseededLMDB) {TYPED_TEST455,15571
TYPED_TEST(DataLayerTest, TestReadCropTestLMDB) {TYPED_TEST461,15815

src/caffe/test/test_spp_layer.cpp,1143
namespace caffe {caffe18,426
class SPPLayerTest : public MultiDeviceTest<TypeParam> {SPPLayerTest21,475
  typedef typename TypeParam::Dtype Dtype;Dtype22,532
  SPPLayerTest()SPPLayerTest25,588
  virtual void SetUp() {SetUp30,772
  virtual ~SPPLayerTest() { delete blob_bottom_; delete blob_top_; }~SPPLayerTest44,1290
  Blob<Dtype>* const blob_bottom_;blob_bottom_46,1360
  Blob<Dtype>* const blob_bottom_2_;blob_bottom_2_47,1395
  Blob<Dtype>* const blob_bottom_3_;blob_bottom_3_48,1432
  Blob<Dtype>* const blob_top_;blob_top_49,1469
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_50,1501
  vector<Blob<Dtype>*> blob_bottom_vec_2_;blob_bottom_vec_2_51,1542
  vector<Blob<Dtype>*> blob_bottom_vec_3_;blob_bottom_vec_3_52,1585
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_53,1628
TYPED_TEST(SPPLayerTest, TestSetup) {TYPED_TEST58,1724
TYPED_TEST(SPPLayerTest, TestEqualOutputDims) {TYPED_TEST75,2417
TYPED_TEST(SPPLayerTest, TestEqualOutputDims2) {TYPED_TEST92,3128
TYPED_TEST(SPPLayerTest, TestForwardBackward) {TYPED_TEST109,3835
TYPED_TEST(SPPLayerTest, TestGradient) {TYPED_TEST121,4341

src/caffe/test/test_benchmark.cpp,510
namespace caffe {caffe10,163
const float kMillisecondsThreshold = 30;kMillisecondsThreshold12,182
class BenchmarkTest : public MultiDeviceTest<TypeParam> {};BenchmarkTest15,254
TYPED_TEST(BenchmarkTest, TestTimerConstructor) {TYPED_TEST19,370
TYPED_TEST(BenchmarkTest, TestTimerStart) {TYPED_TEST26,550
TYPED_TEST(BenchmarkTest, TestTimerStop) {TYPED_TEST43,1009
TYPED_TEST(BenchmarkTest, TestTimerMilliSeconds) {TYPED_TEST60,1469
TYPED_TEST(BenchmarkTest, TestTimerSeconds) {TYPED_TEST75,2013

src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,1116
namespace caffe {caffe14,300
class SigmoidCrossEntropyLossLayerTest : public MultiDeviceTest<TypeParam> {SigmoidCrossEntropyLossLayerTest17,349
  typedef typename TypeParam::Dtype Dtype;Dtype18,426
  SigmoidCrossEntropyLossLayerTest()SigmoidCrossEntropyLossLayerTest21,482
  virtual ~SigmoidCrossEntropyLossLayerTest() {~SigmoidCrossEntropyLossLayerTest40,1291
  Dtype SigmoidCrossEntropyLossReference(const int count, const int num,SigmoidCrossEntropyLossReference46,1434
  void TestForward() {TestForward62,2055
  Blob<Dtype>* const blob_bottom_data_;blob_bottom_data_94,3456
  Blob<Dtype>* const blob_bottom_targets_;blob_bottom_targets_95,3496
  Blob<Dtype>* const blob_top_loss_;blob_top_loss_96,3539
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_97,3576
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_98,3617
TYPED_TEST(SigmoidCrossEntropyLossLayerTest, TestSigmoidCrossEntropyLoss) {TYPED_TEST103,3733
TYPED_TEST(SigmoidCrossEntropyLossLayerTest, TestGradient) {TYPED_TEST107,3835
TYPED_TEST(SigmoidCrossEntropyLossLayerTest, TestIgnoreGradient) {TYPED_TEST119,4316

src/caffe/test/test_io.cpp,1788
namespace caffe {caffe16,315
class IOTest : public ::testing::Test {};IOTest18,334
bool ReadImageToDatumReference(const string& filename, const int label,ReadImageToDatumReference20,377
TEST_F(IOTest, TestReadImageToDatum) {TEST_F65,1792
TEST_F(IOTest, TestReadImageToDatumReference) {TEST_F74,2049
TEST_F(IOTest, TestReadImageToDatumReferenceResized) {TEST_F93,2687
TEST_F(IOTest, TestReadImageToDatumContent) {TEST_F111,3339
TEST_F(IOTest, TestReadImageToDatumContentGray) {TEST_F132,3995
TEST_F(IOTest, TestReadImageToDatumResized) {TEST_F151,4628
TEST_F(IOTest, TestReadImageToDatumResizedSquare) {TEST_F161,4903
TEST_F(IOTest, TestReadImageToDatumGray) {TEST_F170,5183
TEST_F(IOTest, TestReadImageToDatumResizedGray) {TEST_F180,5485
TEST_F(IOTest, TestReadImageToCVMat) {TEST_F190,5804
TEST_F(IOTest, TestReadImageToCVMatResized) {TEST_F198,6048
TEST_F(IOTest, TestReadImageToCVMatResizedSquare) {TEST_F206,6309
TEST_F(IOTest, TestReadImageToCVMatGray) {TEST_F214,6576
TEST_F(IOTest, TestReadImageToCVMatResizedGray) {TEST_F223,6865
TEST_F(IOTest, TestCVMatToDatum) {TEST_F232,7171
TEST_F(IOTest, TestCVMatToDatumContent) {TEST_F242,7462
TEST_F(IOTest, TestCVMatToDatumReference) {TEST_F261,8109
TEST_F(IOTest, TestReadFileToDatum) {TEST_F280,8779
TEST_F(IOTest, TestDecodeDatum) {TEST_F289,9049
TEST_F(IOTest, TestDecodeDatumToCVMat) {TEST_F309,9765
TEST_F(IOTest, TestDecodeDatumToCVMatContent) {TEST_F323,10223
TEST_F(IOTest, TestDecodeDatumNative) {TEST_F343,10924
TEST_F(IOTest, TestDecodeDatumToCVMatNative) {TEST_F363,11646
TEST_F(IOTest, TestDecodeDatumNativeGray) {TEST_F373,11968
TEST_F(IOTest, TestDecodeDatumToCVMatNativeGray) {TEST_F393,12700
TEST_F(IOTest, TestDecodeDatumToCVMatContentNative) {TEST_F403,13031

src/caffe/test/test_batch_norm_layer.cpp,870
#define BATCH_SIZE BATCH_SIZE15,307
#define INPUT_DATA_SIZE INPUT_DATA_SIZE16,328
namespace caffe {caffe18,355
  class BatchNormLayerTest : public MultiDeviceTest<TypeParam> {BatchNormLayerTest21,406
    typedef typename TypeParam::Dtype Dtype;Dtype22,471
    BatchNormLayerTest()BatchNormLayerTest24,530
    virtual ~BatchNormLayerTest() { delete blob_bottom_; delete blob_top_; }~BatchNormLayerTest34,895
    Blob<Dtype>* const blob_bottom_;blob_bottom_35,972
    Blob<Dtype>* const blob_top_;blob_top_36,1009
    vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_37,1043
    vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_38,1086
  TYPED_TEST(BatchNormLayerTest, TestForward) {TYPED_TEST43,1194
  TYPED_TEST(BatchNormLayerTest, TestForwardInplace) {TYPED_TEST79,2302
  TYPED_TEST(BatchNormLayerTest, TestGradient) {TYPED_TEST123,3683

src/caffe/test/test_inner_product_layer.cpp,1285
namespace caffe {caffe13,270
class InnerProductLayerTest : public MultiDeviceTest<TypeParam> {InnerProductLayerTest20,388
  typedef typename TypeParam::Dtype Dtype;Dtype21,454
  InnerProductLayerTest()InnerProductLayerTest23,509
  virtual ~InnerProductLayerTest() {~InnerProductLayerTest33,869
  Blob<Dtype>* const blob_bottom_;blob_bottom_38,990
  Blob<Dtype>* const blob_bottom_nobatch_;blob_bottom_nobatch_39,1025
  Blob<Dtype>* const blob_top_;blob_top_40,1068
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_41,1100
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_42,1141
TYPED_TEST(InnerProductLayerTest, TestSetUp) {TYPED_TEST47,1246
TYPED_TEST(InnerProductLayerTest, TestSetUpTransposeFalse) {TYPED_TEST65,1948
TYPED_TEST(InnerProductLayerTest, TestSetUpTransposeTrue) {TYPED_TEST87,2848
TYPED_TEST(InnerProductLayerTest, TestForward) {TYPED_TEST107,3691
TYPED_TEST(InnerProductLayerTest, TestForwardTranspose) {TYPED_TEST145,5236
TYPED_TEST(InnerProductLayerTest, TestForwardNoBatch) {TYPED_TEST211,8216
TYPED_TEST(InnerProductLayerTest, TestGradient) {TYPED_TEST242,9485
TYPED_TEST(InnerProductLayerTest, TestGradientTranspose) {TYPED_TEST268,10533
TYPED_TEST(InnerProductLayerTest, TestBackwardTranspose) {TYPED_TEST295,11636

src/caffe/test/test_solver.cpp,378
namespace caffe {caffe17,317
class SolverTest : public MultiDeviceTest<TypeParam> {SolverTest20,366
  typedef typename TypeParam::Dtype Dtype;Dtype21,421
  virtual void InitSolverFromProtoString(const string& proto) {InitSolverFromProtoString24,477
  shared_ptr<Solver<Dtype> > solver_;solver_41,1070
TYPED_TEST(SolverTest, TestInitTrainTestNets) {TYPED_TEST46,1164

src/caffe/test/test_protobuf.cpp,146
namespace caffe {caffe12,306
class ProtoTest : public ::testing::Test {};ProtoTest14,325
TEST_F(ProtoTest, TestSerialization) {TEST_F16,371

src/caffe/test/test_flatten_layer.cpp,952
namespace caffe {caffe13,264
class FlattenLayerTest : public MultiDeviceTest<TypeParam> {FlattenLayerTest16,313
  typedef typename TypeParam::Dtype Dtype;Dtype17,374
  FlattenLayerTest()FlattenLayerTest19,429
  virtual ~FlattenLayerTest() { delete blob_bottom_; delete blob_top_; }~FlattenLayerTest30,806
  Blob<Dtype>* const blob_bottom_;blob_bottom_31,879
  Blob<Dtype>* const blob_top_;blob_top_32,914
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_33,946
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_34,987
TYPED_TEST(FlattenLayerTest, TestSetup) {TYPED_TEST39,1087
TYPED_TEST(FlattenLayerTest, TestSetupWithAxis) {TYPED_TEST49,1446
TYPED_TEST(FlattenLayerTest, TestSetupWithEndAxis) {TYPED_TEST61,1904
TYPED_TEST(FlattenLayerTest, TestSetupWithStartAndEndAxis) {TYPED_TEST73,2370
TYPED_TEST(FlattenLayerTest, TestForward) {TYPED_TEST85,2857
TYPED_TEST(FlattenLayerTest, TestGradient) {TYPED_TEST99,3437

src/caffe/test/test_image_data_layer.cpp,1065
namespace caffe {caffe17,330
class ImageDataLayerTest : public MultiDeviceTest<TypeParam> {ImageDataLayerTest20,379
  typedef typename TypeParam::Dtype Dtype;Dtype21,442
  ImageDataLayerTest()ImageDataLayerTest24,498
  virtual void SetUp() {SetUp28,631
  virtual ~ImageDataLayerTest() {~ImageDataLayerTest57,1962
  int seed_;seed_62,2056
  string filename_;filename_63,2069
  string filename_reshape_;filename_reshape_64,2089
  string filename_space_;filename_space_65,2117
  Blob<Dtype>* const blob_top_data_;blob_top_data_66,2143
  Blob<Dtype>* const blob_top_label_;blob_top_label_67,2180
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_68,2218
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_69,2259
TYPED_TEST(ImageDataLayerTest, TestRead) {TYPED_TEST74,2361
TYPED_TEST(ImageDataLayerTest, TestResize) {TYPED_TEST100,3409
TYPED_TEST(ImageDataLayerTest, TestReshape) {TYPED_TEST128,4540
TYPED_TEST(ImageDataLayerTest, TestShuffle) {TYPED_TEST155,5711
TYPED_TEST(ImageDataLayerTest, TestSpace) {TYPED_TEST189,7127

src/caffe/test/test_power_layer.cpp,1383
namespace caffe {caffe14,283
class PowerLayerTest : public MultiDeviceTest<TypeParam> {PowerLayerTest17,332
  typedef typename TypeParam::Dtype Dtype;Dtype18,391
  PowerLayerTest()PowerLayerTest21,447
  virtual ~PowerLayerTest() { delete blob_bottom_; delete blob_top_; }~PowerLayerTest32,822
  void TestForward(Dtype power, Dtype scale, Dtype shift) {TestForward34,894
  void TestBackward(Dtype power, Dtype scale, Dtype shift) {TestBackward61,2044
  Blob<Dtype>* const blob_bottom_;blob_bottom_82,2945
  Blob<Dtype>* const blob_top_;blob_top_83,2980
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_84,3012
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_85,3053
TYPED_TEST(PowerLayerTest, TestPower) {TYPED_TEST90,3151
TYPED_TEST(PowerLayerTest, TestPowerGradient) {TYPED_TEST98,3345
TYPED_TEST(PowerLayerTest, TestPowerGradientShiftZero) {TYPED_TEST106,3548
TYPED_TEST(PowerLayerTest, TestPowerZero) {TYPED_TEST114,3759
TYPED_TEST(PowerLayerTest, TestPowerZeroGradient) {TYPED_TEST122,3956
TYPED_TEST(PowerLayerTest, TestPowerOne) {TYPED_TEST130,4162
TYPED_TEST(PowerLayerTest, TestPowerOneGradient) {TYPED_TEST138,4358
TYPED_TEST(PowerLayerTest, TestPowerTwo) {TYPED_TEST146,4563
TYPED_TEST(PowerLayerTest, TestPowerTwoGradient) {TYPED_TEST154,4759
TYPED_TEST(PowerLayerTest, TestPowerTwoScaleHalfGradient) {TYPED_TEST162,4964

src/caffe/test/test_syncedmem.cpp,520
namespace caffe {caffe12,232
class SyncedMemoryTest : public ::testing::Test {};SyncedMemoryTest14,251
TEST_F(SyncedMemoryTest, TestInitialization) {TEST_F16,304
TEST_F(SyncedMemoryTest, TestAllocationCPUGPU) {TEST_F27,618
TEST_F(SyncedMemoryTest, TestAllocationCPU) {TEST_F37,842
TEST_F(SyncedMemoryTest, TestAllocationGPU) {TEST_F45,1016
TEST_F(SyncedMemoryTest, TestCPUWrite) {TEST_F53,1167
TEST_F(SyncedMemoryTest, TestGPURead) {TEST_F72,1750
TEST_F(SyncedMemoryTest, TestGPUWrite) {TEST_F102,2815

src/caffe/test/test_tile_layer.cpp,982
namespace caffe {caffe13,261
class TileLayerTest : public MultiDeviceTest<TypeParam> {TileLayerTest16,310
  typedef typename TypeParam::Dtype Dtype;Dtype17,368
  TileLayerTest()TileLayerTest20,424
  virtual void SetUp() {SetUp23,533
  virtual ~TileLayerTest() {~TileLayerTest33,825
  Blob<Dtype>* const blob_bottom_;blob_bottom_38,906
  Blob<Dtype>* const blob_top_;blob_top_39,941
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_40,973
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_41,1014
TYPED_TEST(TileLayerTest, TestTrivialSetup) {TYPED_TEST46,1111
TYPED_TEST(TileLayerTest, TestSetup) {TYPED_TEST62,1756
TYPED_TEST(TileLayerTest, TestForwardNum) {TYPED_TEST80,2468
TYPED_TEST(TileLayerTest, TestForwardChannels) {TYPED_TEST103,3376
TYPED_TEST(TileLayerTest, TestTrivialGradient) {TYPED_TEST124,4210
TYPED_TEST(TileLayerTest, TestGradientNum) {TYPED_TEST135,4599
TYPED_TEST(TileLayerTest, TestGradientChannels) {TYPED_TEST148,5068

src/caffe/test/test_embed_layer.cpp,854
namespace caffe {caffe13,262
class EmbedLayerTest : public MultiDeviceTest<TypeParam> {EmbedLayerTest16,311
  typedef typename TypeParam::Dtype Dtype;Dtype17,370
  EmbedLayerTest()EmbedLayerTest19,425
  virtual ~EmbedLayerTest() { delete blob_bottom_; delete blob_top_; }~EmbedLayerTest29,765
  Blob<Dtype>* const blob_bottom_;blob_bottom_30,836
  Blob<Dtype>* const blob_top_;blob_top_31,871
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_32,903
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_33,944
TYPED_TEST(EmbedLayerTest, TestSetUp) {TYPED_TEST38,1042
TYPED_TEST(EmbedLayerTest, TestForward) {TYPED_TEST54,1691
TYPED_TEST(EmbedLayerTest, TestForwardWithBias) {TYPED_TEST93,3242
TYPED_TEST(EmbedLayerTest, TestGradient) {TYPED_TEST137,5023
TYPED_TEST(EmbedLayerTest, TestGradientWithBias) {TYPED_TEST157,5862

src/caffe/test/test_euclidean_loss_layer.cpp,812
namespace caffe {caffe14,288
class EuclideanLossLayerTest : public MultiDeviceTest<TypeParam> {EuclideanLossLayerTest17,337
  typedef typename TypeParam::Dtype Dtype;Dtype18,404
  EuclideanLossLayerTest()EuclideanLossLayerTest21,460
  virtual ~EuclideanLossLayerTest() {~EuclideanLossLayerTest34,988
  void TestForward() {TestForward40,1119
  Blob<Dtype>* const blob_bottom_data_;blob_bottom_data_64,2231
  Blob<Dtype>* const blob_bottom_label_;blob_bottom_label_65,2271
  Blob<Dtype>* const blob_top_loss_;blob_top_loss_66,2312
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_67,2349
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_68,2390
TYPED_TEST(EuclideanLossLayerTest, TestForward) {TYPED_TEST73,2496
TYPED_TEST(EuclideanLossLayerTest, TestGradient) {TYPED_TEST77,2572

src/caffe/test/test_scale_layer.cpp,2584
namespace caffe {caffe14,283
class ScaleLayerTest : public MultiDeviceTest<TypeParam> {ScaleLayerTest17,332
  typedef typename TypeParam::Dtype Dtype;Dtype18,391
  ScaleLayerTest()ScaleLayerTest21,447
  virtual ~ScaleLayerTest() {~ScaleLayerTest50,1748
  Blob<Dtype>* const blob_bottom_;blob_bottom_59,2004
  Blob<Dtype>* const blob_bottom_eltwise_;blob_bottom_eltwise_60,2039
  Blob<Dtype>* const blob_bottom_broadcast_0_;blob_bottom_broadcast_0_61,2082
  Blob<Dtype>* const blob_bottom_broadcast_1_;blob_bottom_broadcast_1_62,2129
  Blob<Dtype>* const blob_bottom_broadcast_2_;blob_bottom_broadcast_2_63,2176
  Blob<Dtype>* const blob_bottom_scale_;blob_bottom_scale_64,2223
  Blob<Dtype>* const blob_top_;blob_top_65,2264
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_66,2296
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_67,2337
TYPED_TEST(ScaleLayerTest, TestForwardEltwise) {TYPED_TEST72,2435
TYPED_TEST(ScaleLayerTest, TestForwardEltwiseInPlace) {TYPED_TEST90,3266
TYPED_TEST(ScaleLayerTest, TestBackwardEltwiseInPlace) {TYPED_TEST110,4207
TYPED_TEST(ScaleLayerTest, TestForwardEltwiseWithParam) {TYPED_TEST156,6374
TYPED_TEST(ScaleLayerTest, TestForwardBroadcastBegin) {TYPED_TEST176,7274
TYPED_TEST(ScaleLayerTest, TestForwardBroadcastMiddle) {TYPED_TEST199,8294
TYPED_TEST(ScaleLayerTest, TestForwardBroadcastMiddleInPlace) {TYPED_TEST222,9315
TYPED_TEST(ScaleLayerTest, TestBackwardBroadcastMiddleInPlace) {TYPED_TEST247,10443
TYPED_TEST(ScaleLayerTest, TestForwardBroadcastMiddleWithParam) {TYPED_TEST293,12634
TYPED_TEST(ScaleLayerTest, TestForwardBroadcastMiddleWithParamAndBias) {TYPED_TEST317,13693
TYPED_TEST(ScaleLayerTest, TestForwardBroadcastEnd) {TYPED_TEST344,14918
TYPED_TEST(ScaleLayerTest, TestForwardScale) {TYPED_TEST367,15936
TYPED_TEST(ScaleLayerTest, TestForwardScaleAxis2) {TYPED_TEST384,16696
TYPED_TEST(ScaleLayerTest, TestGradientEltwise) {TYPED_TEST402,17511
TYPED_TEST(ScaleLayerTest, TestGradientEltwiseWithParam) {TYPED_TEST413,17928
TYPED_TEST(ScaleLayerTest, TestGradientBroadcastBegin) {TYPED_TEST426,18426
TYPED_TEST(ScaleLayerTest, TestGradientBroadcastMiddle) {TYPED_TEST437,18857
TYPED_TEST(ScaleLayerTest, TestGradientBroadcastMiddleWithParam) {TYPED_TEST448,19289
TYPED_TEST(ScaleLayerTest, TestGradientBroadcastEnd) {TYPED_TEST462,19862
TYPED_TEST(ScaleLayerTest, TestGradientScale) {TYPED_TEST473,20291
TYPED_TEST(ScaleLayerTest, TestGradientScaleAndBias) {TYPED_TEST483,20657
TYPED_TEST(ScaleLayerTest, TestGradientScaleAxis2) {TYPED_TEST496,21193

src/caffe/test/test_contrastive_loss_layer.cpp,1009
namespace caffe {caffe15,311
class ContrastiveLossLayerTest : public MultiDeviceTest<TypeParam> {ContrastiveLossLayerTest18,360
  typedef typename TypeParam::Dtype Dtype;Dtype19,429
  ContrastiveLossLayerTest()ContrastiveLossLayerTest22,485
  virtual ~ContrastiveLossLayerTest() {~ContrastiveLossLayerTest42,1380
  Blob<Dtype>* const blob_bottom_data_i_;blob_bottom_data_i_49,1543
  Blob<Dtype>* const blob_bottom_data_j_;blob_bottom_data_j_50,1585
  Blob<Dtype>* const blob_bottom_y_;blob_bottom_y_51,1627
  Blob<Dtype>* const blob_top_loss_;blob_top_loss_52,1664
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_53,1701
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_54,1742
TYPED_TEST(ContrastiveLossLayerTest, TestForward) {TYPED_TEST59,1850
TYPED_TEST(ContrastiveLossLayerTest, TestGradient) {TYPED_TEST88,2962
TYPED_TEST(ContrastiveLossLayerTest, TestForwardLegacy) {TYPED_TEST101,3503
TYPED_TEST(ContrastiveLossLayerTest, TestGradientLegacy) {TYPED_TEST130,4659

src/caffe/test/test_lstm_layer.cpp,1856
namespace caffe {caffe14,280
class LSTMLayerTest : public MultiDeviceTest<TypeParam> {LSTMLayerTest17,329
  typedef typename TypeParam::Dtype Dtype;Dtype18,387
  LSTMLayerTest() : num_output_(7) {LSTMLayerTest21,443
  void ReshapeBlobs(int num_timesteps, int num_instances) {ReshapeBlobs46,1410
  int num_output_;num_output_72,2342
  LayerParameter layer_param_;layer_param_73,2361
  Blob<Dtype> blob_bottom_;blob_bottom_74,2392
  Blob<Dtype> blob_bottom_cont_;blob_bottom_cont_75,2420
  Blob<Dtype> blob_bottom_static_;blob_bottom_static_76,2453
  Blob<Dtype> blob_top_;blob_top_77,2488
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_78,2513
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_79,2554
  Blob<Dtype> unit_blob_bottom_cont_;unit_blob_bottom_cont_81,2593
  Blob<Dtype> unit_blob_bottom_c_prev_;unit_blob_bottom_c_prev_82,2631
  Blob<Dtype> unit_blob_bottom_x_;unit_blob_bottom_x_83,2671
  Blob<Dtype> unit_blob_top_c_;unit_blob_top_c_84,2706
  Blob<Dtype> unit_blob_top_h_;unit_blob_top_h_85,2738
  vector<Blob<Dtype>*> unit_blob_bottom_vec_;unit_blob_bottom_vec_86,2770
  vector<Blob<Dtype>*> unit_blob_top_vec_;unit_blob_top_vec_87,2816
TYPED_TEST(LSTMLayerTest, TestSetUp) {TYPED_TEST92,2918
TYPED_TEST(LSTMLayerTest, TestForward) {TYPED_TEST102,3311
TYPED_TEST(LSTMLayerTest, TestLSTMUnitSetUp) {TYPED_TEST188,6820
TYPED_TEST(LSTMLayerTest, TestLSTMUnitGradient) {TYPED_TEST204,7487
TYPED_TEST(LSTMLayerTest, TestLSTMUnitGradientNonZeroCont) {TYPED_TEST219,8041
TYPED_TEST(LSTMLayerTest, TestGradient) {TYPED_TEST234,8606
TYPED_TEST(LSTMLayerTest, TestGradientNonZeroCont) {TYPED_TEST242,8883
TYPED_TEST(LSTMLayerTest, TestGradientNonZeroContBufferSize2) {TYPED_TEST253,9296
TYPED_TEST(LSTMLayerTest, TestGradientNonZeroContBufferSize2WithStaticInput) {TYPED_TEST268,9861

src/caffe/test/test_multinomial_logistic_loss_layer.cpp,712
namespace caffe {caffe13,282
class MultinomialLogisticLossLayerTest : public CPUDeviceTest<Dtype> {MultinomialLogisticLossLayerTest16,327
  MultinomialLogisticLossLayerTest()MultinomialLogisticLossLayerTest18,410
  virtual ~MultinomialLogisticLossLayerTest() {~MultinomialLogisticLossLayerTest34,1085
  Blob<Dtype>* const blob_bottom_data_;blob_bottom_data_39,1225
  Blob<Dtype>* const blob_bottom_label_;blob_bottom_label_40,1265
  Blob<Dtype>* const blob_top_loss_;blob_top_loss_41,1306
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_42,1343
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_43,1384
TYPED_TEST(MultinomialLogisticLossLayerTest, TestGradientCPU) {TYPED_TEST49,1491

src/caffe/test/test_split_layer.cpp,1432
namespace caffe {caffe17,395
class SplitLayerTest : public MultiDeviceTest<TypeParam> {SplitLayerTest20,444
  typedef typename TypeParam::Dtype Dtype;Dtype21,503
  SplitLayerTest()SplitLayerTest24,559
  virtual ~SplitLayerTest() {~SplitLayerTest36,986
  Blob<Dtype>* const blob_bottom_;blob_bottom_41,1093
  Blob<Dtype>* const blob_top_a_;blob_top_a_42,1128
  Blob<Dtype>* const blob_top_b_;blob_top_b_43,1162
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_44,1196
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_45,1237
TYPED_TEST(SplitLayerTest, TestSetup) {TYPED_TEST50,1335
TYPED_TEST(SplitLayerTest, Test) {TYPED_TEST65,1907
TYPED_TEST(SplitLayerTest, TestGradient) {TYPED_TEST78,2428
class SplitLayerInsertionTest : public ::testing::Test {SplitLayerInsertionTest88,2725
  void RunInsertionTest(RunInsertionTest90,2794
TEST_F(SplitLayerInsertionTest, TestNoInsertion1) {TEST_F113,3763
TEST_F(SplitLayerInsertionTest, TestNoInsertion2) {TEST_F137,4341
TEST_F(SplitLayerInsertionTest, TestNoInsertionImageNet) {TEST_F174,5257
TEST_F(SplitLayerInsertionTest, TestNoInsertionWithInPlace) {TEST_F529,13390
TEST_F(SplitLayerInsertionTest, TestLossInsertion) {TEST_F559,14113
TEST_F(SplitLayerInsertionTest, TestInsertion) {TEST_F688,17608
TEST_F(SplitLayerInsertionTest, TestInsertionTwoTop) {TEST_F783,20119
TEST_F(SplitLayerInsertionTest, TestWithInPlace) {TEST_F889,22827

src/caffe/test/test_hdf5_output_layer.cpp,911
namespace caffe {caffe15,301
class HDF5OutputLayerTest : public MultiDeviceTest<TypeParam> {HDF5OutputLayerTest18,349
  typedef typename TypeParam::Dtype Dtype;Dtype19,413
  HDF5OutputLayerTest()HDF5OutputLayerTest22,469
  virtual ~HDF5OutputLayerTest() {~HDF5OutputLayerTest33,761
  string output_file_name_;output_file_name_40,918
  string input_file_name_;input_file_name_41,946
  Blob<Dtype>* const blob_data_;blob_data_42,973
  Blob<Dtype>* const blob_label_;blob_label_43,1006
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_44,1040
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_45,1081
  int num_;num_46,1119
  int channels_;channels_47,1131
  int height_;height_48,1148
  int width_;width_49,1163
void HDF5OutputLayerTest<TypeParam>::CheckBlobEqual(const Blob<Dtype>& b1,CheckBlobEqual53,1210
TYPED_TEST(HDF5OutputLayerTest, TestForward) {TYPED_TEST72,1853

src/caffe/test/test_layer_factory.cpp,184
namespace caffe {caffe15,284
class LayerFactoryTest : public MultiDeviceTest<TypeParam> {};LayerFactoryTest18,333
TYPED_TEST(LayerFactoryTest, TestCreateLayer) {TYPED_TEST22,455

src/caffe/test/test_platform.cpp,156
namespace caffe {caffe11,151
class PlatformTest : public ::testing::Test {};PlatformTest15,215
TEST_F(PlatformTest, TestInitialization) {TEST_F17,264

src/caffe/test/test_util_blas.cpp,206
namespace caffe {caffe11,215
class GemmTest : public ::testing::Test {};GemmTest16,309
TYPED_TEST(GemmTest, TestGemmCPUGPU) {TYPED_TEST20,394
TYPED_TEST(GemmTest, TestGemvCPUGPU) {TYPED_TEST91,3212

src/caffe/test/test_neuron_layer.cpp,5916
namespace caffe {caffe34,976
class NeuronLayerTest : public MultiDeviceTest<TypeParam> {NeuronLayerTest37,1025
  typedef typename TypeParam::Dtype Dtype;Dtype38,1085
  NeuronLayerTest()NeuronLayerTest41,1141
  virtual ~NeuronLayerTest() { delete blob_bottom_; delete blob_top_; }~NeuronLayerTest52,1517
  Blob<Dtype>* const blob_bottom_;blob_bottom_53,1589
  Blob<Dtype>* const blob_top_;blob_top_54,1624
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_55,1656
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_56,1697
  void TestDropoutForward(const float dropout_ratio) {TestDropoutForward58,1736
  void TestExpForward(const float base, const float scale, const float shift) {TestExpForward90,3251
  void TestExpGradient(const float base, const float scale, const float shift) {TestExpGradient112,4155
  void TestPReLU(PReLULayer<Dtype> *layer) {TestPReLU122,4599
  void LogBottomInit() {LogBottomInit139,5386
  void TestLogForward(const float base, const float scale, const float shift) {TestLogForward147,5670
  void TestLogGradient(const float base, const float scale, const float shift) {TestLogGradient171,6621
TYPED_TEST(NeuronLayerTest, TestAbsVal) {TYPED_TEST185,7146
TYPED_TEST(NeuronLayerTest, TestAbsGradient) {TYPED_TEST199,7685
TYPED_TEST(NeuronLayerTest, TestReLU) {TYPED_TEST208,8002
TYPED_TEST(NeuronLayerTest, TestReLUGradient) {TYPED_TEST223,8580
TYPED_TEST(NeuronLayerTest, TestReLUWithNegativeSlope) {TYPED_TEST232,8896
TYPED_TEST(NeuronLayerTest, TestReLUGradientWithNegativeSlope) {TYPED_TEST252,9665
TYPED_TEST(NeuronLayerTest, TestELU) {TYPED_TEST263,10114
TYPED_TEST(NeuronLayerTest, TestELUasReLU) {TYPED_TEST284,10898
TYPED_TEST(NeuronLayerTest, TestELUGradient) {TYPED_TEST301,11583
TYPED_TEST(NeuronLayerTest, TestELUasReLUGradient) {TYPED_TEST310,11897
TYPED_TEST(NeuronLayerTest, TestSigmoid) {TYPED_TEST321,12320
TYPED_TEST(NeuronLayerTest, TestSigmoidGradient) {TYPED_TEST338,12991
TYPED_TEST(NeuronLayerTest, TestTanH) {TYPED_TEST347,13313
TYPED_TEST(NeuronLayerTest, TestTanHGradient) {TYPED_TEST370,14289
TYPED_TEST(NeuronLayerTest, TestExpLayer) {TYPED_TEST379,14589
TYPED_TEST(NeuronLayerTest, TestExpGradient) {TYPED_TEST388,14869
TYPED_TEST(NeuronLayerTest, TestExpLayerWithShift) {TYPED_TEST397,15153
TYPED_TEST(NeuronLayerTest, TestExpGradientWithShift) {TYPED_TEST407,15469
TYPED_TEST(NeuronLayerTest, TestExpLayerBase2) {TYPED_TEST417,15789
TYPED_TEST(NeuronLayerTest, TestExpGradientBase2) {TYPED_TEST425,16008
TYPED_TEST(NeuronLayerTest, TestExpLayerBase2Shift1) {TYPED_TEST433,16231
TYPED_TEST(NeuronLayerTest, TestExpGradientBase2Shift1) {TYPED_TEST441,16456
TYPED_TEST(NeuronLayerTest, TestExpLayerBase2Scale3) {TYPED_TEST449,16685
TYPED_TEST(NeuronLayerTest, TestExpGradientBase2Scale3) {TYPED_TEST457,16910
TYPED_TEST(NeuronLayerTest, TestExpLayerBase2Shift1Scale3) {TYPED_TEST465,17139
TYPED_TEST(NeuronLayerTest, TestExpGradientBase2Shift1Scale3) {TYPED_TEST473,17370
TYPED_TEST(NeuronLayerTest, TestLogLayer) {TYPED_TEST481,17605
TYPED_TEST(NeuronLayerTest, TestLogGradient) {TYPED_TEST490,17885
TYPED_TEST(NeuronLayerTest, TestLogLayerBase2) {TYPED_TEST499,18169
TYPED_TEST(NeuronLayerTest, TestLogGradientBase2) {TYPED_TEST507,18388
TYPED_TEST(NeuronLayerTest, TestLogLayerBase2Shift1) {TYPED_TEST515,18611
TYPED_TEST(NeuronLayerTest, TestLogGradientBase2Shift1) {TYPED_TEST523,18836
TYPED_TEST(NeuronLayerTest, TestLogLayerBase2Scale3) {TYPED_TEST531,19065
TYPED_TEST(NeuronLayerTest, TestLogGradientBase2Scale3) {TYPED_TEST539,19290
TYPED_TEST(NeuronLayerTest, TestLogLayerBase2Shift1Scale3) {TYPED_TEST547,19519
TYPED_TEST(NeuronLayerTest, TestLogGradientBase2Shift1Scale3) {TYPED_TEST555,19750
TYPED_TEST(NeuronLayerTest, TestDropoutHalf) {TYPED_TEST563,19985
TYPED_TEST(NeuronLayerTest, TestDropoutThreeQuarters) {TYPED_TEST568,20113
TYPED_TEST(NeuronLayerTest, TestDropoutTestPhase) {TYPED_TEST573,20251
TYPED_TEST(NeuronLayerTest, TestDropoutGradient) {TYPED_TEST590,20855
TYPED_TEST(NeuronLayerTest, TestDropoutGradientTest) {TYPED_TEST600,21193
TYPED_TEST(NeuronLayerTest, TestBNLL) {TYPED_TEST610,21534
TYPED_TEST(NeuronLayerTest, TestBNLLGradient) {TYPED_TEST625,22088
TYPED_TEST(NeuronLayerTest, TestPReLUParam) {TYPED_TEST634,22388
TYPED_TEST(NeuronLayerTest, TestPReLUForward) {TYPED_TEST646,22785
TYPED_TEST(NeuronLayerTest, TestPReLUForwardChannelShared) {TYPED_TEST657,23153
TYPED_TEST(NeuronLayerTest, TestPReLUGradient) {TYPED_TEST666,23480
TYPED_TEST(NeuronLayerTest, TestPReLUGradientChannelShared) {TYPED_TEST679,23978
TYPED_TEST(NeuronLayerTest, TestPReLUConsistencyReLU) {TYPED_TEST690,24435
TYPED_TEST(NeuronLayerTest, TestPReLUInPlace) {TYPED_TEST733,26306
class CuDNNNeuronLayerTest : public GPUDeviceTest<Dtype> {CuDNNNeuronLayerTest813,29667
  CuDNNNeuronLayerTest()CuDNNNeuronLayerTest815,29738
  virtual ~CuDNNNeuronLayerTest() { delete blob_bottom_; delete blob_top_; }~CuDNNNeuronLayerTest826,30119
  Blob<Dtype>* const blob_bottom_;blob_bottom_827,30196
  Blob<Dtype>* const blob_top_;blob_top_828,30231
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_829,30263
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_830,30304
TYPED_TEST(CuDNNNeuronLayerTest, TestReLUCuDNN) {TYPED_TEST835,30398
TYPED_TEST(CuDNNNeuronLayerTest, TestReLUGradientCuDNN) {TYPED_TEST849,30960
TYPED_TEST(CuDNNNeuronLayerTest, TestReLUWithNegativeSlopeCuDNN) {TYPED_TEST857,31256
TYPED_TEST(CuDNNNeuronLayerTest, TestReLUGradientWithNegativeSlopeCuDNN) {TYPED_TEST876,32009
TYPED_TEST(CuDNNNeuronLayerTest, TestSigmoidCuDNN) {TYPED_TEST886,32438
TYPED_TEST(CuDNNNeuronLayerTest, TestSigmoidGradientCuDNN) {TYPED_TEST902,33093
TYPED_TEST(CuDNNNeuronLayerTest, TestTanHCuDNN) {TYPED_TEST910,33395
TYPED_TEST(CuDNNNeuronLayerTest, TestTanHGradientCuDNN) {TYPED_TEST932,34347

src/caffe/test/test_deconvolution_layer.cpp,1062
namespace caffe {caffe13,263
class DeconvolutionLayerTest : public MultiDeviceTest<TypeParam> {DeconvolutionLayerTest18,449
  typedef typename TypeParam::Dtype Dtype;Dtype19,516
  DeconvolutionLayerTest()DeconvolutionLayerTest22,572
  virtual void SetUp() {SetUp27,783
  virtual ~DeconvolutionLayerTest() {~DeconvolutionLayerTest38,1112
  Blob<Dtype>* const blob_bottom_;blob_bottom_45,1253
  Blob<Dtype>* const blob_bottom_2_;blob_bottom_2_46,1288
  Blob<Dtype>* const blob_top_;blob_top_47,1325
  Blob<Dtype>* const blob_top_2_;blob_top_2_48,1357
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_49,1391
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_50,1432
TYPED_TEST(DeconvolutionLayerTest, TestSetup) {TYPED_TEST55,1538
TYPED_TEST(DeconvolutionLayerTest, TestSimpleDeconvolution) {TYPED_TEST91,3069
TYPED_TEST(DeconvolutionLayerTest, TestGradient) {TYPED_TEST139,5067
TYPED_TEST(DeconvolutionLayerTest, TestNDAgainst2D) {TYPED_TEST157,5834
TYPED_TEST(DeconvolutionLayerTest, TestGradient3D) {TYPED_TEST275,10993

src/caffe/test/test_internal_thread.cpp,472
namespace caffe {caffe9,174
class InternalThreadTest : public ::testing::Test {};InternalThreadTest12,194
TEST_F(InternalThreadTest, TestStartAndExit) {TEST_F14,249
class TestThreadA : public InternalThread {TestThreadA23,497
  void InternalThreadEntry() {InternalThreadEntry24,541
class TestThreadB : public InternalThread {TestThreadB29,625
  void InternalThreadEntry() {InternalThreadEntry30,669
TEST_F(InternalThreadTest, TestRandomSeed) {TEST_F35,753

src/caffe/test/test_reduction_layer.cpp,2659
namespace caffe {caffe13,266
class ReductionLayerTest : public MultiDeviceTest<TypeParam> {ReductionLayerTest16,315
  typedef typename TypeParam::Dtype Dtype;Dtype17,378
  ReductionLayerTest()ReductionLayerTest20,434
  virtual ~ReductionLayerTest() {~ReductionLayerTest31,812
  void TestForward(ReductionParameter_ReductionOp op,TestForward36,898
  void TestGradient(ReductionParameter_ReductionOp op,TestGradient80,2730
  Blob<Dtype>* const blob_bottom_;blob_bottom_94,3309
  Blob<Dtype>* const blob_top_;blob_top_95,3344
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_96,3376
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_97,3417
TYPED_TEST(ReductionLayerTest, TestSetUp) {TYPED_TEST102,3519
TYPED_TEST(ReductionLayerTest, TestSetUpWithAxis1) {TYPED_TEST111,3836
TYPED_TEST(ReductionLayerTest, TestSetUpWithAxis2) {TYPED_TEST122,4259
TYPED_TEST(ReductionLayerTest, TestSum) {TYPED_TEST134,4725
TYPED_TEST(ReductionLayerTest, TestSumCoeff) {TYPED_TEST139,4877
TYPED_TEST(ReductionLayerTest, TestSumCoeffAxis1) {TYPED_TEST145,5070
TYPED_TEST(ReductionLayerTest, TestSumGradient) {TYPED_TEST152,5298
TYPED_TEST(ReductionLayerTest, TestSumCoeffGradient) {TYPED_TEST157,5459
TYPED_TEST(ReductionLayerTest, TestSumCoeffAxis1Gradient) {TYPED_TEST163,5661
TYPED_TEST(ReductionLayerTest, TestMean) {TYPED_TEST170,5898
TYPED_TEST(ReductionLayerTest, TestMeanCoeff) {TYPED_TEST176,6058
TYPED_TEST(ReductionLayerTest, TestMeanCoeffAxis1) {TYPED_TEST183,6259
TYPED_TEST(ReductionLayerTest, TestMeanGradient) {TYPED_TEST191,6495
TYPED_TEST(ReductionLayerTest, TestMeanCoeffGradient) {TYPED_TEST197,6664
TYPED_TEST(ReductionLayerTest, TestMeanCoeffGradientAxis1) {TYPED_TEST204,6874
TYPED_TEST(ReductionLayerTest, TestAbsSum) {TYPED_TEST212,7119
TYPED_TEST(ReductionLayerTest, TestAbsSumCoeff) {TYPED_TEST218,7281
TYPED_TEST(ReductionLayerTest, TestAbsSumCoeffAxis1) {TYPED_TEST225,7484
TYPED_TEST(ReductionLayerTest, TestAbsSumGradient) {TYPED_TEST233,7722
TYPED_TEST(ReductionLayerTest, TestAbsSumCoeffGradient) {TYPED_TEST239,7893
TYPED_TEST(ReductionLayerTest, TestAbsSumCoeffAxis1Gradient) {TYPED_TEST246,8105
TYPED_TEST(ReductionLayerTest, TestSumOfSquares) {TYPED_TEST254,8352
TYPED_TEST(ReductionLayerTest, TestSumOfSquaresCoeff) {TYPED_TEST260,8521
TYPED_TEST(ReductionLayerTest, TestSumOfSquaresCoeffAxis1) {TYPED_TEST267,8731
TYPED_TEST(ReductionLayerTest, TestSumOfSquaresGradient) {TYPED_TEST275,8976
TYPED_TEST(ReductionLayerTest, TestSumOfSquaresCoeffGradient) {TYPED_TEST281,9154
TYPED_TEST(ReductionLayerTest, TestSumOfSquaresCoeffAxis1Gradient) {TYPED_TEST288,9373

src/caffe/test/test_solver_factory.cpp,255
namespace caffe {caffe14,269
class SolverFactoryTest : public MultiDeviceTest<TypeParam> {SolverFactoryTest17,318
  SolverParameter simple_solver_param() {simple_solver_param19,392
TYPED_TEST(SolverFactoryTest, TestCreateSolver) {TYPED_TEST36,878

src/caffe/test/test_filter_layer.cpp,955
namespace caffe {caffe13,263
class FilterLayerTest : public MultiDeviceTest<TypeParam> {FilterLayerTest16,312
  typedef typename TypeParam::Dtype Dtype;Dtype17,372
  FilterLayerTest()FilterLayerTest20,428
  virtual void SetUp() {SetUp26,712
  virtual ~FilterLayerTest() {~FilterLayerTest48,1586
  Blob<Dtype>* const blob_bottom_data_;blob_bottom_data_55,1773
  Blob<Dtype>* const blob_bottom_labels_;blob_bottom_labels_56,1813
  Blob<Dtype>* const blob_bottom_selector_;blob_bottom_selector_57,1855
  Blob<Dtype>* const blob_top_data_;blob_top_data_59,1937
  Blob<Dtype>* const blob_top_labels_;blob_top_labels_60,1974
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_61,2013
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_62,2054
TYPED_TEST(FilterLayerTest, TestReshape) {TYPED_TEST67,2153
TYPED_TEST(FilterLayerTest, TestForward) {TYPED_TEST87,2980
TYPED_TEST(FilterLayerTest, TestGradient) {TYPED_TEST115,4161

src/caffe/test/test_tanh_layer.cpp,885
namespace caffe {caffe14,282
double tanh_naive(double x) {tanh_naive16,301
class TanHLayerTest : public MultiDeviceTest<TypeParam> {TanHLayerTest31,647
  typedef typename TypeParam::Dtype Dtype;Dtype32,705
  TanHLayerTest()TanHLayerTest35,761
  virtual ~TanHLayerTest() { delete blob_bottom_; delete blob_top_; }~TanHLayerTest43,1027
  void TestForward(Dtype filler_std) {TestForward45,1098
  void TestBackward(Dtype filler_std) {TestBackward67,1969
  Blob<Dtype>* const blob_bottom_;blob_bottom_80,2394
  Blob<Dtype>* const blob_top_;blob_top_81,2429
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_82,2461
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_83,2502
TYPED_TEST(TanHLayerTest, TestTanH) {TYPED_TEST88,2599
TYPED_TEST(TanHLayerTest, TestTanHOverflow) {TYPED_TEST92,2666
TYPED_TEST(TanHLayerTest, TestTanHGradient) {TYPED_TEST97,2806

src/caffe/test/test_gradient_based_solver.cpp,8098
namespace caffe {caffe20,370
class GradientBasedSolverTest : public MultiDeviceTest<TypeParam> {GradientBasedSolverTest23,419
  typedef typename TypeParam::Dtype Dtype;Dtype24,487
  GradientBasedSolverTest() :GradientBasedSolverTest27,543
  ~GradientBasedSolverTest() {~GradientBasedSolverTest33,756
  string snapshot_prefix_;snapshot_prefix_37,816
  shared_ptr<SGDSolver<Dtype> > solver_;solver_38,843
  shared_ptr<NCCL<Dtype> > nccl_;nccl_40,900
  int seed_;seed_42,941
  int num_, channels_, height_, width_;num_45,1083
  int num_, channels_, height_, width_;channels_45,1083
  int num_, channels_, height_, width_;height_45,1083
  int num_, channels_, height_, width_;width_45,1083
  bool share_;share_46,1123
  Dtype delta_;  // Stability constant for RMSProp, AdaGrad, AdaDelta and Adamdelta_47,1138
  string* input_file_;input_file_50,1291
  virtual void InitSolverFromProtoString(const string& proto) {InitSolverFromProtoString54,1377
  string RunLeastSquaresSolver(const Dtype learning_rate,RunLeastSquaresSolver72,1973
  void ComputeLeastSquaresUpdate(const Dtype learning_rate,ComputeLeastSquaresUpdate228,6861
  void CheckLeastSquaresUpdate(CheckLeastSquaresUpdate353,12422
  void CheckAccumulation(const Dtype kLearningRate, const Dtype kWeightDecay,CheckAccumulation403,15013
  void TestLeastSquaresUpdate(const Dtype learning_rate = 1.0,TestLeastSquaresUpdate457,17720
  void TestSnapshot(const Dtype learning_rate = 1.0,TestSnapshot510,19562
class SGDSolverTest : public GradientBasedSolverTest<TypeParam> {SGDSolverTest587,22655
  typedef typename TypeParam::Dtype Dtype;Dtype588,22721
  virtual void InitSolver(const SolverParameter& param) {InitSolver591,22777
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdate) {TYPED_TEST598,22952
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateLROneHundredth) {TYPED_TEST602,23041
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateWithWeightDecay) {TYPED_TEST608,23236
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateWithWeightDecayMultiIter) {TYPED_TEST619,23597
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateWithMomentum) {TYPED_TEST630,23967
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateWithMomentumMultiIter) {TYPED_TEST641,24325
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateWithEverything) {TYPED_TEST652,24692
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateWithEverythingShare) {TYPED_TEST663,25054
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateWithEverythingAccum) {TYPED_TEST675,25444
TYPED_TEST(SGDSolverTest, TestLeastSquaresUpdateWithEverythingAccumShare) {TYPED_TEST686,25811
TYPED_TEST(SGDSolverTest, TestSnapshot) {TYPED_TEST698,26206
TYPED_TEST(SGDSolverTest, TestSnapshotShare) {TYPED_TEST709,26534
class AdaGradSolverTest : public GradientBasedSolverTest<TypeParam> {AdaGradSolverTest723,26921
  typedef typename TypeParam::Dtype Dtype;Dtype724,26991
  virtual void InitSolver(const SolverParameter& param) {InitSolver727,27047
TYPED_TEST(AdaGradSolverTest, TestAdaGradLeastSquaresUpdate) {TYPED_TEST734,27230
TYPED_TEST(AdaGradSolverTest, TestAdaGradLeastSquaresUpdateLROneHundredth) {TYPED_TEST738,27330
TYPED_TEST(AdaGradSolverTest, TestAdaGradLeastSquaresUpdateWithWeightDecay) {TYPED_TEST744,27536
TYPED_TEST(AdaGradSolverTest, TestAdaGradLeastSquaresUpdateWithEverything) {TYPED_TEST751,27791
TYPED_TEST(AdaGradSolverTest,TYPED_TEST762,28162
TYPED_TEST(AdaGradSolverTest, TestLeastSquaresUpdateWithEverythingAccum) {TYPED_TEST775,28567
TYPED_TEST(AdaGradSolverTest, TestLeastSquaresUpdateWithEverythingAccumShare) {TYPED_TEST786,28936
TYPED_TEST(AdaGradSolverTest, TestSnapshot) {TYPED_TEST798,29333
TYPED_TEST(AdaGradSolverTest, TestSnapshotShare) {TYPED_TEST809,29663
class NesterovSolverTest : public GradientBasedSolverTest<TypeParam> {NesterovSolverTest823,30052
  typedef typename TypeParam::Dtype Dtype;Dtype824,30123
  virtual void InitSolver(const SolverParameter& param) {InitSolver827,30179
TYPED_TEST(NesterovSolverTest, TestNesterovLeastSquaresUpdate) {TYPED_TEST834,30364
TYPED_TEST(NesterovSolverTest, TestNesterovLeastSquaresUpdateLROneHundredth) {TYPED_TEST838,30466
TYPED_TEST(NesterovSolverTest, TestNesterovLeastSquaresUpdateWithWeightDecay) {TYPED_TEST844,30674
TYPED_TEST(NesterovSolverTest,TYPED_TEST851,30931
TYPED_TEST(NesterovSolverTest, TestNesterovLeastSquaresUpdateWithMomentum) {TYPED_TEST863,31325
TYPED_TEST(NesterovSolverTest, TestLeastSquaresUpdateWithMomentumMultiIter) {TYPED_TEST874,31696
TYPED_TEST(NesterovSolverTest, TestNesterovLeastSquaresUpdateWithEverything) {TYPED_TEST885,32068
TYPED_TEST(NesterovSolverTest,TYPED_TEST896,32443
TYPED_TEST(NesterovSolverTest, TestLeastSquaresUpdateWithEverythingAccum) {TYPED_TEST909,32857
TYPED_TEST(NesterovSolverTest, TestLeastSquaresUpdateWithEverythingAccumShare) {TYPED_TEST920,33229
TYPED_TEST(NesterovSolverTest, TestSnapshot) {TYPED_TEST932,33629
TYPED_TEST(NesterovSolverTest, TestSnapshotShare) {TYPED_TEST943,33962
class AdaDeltaSolverTest : public GradientBasedSolverTest<TypeParam> {AdaDeltaSolverTest956,34353
  typedef typename TypeParam::Dtype Dtype;Dtype957,34424
  virtual void InitSolver(const SolverParameter& param) {InitSolver960,34480
TYPED_TEST(AdaDeltaSolverTest, TestAdaDeltaLeastSquaresUpdate) {TYPED_TEST967,34665
TYPED_TEST(AdaDeltaSolverTest, TestAdaDeltaLeastSquaresUpdateWithWeightDecay) {TYPED_TEST973,34858
TYPED_TEST(AdaDeltaSolverTest, TestAdaDeltaLeastSquaresUpdateWithHalfMomentum) {TYPED_TEST981,35157
TYPED_TEST(AdaDeltaSolverTest, TestAdaDeltaLeastSquaresUpdateWithMomentum) {TYPED_TEST992,35530
TYPED_TEST(AdaDeltaSolverTest, TestLeastSquaresUpdateWithMomentumMultiIter) {TYPED_TEST1003,35900
TYPED_TEST(AdaDeltaSolverTest, TestAdaDeltaLeastSquaresUpdateWithEverything) {TYPED_TEST1014,36274
TYPED_TEST(AdaDeltaSolverTest,TYPED_TEST1025,36649
TYPED_TEST(AdaDeltaSolverTest, TestLeastSquaresUpdateWithEverythingAccum) {TYPED_TEST1038,37063
TYPED_TEST(AdaDeltaSolverTest, TestLeastSquaresUpdateWithEverythingAccumShare) {TYPED_TEST1049,37435
TYPED_TEST(AdaDeltaSolverTest, TestSnapshot) {TYPED_TEST1061,37835
TYPED_TEST(AdaDeltaSolverTest, TestSnapshotShare) {TYPED_TEST1072,38168
class AdamSolverTest : public GradientBasedSolverTest<TypeParam> {AdamSolverTest1085,38559
  typedef typename TypeParam::Dtype Dtype;Dtype1086,38626
  virtual void InitSolver(const SolverParameter& param) {InitSolver1089,38682
TYPED_TEST(AdamSolverTest, TestAdamLeastSquaresUpdate) {TYPED_TEST1101,39047
TYPED_TEST(AdamSolverTest, TestAdamLeastSquaresUpdateWithWeightDecay) {TYPED_TEST1109,39321
TYPED_TEST(AdamSolverTest, TestAdamLeastSquaresUpdateWithEverything) {TYPED_TEST1117,39612
TYPED_TEST(AdamSolverTest, TestAdamLeastSquaresUpdateWithEverythingShare) {TYPED_TEST1128,39979
TYPED_TEST(AdamSolverTest, TestLeastSquaresUpdateWithEverythingAccum) {TYPED_TEST1140,40374
TYPED_TEST(AdamSolverTest, TestLeastSquaresUpdateWithEverythingAccumShare) {TYPED_TEST1151,40742
TYPED_TEST(AdamSolverTest, TestSnapshot) {TYPED_TEST1163,41138
TYPED_TEST(AdamSolverTest, TestSnapshotShare) {TYPED_TEST1174,41467
class RMSPropSolverTest : public GradientBasedSolverTest<TypeParam> {RMSPropSolverTest1187,41854
  typedef typename TypeParam::Dtype Dtype;Dtype1188,41924
  virtual void InitSolver(const SolverParameter& param) {InitSolver1191,41980
TYPED_TEST(RMSPropSolverTest, TestRMSPropLeastSquaresUpdateWithWeightDecay) {TYPED_TEST1201,42280
TYPED_TEST(RMSPropSolverTest, TestRMSPropLeastSquaresUpdateWithRmsDecay) {TYPED_TEST1208,42534
TYPED_TEST(RMSPropSolverTest, TestRMSPropLeastSquaresUpdateWithEverything) {TYPED_TEST1219,42905
TYPED_TEST(RMSPropSolverTest,TYPED_TEST1230,43278
TYPED_TEST(RMSPropSolverTest, TestLeastSquaresUpdateWithEverythingAccum) {TYPED_TEST1243,43685
TYPED_TEST(RMSPropSolverTest, TestLeastSquaresUpdateWithEverythingAccumShare) {TYPED_TEST1254,44056
TYPED_TEST(RMSPropSolverTest, TestSnapshot) {TYPED_TEST1266,44455
TYPED_TEST(RMSPropSolverTest, TestSnapshotShare) {TYPED_TEST1277,44785

src/caffe/test/test_maxpool_dropout_layers.cpp,818
namespace caffe {caffe14,306
class MaxPoolingDropoutTest : public MultiDeviceTest<TypeParam> {MaxPoolingDropoutTest17,355
  typedef typename TypeParam::Dtype Dtype;Dtype18,421
  MaxPoolingDropoutTest()MaxPoolingDropoutTest20,476
  virtual void SetUp() {SetUp23,583
  virtual ~MaxPoolingDropoutTest() { delete blob_bottom_; delete blob_top_; }~MaxPoolingDropoutTest34,945
  Blob<Dtype>* const blob_bottom_;blob_bottom_35,1023
  Blob<Dtype>* const blob_top_;blob_top_36,1058
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_37,1090
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_38,1131
TYPED_TEST(MaxPoolingDropoutTest, TestSetup) {TYPED_TEST43,1236
TYPED_TEST(MaxPoolingDropoutTest, TestForward) {TYPED_TEST60,1950
TYPED_TEST(MaxPoolingDropoutTest, TestBackward) {TYPED_TEST89,3066

src/caffe/test/test_data_transformer.cpp,1239
namespace caffe {caffe16,308
void FillDatum(const int label, const int channels, const int height,FillDatum18,327
class DataTransformTest : public ::testing::Test {DataTransformTest33,821
  DataTransformTest()DataTransformTest35,884
  int NumSequenceMatches(const TransformationParameter transform_param,NumSequenceMatches39,951
  int seed_;seed_72,2262
  int num_iter_;num_iter_73,2275
TYPED_TEST(DataTransformTest, TestEmptyTransform) {TYPED_TEST78,2345
TYPED_TEST(DataTransformTest, TestEmptyTransformUniquePixels) {TYPED_TEST101,3131
TYPED_TEST(DataTransformTest, TestCropSize) {TYPED_TEST124,3910
TYPED_TEST(DataTransformTest, TestCropTrain) {TYPED_TEST151,4834
TYPED_TEST(DataTransformTest, TestCropTest) {TYPED_TEST168,5434
TYPED_TEST(DataTransformTest, TestMirrorTrain) {TYPED_TEST185,6032
TYPED_TEST(DataTransformTest, TestMirrorTest) {TYPED_TEST201,6592
TYPED_TEST(DataTransformTest, TestCropMirrorTrain) {TYPED_TEST217,7150
TYPED_TEST(DataTransformTest, TestCropMirrorTest) {TYPED_TEST239,7927
TYPED_TEST(DataTransformTest, TestMeanValue) {TYPED_TEST261,8695
TYPED_TEST(DataTransformTest, TestMeanValues) {TYPED_TEST282,9392
TYPED_TEST(DataTransformTest, TestMeanFile) {TYPED_TEST306,10189

src/caffe/test/test_stochastic_pooling.cpp,1072
namespace caffe {caffe16,302
class StochasticPoolingLayerTest : public MultiDeviceTest<TypeParam> {StochasticPoolingLayerTest19,351
  typedef typename TypeParam::Dtype Dtype;Dtype20,422
  StochasticPoolingLayerTest()StochasticPoolingLayerTest23,478
  virtual void SetUp() {SetUp26,590
  virtual ~StochasticPoolingLayerTest() {~StochasticPoolingLayerTest39,981
  Blob<Dtype>* const blob_bottom_;blob_bottom_43,1071
  Blob<Dtype>* const blob_top_;blob_top_44,1106
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_45,1138
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_46,1179
class CPUStochasticPoolingLayerTestCPUStochasticPoolingLayerTest50,1247
TYPED_TEST(CPUStochasticPoolingLayerTest, TestSetup) {TYPED_TEST56,1407
class GPUStochasticPoolingLayerTestGPUStochasticPoolingLayerTest72,2010
TYPED_TEST(GPUStochasticPoolingLayerTest, TestStochastic) {TYPED_TEST78,2170
TYPED_TEST(GPUStochasticPoolingLayerTest, TestStochasticTestPhase) {TYPED_TEST121,3982
TYPED_TEST(GPUStochasticPoolingLayerTest, TestGradient) {TYPED_TEST158,5551

src/caffe/test/test_common.cpp,305
namespace caffe {caffe9,170
class CommonTest : public ::testing::Test {};CommonTest11,189
TEST_F(CommonTest, TestCublasHandlerGPU) {TEST_F15,284
TEST_F(CommonTest, TestBrewMode) {TEST_F23,445
TEST_F(CommonTest, TestRandSeedCPU) {TEST_F30,625
TEST_F(CommonTest, TestRandSeedGPU) {TEST_F47,1172

src/caffe/test/test_bias_layer.cpp,2382
namespace caffe {caffe14,282
class BiasLayerTest : public MultiDeviceTest<TypeParam> {BiasLayerTest17,331
  typedef typename TypeParam::Dtype Dtype;Dtype18,389
  BiasLayerTest()BiasLayerTest21,445
  virtual ~BiasLayerTest() {~BiasLayerTest50,1743
  Blob<Dtype>* const blob_bottom_;blob_bottom_59,1997
  Blob<Dtype>* const blob_bottom_eltwise_;blob_bottom_eltwise_60,2032
  Blob<Dtype>* const blob_bottom_broadcast_0_;blob_bottom_broadcast_0_61,2075
  Blob<Dtype>* const blob_bottom_broadcast_1_;blob_bottom_broadcast_1_62,2122
  Blob<Dtype>* const blob_bottom_broadcast_2_;blob_bottom_broadcast_2_63,2169
  Blob<Dtype>* const blob_bottom_bias_;blob_bottom_bias_64,2216
  Blob<Dtype>* const blob_top_;blob_top_65,2256
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_66,2288
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_67,2329
TYPED_TEST(BiasLayerTest, TestForwardEltwise) {TYPED_TEST72,2426
TYPED_TEST(BiasLayerTest, TestForwardEltwiseInPlace) {TYPED_TEST90,3253
TYPED_TEST(BiasLayerTest, TestBackwardEltwiseInPlace) {TYPED_TEST110,4190
TYPED_TEST(BiasLayerTest, TestForwardEltwiseWithParam) {TYPED_TEST156,6350
TYPED_TEST(BiasLayerTest, TestForwardBroadcastBegin) {TYPED_TEST176,7241
TYPED_TEST(BiasLayerTest, TestForwardBroadcastMiddle) {TYPED_TEST199,8257
TYPED_TEST(BiasLayerTest, TestForwardBroadcastMiddleInPlace) {TYPED_TEST222,9274
TYPED_TEST(BiasLayerTest, TestBackwardBroadcastMiddleInPlace) {TYPED_TEST247,10398
TYPED_TEST(BiasLayerTest, TestForwardBroadcastMiddleWithParam) {TYPED_TEST293,12582
TYPED_TEST(BiasLayerTest, TestForwardBroadcastEnd) {TYPED_TEST317,13632
TYPED_TEST(BiasLayerTest, TestForwardBias) {TYPED_TEST340,14646
TYPED_TEST(BiasLayerTest, TestForwardBiasAxis2) {TYPED_TEST357,15398
TYPED_TEST(BiasLayerTest, TestGradientEltwise) {TYPED_TEST375,16204
TYPED_TEST(BiasLayerTest, TestGradientEltwiseWithParam) {TYPED_TEST386,16618
TYPED_TEST(BiasLayerTest, TestGradientBroadcastBegin) {TYPED_TEST399,17108
TYPED_TEST(BiasLayerTest, TestGradientBroadcastMiddle) {TYPED_TEST410,17536
TYPED_TEST(BiasLayerTest, TestGradientBroadcastMiddleWithParam) {TYPED_TEST421,17965
TYPED_TEST(BiasLayerTest, TestGradientBroadcastEnd) {TYPED_TEST435,18530
TYPED_TEST(BiasLayerTest, TestGradientBias) {TYPED_TEST446,18956
TYPED_TEST(BiasLayerTest, TestGradientBiasAxis2) {TYPED_TEST456,19318

src/caffe/test/test_hdf5data_layer.cpp,790
namespace caffe {caffe15,258
class HDF5DataLayerTest : public MultiDeviceTest<TypeParam> {HDF5DataLayerTest18,307
  typedef typename TypeParam::Dtype Dtype;Dtype19,369
  HDF5DataLayerTest()HDF5DataLayerTest22,425
  virtual void SetUp() {SetUp27,605
  virtual ~HDF5DataLayerTest() {~HDF5DataLayerTest37,968
  string* filename;filename44,1111
  Blob<Dtype>* const blob_top_data_;blob_top_data_45,1131
  Blob<Dtype>* const blob_top_label_;blob_top_label_46,1168
  Blob<Dtype>* const blob_top_label2_;blob_top_label2_47,1206
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_48,1245
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_49,1286
TYPED_TEST(HDF5DataLayerTest, TestRead) {TYPED_TEST54,1387
TYPED_TEST(HDF5DataLayerTest, TestSkip) {TYPED_TEST135,4317

src/caffe/test/test_blob.cpp,1184
namespace caffe {caffe11,171
class BlobSimpleTest : public ::testing::Test {BlobSimpleTest14,216
  BlobSimpleTest()BlobSimpleTest16,276
  virtual ~BlobSimpleTest() { delete blob_; delete blob_preshaped_; }~BlobSimpleTest19,385
  Blob<Dtype>* const blob_;blob_20,455
  Blob<Dtype>* const blob_preshaped_;blob_preshaped_21,483
TYPED_TEST(BlobSimpleTest, TestInitialization) {TYPED_TEST26,571
TYPED_TEST(BlobSimpleTest, TestPointersCPUGPU) {TYPED_TEST38,1012
TYPED_TEST(BlobSimpleTest, TestReshape) {TYPED_TEST45,1280
TYPED_TEST(BlobSimpleTest, TestReshapeZero) {TYPED_TEST54,1555
TYPED_TEST(BlobSimpleTest, TestLegacyBlobProtoShapeEquals) {TYPED_TEST62,1729
class BlobMathTest : public MultiDeviceTest<TypeParam> {BlobMathTest116,3208
  typedef typename TypeParam::Dtype Dtype;Dtype117,3265
  BlobMathTest()BlobMathTest119,3320
  virtual ~BlobMathTest() { delete blob_; }~BlobMathTest123,3408
  Blob<Dtype>* const blob_;blob_124,3452
  Dtype epsilon_;epsilon_125,3480
TYPED_TEST(BlobMathTest, TestSumOfSquares) {TYPED_TEST130,3556
TYPED_TEST(BlobMathTest, TestAsum) {TYPED_TEST185,5421
TYPED_TEST(BlobMathTest, TestScaleData) {TYPED_TEST239,7225

src/caffe/test/test_rnn_layer.cpp,1162
namespace caffe {caffe14,279
class RNNLayerTest : public MultiDeviceTest<TypeParam> {RNNLayerTest17,328
  typedef typename TypeParam::Dtype Dtype;Dtype18,385
  RNNLayerTest() : num_output_(7) {RNNLayerTest21,441
  void ReshapeBlobs(int num_timesteps, int num_instances) {ReshapeBlobs41,1116
  int num_output_;num_output_56,1597
  LayerParameter layer_param_;layer_param_57,1616
  Blob<Dtype> blob_bottom_;blob_bottom_58,1647
  Blob<Dtype> blob_bottom_cont_;blob_bottom_cont_59,1675
  Blob<Dtype> blob_bottom_static_;blob_bottom_static_60,1708
  Blob<Dtype> blob_top_;blob_top_61,1743
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_62,1768
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_63,1809
TYPED_TEST(RNNLayerTest, TestSetUp) {TYPED_TEST68,1905
TYPED_TEST(RNNLayerTest, TestForward) {TYPED_TEST78,2296
TYPED_TEST(RNNLayerTest, TestGradient) {TYPED_TEST163,5768
TYPED_TEST(RNNLayerTest, TestGradientNonZeroCont) {TYPED_TEST171,6043
TYPED_TEST(RNNLayerTest, TestGradientNonZeroContBufferSize2) {TYPED_TEST182,6454
TYPED_TEST(RNNLayerTest, TestGradientNonZeroContBufferSize2WithStaticInput) {TYPED_TEST198,7038

src/caffe/test/test_slice_layer.cpp,1373
namespace caffe {caffe13,262
class SliceLayerTest : public MultiDeviceTest<TypeParam> {SliceLayerTest16,311
  typedef typename TypeParam::Dtype Dtype;Dtype17,370
  SliceLayerTest()SliceLayerTest20,426
  virtual void SetUp() {SetUp25,619
  virtual void ReduceBottomBlobSize() {ReduceBottomBlobSize39,1091
  virtual ~SliceLayerTest() {~SliceLayerTest46,1294
  Blob<Dtype>* const blob_bottom_;blob_bottom_51,1418
  Blob<Dtype>* const blob_top_0_;blob_top_0_52,1453
  Blob<Dtype>* const blob_top_1_;blob_top_1_53,1487
  Blob<Dtype>* const blob_top_2_;blob_top_2_54,1521
  vector<Blob<Dtype>*> blob_top_vec_0_, blob_top_vec_1_;blob_top_vec_0_55,1555
  vector<Blob<Dtype>*> blob_top_vec_0_, blob_top_vec_1_;blob_top_vec_1_55,1555
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_56,1612
TYPED_TEST(SliceLayerTest, TestSetupNum) {TYPED_TEST61,1713
TYPED_TEST(SliceLayerTest, TestSetupChannels) {TYPED_TEST75,2402
TYPED_TEST(SliceLayerTest, TestTrivialSlice) {TYPED_TEST90,3099
TYPED_TEST(SliceLayerTest, TestSliceAcrossNum) {TYPED_TEST105,3677
TYPED_TEST(SliceLayerTest, TestSliceAcrossChannels) {TYPED_TEST135,4883
TYPED_TEST(SliceLayerTest, TestGradientTrivial) {TYPED_TEST178,6758
TYPED_TEST(SliceLayerTest, TestGradientAcrossNum) {TYPED_TEST190,7186
TYPED_TEST(SliceLayerTest, TestGradientAcrossChannels) {TYPED_TEST202,7625

src/caffe/test/test_convolution_layer.cpp,3390
namespace caffe {caffe17,331
void caffe_conv(const Blob<Dtype>* in, ConvolutionParameter* conv_param,caffe_conv22,493
class ConvolutionLayerTest : public MultiDeviceTest<TypeParam> {ConvolutionLayerTest151,5473
  typedef typename TypeParam::Dtype Dtype;Dtype152,5538
  ConvolutionLayerTest()ConvolutionLayerTest155,5594
  virtual void SetUp() {SetUp160,5803
  virtual ~ConvolutionLayerTest() {~ConvolutionLayerTest171,6132
  virtual Blob<Dtype>* MakeReferenceTop(Blob<Dtype>* top) {MakeReferenceTop178,6271
  Blob<Dtype>* const blob_bottom_;blob_bottom_184,6468
  Blob<Dtype>* const blob_bottom_2_;blob_bottom_2_185,6503
  Blob<Dtype>* const blob_top_;blob_top_186,6540
  Blob<Dtype>* const blob_top_2_;blob_top_2_187,6572
  shared_ptr<Blob<Dtype> > ref_blob_top_;ref_blob_top_188,6606
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_189,6648
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_190,6689
TYPED_TEST(ConvolutionLayerTest, TestSetup) {TYPED_TEST195,6793
TYPED_TEST(ConvolutionLayerTest, TestSimpleConvolution) {TYPED_TEST231,8314
TYPED_TEST(ConvolutionLayerTest, TestDilatedConvolution) {TYPED_TEST267,9910
TYPED_TEST(ConvolutionLayerTest, Test0DConvolution) {TYPED_TEST311,11785
TYPED_TEST(ConvolutionLayerTest, TestSimple3DConvolution) {TYPED_TEST349,13380
TYPED_TEST(ConvolutionLayerTest, TestDilated3DConvolution) {TYPED_TEST396,15440
TYPED_TEST(ConvolutionLayerTest, Test1x1Convolution) {TYPED_TEST443,17449
TYPED_TEST(ConvolutionLayerTest, TestSimpleConvolutionGroup) {TYPED_TEST470,18606
TYPED_TEST(ConvolutionLayerTest, TestSobelConvolution) {TYPED_TEST498,19806
TYPED_TEST(ConvolutionLayerTest, TestNDAgainst2D) {TYPED_TEST591,23565
TYPED_TEST(ConvolutionLayerTest, TestGradient) {TYPED_TEST709,28722
TYPED_TEST(ConvolutionLayerTest, TestDilatedGradient) {TYPED_TEST727,29485
TYPED_TEST(ConvolutionLayerTest, TestGradient3D) {TYPED_TEST751,30437
TYPED_TEST(ConvolutionLayerTest, Test1x1Gradient) {TYPED_TEST779,31614
TYPED_TEST(ConvolutionLayerTest, TestGradientGroup) {TYPED_TEST797,32380
class CuDNNConvolutionLayerTest : public GPUDeviceTest<Dtype> {CuDNNConvolutionLayerTest817,33117
  CuDNNConvolutionLayerTest()CuDNNConvolutionLayerTest819,33193
  virtual void SetUp() {SetUp824,33407
  virtual ~CuDNNConvolutionLayerTest() {~CuDNNConvolutionLayerTest835,33736
  virtual Blob<Dtype>* MakeReferenceTop(Blob<Dtype>* top) {MakeReferenceTop842,33880
  Blob<Dtype>* const blob_bottom_;blob_bottom_848,34077
  Blob<Dtype>* const blob_bottom_2_;blob_bottom_2_849,34112
  Blob<Dtype>* const blob_top_;blob_top_850,34149
  Blob<Dtype>* const blob_top_2_;blob_top_2_851,34181
  shared_ptr<Blob<Dtype> > ref_blob_top_;ref_blob_top_852,34215
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_853,34257
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_854,34298
TYPED_TEST(CuDNNConvolutionLayerTest, TestSetupCuDNN) {TYPED_TEST859,34397
TYPED_TEST(CuDNNConvolutionLayerTest, TestSimpleConvolutionCuDNN) {TYPED_TEST896,36017
TYPED_TEST(CuDNNConvolutionLayerTest, TestSimpleConvolutionGroupCuDNN) {TYPED_TEST931,37601
TYPED_TEST(CuDNNConvolutionLayerTest, TestSobelConvolutionCuDNN) {TYPED_TEST958,38789
TYPED_TEST(CuDNNConvolutionLayerTest, TestGradientCuDNN) {TYPED_TEST1051,42603
TYPED_TEST(CuDNNConvolutionLayerTest, TestGradientGroupCuDNN) {TYPED_TEST1068,43346

src/caffe/test/test_threshold_layer.cpp,735
namespace caffe {caffe12,215
class ThresholdLayerTest : public MultiDeviceTest<TypeParam> {ThresholdLayerTest15,264
  typedef typename TypeParam::Dtype Dtype;Dtype16,327
  ThresholdLayerTest()ThresholdLayerTest18,382
  virtual ~ThresholdLayerTest() { delete blob_bottom_; delete blob_top_; }~ThresholdLayerTest29,761
  Blob<Dtype>* const blob_bottom_;blob_bottom_30,836
  Blob<Dtype>* const blob_top_;blob_top_31,871
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_32,903
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_33,944
TYPED_TEST(ThresholdLayerTest, TestSetup) {TYPED_TEST39,1047
TYPED_TEST(ThresholdLayerTest, Test) {TYPED_TEST50,1547
TYPED_TEST(ThresholdLayerTest, Test2) {TYPED_TEST72,2321

src/caffe/test/test_upgrade_proto.cpp,1002
namespace caffe {caffe17,359
class PaddingLayerUpgradeTest : public ::testing::Test {PaddingLayerUpgradeTest19,378
  void RunPaddingUpgradeTest(RunPaddingUpgradeTest21,447
TEST_F(PaddingLayerUpgradeTest, TestSimple) {TEST_F44,1448
TEST_F(PaddingLayerUpgradeTest, TestTwoTops) {TEST_F192,5125
TEST_F(PaddingLayerUpgradeTest, TestImageNet) {TEST_F387,9933
class NetUpgradeTest : public ::testing::Test {NetUpgradeTest1089,26137
  void RunV0UpgradeTest(RunV0UpgradeTest1091,26197
  void RunV1UpgradeTest(RunV1UpgradeTest1108,26950
TEST_F(NetUpgradeTest, TestSimple) {TEST_F1126,27706
TEST_F(NetUpgradeTest, TestAllParams) {TEST_F1353,33343
TEST_F(NetUpgradeTest, TestImageNet) {TEST_F1853,45529
TEST_F(NetUpgradeTest, TestUpgradeV1LayerType) {TEST_F2894,69618
class SolverTypeUpgradeTest : public ::testing::Test {SolverTypeUpgradeTest2929,70829
  void RunSolverTypeUpgradeTest(RunSolverTypeUpgradeTest2931,70896
TEST_F(SolverTypeUpgradeTest, TestSimple) {TEST_F2947,71576

src/caffe/test/test_concat_layer.cpp,1494
namespace caffe {caffe13,263
class ConcatLayerTest : public MultiDeviceTest<TypeParam> {ConcatLayerTest16,312
  typedef typename TypeParam::Dtype Dtype;Dtype17,372
  ConcatLayerTest()ConcatLayerTest20,428
  virtual void SetUp() {SetUp25,647
  virtual ~ConcatLayerTest() {~ConcatLayerTest45,1414
  Blob<Dtype>* const blob_bottom_0_;blob_bottom_0_50,1545
  Blob<Dtype>* const blob_bottom_1_;blob_bottom_1_51,1582
  Blob<Dtype>* const blob_bottom_2_;blob_bottom_2_52,1619
  Blob<Dtype>* const blob_top_;blob_top_53,1656
  vector<Blob<Dtype>*> blob_bottom_vec_0_, blob_bottom_vec_1_;blob_bottom_vec_0_54,1688
  vector<Blob<Dtype>*> blob_bottom_vec_0_, blob_bottom_vec_1_;blob_bottom_vec_1_54,1688
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_55,1751
TYPED_TEST(ConcatLayerTest, TestSetupNum) {TYPED_TEST60,1850
TYPED_TEST(ConcatLayerTest, TestSetupChannels) {TYPED_TEST73,2444
TYPED_TEST(ConcatLayerTest, TestSetupChannelsNegativeIndexing) {TYPED_TEST85,2997
TYPED_TEST(ConcatLayerTest, TestForwardTrivial) {TYPED_TEST101,3801
TYPED_TEST(ConcatLayerTest, TestForwardNum) {TYPED_TEST114,4294
TYPED_TEST(ConcatLayerTest, TestForwardChannels) {TYPED_TEST143,5432
TYPED_TEST(ConcatLayerTest, TestGradientTrivial) {TYPED_TEST169,6453
TYPED_TEST(ConcatLayerTest, TestGradientNum) {TYPED_TEST179,6798
TYPED_TEST(ConcatLayerTest, TestGradientChannels) {TYPED_TEST189,7143
TYPED_TEST(ConcatLayerTest, TestGradientChannelsBottomOneOnly) {TYPED_TEST198,7442

src/caffe/test/test_argmax_layer.cpp,1304
namespace caffe {caffe13,231
class ArgMaxLayerTest : public CPUDeviceTest<Dtype> {ArgMaxLayerTest16,276
  ArgMaxLayerTest()ArgMaxLayerTest18,342
  virtual ~ArgMaxLayerTest() { delete blob_bottom_; delete blob_top_; }~ArgMaxLayerTest30,741
  Blob<Dtype>* const blob_bottom_;blob_bottom_31,813
  Blob<Dtype>* const blob_top_;blob_top_32,848
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_33,880
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_34,921
  size_t top_k_;top_k_35,959
TYPED_TEST(ArgMaxLayerTest, TestSetup) {TYPED_TEST40,1027
TYPED_TEST(ArgMaxLayerTest, TestSetupMaxVal) {TYPED_TEST48,1315
TYPED_TEST(ArgMaxLayerTest, TestSetupAxis) {TYPED_TEST58,1718
TYPED_TEST(ArgMaxLayerTest, TestSetupAxisNegativeIndexing) {TYPED_TEST70,2273
TYPED_TEST(ArgMaxLayerTest, TestSetupAxisMaxVal) {TYPED_TEST82,2845
TYPED_TEST(ArgMaxLayerTest, TestCPU) {TYPED_TEST95,3445
TYPED_TEST(ArgMaxLayerTest, TestCPUMaxVal) {TYPED_TEST118,4222
TYPED_TEST(ArgMaxLayerTest, TestCPUTopK) {TYPED_TEST144,5163
TYPED_TEST(ArgMaxLayerTest, TestCPUMaxValTopK) {TYPED_TEST174,6205
TYPED_TEST(ArgMaxLayerTest, TestCPUAxis) {TYPED_TEST206,7356
TYPED_TEST(ArgMaxLayerTest, TestCPUAxisTopK) {TYPED_TEST232,8270
TYPED_TEST(ArgMaxLayerTest, TestCPUAxisMaxValTopK) {TYPED_TEST265,9391

src/caffe/test/test_reshape_layer.cpp,1443
namespace caffe {caffe13,264
class ReshapeLayerTest : public MultiDeviceTest<TypeParam> {ReshapeLayerTest16,313
  typedef typename TypeParam::Dtype Dtype;Dtype17,374
  ReshapeLayerTest()ReshapeLayerTest19,429
  virtual ~ReshapeLayerTest() { delete blob_bottom_; delete blob_top_; }~ReshapeLayerTest30,769
  Blob<Dtype>* const blob_bottom_;blob_bottom_32,843
  Blob<Dtype>* const blob_top_;blob_top_33,878
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_34,910
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_35,951
TYPED_TEST(ReshapeLayerTest, TestFlattenOutputSizes) {TYPED_TEST40,1051
TYPED_TEST(ReshapeLayerTest, TestFlattenValues) {TYPED_TEST57,1648
TYPED_TEST(ReshapeLayerTest, TestCopyDimensions) {TYPED_TEST78,2553
TYPED_TEST(ReshapeLayerTest, TestInferenceOfUnspecified) {TYPED_TEST97,3272
TYPED_TEST(ReshapeLayerTest, TestInferenceOfUnspecifiedWithStartAxis) {TYPED_TEST117,3930
TYPED_TEST(ReshapeLayerTest, TestInsertSingletonAxesStart) {TYPED_TEST136,4610
TYPED_TEST(ReshapeLayerTest, TestInsertSingletonAxesMiddle) {TYPED_TEST159,5463
TYPED_TEST(ReshapeLayerTest, TestInsertSingletonAxesEnd) {TYPED_TEST182,6317
TYPED_TEST(ReshapeLayerTest, TestFlattenMiddle) {TYPED_TEST205,7169
TYPED_TEST(ReshapeLayerTest, TestForward) {TYPED_TEST222,7792
TYPED_TEST(ReshapeLayerTest, TestForwardAfterReshape) {TYPED_TEST239,8393
TYPED_TEST(ReshapeLayerTest, TestGradient) {TYPED_TEST265,9475

src/caffe/test/test_hinge_loss_layer.cpp,743
namespace caffe {caffe14,284
class HingeLossLayerTest : public MultiDeviceTest<TypeParam> {HingeLossLayerTest17,333
  typedef typename TypeParam::Dtype Dtype;Dtype18,396
  HingeLossLayerTest()HingeLossLayerTest21,452
  virtual ~HingeLossLayerTest() {~HingeLossLayerTest38,1135
  Blob<Dtype>* const blob_bottom_data_;blob_bottom_data_43,1261
  Blob<Dtype>* const blob_bottom_label_;blob_bottom_label_44,1301
  Blob<Dtype>* const blob_top_loss_;blob_top_loss_45,1342
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_46,1379
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_47,1420
TYPED_TEST(HingeLossLayerTest, TestGradientL1) {TYPED_TEST53,1523
TYPED_TEST(HingeLossLayerTest, TestGradientL2) {TYPED_TEST62,1850

src/caffe/test/test_math_functions.cpp,1432
namespace caffe {caffe14,295
class MathFunctionsTest : public MultiDeviceTest<TypeParam> {MathFunctionsTest17,344
  typedef typename TypeParam::Dtype Dtype;Dtype18,406
  MathFunctionsTest()MathFunctionsTest21,462
  virtual void SetUp() {SetUp26,569
  virtual ~MathFunctionsTest() {~MathFunctionsTest37,904
  Blob<Dtype>* const blob_bottom_;blob_bottom_42,989
  Blob<Dtype>* const blob_top_;blob_top_43,1024
class CPUMathFunctionsTestCPUMathFunctionsTest47,1086
TYPED_TEST(CPUMathFunctionsTest, TestNothing) {TYPED_TEST53,1219
TYPED_TEST(CPUMathFunctionsTest, TestAsum) {TYPED_TEST58,1369
TYPED_TEST(CPUMathFunctionsTest, TestSign) {TYPED_TEST69,1715
TYPED_TEST(CPUMathFunctionsTest, TestSgnbit) {TYPED_TEST79,2088
TYPED_TEST(CPUMathFunctionsTest, TestFabs) {TYPED_TEST89,2453
TYPED_TEST(CPUMathFunctionsTest, TestScale) {TYPED_TEST99,2814
TYPED_TEST(CPUMathFunctionsTest, TestCopy) {TYPED_TEST112,3385
class GPUMathFunctionsTest : public MathFunctionsTest<GPUDevice<Dtype> > {GPUMathFunctionsTest125,3768
TYPED_TEST(GPUMathFunctionsTest, TestAsum) {TYPED_TEST130,3899
TYPED_TEST(GPUMathFunctionsTest, TestSign) {TYPED_TEST142,4286
TYPED_TEST(GPUMathFunctionsTest, TestSgnbit) {TYPED_TEST153,4716
TYPED_TEST(GPUMathFunctionsTest, TestFabs) {TYPED_TEST164,5138
TYPED_TEST(GPUMathFunctionsTest, TestScale) {TYPED_TEST175,5560
TYPED_TEST(GPUMathFunctionsTest, TestCopy) {TYPED_TEST188,6131

src/caffe/test/test_infogain_loss_layer.cpp,1057
namespace caffe {caffe14,291
class InfogainLossLayerTest : public MultiDeviceTest<TypeParam> {InfogainLossLayerTest17,340
  typedef typename TypeParam::Dtype Dtype;Dtype18,406
  InfogainLossLayerTest()InfogainLossLayerTest21,462
  virtual ~InfogainLossLayerTest() {~InfogainLossLayerTest48,1597
  Blob<Dtype>* const blob_bottom_data_;blob_bottom_data_55,1787
  Blob<Dtype>* const blob_bottom_label_;blob_bottom_label_56,1827
  Blob<Dtype>* const blob_bottom_infogain_;blob_bottom_infogain_57,1868
  Blob<Dtype>* const blob_top_loss_;blob_top_loss_58,1912
  Blob<Dtype>* const blob_top_prob_;blob_top_prob_59,1949
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_60,1986
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_61,2027
  int inner_, outer_, num_labels_;inner_62,2065
  int inner_, outer_, num_labels_;outer_62,2065
  int inner_, outer_, num_labels_;num_labels_62,2065
TYPED_TEST(InfogainLossLayerTest, TestInfogainLoss) {TYPED_TEST67,2167
TYPED_TEST(InfogainLossLayerTest, TestGradient) {TYPED_TEST126,4479

src/caffe/test/test_db.cpp,989
namespace caffe {caffe14,310
class DBTest : public ::testing::Test {DBTest19,385
  DBTest()DBTest21,437
  virtual void SetUp() {SetUp25,558
  virtual ~DBTest() { }~DBTest43,1122
  DataParameter_DB backend_;backend_45,1147
  string source_;source_46,1176
  string root_images_;root_images_47,1194
struct TypeLevelDB {TypeLevelDB50,1221
  static DataParameter_DB backend;backend51,1242
DataParameter_DB TypeLevelDB::backend = DataParameter_DB_LEVELDB;backend53,1280
struct TypeLMDB {TypeLMDB55,1347
  static DataParameter_DB backend;backend56,1365
DataParameter_DB TypeLMDB::backend = DataParameter_DB_LMDB;backend58,1403
typedef ::testing::Types<TypeLevelDB, TypeLMDB> TestTypes;TestTypes61,1513
TYPED_TEST(DBTest, TestGetDB) {TYPED_TEST65,1610
TYPED_TEST(DBTest, TestNext) {TYPED_TEST69,1701
TYPED_TEST(DBTest, TestSeekToFirst) {TYPED_TEST80,2011
TYPED_TEST(DBTest, TestKeyValue) {TYPED_TEST96,2487
TYPED_TEST(DBTest, TestWrite) {TYPED_TEST120,3219

src/caffe/test/test_batch_reindex_layer.cpp,829
namespace caffe {caffe13,270
class BatchReindexLayerTest : public MultiDeviceTest<TypeParam> {BatchReindexLayerTest16,318
  typedef typename TypeParam::Dtype Dtype;Dtype17,384
  BatchReindexLayerTest()BatchReindexLayerTest20,440
  virtual void SetUp() {SetUp25,599
  virtual ~BatchReindexLayerTest() {~BatchReindexLayerTest50,1341
  Blob<Dtype>* const blob_bottom_;blob_bottom_55,1462
  Blob<Dtype>* const blob_bottom_permute_;blob_bottom_permute_56,1497
  Blob<Dtype>* const blob_top_;blob_top_57,1540
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_58,1572
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_59,1613
  void TestForward() {TestForward61,1652
TYPED_TEST(BatchReindexLayerTest, TestForward) {TYPED_TEST105,3108
TYPED_TEST(BatchReindexLayerTest, TestGradient) {TYPED_TEST109,3183

src/caffe/test/test_memory_data_layer.cpp,1190
namespace caffe {caffe13,229
class MemoryDataLayerTest : public MultiDeviceTest<TypeParam> {MemoryDataLayerTest16,278
  typedef typename TypeParam::Dtype Dtype;Dtype17,342
  MemoryDataLayerTest()MemoryDataLayerTest20,398
  virtual void SetUp() {SetUp25,565
  virtual ~MemoryDataLayerTest() {~MemoryDataLayerTest42,1072
  int batch_size_;batch_size_48,1196
  int batches_;batches_49,1215
  int channels_;channels_50,1231
  int height_;height_51,1248
  int width_;width_52,1263
  Blob<Dtype>* const data_;data_55,1373
  Blob<Dtype>* const labels_;labels_56,1401
  Blob<Dtype>* const data_blob_;data_blob_58,1473
  Blob<Dtype>* const label_blob_;label_blob_59,1506
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_60,1540
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_61,1581
TYPED_TEST(MemoryDataLayerTest, TestSetup) {TYPED_TEST66,1684
TYPED_TEST(MemoryDataLayerTest, TestForward) {TYPED_TEST89,2679
TYPED_TEST(MemoryDataLayerTest, AddDatumVectorDefaultTransform) {TYPED_TEST119,3905
TYPED_TEST(MemoryDataLayerTest, AddMatVectorDefaultTransform) {TYPED_TEST173,6008
TYPED_TEST(MemoryDataLayerTest, TestSetBatchSize) {TYPED_TEST219,7967

src/caffe/test/test_pooling_layer.cpp,2945
namespace caffe {caffe17,337
class PoolingLayerTest : public MultiDeviceTest<TypeParam> {PoolingLayerTest20,386
  typedef typename TypeParam::Dtype Dtype;Dtype21,447
  PoolingLayerTest()PoolingLayerTest24,503
  virtual void SetUp() {SetUp28,648
  virtual ~PoolingLayerTest() {~PoolingLayerTest38,978
  Blob<Dtype>* const blob_bottom_;blob_bottom_43,1088
  Blob<Dtype>* const blob_top_;blob_top_44,1123
  Blob<Dtype>* const blob_top_mask_;blob_top_mask_45,1155
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_46,1192
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_47,1233
  void TestForwardSquare() {TestForwardSquare49,1311
  void TestForwardRectHigh() {TestForwardRectHigh121,4419
  void TestForwardRectWide() {TestForwardRectWide246,10431
TYPED_TEST(PoolingLayerTest, TestSetup) {TYPED_TEST376,16456
TYPED_TEST(PoolingLayerTest, TestSetupPadded) {TYPED_TEST390,17041
TYPED_TEST(PoolingLayerTest, TestSetupGlobalPooling) {TYPED_TEST406,17721
TYPED_TEST(PoolingLayerTest, TestForwardMax) {TYPED_TEST446,19332
TYPED_TEST(PoolingLayerTest, TestForwardMaxTopMask) {TYPED_TEST452,19473
TYPED_TEST(PoolingLayerTest, TestGradientMax) {TYPED_TEST459,19676
TYPED_TEST(PoolingLayerTest, TestForwardMaxPadded) {TYPED_TEST478,20422
TYPED_TEST(PoolingLayerTest, TestGradientMaxTopMask) {TYPED_TEST523,22294
TYPED_TEST(PoolingLayerTest, TestForwardAve) {TYPED_TEST543,23111
TYPED_TEST(PoolingLayerTest, TestGradientAve) {TYPED_TEST575,24600
TYPED_TEST(PoolingLayerTest, TestGradientAvePadded) {TYPED_TEST593,25313
class CuDNNPoolingLayerTest : public GPUDeviceTest<Dtype> {CuDNNPoolingLayerTest614,26108
  CuDNNPoolingLayerTest()CuDNNPoolingLayerTest616,26180
  virtual void SetUp() {SetUp620,26330
  virtual ~CuDNNPoolingLayerTest() {~CuDNNPoolingLayerTest630,26660
  Blob<Dtype>* const blob_bottom_;blob_bottom_635,26775
  Blob<Dtype>* const blob_top_;blob_top_636,26810
  Blob<Dtype>* const blob_top_mask_;blob_top_mask_637,26842
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_638,26879
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_639,26920
  void TestForwardSquare() {TestForwardSquare641,26998
  void TestForwardRectHigh() {TestForwardRectHigh713,30111
  void TestForwardRectWide() {TestForwardRectWide838,36128
TYPED_TEST(CuDNNPoolingLayerTest, TestSetupCuDNN) {TYPED_TEST968,42153
TYPED_TEST(CuDNNPoolingLayerTest, TestSetupPaddedCuDNN) {TYPED_TEST981,42714
TYPED_TEST(CuDNNPoolingLayerTest, TestForwardMaxCuDNN) {TYPED_TEST1022,44364
TYPED_TEST(CuDNNPoolingLayerTest, TestGradientMaxCuDNN) {TYPED_TEST1039,44842
TYPED_TEST(CuDNNPoolingLayerTest, TestForwardMaxPaddedCuDNN) {TYPED_TEST1058,45626
TYPED_TEST(CuDNNPoolingLayerTest, TestForwardAveCuDNN) {TYPED_TEST1123,48281
TYPED_TEST(CuDNNPoolingLayerTest, TestGradientAveCuDNN) {TYPED_TEST1148,49340
TYPED_TEST(CuDNNPoolingLayerTest, TestGradientAvePaddedCuDNN) {TYPED_TEST1165,50033

src/caffe/test/test_mvn_layer.cpp,924
namespace caffe {caffe13,300
class MVNLayerTest : public MultiDeviceTest<TypeParam> {MVNLayerTest16,349
  typedef typename TypeParam::Dtype Dtype;Dtype17,406
  MVNLayerTest()MVNLayerTest19,461
  virtual ~MVNLayerTest() { delete blob_bottom_; delete blob_top_; }~MVNLayerTest29,800
  Blob<Dtype>* const blob_bottom_;blob_bottom_30,869
  Blob<Dtype>* const blob_top_;blob_top_31,904
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_32,936
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_33,977
TYPED_TEST(MVNLayerTest, TestForward) {TYPED_TEST38,1073
TYPED_TEST(MVNLayerTest, TestForwardMeanOnly) {TYPED_TEST72,2105
TYPED_TEST(MVNLayerTest, TestForwardAcrossChannels) {TYPED_TEST105,3163
TYPED_TEST(MVNLayerTest, TestGradient) {TYPED_TEST141,4328
TYPED_TEST(MVNLayerTest, TestGradientMeanOnly) {TYPED_TEST150,4623
TYPED_TEST(MVNLayerTest, TestGradientAcrossChannels) {TYPED_TEST161,5043

src/caffe/test/test_accuracy_layer.cpp,1478
namespace caffe {caffe14,262
class AccuracyLayerTest : public MultiDeviceTest<TypeParam> {AccuracyLayerTest17,311
  typedef typename TypeParam::Dtype Dtype;Dtype18,373
  AccuracyLayerTest()AccuracyLayerTest21,429
  virtual void FillBottoms() {FillBottoms42,1093
  virtual ~AccuracyLayerTest() {~AccuracyLayerTest58,1682
  Blob<Dtype>* const blob_bottom_data_;blob_bottom_data_64,1834
  Blob<Dtype>* const blob_bottom_label_;blob_bottom_label_65,1874
  Blob<Dtype>* const blob_top_;blob_top_66,1915
  Blob<Dtype>* const blob_top_per_class_;blob_top_per_class_67,1947
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_68,1989
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_69,2030
  vector<Blob<Dtype>*> blob_top_per_class_vec_;blob_top_per_class_vec_70,2068
  int top_k_;top_k_71,2116
TYPED_TEST(AccuracyLayerTest, TestSetup) {TYPED_TEST76,2193
TYPED_TEST(AccuracyLayerTest, TestSetupTopK) {TYPED_TEST87,2585
TYPED_TEST(AccuracyLayerTest, TestSetupOutputPerClass) {TYPED_TEST101,3095
TYPED_TEST(AccuracyLayerTest, TestForward) {TYPED_TEST116,3722
TYPED_TEST(AccuracyLayerTest, TestForwardWithSpatialAxes) {TYPED_TEST147,4674
TYPED_TEST(AccuracyLayerTest, TestForwardIgnoreLabel) {TYPED_TEST195,6456
TYPED_TEST(AccuracyLayerTest, TestForwardTopK) {TYPED_TEST238,8029
TYPED_TEST(AccuracyLayerTest, TestForwardPerClass) {TYPED_TEST274,9204
TYPED_TEST(AccuracyLayerTest, TestForwardPerClassWithIgnoreLabel) {TYPED_TEST316,10729

src/caffe/test/test_data/generate_sample_data.py,1011
script_dir = os.path.dirname(os.path.abspath(__file__))script_dir8,121
num_cols = 8num_cols12,219
num_rows = 10num_rows13,232
height = 6height14,246
width = 5width15,257
total_size = num_cols * num_rows * height * widthtotal_size16,267
data = np.arange(total_size)data18,318
data = data.reshape(num_rows, num_cols, height, width)data19,347
data = data.astype('float32')data20,402
label = 1 + np.arange(num_rows)[:, np.newaxis]label24,550
label = label.astype('float32')label25,597
label2 = label + 1label229,746
        dtype='uint8',dtype47,1197
        dtype='uint8',dtype52,1327
num_cols = 3num_cols61,1585
num_rows = 8num_rows62,1598
height = 10height63,1611
width = 10width64,1623
data = np.random.randn(num_rows, num_cols, height, width)data66,1635
data = data.reshape(num_rows, num_cols, height, width)data67,1693
data = data.astype('float32')data68,1748
targets = np.random.randn(num_rows, 1)targets70,1779
targets = targets.astype('float32')targets71,1818

src/caffe/test/test_softmax_with_loss_layer.cpp,964
namespace caffe {caffe17,344
class SoftmaxWithLossLayerTest : public MultiDeviceTest<TypeParam> {SoftmaxWithLossLayerTest20,393
  typedef typename TypeParam::Dtype Dtype;Dtype21,462
  SoftmaxWithLossLayerTest()SoftmaxWithLossLayerTest24,518
  virtual ~SoftmaxWithLossLayerTest() {~SoftmaxWithLossLayerTest40,1173
  Blob<Dtype>* const blob_bottom_data_;blob_bottom_data_45,1305
  Blob<Dtype>* const blob_bottom_label_;blob_bottom_label_46,1345
  Blob<Dtype>* const blob_top_loss_;blob_top_loss_47,1386
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_48,1423
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_49,1464
TYPED_TEST(SoftmaxWithLossLayerTest, TestGradient) {TYPED_TEST54,1572
TYPED_TEST(SoftmaxWithLossLayerTest, TestForwardIgnoreLabel) {TYPED_TEST64,1934
TYPED_TEST(SoftmaxWithLossLayerTest, TestGradientIgnoreLabel) {TYPED_TEST87,3018
TYPED_TEST(SoftmaxWithLossLayerTest, TestGradientUnnormalized) {TYPED_TEST98,3484

src/caffe/test/test_softmax_layer.cpp,1313
namespace caffe {caffe18,354
class SoftmaxLayerTest : public MultiDeviceTest<TypeParam> {SoftmaxLayerTest21,403
  typedef typename TypeParam::Dtype Dtype;Dtype22,464
  SoftmaxLayerTest()SoftmaxLayerTest24,519
  virtual ~SoftmaxLayerTest() { delete blob_bottom_; delete blob_top_; }~SoftmaxLayerTest34,863
  Blob<Dtype>* const blob_bottom_;blob_bottom_35,936
  Blob<Dtype>* const blob_top_;blob_top_36,971
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_37,1003
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_38,1044
TYPED_TEST(SoftmaxLayerTest, TestForward) {TYPED_TEST43,1144
TYPED_TEST(SoftmaxLayerTest, TestGradient) {TYPED_TEST77,2482
class CuDNNSoftmaxLayerTest : public GPUDeviceTest<Dtype> {CuDNNSoftmaxLayerTest88,2828
  CuDNNSoftmaxLayerTest()CuDNNSoftmaxLayerTest90,2900
  virtual ~CuDNNSoftmaxLayerTest() { delete blob_bottom_; delete blob_top_; }~CuDNNSoftmaxLayerTest100,3249
  Blob<Dtype>* const blob_bottom_;blob_bottom_101,3327
  Blob<Dtype>* const blob_top_;blob_top_102,3362
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_103,3394
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_104,3435
TYPED_TEST(CuDNNSoftmaxLayerTest, TestForwardCuDNN) {TYPED_TEST109,3530
TYPED_TEST(CuDNNSoftmaxLayerTest, TestGradientCuDNN) {TYPED_TEST142,4852

src/caffe/test/test_filler.cpp,3660
namespace caffe {caffe7,98
class ConstantFillerTest : public ::testing::Test {ConstantFillerTest10,143
  ConstantFillerTest()ConstantFillerTest12,207
  virtual ~ConstantFillerTest() { delete blob_; }~ConstantFillerTest19,425
  Blob<Dtype>* const blob_;blob_20,475
  FillerParameter filler_param_;filler_param_21,503
  shared_ptr<ConstantFiller<Dtype> > filler_;filler_22,536
TYPED_TEST(ConstantFillerTest, TestFill) {TYPED_TEST27,636
class UniformFillerTest : public ::testing::Test {UniformFillerTest38,923
  UniformFillerTest()UniformFillerTest40,986
  virtual ~UniformFillerTest() { delete blob_; }~UniformFillerTest48,1230
  Blob<Dtype>* const blob_;blob_49,1279
  FillerParameter filler_param_;filler_param_50,1307
  shared_ptr<UniformFiller<Dtype> > filler_;filler_51,1340
TYPED_TEST(UniformFillerTest, TestFill) {TYPED_TEST56,1438
class PositiveUnitballFillerTest : public ::testing::Test {PositiveUnitballFillerTest67,1772
  PositiveUnitballFillerTest()PositiveUnitballFillerTest69,1844
  virtual ~PositiveUnitballFillerTest() { delete blob_; }~PositiveUnitballFillerTest75,2044
  Blob<Dtype>* const blob_;blob_76,2102
  FillerParameter filler_param_;filler_param_77,2130
  shared_ptr<PositiveUnitballFiller<Dtype> > filler_;filler_78,2163
TYPED_TEST(PositiveUnitballFillerTest, TestFill) {TYPED_TEST83,2279
class GaussianFillerTest : public ::testing::Test {GaussianFillerTest104,2832
  GaussianFillerTest()GaussianFillerTest106,2896
  virtual ~GaussianFillerTest() { delete blob_; }~GaussianFillerTest114,3145
  Blob<Dtype>* const blob_;blob_115,3195
  FillerParameter filler_param_;filler_param_116,3223
  shared_ptr<GaussianFiller<Dtype> > filler_;filler_117,3256
TYPED_TEST(GaussianFillerTest, TestFill) {TYPED_TEST122,3356
class XavierFillerTest : public ::testing::Test {XavierFillerTest144,4118
  XavierFillerTest()XavierFillerTest146,4180
  virtual void test_params(FillerParameter_VarianceNorm variance_norm,test_params150,4278
  virtual ~XavierFillerTest() { delete blob_; }~XavierFillerTest171,4980
  Blob<Dtype>* const blob_;blob_172,5028
  FillerParameter filler_param_;filler_param_173,5056
  shared_ptr<XavierFiller<Dtype> > filler_;filler_174,5089
TYPED_TEST(XavierFillerTest, TestFillFanIn) {TYPED_TEST179,5185
TYPED_TEST(XavierFillerTest, TestFillFanOut) {TYPED_TEST183,5317
TYPED_TEST(XavierFillerTest, TestFillAverage) {TYPED_TEST187,5454
class MSRAFillerTest : public ::testing::Test {MSRAFillerTest193,5635
  MSRAFillerTest()MSRAFillerTest195,5695
  virtual void test_params(FillerParameter_VarianceNorm variance_norm,test_params199,5791
  virtual ~MSRAFillerTest() { delete blob_; }~MSRAFillerTest220,6491
  Blob<Dtype>* const blob_;blob_221,6537
  FillerParameter filler_param_;filler_param_222,6565
  shared_ptr<MSRAFiller<Dtype> > filler_;filler_223,6598
TYPED_TEST(MSRAFillerTest, TestFillFanIn) {TYPED_TEST228,6690
TYPED_TEST(MSRAFillerTest, TestFillFanOut) {TYPED_TEST232,6820
TYPED_TEST(MSRAFillerTest, TestFillAverage) {TYPED_TEST236,6955
class BilinearFillerTest : public ::testing::Test {BilinearFillerTest242,7134
  BilinearFillerTest() : filler_param_() {}BilinearFillerTest244,7198
  virtual void test_params(const int n) {test_params245,7242
  virtual ~BilinearFillerTest() { delete blob_; }~BilinearFillerTest265,8133
  Blob<Dtype>* blob_;blob_266,8183
  FillerParameter filler_param_;filler_param_267,8205
  shared_ptr<BilinearFiller<Dtype> > filler_;filler_268,8238
TYPED_TEST(BilinearFillerTest, TestFillOdd) {TYPED_TEST273,8338
TYPED_TEST(BilinearFillerTest, TestFillEven) {TYPED_TEST277,8429

src/caffe/test/test_eltwise_layer.cpp,1297
namespace caffe {caffe14,285
class EltwiseLayerTest : public MultiDeviceTest<TypeParam> {EltwiseLayerTest17,334
  typedef typename TypeParam::Dtype Dtype;Dtype18,395
  EltwiseLayerTest()EltwiseLayerTest21,451
  virtual ~EltwiseLayerTest() {~EltwiseLayerTest38,1113
  Blob<Dtype>* const blob_bottom_a_;blob_bottom_a_44,1252
  Blob<Dtype>* const blob_bottom_b_;blob_bottom_b_45,1289
  Blob<Dtype>* const blob_bottom_c_;blob_bottom_c_46,1326
  Blob<Dtype>* const blob_top_;blob_top_47,1363
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_48,1395
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_49,1436
TYPED_TEST(EltwiseLayerTest, TestSetUp) {TYPED_TEST54,1536
TYPED_TEST(EltwiseLayerTest, TestProd) {TYPED_TEST68,2110
TYPED_TEST(EltwiseLayerTest, TestSum) {TYPED_TEST87,2972
TYPED_TEST(EltwiseLayerTest, TestSumCoeff) {TYPED_TEST106,3832
TYPED_TEST(EltwiseLayerTest, TestStableProdGradient) {TYPED_TEST129,4807
TYPED_TEST(EltwiseLayerTest, TestUnstableProdGradient) {TYPED_TEST141,5300
TYPED_TEST(EltwiseLayerTest, TestSumGradient) {TYPED_TEST153,5796
TYPED_TEST(EltwiseLayerTest, TestSumCoeffGradient) {TYPED_TEST164,6236
TYPED_TEST(EltwiseLayerTest, TestMax) {TYPED_TEST178,6777
TYPED_TEST(EltwiseLayerTest, TestMaxGradient) {TYPED_TEST198,7661

src/caffe/test/test_crop_layer.cpp,1326
namespace caffe {caffe13,261
class CropLayerTest : public MultiDeviceTest<TypeParam> {CropLayerTest16,310
  typedef typename TypeParam::Dtype Dtype;Dtype17,368
  CropLayerTest()CropLayerTest20,424
  virtual void SetUp() {SetUp24,588
  virtual ~CropLayerTest() {~CropLayerTest36,938
  Blob<Dtype>* const blob_bottom_0_;blob_bottom_0_41,1044
  Blob<Dtype>* const blob_bottom_1_;blob_bottom_1_42,1081
  Blob<Dtype>* const blob_top_;blob_top_43,1118
  vector<Blob<Dtype>*> blob_bottom_vec_;blob_bottom_vec_44,1150
  vector<Blob<Dtype>*> blob_top_vec_;blob_top_vec_45,1191
TYPED_TEST(CropLayerTest, TestSetupShapeAll) {TYPED_TEST51,1289
TYPED_TEST(CropLayerTest, TestSetupShapeDefault) {TYPED_TEST63,1721
TYPED_TEST(CropLayerTest, TestSetupShapeNegativeIndexing) {TYPED_TEST78,2249
TYPED_TEST(CropLayerTest, TestDimensionsCheck) {TYPED_TEST94,2830
TYPED_TEST(CropLayerTest, TestCropAll) {TYPED_TEST112,3571
TYPED_TEST(CropLayerTest, TestCropAllOffset) {TYPED_TEST136,4502
TYPED_TEST(CropLayerTest, TestCropHW) {TYPED_TEST164,5649
TYPED_TEST(CropLayerTest, TestCrop5D) {TYPED_TEST190,6683
TYPED_TEST(CropLayerTest, TestCropAllGradient) {TYPED_TEST241,8764
TYPED_TEST(CropLayerTest, TestCropHWGradient) {TYPED_TEST251,9117
TYPED_TEST(CropLayerTest, TestCrop5DGradient) {TYPED_TEST263,9571

src/caffe/test/test_net.cpp,4748
namespace caffe {caffe18,370
class NetTest : public MultiDeviceTest<TypeParam> {NetTest21,419
  typedef typename TypeParam::Dtype Dtype;Dtype22,471
  NetTest() : seed_(1701) {}NetTest25,527
  virtual void InitNetFromProtoString(const string& proto) {InitNetFromProtoString27,557
  virtual void InitNetFromProtoFileWithState(const string& proto,InitNetFromProtoFileWithState33,759
  virtual void CopyNetBlobs(const bool copy_diff,CopyNetBlobs44,1196
  virtual void CopyNetParams(const bool copy_diff,CopyNetParams57,1668
  virtual void InitTinyNet(const bool force_backward = false,InitTinyNet70,2151
  virtual void InitTinyNetEuclidean(const bool force_backward = false) {InitTinyNetEuclidean147,4117
  virtual void InitTrickyNet(Dtype* loss_weight = NULL) {InitTrickyNet207,5652
  virtual void InitUnsharedWeightsNet(const Dtype* loss_weight = NULL,InitUnsharedWeightsNet298,8198
  virtual void InitSharedWeightsNet() {InitSharedWeightsNet386,10744
  virtual void InitDiffDataUnsharedWeightsNet() {InitDiffDataUnsharedWeightsNet443,12278
  virtual void InitDiffDataSharedWeightsNet() {InitDiffDataSharedWeightsNet505,13973
  virtual void InitReshapableNet() {InitReshapableNet567,15658
  virtual void InitSkipPropNet(bool test_skip_true) {InitSkipPropNet632,17264
  virtual void InitForcePropNet(bool test_force_true) {InitForcePropNet731,19669
  virtual void InitAllInOneNet(Phase phase = caffe::TRAIN,InitAllInOneNet786,20978
  int seed_;seed_842,22524
  shared_ptr<Net<Dtype> > net_;net_843,22537
TYPED_TEST(NetTest, TestHasBlob) {TYPED_TEST848,22622
TYPED_TEST(NetTest, TestGetBlob) {TYPED_TEST857,22922
TYPED_TEST(NetTest, TestHasLayer) {TYPED_TEST866,23330
TYPED_TEST(NetTest, TestGetLayerByName) {TYPED_TEST874,23586
TYPED_TEST(NetTest, TestBottomNeedBackward) {TYPED_TEST882,23933
TYPED_TEST(NetTest, TestBottomNeedBackwardForce) {TYPED_TEST895,24433
TYPED_TEST(NetTest, TestBottomNeedBackwardEuclideanForce) {TYPED_TEST909,24987
TYPED_TEST(NetTest, TestBottomNeedBackwardTricky) {TYPED_TEST923,25558
TYPED_TEST(NetTest, TestLossWeight) {TYPED_TEST941,26345
TYPED_TEST(NetTest, TestLossWeightMidNet) {TYPED_TEST992,28704
TYPED_TEST(NetTest, TestComboLossWeight) {TYPED_TEST1029,30339
TYPED_TEST(NetTest, TestBackwardWithAccuracyLayer) {TYPED_TEST1158,35801
TYPED_TEST(NetTest, TestUnsharedWeightsDataNet) {TYPED_TEST1167,36140
TYPED_TEST(NetTest, TestSharedWeightsDataNet) {TYPED_TEST1175,36336
TYPED_TEST(NetTest, TestUnsharedWeightsDiffNet) {TYPED_TEST1183,36534
TYPED_TEST(NetTest, TestSharedWeightsDiffNet) {TYPED_TEST1200,37169
TYPED_TEST(NetTest, TestSharedWeightsUpdate) {TYPED_TEST1219,37835
TYPED_TEST(NetTest, TestSharedWeightsResume) {TYPED_TEST1300,41719
TYPED_TEST(NetTest, TestParamPropagateDown) {TYPED_TEST1345,43589
TYPED_TEST(NetTest, TestFromTo) {TYPED_TEST1426,46912
class FilterNetTest : public ::testing::Test {FilterNetTest1460,48060
  void RunFilterNetTest(RunFilterNetTest1462,48119
TEST_F(FilterNetTest, TestNoFilter) {TEST_F1482,48963
TEST_F(FilterNetTest, TestFilterLeNetTrainTest) {TEST_F1506,49527
TEST_F(FilterNetTest, TestFilterOutByStage) {TEST_F1748,55450
TEST_F(FilterNetTest, TestFilterOutByStage2) {TEST_F1787,56413
TEST_F(FilterNetTest, TestFilterInByStage) {TEST_F1826,57357
TEST_F(FilterNetTest, TestFilterInByStage2) {TEST_F1852,58006
TEST_F(FilterNetTest, TestFilterOutByMultipleStage) {TEST_F1877,58619
TEST_F(FilterNetTest, TestFilterInByMultipleStage) {TEST_F1920,59748
TEST_F(FilterNetTest, TestFilterInByMultipleStage2) {TEST_F1948,60492
TEST_F(FilterNetTest, TestFilterInByNotStage) {TEST_F1975,61235
TEST_F(FilterNetTest, TestFilterOutByNotStage) {TEST_F2002,61946
TEST_F(FilterNetTest, TestFilterOutByMinLevel) {TEST_F2038,62870
TEST_F(FilterNetTest, TestFilterOutByMaxLevel) {TEST_F2077,63812
TEST_F(FilterNetTest, TestFilterInByMinLevel) {TEST_F2116,64755
TEST_F(FilterNetTest, TestFilterInByMinLevel2) {TEST_F2141,65366
TEST_F(FilterNetTest, TestFilterInByMaxLevel) {TEST_F2167,66007
TEST_F(FilterNetTest, TestFilterInByMaxLevel2) {TEST_F2192,66618
TEST_F(FilterNetTest, TestFilterInOutByIncludeMultiRule) {TEST_F2218,67261
TEST_F(FilterNetTest, TestFilterInByIncludeMultiRule) {TEST_F2281,69062
TEST_F(FilterNetTest, TestFilterInOutByExcludeMultiRule) {TEST_F2314,70078
TYPED_TEST(NetTest, TestReshape) {TYPED_TEST2377,71879
TYPED_TEST(NetTest, TestSkipPropagateDown) {TYPED_TEST2449,74696
TYPED_TEST(NetTest, TestForcePropagateDown) {TYPED_TEST2497,76966
TYPED_TEST(NetTest, TestAllInOneNetTrain) {TYPED_TEST2544,78932
TYPED_TEST(NetTest, TestAllInOneNetVal) {TYPED_TEST2565,79546
TYPED_TEST(NetTest, TestAllInOneNetDeploy) {TYPED_TEST2586,80155

src/caffe/data_transformer.cpp,1111
namespace caffe {caffe13,250
DataTransformer<Dtype>::DataTransformer(const TransformationParameter& param,DataTransformer16,294
void DataTransformer<Dtype>::Transform(const Datum& datum,Transform42,1226
void DataTransformer<Dtype>::Transform(const Datum& datum,Transform131,4067
void DataTransformer<Dtype>::Transform(const vector<Datum> & datum_vector,Transform185,5857
void DataTransformer<Dtype>::Transform(const vector<cv::Mat> & mat_vector,Transform206,6743
void DataTransformer<Dtype>::Transform(const cv::Mat& cv_img,Transform226,7589
void DataTransformer<Dtype>::Transform(Blob<Dtype>* input_blob,Transform329,10942
vector<int> DataTransformer<Dtype>::InferBlobShape(const Datum& datum) {InferBlobShape442,14819
vector<int> DataTransformer<Dtype>::InferBlobShape(InferBlobShape478,16050
vector<int> DataTransformer<Dtype>::InferBlobShape(const cv::Mat& cv_img) {InferBlobShape491,16475
vector<int> DataTransformer<Dtype>::InferBlobShape(InferBlobShape510,17067
void DataTransformer<Dtype>::InitRand() {InitRand523,17495
int DataTransformer<Dtype>::Rand(int n) {Rand535,17805

src/caffe/blob.cpp,3310
namespace caffe {caffe9,165
void Blob<Dtype>::Reshape(const int num, const int channels, const int height,Reshape12,210
void Blob<Dtype>::Reshape(const vector<int>& shape) {Reshape23,465
void Blob<Dtype>::Reshape(const BlobShape& shape) {Reshape48,1290
void Blob<Dtype>::ReshapeLike(const Blob<Dtype>& other) {ReshapeLike58,1564
Blob<Dtype>::Blob(const int num, const int channels, const int height,Blob63,1677
Blob<Dtype>::Blob(const vector<int>& shape)Blob71,1916
const int* Blob<Dtype>::gpu_shape() const {gpu_shape78,2084
const Dtype* Blob<Dtype>::cpu_data() const {cpu_data84,2225
void Blob<Dtype>::set_cpu_data(Dtype* data) {set_cpu_data90,2357
const Dtype* Blob<Dtype>::gpu_data() const {gpu_data102,2679
void Blob<Dtype>::set_gpu_data(Dtype* data) {set_gpu_data108,2811
const Dtype* Blob<Dtype>::cpu_diff() const {cpu_diff120,3133
const Dtype* Blob<Dtype>::gpu_diff() const {gpu_diff126,3265
Dtype* Blob<Dtype>::mutable_cpu_data() {mutable_cpu_data132,3397
Dtype* Blob<Dtype>::mutable_gpu_data() {mutable_gpu_data138,3540
Dtype* Blob<Dtype>::mutable_cpu_diff() {mutable_cpu_diff144,3683
Dtype* Blob<Dtype>::mutable_gpu_diff() {mutable_gpu_diff150,3826
void Blob<Dtype>::ShareData(const Blob& other) {ShareData156,3969
void Blob<Dtype>::ShareDiff(const Blob& other) {ShareDiff162,4106
template <> void Blob<unsigned int>::Update() { NOT_IMPLEMENTED; }Update170,4398
template <> void Blob<int>::Update() { NOT_IMPLEMENTED; }Update171,4465
void Blob<Dtype>::Update() {Update174,4550
template <> unsigned int Blob<unsigned int>::asum_data() const {asum_data199,5273
template <> int Blob<int>::asum_data() const {asum_data204,5372
Dtype Blob<Dtype>::asum_data() const {asum_data210,5479
template <> unsigned int Blob<unsigned int>::asum_diff() const {asum_diff234,5999
template <> int Blob<int>::asum_diff() const {asum_diff239,6098
Dtype Blob<Dtype>::asum_diff() const {asum_diff245,6205
template <> unsigned int Blob<unsigned int>::sumsq_data() const {sumsq_data269,6725
template <> int Blob<int>::sumsq_data() const {sumsq_data274,6825
Dtype Blob<Dtype>::sumsq_data() const {sumsq_data280,6933
template <> unsigned int Blob<unsigned int>::sumsq_diff() const {sumsq_diff306,7521
template <> int Blob<int>::sumsq_diff() const {sumsq_diff311,7621
Dtype Blob<Dtype>::sumsq_diff() const {sumsq_diff317,7729
template <> void Blob<unsigned int>::scale_data(unsigned int scale_factor) {scale_data343,8317
template <> void Blob<int>::scale_data(int scale_factor) {scale_data347,8416
void Blob<Dtype>::scale_data(Dtype scale_factor) {scale_data352,8523
template <> void Blob<unsigned int>::scale_diff(unsigned int scale_factor) {scale_diff376,9097
template <> void Blob<int>::scale_diff(int scale_factor) {scale_diff380,9196
void Blob<Dtype>::scale_diff(Dtype scale_factor) {scale_diff385,9303
bool Blob<Dtype>::ShapeEquals(const BlobProto& other) {ShapeEquals410,9903
void Blob<Dtype>::CopyFrom(const Blob& source, bool copy_diff, bool reshape) {CopyFrom433,10906
void Blob<Dtype>::FromProto(const BlobProto& proto, bool reshape) {FromProto466,11844
void Blob<double>::ToProto(BlobProto* proto, bool write_diff) const {ToProto530,13544
void Blob<float>::ToProto(BlobProto* proto, bool write_diff) const {ToProto550,14083

src/caffe/layers/mvn_layer.cpp,288
namespace caffe {caffe6,99
void MVNLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape9,144
void MVNLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu31,1086
void MVNLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu74,2766

src/caffe/layers/contrastive_loss_layer.cpp,262
namespace caffe {caffe7,133
void ContrastiveLossLayer<Dtype>::LayerSetUp(LayerSetUp10,178
void ContrastiveLossLayer<Dtype>::Forward_cpu(Forward_cpu31,1060
void ContrastiveLossLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu65,2308

src/caffe/layers/cudnn_tanh_layer.cpp,275
namespace caffe {caffe6,82
void CuDNNTanHLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,127
void CuDNNTanHLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape21,582
CuDNNTanHLayer<Dtype>::~CuDNNTanHLayer() {~CuDNNTanHLayer33,1029

src/caffe/layers/bnll_layer.cpp,264
namespace caffe {caffe6,80
const float kBNLL_THRESHOLD = 50.;kBNLL_THRESHOLD8,99
void BNLLLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu11,161
void BNLLLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu24,616

src/caffe/layers/exp_layer.cpp,294
namespace caffe {caffe6,99
void ExpLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,144
void ExpLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu31,1171
void ExpLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu48,1735

src/caffe/layers/absval_layer.cpp,267
namespace caffe {caffe6,102
void AbsValLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,147
void AbsValLayer<Dtype>::Forward_cpu(Forward_cpu17,439
void AbsValLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu25,719

src/caffe/layers/pooling_layer.cpp,396
namespace caffe {caffe8,142
void PoolingLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp14,220
void PoolingLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape79,2823
void PoolingLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu128,4788
void PoolingLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu230,8564

src/caffe/layers/lstm_layer.cpp,548
namespace caffe {caffe11,227
void LSTMLayer<Dtype>::RecurrentInputBlobNames(vector<string>* names) const {RecurrentInputBlobNames14,272
void LSTMLayer<Dtype>::RecurrentOutputBlobNames(vector<string>* names) const {RecurrentOutputBlobNames21,445
void LSTMLayer<Dtype>::RecurrentInputShapes(vector<BlobShape>* shapes) const {RecurrentInputShapes28,641
void LSTMLayer<Dtype>::OutputBlobNames(vector<string>* names) const {OutputBlobNames41,1076
void LSTMLayer<Dtype>::FillUnrolledNet(NetParameter* net_param) const {FillUnrolledNet47,1216

src/caffe/layers/cudnn_sigmoid_layer.cpp,290
namespace caffe {caffe6,85
void CuDNNSigmoidLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,130
void CuDNNSigmoidLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape22,600
CuDNNSigmoidLayer<Dtype>::~CuDNNSigmoidLayer() {~CuDNNSigmoidLayer34,1053

src/caffe/layers/cudnn_lrn_layer.cpp,270
namespace caffe {caffe6,81
void CuDNNLRNLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,126
void CuDNNLRNLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape28,758
CuDNNLRNLayer<Dtype>::~CuDNNLRNLayer() {~CuDNNLRNLayer39,1247

src/caffe/layers/base_conv_layer.cpp,1186
namespace caffe {caffe9,187
void BaseConvolutionLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp12,232
void BaseConvolutionLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape185,8185
void BaseConvolutionLayer<Dtype>::forward_cpu_gemm(const Dtype* input,forward_cpu_gemm256,11211
void BaseConvolutionLayer<Dtype>::forward_cpu_bias(Dtype* output,forward_cpu_bias274,11852
void BaseConvolutionLayer<Dtype>::backward_cpu_gemm(const Dtype* output,backward_cpu_gemm282,12136
void BaseConvolutionLayer<Dtype>::weight_cpu_gemm(const Dtype* input,weight_cpu_gemm300,12727
void BaseConvolutionLayer<Dtype>::backward_cpu_bias(Dtype* bias,backward_cpu_bias316,13315
void BaseConvolutionLayer<Dtype>::forward_gpu_gemm(const Dtype* input,forward_gpu_gemm325,13579
void BaseConvolutionLayer<Dtype>::forward_gpu_bias(Dtype* output,forward_gpu_bias343,14220
void BaseConvolutionLayer<Dtype>::backward_gpu_gemm(const Dtype* output,backward_gpu_gemm351,14504
void BaseConvolutionLayer<Dtype>::weight_gpu_gemm(const Dtype* input,weight_gpu_gemm369,15095
void BaseConvolutionLayer<Dtype>::backward_gpu_bias(Dtype* bias,backward_gpu_bias385,15683

src/caffe/layers/reduction_layer.cpp,365
namespace caffe {caffe6,105
void ReductionLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,150
void ReductionLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape15,353
void ReductionLayer<Dtype>::Forward_cpu(Forward_cpu42,1474
void ReductionLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu77,2609

src/caffe/layers/scale_layer.cpp,353
namespace caffe {caffe9,185
void ScaleLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp12,230
void ScaleLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape76,2998
void ScaleLayer<Dtype>::Forward_cpu(Forward_cpu117,4892
void ScaleLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu145,6012

src/caffe/layers/infogain_loss_layer.cpp,509
namespace caffe {caffe9,209
void InfogainLossLayer<Dtype>::LayerSetUp(LayerSetUp12,254
void InfogainLossLayer<Dtype>::Reshape(Reshape51,1824
Dtype InfogainLossLayer<Dtype>::get_normalizer(get_normalizer85,3104
void InfogainLossLayer<Dtype>::sum_rows_of_H(const Blob<Dtype>* H) {sum_rows_of_H115,4162
void InfogainLossLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu129,4643
void InfogainLossLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu168,5966

src/caffe/layers/conv_layer.cpp,313
namespace caffe {caffe11,152
void ConvolutionLayer<Dtype>::compute_output_shape() {compute_output_shape69,2181
  void ConvolutionLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu86,2895
void ConvolutionLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu127,4193

src/caffe/layers/cudnn_lcn_layer.cpp,270
namespace caffe {caffe6,81
void CuDNNLCNLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,126
void CuDNNLCNLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape29,788
CuDNNLCNLayer<Dtype>::~CuDNNLCNLayer() {~CuDNNLCNLayer55,1735

src/caffe/layers/accuracy_layer.cpp,233
namespace caffe {caffe8,145
void AccuracyLayer<Dtype>::LayerSetUp(LayerSetUp11,190
void AccuracyLayer<Dtype>::Reshape(Reshape23,573
void AccuracyLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu48,1699

src/caffe/layers/hinge_loss_layer.cpp,220
namespace caffe {caffe7,127
void HingeLossLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu10,172
void HingeLossLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu43,1243

src/caffe/layers/softmax_loss_layer.cpp,396
namespace caffe {caffe8,147
void SoftmaxWithLossLayer<Dtype>::LayerSetUp(LayerSetUp11,192
void SoftmaxWithLossLayer<Dtype>::Reshape(Reshape39,1325
Dtype SoftmaxWithLossLayer<Dtype>::get_normalizer(get_normalizer59,2176
void SoftmaxWithLossLayer<Dtype>::Forward_cpu(Forward_cpu89,3237
void SoftmaxWithLossLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu118,4302

src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,404
namespace caffe {caffe7,143
void SigmoidCrossEntropyLossLayer<Dtype>::LayerSetUp(LayerSetUp10,188
void SigmoidCrossEntropyLossLayer<Dtype>::Reshape(Reshape36,1257
Dtype SigmoidCrossEntropyLossLayer<Dtype>::get_normalizer(get_normalizer49,1908
void SigmoidCrossEntropyLossLayer<Dtype>::Forward_cpu(Forward_cpu79,2977
void SigmoidCrossEntropyLossLayer<Dtype>::Backward_cpu(Backward_cpu104,4009

src/caffe/layers/crop_layer.cpp,472
namespace caffe {caffe13,186
void CropLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp16,231
void CropLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape36,1146
void CropLayer<Dtype>::crop_copy(const vector<Blob<Dtype>*>& bottom,crop_copy81,3037
void CropLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu122,4517
void CropLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu132,4900

src/caffe/layers/threshold_layer.cpp,216
namespace caffe {caffe5,64
void ThresholdLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp8,109
void ThresholdLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu15,366

src/caffe/layers/relu_layer.cpp,207
namespace caffe {caffe6,80
void ReLULayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu9,125
void ReLULayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu22,635

src/caffe/layers/input_layer.cpp,117
namespace caffe {caffe5,60
void InputLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp8,105

src/caffe/layers/sigmoid_layer.cpp,260
namespace caffe {caffe6,79
inline Dtype sigmoid(Dtype x) {sigmoid9,124
void SigmoidLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu14,221
void SigmoidLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu25,586

src/caffe/layers/hdf5_output_layer.cpp,453
namespace caffe {caffe9,137
void HDF5OutputLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp12,182
HDF5OutputLayer<Dtype>::~HDF5OutputLayer<Dtype>() {~HDF5OutputLayer22,593
void HDF5OutputLayer<Dtype>::SaveBlobs() {SaveBlobs30,811
void HDF5OutputLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu41,1299
void HDF5OutputLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu62,2255

src/caffe/layers/reshape_layer.cpp,204
namespace caffe {caffe5,62
void ReshapeLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp8,107
void ReshapeLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape32,959

src/caffe/layers/tile_layer.cpp,221
namespace caffe {caffe6,100
void TileLayer<Dtype>::Reshape(Reshape9,145
void TileLayer<Dtype>::Forward_cpu(Forward_cpu24,789
void TileLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu38,1233

src/caffe/layers/eltwise_layer.cpp,360
namespace caffe {caffe7,121
void EltwiseLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp10,166
void EltwiseLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape31,1152
void EltwiseLayer<Dtype>::Forward_cpu(Forward_cpu47,1774
void EltwiseLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu102,3659

src/caffe/layers/slice_layer.cpp,385
namespace caffe {caffe7,122
void SliceLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp10,167
void SliceLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape22,665
void SliceLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu76,2749
void SliceLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu97,3589

src/caffe/layers/recurrent_layer.cpp,460
namespace caffe {caffe11,232
void RecurrentLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp14,277
void RecurrentLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape183,7163
void RecurrentLayer<Dtype>::Reset() {Reset236,9247
void RecurrentLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu245,9570
void RecurrentLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu277,10772

src/caffe/layers/cudnn_pooling_layer.cpp,290
namespace caffe {caffe6,85
void CuDNNPoolingLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,130
void CuDNNPoolingLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape23,702
CuDNNPoolingLayer<Dtype>::~CuDNNPoolingLayer() {~CuDNNPoolingLayer33,1137

src/caffe/layers/flatten_layer.cpp,299
namespace caffe {caffe5,62
void FlattenLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape8,107
void FlattenLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu30,984
void FlattenLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu36,1161

src/caffe/layers/cudnn_conv_layer.cpp,308
namespace caffe {caffe7,103
#define CUDNN_STREAMS_PER_GROUP CUDNN_STREAMS_PER_GROUP12,316
void CuDNNConvolutionLayer<Dtype>::LayerSetUp(LayerSetUp18,422
void CuDNNConvolutionLayer<Dtype>::Reshape(Reshape91,3152
CuDNNConvolutionLayer<Dtype>::~CuDNNConvolutionLayer() {~CuDNNConvolutionLayer235,9150

src/caffe/layers/prelu_layer.cpp,386
namespace caffe {caffe9,151
void PReLULayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp12,196
void PReLULayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape55,1866
void PReLULayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu67,2238
void PReLULayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu92,3148

src/caffe/layers/concat_layer.cpp,388
namespace caffe {caffe6,102
void ConcatLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,147
void ConcatLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape17,502
void ConcatLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu57,2195
void ConcatLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu77,3007

src/caffe/layers/bias_layer.cpp,382
namespace caffe {caffe7,128
void BiasLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp10,173
void BiasLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape40,1585
void BiasLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu72,3078
void BiasLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu90,3744

src/caffe/layers/dummy_data_layer.cpp,218
namespace caffe {caffe6,93
void DummyDataLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,138
void DummyDataLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu101,4436

src/caffe/layers/argmax_layer.cpp,298
namespace caffe {caffe8,123
void ArgMaxLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp11,168
void ArgMaxLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape33,1107
void ArgMaxLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu55,1711

src/caffe/layers/lrn_layer.cpp,689
namespace caffe {caffe6,99
void LRNLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,144
void LRNLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape69,3075
void LRNLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu93,4041
void LRNLayer<Dtype>::CrossChannelForward_cpu(CrossChannelForward_cpu108,4501
void LRNLayer<Dtype>::WithinChannelForward(WithinChannelForward155,6415
void LRNLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu165,6840
void LRNLayer<Dtype>::CrossChannelBackward_cpu(CrossChannelBackward_cpu180,7371
void LRNLayer<Dtype>::WithinChannelBackward(WithinChannelBackward235,9984

src/caffe/layers/euclidean_loss_layer.cpp,282
namespace caffe {caffe6,110
void EuclideanLossLayer<Dtype>::Reshape(Reshape9,155
void EuclideanLossLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu18,475
void EuclideanLossLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu32,936

src/caffe/layers/log_layer.cpp,294
namespace caffe {caffe6,99
void LogLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,144
void LogLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu34,1278
void LogLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu57,2037

src/caffe/layers/base_data_layer.cpp,531
namespace caffe {caffe12,295
BaseDataLayer<Dtype>::BaseDataLayer(const LayerParameter& param)BaseDataLayer15,340
void BaseDataLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp21,511
BasePrefetchingDataLayer<Dtype>::BasePrefetchingDataLayer(BasePrefetchingDataLayer36,968
void BasePrefetchingDataLayer<Dtype>::LayerSetUp(LayerSetUp48,1376
void BasePrefetchingDataLayer<Dtype>::InternalThreadEntry() {InternalThreadEntry79,2433
void BasePrefetchingDataLayer<Dtype>::Forward_cpu(Forward_cpu113,3335

src/caffe/layers/im2col_layer.cpp,391
namespace caffe {caffe6,94
void Im2colLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,139
void Im2colLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape107,4795
void Im2colLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu131,5801
void Im2colLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu162,7252

src/caffe/layers/batch_reindex_layer.cpp,379
namespace caffe {caffe6,109
void BatchReindexLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape9,153
void BatchReindexLayer<Dtype>::check_batch_reindex(int initial_num,check_batch_reindex21,571
void BatchReindexLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu33,1063
void BatchReindexLayer<Dtype>::Backward_cpu(Backward_cpu52,1798

src/caffe/layers/data_layer.cpp,418
namespace caffe {caffe12,227
DataLayer<Dtype>::DataLayer(const LayerParameter& param)DataLayer15,272
DataLayer<Dtype>::~DataLayer() {~DataLayer24,559
void DataLayer<Dtype>::DataLayerSetUp(const vector<Blob<Dtype>*>& bottom,DataLayerSetUp29,651
bool DataLayer<Dtype>::Skip() {Skip60,1830
void DataLayer<Dtype>::Next() {Next70,2136
void DataLayer<Dtype>::load_batch(Batch<Dtype>* batch) {load_batch82,2426

src/caffe/layers/softmax_layer.cpp,301
namespace caffe {caffe7,124
void SoftmaxLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape10,169
void SoftmaxLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu27,882
void SoftmaxLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu63,2324

src/caffe/layers/multinomial_logistic_loss_layer.cpp,247
namespace caffe {caffe8,159
void MultinomialLogisticLossLayer<Dtype>::Reshape(Reshape11,204
void MultinomialLogisticLossLayer<Dtype>::Forward_cpu(Forward_cpu20,510
void MultinomialLogisticLossLayer<Dtype>::Backward_cpu(Backward_cpu37,1120

src/caffe/layers/power_layer.cpp,300
namespace caffe {caffe6,101
void PowerLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,146
void PowerLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu20,568
void PowerLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu44,1351

src/caffe/layers/filter_layer.cpp,388
namespace caffe {caffe6,102
void FilterLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,147
void FilterLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape16,357
void FilterLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu61,2064
void FilterLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu79,2801

src/caffe/layers/deconv_layer.cpp,311
namespace caffe {caffe5,61
void DeconvolutionLayer<Dtype>::compute_output_shape() {compute_output_shape8,106
void DeconvolutionLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu25,820
void DeconvolutionLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu43,1505

src/caffe/layers/cudnn_softmax_layer.cpp,291
namespace caffe {caffe8,120
void CuDNNSoftmaxLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp11,165
void CuDNNSoftmaxLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape22,546
CuDNNSoftmaxLayer<Dtype>::~CuDNNSoftmaxLayer() {~CuDNNSoftmaxLayer34,971

src/caffe/layers/inner_product_layer.cpp,415
namespace caffe {caffe7,137
void InnerProductLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp10,182
void InnerProductLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape58,2091
void InnerProductLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu84,3151
void InnerProductLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu100,3803

src/caffe/layers/spp_layer.cpp,479
namespace caffe {caffe11,271
LayerParameter SPPLayer<Dtype>::GetPoolingParam(const int pyramid_level,GetPoolingParam17,349
void SPPLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp65,2203
void SPPLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape146,5053
void SPPLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu188,6695
void SPPLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu205,7256

src/caffe/layers/lstm_unit_layer.cpp,392
namespace caffe {caffe8,124
inline Dtype sigmoid(Dtype x) {sigmoid11,169
inline Dtype tanh(Dtype x) {tanh16,260
void LSTMUnitLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape21,354
void LSTMUnitLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu41,991
void LSTMUnitLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu72,2008

src/caffe/layers/cudnn_relu_layer.cpp,275
namespace caffe {caffe6,82
void CuDNNReLULayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp9,127
void CuDNNReLULayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape21,582
CuDNNReLULayer<Dtype>::~CuDNNReLULayer() {~CuDNNReLULayer33,1029

src/caffe/layers/window_data_layer.cpp,368
namespace caffe {caffe28,736
WindowDataLayer<Dtype>::~WindowDataLayer<Dtype>() {~WindowDataLayer31,781
void WindowDataLayer<Dtype>::DataLayerSetUp(const vector<Blob<Dtype>*>& bottom,DataLayerSetUp36,892
unsigned int WindowDataLayer<Dtype>::PrefetchRand() {PrefetchRand219,7546
void WindowDataLayer<Dtype>::load_batch(Batch<Dtype>* batch) {load_batch228,7820

src/caffe/layers/rnn_layer.cpp,542
namespace caffe {caffe11,226
void RNNLayer<Dtype>::RecurrentInputBlobNames(vector<string>* names) const {RecurrentInputBlobNames14,271
void RNNLayer<Dtype>::RecurrentOutputBlobNames(vector<string>* names) const {RecurrentOutputBlobNames20,420
void RNNLayer<Dtype>::RecurrentInputShapes(vector<BlobShape>* shapes) const {RecurrentInputShapes26,592
void RNNLayer<Dtype>::OutputBlobNames(vector<string>* names) const {OutputBlobNames36,939
void RNNLayer<Dtype>::FillUnrolledNet(NetParameter* net_param) const {FillUnrolledNet42,1078

src/caffe/layers/neuron_layer.cpp,112
namespace caffe {caffe5,61
void NeuronLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape8,106

src/caffe/layers/image_data_layer.cpp,356
namespace caffe {caffe18,475
ImageDataLayer<Dtype>::~ImageDataLayer<Dtype>() {~ImageDataLayer21,520
void ImageDataLayer<Dtype>::DataLayerSetUp(const vector<Blob<Dtype>*>& bottom,DataLayerSetUp26,629
void ImageDataLayer<Dtype>::ShuffleImages() {ShuffleImages102,3879
void ImageDataLayer<Dtype>::load_batch(Batch<Dtype>* batch) {load_batch110,4148

src/caffe/layers/silence_layer.cpp,121
namespace caffe {caffe6,103
void SilenceLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu9,148

src/caffe/layers/elu_layer.cpp,205
namespace caffe {caffe6,79
void ELULayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu9,124
void ELULayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu22,623

src/caffe/layers/memory_data_layer.cpp,601
namespace caffe {caffe9,140
void MemoryDataLayer<Dtype>::DataLayerSetUp(const vector<Blob<Dtype>*>& bottom,DataLayerSetUp12,185
void MemoryDataLayer<Dtype>::AddDatumVector(const vector<Datum>& datum_vector) {AddDatumVector34,1099
void MemoryDataLayer<Dtype>::AddMatVector(const vector<cv::Mat>& mat_vector,AddMatVector58,2043
void MemoryDataLayer<Dtype>::Reset(Dtype* data, Dtype* labels, int n) {Reset83,2998
void MemoryDataLayer<Dtype>::set_batch_size(int new_size) {set_batch_size99,3532
void MemoryDataLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu108,3855

src/caffe/layers/split_layer.cpp,294
namespace caffe {caffe6,101
void SplitLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape9,146
void SplitLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu26,908
void SplitLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu34,1130

src/caffe/layers/embed_layer.cpp,386
namespace caffe {caffe7,129
void EmbedLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp10,174
void EmbedLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape49,1734
void EmbedLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu65,2232
void EmbedLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu86,3029

src/caffe/layers/loss_layer.cpp,128
namespace caffe {caffe5,59
void LossLayer<Dtype>::LayerSetUp(LayerSetUp8,104
void LossLayer<Dtype>::Reshape(Reshape17,402

src/caffe/layers/hdf5_data_layer.cpp,484
namespace caffe {caffe20,515
HDF5DataLayer<Dtype>::~HDF5DataLayer<Dtype>() { }~HDF5DataLayer23,560
void HDF5DataLayer<Dtype>::LoadHDF5FileData(const char* filename) {LoadHDF5FileData27,710
void HDF5DataLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp73,2390
bool HDF5DataLayer<Dtype>::Skip() {Skip129,4336
void HDF5DataLayer<Dtype>::Next() {Next139,4646
void HDF5DataLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu162,5398

src/caffe/layers/quantization_layer.cpp,423
namespace caffe {caffe7,106
void QuantizationLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp10,151
void QuantizationLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu29,1060
void QuantizationLayer<Dtype>::analyze_scaling_factor(double& scaling_factor,analyze_scaling_factor47,1685
Dtype QuantizationLayer<Dtype>::fixed_point(const Dtype& input_data,fixed_point90,3366

src/caffe/layers/batch_norm_layer.cpp,403
namespace caffe {caffe7,127
void BatchNormLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp10,172
void BatchNormLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape52,1700
void BatchNormLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu87,2883
void BatchNormLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu169,6604

src/caffe/layers/tanh_layer.cpp,209
namespace caffe {caffe8,158
void TanHLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu11,203
void TanHLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu22,562

src/caffe/layers/parameter_layer.cpp,29
namespace caffe {caffe3,45

src/caffe/layers/dropout_layer.cpp,392
namespace caffe {caffe8,179
void DropoutLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp11,224
void DropoutLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,Reshape22,636
void DropoutLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu31,978
void DropoutLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu49,1601

src/caffe/layer.cpp,29
namespace caffe {caffe3,28

src/caffe/internal_thread.cpp,429
namespace caffe {caffe7,129
InternalThread::~InternalThread() {~InternalThread9,148
bool InternalThread::is_started() const {is_started13,211
bool InternalThread::must_stop() {must_stop17,297
void InternalThread::StartInternalThread() {StartInternalThread21,390
void InternalThread::entry(int device, Caffe::Brew mode, int rand_seed,entry42,1037
void InternalThread::StopInternalThread() {StopInternalThread56,1442

src/caffe/solvers/rmsprop_solver.cpp,129
namespace caffe {caffe5,53
void RMSPropSolver<Dtype>::ComputeUpdateValue(int param_id, Dtype rate) {ComputeUpdateValue14,253

src/caffe/solvers/adagrad_solver.cpp,129
namespace caffe {caffe5,53
void AdaGradSolver<Dtype>::ComputeUpdateValue(int param_id, Dtype rate) {ComputeUpdateValue14,236

src/caffe/solvers/nesterov_solver.cpp,130
namespace caffe {caffe5,53
void NesterovSolver<Dtype>::ComputeUpdateValue(int param_id, Dtype rate) {ComputeUpdateValue14,240

src/caffe/solvers/sgd_solver.cpp,1015
namespace caffe {caffe9,171
Dtype SGDSolver<Dtype>::GetLearningRate() {GetLearningRate27,1059
void SGDSolver<Dtype>::PreSolve() {PreSolve66,2631
void SGDSolver<Dtype>::ClipGradients() {ClipGradients81,3180
void SGDSolver<Dtype>::ApplyUpdate() {ApplyUpdate102,3975
void SGDSolver<Dtype>::Normalize(int param_id) {Normalize119,4492
void SGDSolver<Dtype>::Regularize(int param_id) {Regularize145,5275
void SGDSolver<Dtype>::ComputeUpdateValue(int param_id, Dtype rate) {ComputeUpdateValue213,7558
void SGDSolver<Dtype>::SnapshotSolverState(const string& model_filename) {SnapshotSolverState246,8672
void SGDSolver<Dtype>::SnapshotSolverStateToBinaryProto(SnapshotSolverStateToBinaryProto260,9133
void SGDSolver<Dtype>::SnapshotSolverStateToHDF5(SnapshotSolverStateToHDF5279,9809
void SGDSolver<Dtype>::RestoreSolverStateFromBinaryProto(RestoreSolverStateFromBinaryProto305,10869
void SGDSolver<Dtype>::RestoreSolverStateFromHDF5(const string& state_file) {RestoreSolverStateFromHDF5325,11566

src/caffe/solvers/adadelta_solver.cpp,201
namespace caffe {caffe5,53
void AdaDeltaSolver<Dtype>::AdaDeltaPreSolve() {AdaDeltaPreSolve8,98
void AdaDeltaSolver<Dtype>::ComputeUpdateValue(int param_id, Dtype rate) {ComputeUpdateValue26,719

src/caffe/solvers/adam_solver.cpp,185
namespace caffe {caffe5,53
void AdamSolver<Dtype>::AdamPreSolve() {AdamPreSolve8,98
void AdamSolver<Dtype>::ComputeUpdateValue(int param_id, Dtype rate) {ComputeUpdateValue26,712

src/gtest/gtest.h,207645
#define GTEST_INCLUDE_GTEST_GTEST_H_GTEST_INCLUDE_GTEST_GTEST_H_52,2399
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_94,4348
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_132,6220
#define GTEST_DEV_EMAIL_ GTEST_DEV_EMAIL_295,14097
#define GTEST_FLAG_PREFIX_ GTEST_FLAG_PREFIX_296,14162
#define GTEST_FLAG_PREFIX_DASH_ GTEST_FLAG_PREFIX_DASH_297,14198
#define GTEST_FLAG_PREFIX_UPPER_ GTEST_FLAG_PREFIX_UPPER_298,14239
#define GTEST_NAME_ GTEST_NAME_299,14281
#define GTEST_PROJECT_URL_ GTEST_PROJECT_URL_300,14315
# define GTEST_GCC_VER_ GTEST_GCC_VER_305,14491
# define GTEST_OS_CYGWIN GTEST_OS_CYGWIN311,14681
# define GTEST_OS_SYMBIAN GTEST_OS_SYMBIAN313,14736
# define GTEST_OS_WINDOWS GTEST_OS_WINDOWS315,14785
#  define GTEST_OS_WINDOWS_MOBILE GTEST_OS_WINDOWS_MOBILE317,14832
#  define GTEST_OS_WINDOWS_MINGW GTEST_OS_WINDOWS_MINGW319,14918
#  define GTEST_OS_WINDOWS_DESKTOP GTEST_OS_WINDOWS_DESKTOP321,14960
# define GTEST_OS_MAC GTEST_OS_MAC324,15044
# define GTEST_OS_LINUX GTEST_OS_LINUX326,15092
#  define GTEST_OS_LINUX_ANDROID GTEST_OS_LINUX_ANDROID328,15134
# define GTEST_OS_ZOS GTEST_OS_ZOS331,15211
# define GTEST_OS_SOLARIS GTEST_OS_SOLARIS333,15275
# define GTEST_OS_AIX GTEST_OS_AIX335,15323
# define GTEST_OS_HPUX GTEST_OS_HPUX337,15369
# define GTEST_OS_NACL GTEST_OS_NACL339,15426
# define GTEST_HAS_POSIX_RE GTEST_HAS_POSIX_RE363,16312
# define GTEST_USES_POSIX_RE GTEST_USES_POSIX_RE374,16643
# define GTEST_USES_SIMPLE_RE GTEST_USES_SIMPLE_RE380,16794
# define GTEST_USES_SIMPLE_RE GTEST_USES_SIMPLE_RE386,16939
#   define _HAS_EXCEPTIONS _HAS_EXCEPTIONS398,17379
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS400,17437
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS403,17586
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS408,17853
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS411,17990
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS415,18177
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS419,18298
# define GTEST_HAS_STD_STRING GTEST_HAS_STD_STRING426,18560
# define GTEST_HAS_GLOBAL_STRING GTEST_HAS_GLOBAL_STRING436,18916
# define GTEST_HAS_STD_WSTRING GTEST_HAS_STD_WSTRING449,19377
# define GTEST_HAS_GLOBAL_WSTRING GTEST_HAS_GLOBAL_WSTRING457,19640
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI469,20002
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI471,20038
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI478,20227
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI480,20263
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI488,20520
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI490,20556
#  define GTEST_HAS_RTTI GTEST_HAS_RTTI496,20657
# define GTEST_HAS_PTHREAD GTEST_HAS_PTHREAD515,21164
# define GTEST_HAS_TR1_TUPLE GTEST_HAS_TR1_TUPLE532,21780
#  define GTEST_USE_OWN_TR1_TUPLE GTEST_USE_OWN_TR1_TUPLE549,22585
#  define GTEST_USE_OWN_TR1_TUPLE GTEST_USE_OWN_TR1_TUPLE551,22628
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_598,24698
# define GTEST_DECLARE_TUPLE_AS_FRIEND_ GTEST_DECLARE_TUPLE_AS_FRIEND_608,25172
# define GTEST_DECLARE_TUPLE_AS_FRIEND_ GTEST_DECLARE_TUPLE_AS_FRIEND_610,25226
#define GTEST_0_TUPLE_(GTEST_0_TUPLE_616,25396
#define GTEST_1_TUPLE_(GTEST_1_TUPLE_617,25430
#define GTEST_2_TUPLE_(GTEST_2_TUPLE_619,25528
#define GTEST_3_TUPLE_(GTEST_3_TUPLE_621,25626
#define GTEST_4_TUPLE_(GTEST_4_TUPLE_623,25724
#define GTEST_5_TUPLE_(GTEST_5_TUPLE_625,25822
#define GTEST_6_TUPLE_(GTEST_6_TUPLE_627,25920
#define GTEST_7_TUPLE_(GTEST_7_TUPLE_629,26018
#define GTEST_8_TUPLE_(GTEST_8_TUPLE_631,26116
#define GTEST_9_TUPLE_(GTEST_9_TUPLE_633,26214
#define GTEST_10_TUPLE_(GTEST_10_TUPLE_635,26312
#define GTEST_0_TYPENAMES_(GTEST_0_TYPENAMES_639,26469
#define GTEST_1_TYPENAMES_(GTEST_1_TYPENAMES_640,26499
#define GTEST_2_TYPENAMES_(GTEST_2_TYPENAMES_641,26543
#define GTEST_3_TYPENAMES_(GTEST_3_TYPENAMES_642,26602
#define GTEST_4_TYPENAMES_(GTEST_4_TYPENAMES_643,26676
#define GTEST_5_TYPENAMES_(GTEST_5_TYPENAMES_645,26771
#define GTEST_6_TYPENAMES_(GTEST_6_TYPENAMES_647,26881
#define GTEST_7_TYPENAMES_(GTEST_7_TYPENAMES_649,27006
#define GTEST_8_TYPENAMES_(GTEST_8_TYPENAMES_651,27146
#define GTEST_9_TYPENAMES_(GTEST_9_TYPENAMES_653,27301
#define GTEST_10_TYPENAMES_(GTEST_10_TYPENAMES_656,27477
namespace std {std663,27824
namespace tr1 {tr1664,27840
namespace gtest_internal {gtest_internal674,28228
struct ByRef { typedef const T& type; };  // NOLINTByRef678,28347
struct ByRef { typedef const T& type; };  // NOLINTtype678,28347
struct ByRef<T&> { typedef T& type; };  // NOLINTByRef680,28421
struct ByRef<T&> { typedef T& type; };  // NOLINTtype680,28421
#define GTEST_BY_REF_(GTEST_BY_REF_683,28502
struct AddRef { typedef T& type; };  // NOLINTAddRef688,28719
struct AddRef { typedef T& type; };  // NOLINTtype688,28719
struct AddRef<T&> { typedef T& type; };  // NOLINTAddRef690,28788
struct AddRef<T&> { typedef T& type; };  // NOLINTtype690,28788
#define GTEST_ADD_REF_(GTEST_ADD_REF_693,28871
struct TupleElement<true, 0, GTEST_10_TUPLE_(T)> { typedef T0 type; };TupleElement704,29248
struct TupleElement<true, 0, GTEST_10_TUPLE_(T)> { typedef T0 type; };type704,29248
struct TupleElement<true, 1, GTEST_10_TUPLE_(T)> { typedef T1 type; };TupleElement707,29354
struct TupleElement<true, 1, GTEST_10_TUPLE_(T)> { typedef T1 type; };type707,29354
struct TupleElement<true, 2, GTEST_10_TUPLE_(T)> { typedef T2 type; };TupleElement710,29460
struct TupleElement<true, 2, GTEST_10_TUPLE_(T)> { typedef T2 type; };type710,29460
struct TupleElement<true, 3, GTEST_10_TUPLE_(T)> { typedef T3 type; };TupleElement713,29566
struct TupleElement<true, 3, GTEST_10_TUPLE_(T)> { typedef T3 type; };type713,29566
struct TupleElement<true, 4, GTEST_10_TUPLE_(T)> { typedef T4 type; };TupleElement716,29672
struct TupleElement<true, 4, GTEST_10_TUPLE_(T)> { typedef T4 type; };type716,29672
struct TupleElement<true, 5, GTEST_10_TUPLE_(T)> { typedef T5 type; };TupleElement719,29778
struct TupleElement<true, 5, GTEST_10_TUPLE_(T)> { typedef T5 type; };type719,29778
struct TupleElement<true, 6, GTEST_10_TUPLE_(T)> { typedef T6 type; };TupleElement722,29884
struct TupleElement<true, 6, GTEST_10_TUPLE_(T)> { typedef T6 type; };type722,29884
struct TupleElement<true, 7, GTEST_10_TUPLE_(T)> { typedef T7 type; };TupleElement725,29990
struct TupleElement<true, 7, GTEST_10_TUPLE_(T)> { typedef T7 type; };type725,29990
struct TupleElement<true, 8, GTEST_10_TUPLE_(T)> { typedef T8 type; };TupleElement728,30096
struct TupleElement<true, 8, GTEST_10_TUPLE_(T)> { typedef T8 type; };type728,30096
struct TupleElement<true, 9, GTEST_10_TUPLE_(T)> { typedef T9 type; };TupleElement731,30202
struct TupleElement<true, 9, GTEST_10_TUPLE_(T)> { typedef T9 type; };type731,30202
class tuple<> {tuple736,30318
  tuple() {}tuple738,30343
  tuple(const tuple& /* t */)  {}tuple739,30356
  tuple& operator=(const tuple& /* t */) { return *this; }operator =740,30390
class GTEST_1_TUPLE_(T) {GTEST_1_TUPLE_744,30486
class GTEST_2_TUPLE_(T) {GTEST_2_TUPLE_776,31156
class GTEST_3_TUPLE_(T) {GTEST_3_TUPLE_819,32180
class GTEST_4_TUPLE_(T) {GTEST_4_TUPLE_856,33034
class GTEST_5_TUPLE_(T) {GTEST_5_TUPLE_897,33989
class GTEST_6_TUPLE_(T) {GTEST_6_TUPLE_941,35039
class GTEST_7_TUPLE_(T) {GTEST_7_TUPLE_988,36184
class GTEST_8_TUPLE_(T) {GTEST_8_TUPLE_1037,37418
class GTEST_9_TUPLE_(T) {GTEST_9_TUPLE_1089,38747
class tuple {tuple1143,40166
  tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_(), f8_(),tuple1147,40243
  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,f01150,40334
  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,f11150,40334
      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,f21151,40395
      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,f31151,40395
      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,f41151,40395
      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,f51152,40467
      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,f61152,40467
      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,f71152,40467
      GTEST_BY_REF_(T8) f8, GTEST_BY_REF_(T9) f9) : f0_(f0), f1_(f1), f2_(f2),f81153,40539
      f3_(f3), f4_(f4), f5_(f5), f6_(f6), f7_(f7), f8_(f8), f9_(f9) {}f9_1154,40618
  tuple(const tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),tuple1156,40690
      f9_(t.f9_) {}f9_1162,41034
  tuple& operator=(const tuple& t) { return CopyFrom(t); }operator =1164,41055
  T0 f0_;f0_1188,41542
  T1 f1_;f1_1189,41552
  T2 f2_;f2_1190,41562
  T3 f3_;f3_1191,41572
  T4 f4_;f4_1192,41582
  T5 f5_;f5_1193,41592
  T6 f6_;f6_1194,41602
  T7 f7_;f7_1195,41612
  T8 f8_;f8_1196,41622
  T9 f9_;f9_1197,41632
inline tuple<> make_tuple() { return tuple<>(); }make_tuple1206,41820
inline GTEST_1_TUPLE_(T) make_tuple(const T0& f0) {make_tuple1209,41904
inline GTEST_2_TUPLE_(T) make_tuple(const T0& f0, const T1& f1) {make_tuple1214,42024
inline GTEST_3_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2) {make_tuple1219,42162
inline GTEST_4_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,make_tuple1224,42318
inline GTEST_5_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,make_tuple1230,42496
inline GTEST_6_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,make_tuple1236,42692
inline GTEST_7_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,make_tuple1242,42906
inline GTEST_8_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,make_tuple1248,43138
inline GTEST_9_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,make_tuple1254,43388
inline GTEST_10_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,make_tuple1261,43661
struct tuple_size<GTEST_0_TUPLE_(T)> { static const int value = 0; };tuple_size1272,44033
struct tuple_size<GTEST_0_TUPLE_(T)> { static const int value = 0; };value1272,44033
struct tuple_size<GTEST_1_TUPLE_(T)> { static const int value = 1; };tuple_size1275,44137
struct tuple_size<GTEST_1_TUPLE_(T)> { static const int value = 1; };value1275,44137
struct tuple_size<GTEST_2_TUPLE_(T)> { static const int value = 2; };tuple_size1278,44241
struct tuple_size<GTEST_2_TUPLE_(T)> { static const int value = 2; };value1278,44241
struct tuple_size<GTEST_3_TUPLE_(T)> { static const int value = 3; };tuple_size1281,44345
struct tuple_size<GTEST_3_TUPLE_(T)> { static const int value = 3; };value1281,44345
struct tuple_size<GTEST_4_TUPLE_(T)> { static const int value = 4; };tuple_size1284,44449
struct tuple_size<GTEST_4_TUPLE_(T)> { static const int value = 4; };value1284,44449
struct tuple_size<GTEST_5_TUPLE_(T)> { static const int value = 5; };tuple_size1287,44553
struct tuple_size<GTEST_5_TUPLE_(T)> { static const int value = 5; };value1287,44553
struct tuple_size<GTEST_6_TUPLE_(T)> { static const int value = 6; };tuple_size1290,44657
struct tuple_size<GTEST_6_TUPLE_(T)> { static const int value = 6; };value1290,44657
struct tuple_size<GTEST_7_TUPLE_(T)> { static const int value = 7; };tuple_size1293,44761
struct tuple_size<GTEST_7_TUPLE_(T)> { static const int value = 7; };value1293,44761
struct tuple_size<GTEST_8_TUPLE_(T)> { static const int value = 8; };tuple_size1296,44865
struct tuple_size<GTEST_8_TUPLE_(T)> { static const int value = 8; };value1296,44865
struct tuple_size<GTEST_9_TUPLE_(T)> { static const int value = 9; };tuple_size1299,44969
struct tuple_size<GTEST_9_TUPLE_(T)> { static const int value = 9; };value1299,44969
struct tuple_size<GTEST_10_TUPLE_(T)> { static const int value = 10; };tuple_size1302,45074
struct tuple_size<GTEST_10_TUPLE_(T)> { static const int value = 10; };value1302,45074
struct tuple_element {tuple_element1305,45177
#define GTEST_TUPLE_ELEMENT_(GTEST_TUPLE_ELEMENT_1310,45313
#undef GTEST_0_TUPLE_GTEST_0_TUPLE_1500,50331
#undef GTEST_1_TUPLE_GTEST_1_TUPLE_1501,50353
#undef GTEST_2_TUPLE_GTEST_2_TUPLE_1502,50375
#undef GTEST_3_TUPLE_GTEST_3_TUPLE_1503,50397
#undef GTEST_4_TUPLE_GTEST_4_TUPLE_1504,50419
#undef GTEST_5_TUPLE_GTEST_5_TUPLE_1505,50441
#undef GTEST_6_TUPLE_GTEST_6_TUPLE_1506,50463
#undef GTEST_7_TUPLE_GTEST_7_TUPLE_1507,50485
#undef GTEST_8_TUPLE_GTEST_8_TUPLE_1508,50507
#undef GTEST_9_TUPLE_GTEST_9_TUPLE_1509,50529
#undef GTEST_10_TUPLE_GTEST_10_TUPLE_1510,50551
#undef GTEST_0_TYPENAMES_GTEST_0_TYPENAMES_1512,50575
#undef GTEST_1_TYPENAMES_GTEST_1_TYPENAMES_1513,50601
#undef GTEST_2_TYPENAMES_GTEST_2_TYPENAMES_1514,50627
#undef GTEST_3_TYPENAMES_GTEST_3_TYPENAMES_1515,50653
#undef GTEST_4_TYPENAMES_GTEST_4_TYPENAMES_1516,50679
#undef GTEST_5_TYPENAMES_GTEST_5_TYPENAMES_1517,50705
#undef GTEST_6_TYPENAMES_GTEST_6_TYPENAMES_1518,50731
#undef GTEST_7_TYPENAMES_GTEST_7_TYPENAMES_1519,50757
#undef GTEST_8_TYPENAMES_GTEST_8_TYPENAMES_1520,50783
#undef GTEST_9_TYPENAMES_GTEST_9_TYPENAMES_1521,50809
#undef GTEST_10_TYPENAMES_GTEST_10_TYPENAMES_1522,50835
#undef GTEST_DECLARE_TUPLE_AS_FRIEND_GTEST_DECLARE_TUPLE_AS_FRIEND_1524,50863
#undef GTEST_BY_REF_GTEST_BY_REF_1525,50901
#undef GTEST_ADD_REF_GTEST_ADD_REF_1526,50922
#undef GTEST_TUPLE_ELEMENT_GTEST_TUPLE_ELEMENT_1527,50944
#  define GTEST_HAS_CLONE GTEST_HAS_CLONE1580,52996
#  define GTEST_HAS_STREAM_REDIRECTION GTEST_HAS_STREAM_REDIRECTION1593,53457
# define GTEST_HAS_DEATH_TEST GTEST_HAS_DEATH_TEST1606,54098
#define GTEST_HAS_PARAM_TEST GTEST_HAS_PARAM_TEST1613,54331
# define GTEST_HAS_TYPED_TEST GTEST_HAS_TYPED_TEST1621,54658
# define GTEST_HAS_TYPED_TEST_P GTEST_HAS_TYPED_TEST_P1622,54690
# define GTEST_HAS_COMBINE GTEST_HAS_COMBINE1630,55031
#define GTEST_WIDE_STRING_USES_UTF16_ GTEST_WIDE_STRING_USES_UTF16_1634,55149
# define GTEST_CAN_STREAM_RESULTS_ GTEST_CAN_STREAM_RESULTS_1639,55351
# define GTEST_AMBIGUOUS_ELSE_BLOCKER_GTEST_AMBIGUOUS_ELSE_BLOCKER_1653,55795
# define GTEST_ATTRIBUTE_UNUSED_ GTEST_ATTRIBUTE_UNUSED_1670,56423
#define GTEST_DISALLOW_ASSIGN_(GTEST_DISALLOW_ASSIGN_1677,56626
#define GTEST_DISALLOW_COPY_AND_ASSIGN_(GTEST_DISALLOW_COPY_AND_ASSIGN_1682,56815
# define GTEST_MUST_USE_RESULT_ GTEST_MUST_USE_RESULT_1692,57237
#  define GTEST_HAS_SEH GTEST_HAS_SEH1705,57778
#  define GTEST_API_ GTEST_API_1716,57943
# define GTEST_API_GTEST_API_1724,58113
# define GTEST_NO_INLINE_ GTEST_NO_INLINE_1729,58211
#define GTEST_COMPILE_ASSERT_(GTEST_COMPILE_ASSERT_1761,59046
  T* get() const { return ptr_; }get1845,61757
  T* release() {release1847,61792
  void reset(T* p = NULL) {reset1853,61872
  T* ptr_;ptr_1862,62058
class GTEST_API_ RE {RE1871,62234
  RE(const RE& other) { Init(other.pattern()); }RE1875,62369
  RE(const ::std::string& regex) { Init(regex.c_str()); }  // NOLINTRE1878,62456
  RE(const ::string& regex) { Init(regex.c_str()); }  // NOLINTRE1882,62555
  RE(const char* regex) { Init(regex); }  // NOLINTRE1886,62656
  const char* pattern() const { return pattern_; }pattern1890,62771
  static bool FullMatch(const ::std::string& str, const RE& re) {FullMatch1899,63149
  static bool PartialMatch(const ::std::string& str, const RE& re) {PartialMatch1902,63258
  static bool FullMatch(const ::string& str, const RE& re) {FullMatch1908,63403
  static bool PartialMatch(const ::string& str, const RE& re) {PartialMatch1911,63507
  const char* pattern_;pattern_1927,64042
  bool is_valid_;is_valid_1928,64066
  regex_t full_regex_;     // For FullMatch().full_regex_1932,64110
  regex_t partial_regex_;  // For PartialMatch().partial_regex_1933,64157
  const char* full_pattern_;  // For FullMatch();full_pattern_1937,64240
enum GTestLogSeverity {GTestLogSeverity1960,65194
  GTEST_INFO,GTEST_INFO1961,65218
  GTEST_WARNING,GTEST_WARNING1962,65232
  GTEST_ERROR,GTEST_ERROR1963,65249
  GTEST_FATALGTEST_FATAL1964,65264
class GTEST_API_ GTestLog {GTestLog1970,65442
  ::std::ostream& GetStream() { return ::std::cerr; }GetStream1977,65641
  const GTestLogSeverity severity_;severity_1980,65706
#define GTEST_LOG_(GTEST_LOG_1985,65792
inline void LogToStderr() {}LogToStderr1989,65965
inline void FlushInfoLog() { fflush(NULL); }FlushInfoLog1990,65994
#define GTEST_CHECK_(GTEST_CHECK_2006,66653
#define GTEST_CHECK_POSIX_SUCCESS_(GTEST_CHECK_POSIX_SUCCESS_2018,67134
inline To ImplicitCast_(To x) { return x; }ImplicitCast_2044,68329
inline To DownCast_(From* f) {  // so we only accept pointersDownCast_2068,69739
Derived* CheckedDowncastToActualType(Base* base) {CheckedDowncastToActualType2091,70544
inline void SleepMilliseconds(int n) {SleepMilliseconds2133,71808
class Notification {Notification2147,72289
  Notification() : notified_(false) {}Notification2149,72319
  void Notify() { notified_ = true; }Notify2153,72474
  void WaitForNotification() {WaitForNotification2157,72603
  volatile bool notified_;notified_2164,72708
class ThreadWithParamBase {ThreadWithParamBase2174,73090
  virtual ~ThreadWithParamBase() {}~ThreadWithParamBase2176,73127
extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {ThreadFuncWithCLinkage2186,73604
class ThreadWithParam : public ThreadWithParamBase {ThreadWithParam2204,74271
  typedef void (*UserThreadFunc)(T);UserThreadFunc2206,74333
  ThreadWithParam(ThreadWithParam2208,74371
  ~ThreadWithParam() { Join(); }~ThreadWithParam2220,74823
  void Join() {Join2222,74857
  virtual void Run() {Run2229,74990
  const UserThreadFunc func_;  // User-supplied thread function.func_2236,75130
  const T param_;  // User-supplied parameter to the thread function.param_2237,75195
  Notification* const thread_can_start_;thread_can_start_2240,75352
  bool finished_;  // true iff we know that the thread function has finished.finished_2241,75393
  pthread_t thread_;  // The native thread object.thread_2242,75471
class MutexBase {MutexBase2266,76277
  void Lock() {Lock2269,76330
  void Unlock() {Unlock2275,76467
  void AssertHeld() const {AssertHeld2285,76842
  pthread_mutex_t mutex_;  // The underlying pthread mutex.mutex_2296,77293
  pthread_t owner_;  // The thread holding the mutex; 0 means no one holds it.owner_2297,77353
# define GTEST_DECLARE_STATIC_MUTEX_(GTEST_DECLARE_STATIC_MUTEX_2301,77472
# define GTEST_DEFINE_STATIC_MUTEX_(GTEST_DEFINE_STATIC_MUTEX_2305,77641
class Mutex : public MutexBase {Mutex2310,77878
  Mutex() {Mutex2312,77920
  ~Mutex() {~Mutex2316,78019
class GTestMutexLock {GTestMutexLock2327,78339
  explicit GTestMutexLock(MutexBase* mutex)GTestMutexLock2329,78371
  ~GTestMutexLock() { mutex_->Unlock(); }~GTestMutexLock2332,78458
  MutexBase* const mutex_;mutex_2335,78511
typedef GTestMutexLock MutexLock;MutexLock2340,78594
class ThreadLocalValueHolderBase {ThreadLocalValueHolderBase2348,78860
  virtual ~ThreadLocalValueHolderBase() {}~ThreadLocalValueHolderBase2350,78904
extern "C" inline void DeleteThreadLocalValue(void* value_holder) {DeleteThreadLocalValue2355,79036
class ThreadLocal {ThreadLocal2389,80415
  ThreadLocal() : key_(CreateKey()),ThreadLocal2391,80444
  explicit ThreadLocal(const T& value) : key_(CreateKey()),ThreadLocal2393,80513
  ~ThreadLocal() {~ThreadLocal2396,80634
  T* pointer() { return GetOrCreateValue(); }pointer2405,80956
  const T* pointer() const { return GetOrCreateValue(); }pointer2406,81002
  const T& get() const { return *pointer(); }get2407,81060
  void set(const T& value) { *pointer() = value; }set2408,81106
  class ValueHolder : public ThreadLocalValueHolderBase {ValueHolder2412,81198
    explicit ValueHolder(const T& value) : value_(value) {}ValueHolder2414,81267
    T* pointer() { return &value_; }pointer2416,81328
    T value_;value_2419,81378
  static pthread_key_t CreateKey() {CreateKey2423,81448
  T* GetOrCreateValue() const {GetOrCreateValue2432,81735
  const pthread_key_t key_;key_2446,82295
  const T default_;  // The default value for each thread.default_2447,82323
# define GTEST_IS_THREADSAFE GTEST_IS_THREADSAFE2452,82435
class Mutex {Mutex2461,82746
  Mutex() {}Mutex2463,82769
  void AssertHeld() const {}AssertHeld2464,82782
# define GTEST_DECLARE_STATIC_MUTEX_(GTEST_DECLARE_STATIC_MUTEX_2467,82815
# define GTEST_DEFINE_STATIC_MUTEX_(GTEST_DEFINE_STATIC_MUTEX_2470,82904
class GTestMutexLock {GTestMutexLock2472,82981
  explicit GTestMutexLock(Mutex*) {}  // NOLINTGTestMutexLock2474,83013
typedef GTestMutexLock MutexLock;MutexLock2477,83065
class ThreadLocal {ThreadLocal2480,83122
  ThreadLocal() : value_() {}ThreadLocal2482,83151
  explicit ThreadLocal(const T& value) : value_(value) {}ThreadLocal2483,83181
  T* pointer() { return &value_; }pointer2484,83239
  const T* pointer() const { return &value_; }pointer2485,83274
  const T& get() const { return value_; }get2486,83321
  void set(const T& value) { value_ = value; }set2487,83363
  T value_;value_2489,83420
# define GTEST_IS_THREADSAFE GTEST_IS_THREADSAFE2494,83549
# define GTEST_ELLIPSIS_NEEDS_POD_ GTEST_ELLIPSIS_NEEDS_POD_2511,84322
# define GTEST_CAN_COMPARE_NULL GTEST_CAN_COMPARE_NULL2513,84365
# define GTEST_NEEDS_IS_POINTER_ GTEST_NEEDS_IS_POINTER_2521,84710
struct bool_constant {bool_constant2525,84780
  typedef bool_constant<bool_value> type;type2526,84803
  static const bool value = bool_value;value2527,84845
template <bool bool_value> const bool bool_constant<bool_value>::value;value2529,84888
typedef bool_constant<false> false_type;false_type2531,84961
typedef bool_constant<true> true_type;true_type2532,85002
struct is_pointer : public false_type {};is_pointer2535,85064
struct is_pointer<T*> : public true_type {};is_pointer2538,85129
struct IteratorTraits {IteratorTraits2541,85204
  typedef typename Iterator::value_type value_type;value_type2542,85228
struct IteratorTraits<T*> {IteratorTraits2546,85306
  typedef T value_type;value_type2547,85334
struct IteratorTraits<const T*> {IteratorTraits2551,85384
  typedef T value_type;value_type2552,85418
# define GTEST_PATH_SEP_ GTEST_PATH_SEP_2556,85467
# define GTEST_HAS_ALT_PATH_SEP_ GTEST_HAS_ALT_PATH_SEP_2557,85497
typedef __int64 BiggestInt;BiggestInt2559,85590
# define GTEST_PATH_SEP_ GTEST_PATH_SEP_2561,85624
# define GTEST_HAS_ALT_PATH_SEP_ GTEST_HAS_ALT_PATH_SEP_2562,85653
typedef long long BiggestInt;  // NOLINTBiggestInt2563,85688
inline bool IsAlpha(char ch) {IsAlpha2573,86004
inline bool IsAlNum(char ch) {IsAlNum2576,86092
inline bool IsDigit(char ch) {IsDigit2579,86180
inline bool IsLower(char ch) {IsLower2582,86268
inline bool IsSpace(char ch) {IsSpace2585,86356
inline bool IsUpper(char ch) {IsUpper2588,86444
inline bool IsXDigit(char ch) {IsXDigit2591,86532
inline char ToLower(char ch) {ToLower2595,86623
inline char ToUpper(char ch) {ToUpper2598,86725
namespace posix {posix2608,87131
typedef struct _stat StatStruct;StatStruct2614,87220
inline int IsATTY(int fd) { return isatty(fd); }IsATTY2617,87275
inline int StrCaseCmp(const char* s1, const char* s2) {StrCaseCmp2618,87324
inline char* StrDup(const char* src) { return strdup(src); }StrDup2621,87408
inline int IsATTY(int /* fd */) { return 0; }IsATTY2624,87524
inline int IsATTY(int fd) { return _isatty(fd); }IsATTY2626,87578
inline int StrCaseCmp(const char* s1, const char* s2) {StrCaseCmp2628,87665
inline char* StrDup(const char* src) { return _strdup(src); }StrDup2631,87750
inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }FileNo2635,87867
inline int FileNo(FILE* file) { return _fileno(file); }FileNo2639,88058
inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }Stat2640,88114
inline int RmDir(const char* dir) { return _rmdir(dir); }RmDir2641,88194
inline bool IsDir(const StatStruct& st) {IsDir2642,88252
inline const char* StrNCpy(char* dest, const char* src, size_t n) {StrNCpy2671,89077
inline int ChDir(const char* dir) { return chdir(dir); }ChDir2680,89359
inline FILE* FOpen(const char* path, const char* mode) {FOpen2682,89423
inline FILE *FReopen(const char* path, const char* mode, FILE* stream) {FReopen2686,89539
inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }FDOpen2689,89652
inline int FClose(FILE* fp) { return fclose(fp); }FClose2691,89734
inline int Read(int fd, void* buf, unsigned int count) {Read2693,89814
inline int Write(int fd, const void* buf, unsigned int count) {Write2696,89922
inline int Close(int fd) { return close(fd); }Close2699,90038
inline const char* StrError(int errnum) { return strerror(errnum); }StrError2700,90085
inline const char* GetEnv(const char* name) {GetEnv2702,90161
inline void Abort() { abort(); }Abort2726,90966
const BiggestInt kMaxBiggestInt =kMaxBiggestInt2738,91377
class TypeWithSize {TypeWithSize2760,92078
  typedef void UInt;UInt2764,92196
class TypeWithSize<4> {TypeWithSize2769,92267
  typedef int Int;Int2775,92459
  typedef unsigned int UInt;UInt2776,92478
class TypeWithSize<8> {TypeWithSize2781,92557
  typedef __int64 Int;Int2785,92612
  typedef unsigned __int64 UInt;UInt2786,92635
typedef TypeWithSize<4>::Int Int32;Int322794,92821
typedef TypeWithSize<4>::UInt UInt32;UInt322795,92857
typedef TypeWithSize<8>::Int Int64;Int642796,92895
typedef TypeWithSize<8>::UInt UInt64;UInt642797,92931
typedef TypeWithSize<8>::Int TimeInMillis;  // Represents time in milliseconds.TimeInMillis2798,92969
#define GTEST_FLAG(GTEST_FLAG2803,93146
#define GTEST_DECLARE_bool_(GTEST_DECLARE_bool_2806,93222
#define GTEST_DECLARE_int32_(GTEST_DECLARE_int32_2807,93296
#define GTEST_DECLARE_string_(GTEST_DECLARE_string_2809,93399
#define GTEST_DEFINE_bool_(GTEST_DEFINE_bool_2813,93535
#define GTEST_DEFINE_int32_(GTEST_DEFINE_int32_2815,93641
#define GTEST_DEFINE_string_(GTEST_DEFINE_string_2817,93770
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_2893,97015
namespace testing {testing2904,97219
namespace internal {internal2905,97239
class GTEST_API_ String {String2931,98247
  String() : c_str_(NULL), length_(0) {}String3042,102908
  String(const char* a_c_str) {  // NOLINTString3045,103011
  String(const char* buffer, size_t a_length) {String3058,103450
  String(const String& str) : c_str_(NULL), length_(0) { *this = str; }String3064,103648
  ~String() { delete[] c_str_; }~String3068,103820
  String(const ::std::string& str) {String3076,104220
  operator ::std::string() const { return ::std::string(c_str(), length()); }string3080,104311
  String(const ::string& str) {String3083,104418
  operator ::string() const { return ::string(c_str(), length()); }string3087,104504
  bool empty() const { return (c_str() != NULL) && (length() == 0); }empty3091,104665
  bool operator==(const char* a_c_str) const { return Compare(a_c_str) == 0; }operator ==3100,105057
  bool operator<(const String& rhs) const { return Compare(rhs) < 0; }operator <3104,105250
  bool operator!=(const char* a_c_str) const { return !(*this == a_c_str); }operator !=3108,105458
  size_t length() const { return length_; }length3120,106005
  const char* c_str() const { return c_str_; }c_str3125,106226
  const String& operator=(const char* a_c_str) {operator =3128,106338
  const String& operator=(const String& rhs) {operator =3133,106497
  void ConstructNonNull(const char* buffer, size_t a_length) {ConstructNonNull3152,107042
  const char* c_str_;c_str_3160,107259
  size_t length_;length_3161,107281
inline ::std::ostream& operator<<(::std::ostream& os, const String& str) {operator <<3166,107417
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_3241,110454
namespace testing {testing3244,110511
namespace internal {internal3245,110531
class GTEST_API_ FilePath {FilePath3258,111259
  FilePath() : pathname_("") { }FilePath3260,111296
  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) { }FilePath3261,111329
  explicit FilePath(const char* pathname) : pathname_(pathname) {FilePath3263,111393
  explicit FilePath(const String& pathname) : pathname_(pathname) {FilePath3267,111481
  FilePath& operator=(const FilePath& rhs) {operator =3271,111571
  void Set(const FilePath& rhs) {Set3276,111653
  String ToString() const { return pathname_; }ToString3280,111723
  const char* c_str() const { return pathname_.c_str(); }c_str3281,111771
  bool IsEmpty() const { return c_str() == NULL || *c_str() == '\0'; }IsEmpty3314,113435
  String pathname_;pathname_3403,118018
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_3454,120281
namespace testing {testing3465,120592
namespace internal {internal3466,120612
String GetTypeName() {GetTypeName3472,120832
struct AssertTypeEq<T, T> {AssertTypeEq3508,121749
  typedef bool type;type3509,121777
struct None {};None3516,122027
struct Types0 {};Types03526,122418
struct Types1 {Types13531,122505
  typedef T1 Head;Head3532,122521
  typedef Types0 Tail;Tail3533,122540
struct Types2 {Types23536,122602
  typedef T1 Head;Head3537,122618
  typedef Types1<T2> Tail;Tail3538,122637
struct Types3 {Types33542,122717
  typedef T1 Head;Head3543,122733
  typedef Types2<T2, T3> Tail;Tail3544,122752
struct Types4 {Types43548,122849
  typedef T1 Head;Head3549,122865
  typedef Types3<T2, T3, T4> Tail;Tail3550,122884
struct Types5 {Types53554,122998
  typedef T1 Head;Head3555,123014
  typedef Types4<T2, T3, T4, T5> Tail;Tail3556,123033
struct Types6 {Types63561,123168
  typedef T1 Head;Head3562,123184
  typedef Types5<T2, T3, T4, T5, T6> Tail;Tail3563,123203
struct Types7 {Types73568,123355
  typedef T1 Head;Head3569,123371
  typedef Types6<T2, T3, T4, T5, T6, T7> Tail;Tail3570,123390
struct Types8 {Types83575,123559
  typedef T1 Head;Head3576,123575
  typedef Types7<T2, T3, T4, T5, T6, T7, T8> Tail;Tail3577,123594
struct Types9 {Types93582,123780
  typedef T1 Head;Head3583,123796
  typedef Types8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;Tail3584,123815
struct Types10 {Types103589,124019
  typedef T1 Head;Head3590,124036
  typedef Types9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;Tail3591,124055
struct Types11 {Types113597,124282
  typedef T1 Head;Head3598,124299
  typedef Types10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;Tail3599,124318
struct Types12 {Types123605,124565
  typedef T1 Head;Head3606,124582
  typedef Types11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;Tail3607,124601
struct Types13 {Types133613,124867
  typedef T1 Head;Head3614,124884
  typedef Types12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;Tail3615,124903
struct Types14 {Types143621,125188
  typedef T1 Head;Head3622,125205
  typedef Types13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Tail;Tail3623,125224
struct Types15 {Types153629,125528
  typedef T1 Head;Head3630,125545
      T15> Tail;Tail3632,125639
struct Types16 {Types163639,125897
  typedef T1 Head;Head3640,125914
      T16> Tail;Tail3642,126013
struct Types17 {Types173649,126285
  typedef T1 Head;Head3650,126302
      T16, T17> Tail;Tail3652,126401
struct Types18 {Types183659,126692
  typedef T1 Head;Head3660,126709
      T16, T17, T18> Tail;Tail3662,126808
struct Types19 {Types193669,127118
  typedef T1 Head;Head3670,127135
      T16, T17, T18, T19> Tail;Tail3672,127234
struct Types20 {Types203679,127563
  typedef T1 Head;Head3680,127580
      T16, T17, T18, T19, T20> Tail;Tail3682,127679
struct Types21 {Types213690,128031
  typedef T1 Head;Head3691,128048
      T16, T17, T18, T19, T20, T21> Tail;Tail3693,128147
struct Types22 {Types223701,128518
  typedef T1 Head;Head3702,128535
      T16, T17, T18, T19, T20, T21, T22> Tail;Tail3704,128634
struct Types23 {Types233712,129024
  typedef T1 Head;Head3713,129041
      T16, T17, T18, T19, T20, T21, T22, T23> Tail;Tail3715,129140
struct Types24 {Types243723,129549
  typedef T1 Head;Head3724,129566
      T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;Tail3726,129665
struct Types25 {Types253734,130093
  typedef T1 Head;Head3735,130110
      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;Tail3737,130209
struct Types26 {Types263746,130660
  typedef T1 Head;Head3747,130677
      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;Tail3749,130776
struct Types27 {Types273758,131246
  typedef T1 Head;Head3759,131263
      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;Tail3761,131362
struct Types28 {Types283770,131851
  typedef T1 Head;Head3771,131868
      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> Tail;Tail3773,131967
struct Types29 {Types293782,132475
  typedef T1 Head;Head3783,132492
      T29> Tail;Tail3786,132662
struct Types30 {Types303795,133124
  typedef T1 Head;Head3796,133141
      T30> Tail;Tail3799,133316
struct Types31 {Types313809,133796
  typedef T1 Head;Head3810,133813
      T30, T31> Tail;Tail3813,133988
struct Types32 {Types323823,134487
  typedef T1 Head;Head3824,134504
      T30, T31, T32> Tail;Tail3827,134679
struct Types33 {Types333837,135197
  typedef T1 Head;Head3838,135214
      T30, T31, T32, T33> Tail;Tail3841,135389
struct Types34 {Types343851,135926
  typedef T1 Head;Head3852,135943
      T30, T31, T32, T33, T34> Tail;Tail3855,136118
struct Types35 {Types353865,136674
  typedef T1 Head;Head3866,136691
      T30, T31, T32, T33, T34, T35> Tail;Tail3869,136866
struct Types36 {Types363880,137445
  typedef T1 Head;Head3881,137462
      T30, T31, T32, T33, T34, T35, T36> Tail;Tail3884,137637
struct Types37 {Types373895,138235
  typedef T1 Head;Head3896,138252
      T30, T31, T32, T33, T34, T35, T36, T37> Tail;Tail3899,138427
struct Types38 {Types383910,139044
  typedef T1 Head;Head3911,139061
      T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;Tail3914,139236
struct Types39 {Types393925,139872
  typedef T1 Head;Head3926,139889
      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;Tail3929,140064
struct Types40 {Types403940,140719
  typedef T1 Head;Head3941,140736
      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;Tail3944,140911
struct Types41 {Types413956,141589
  typedef T1 Head;Head3957,141606
      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;Tail3960,141781
struct Types42 {Types423972,142478
  typedef T1 Head;Head3973,142495
      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42> Tail;Tail3976,142670
struct Types43 {Types433988,143386
  typedef T1 Head;Head3989,143403
      T43> Tail;Tail3993,143649
struct Types44 {Types444005,144319
  typedef T1 Head;Head4006,144336
      T44> Tail;Tail4010,144587
struct Types45 {Types454022,145271
  typedef T1 Head;Head4023,145288
      T44, T45> Tail;Tail4027,145539
struct Types46 {Types464040,146246
  typedef T1 Head;Head4041,146263
      T44, T45, T46> Tail;Tail4045,146514
struct Types47 {Types474058,147240
  typedef T1 Head;Head4059,147257
      T44, T45, T46, T47> Tail;Tail4063,147508
struct Types48 {Types484076,148253
  typedef T1 Head;Head4077,148270
      T44, T45, T46, T47, T48> Tail;Tail4081,148521
struct Types49 {Types494094,149285
  typedef T1 Head;Head4095,149302
      T44, T45, T46, T47, T48, T49> Tail;Tail4099,149553
struct Types50 {Types504112,150336
  typedef T1 Head;Head4113,150353
      T44, T45, T46, T47, T48, T49, T50> Tail;Tail4117,150604
struct Types {Types4161,153043
      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50> type;type4165,153289
struct Types<internal::None, internal::None, internal::None, internal::None,Types4169,153367
  typedef internal::Types0 type;type4182,154230
struct Types<T1, internal::None, internal::None, internal::None,Types4185,154289
  typedef internal::Types1<T1> type;type4198,155140
struct Types<T1, T2, internal::None, internal::None, internal::None,Types4201,155216
  typedef internal::Types2<T1, T2> type;type4214,156055
struct Types<T1, T2, T3, internal::None, internal::None, internal::None,Types4217,156148
  typedef internal::Types3<T1, T2, T3> type;type4229,156971
struct Types<T1, T2, T3, T4, internal::None, internal::None, internal::None,Types4232,157081
  typedef internal::Types4<T1, T2, T3, T4> type;type4244,157892
struct Types<T1, T2, T3, T4, T5, internal::None, internal::None,Types4247,158019
  typedef internal::Types5<T1, T2, T3, T4, T5> type;type4259,158818
struct Types<T1, T2, T3, T4, T5, T6, internal::None, internal::None,Types4263,158966
  typedef internal::Types6<T1, T2, T3, T4, T5, T6> type;type4275,159753
struct Types<T1, T2, T3, T4, T5, T6, T7, internal::None, internal::None,Types4279,159918
  typedef internal::Types7<T1, T2, T3, T4, T5, T6, T7> type;type4291,160693
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, internal::None, internal::None,Types4295,160875
  typedef internal::Types8<T1, T2, T3, T4, T5, T6, T7, T8> type;type4306,161634
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, internal::None,Types4310,161833
  typedef internal::Types9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;type4321,162580
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, internal::None,Types4325,162797
  typedef internal::Types10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;type4336,163533
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, internal::None,Types4341,163774
  typedef internal::Types11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;type4352,164499
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, internal::None,Types4357,164759
      T12> type;type4369,165547
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,Types4374,165758
      T13> type;type4386,166540
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Types4391,166765
      T13, T14> type;type4402,167532
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4407,167776
      T13, T14, T15> type;type4418,168532
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4424,168799
      T13, T14, T15, T16> type;type4435,169544
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4441,169830
      T13, T14, T15, T16, T17> type;type4452,170564
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4458,170869
      T13, T14, T15, T16, T17, T18> type;type4469,171592
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4475,171916
      T13, T14, T15, T16, T17, T18, T19> type;type4485,172624
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4491,172967
      T13, T14, T15, T16, T17, T18, T19, T20> type;type4501,173664
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4508,174030
      T13, T14, T15, T16, T17, T18, T19, T20, T21> type;type4518,174716
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4525,175101
      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> type;type4535,175776
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4542,176180
      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;type4552,176844
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4559,177267
      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;type4569,177920
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4576,178362
      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;type4585,179000
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4593,179465
      T26> type;type4603,180163
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4611,180582
      T27> type;type4621,181274
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4629,181707
      T27, T28> type;type4639,182388
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4647,182840
      T27, T28, T29> type;type4657,183510
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4665,183981
      T27, T28, T29, T30> type;type4674,184636
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4683,185130
      T27, T28, T29, T30, T31> type;type4692,185774
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4701,186287
      T27, T28, T29, T30, T31, T32> type;type4710,186920
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4719,187452
      T27, T28, T29, T30, T31, T32, T33> type;type4728,188074
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4737,188625
      T27, T28, T29, T30, T31, T32, T33, T34> type;type4746,189236
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4755,189806
      T27, T28, T29, T30, T31, T32, T33, T34, T35> type;type4763,190402
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4773,190995
      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36> type;type4781,191580
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4791,192192
      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;type4799,192766
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4809,193397
      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;type4817,193960
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4827,194610
      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;type4835,195162
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4845,195831
      T40> type;type4854,196443
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4865,197070
      T41> type;type4873,197672
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4884,198313
      T41, T42> type;type4892,198904
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4903,199564
      T41, T42, T43> type;type4911,200144
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4922,200823
      T41, T42, T43, T44> type;type4930,201392
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4941,202090
      T41, T42, T43, T44, T45> type;type4949,202648
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4961,203369
      T41, T42, T43, T44, T45, T46> type;type4968,203912
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4980,204652
      T41, T42, T43, T44, T45, T46, T47> type;type4987,205184
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types4999,205943
      T41, T42, T43, T44, T45, T46, T47, T48> type;type5006,206464
struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,Types5018,207242
      T41, T42, T43, T44, T45, T46, T47, T48, T49> type;type5025,207752
namespace internal {internal5028,207813
# define GTEST_TEMPLATE_ GTEST_TEMPLATE_5030,207835
struct TemplateSel {TemplateSel5041,208344
  struct Bind {Bind5043,208389
    typedef Tmpl<T> type;type5044,208405
# define GTEST_BIND_(GTEST_BIND_5048,208440
struct NoneT {};NoneT5056,208781
struct Templates0 {};Templates05066,209201
struct Templates1 {Templates15071,209303
  typedef TemplateSel<T1> Head;Head5072,209323
  typedef Templates0 Tail;Tail5073,209355
struct Templates2 {Templates25076,209435
  typedef TemplateSel<T1> Head;Head5077,209455
  typedef Templates1<T2> Tail;Tail5078,209487
struct Templates3 {Templates35082,209592
  typedef TemplateSel<T1> Head;Head5083,209612
  typedef Templates2<T2, T3> Tail;Tail5084,209644
struct Templates4 {Templates45089,209777
  typedef TemplateSel<T1> Head;Head5090,209797
  typedef Templates3<T2, T3, T4> Tail;Tail5091,209829
struct Templates5 {Templates55096,209986
  typedef TemplateSel<T1> Head;Head5097,210006
  typedef Templates4<T2, T3, T4, T5> Tail;Tail5098,210038
struct Templates6 {Templates65103,210219
  typedef TemplateSel<T1> Head;Head5104,210239
  typedef Templates5<T2, T3, T4, T5, T6> Tail;Tail5105,210271
struct Templates7 {Templates75111,210480
  typedef TemplateSel<T1> Head;Head5112,210500
  typedef Templates6<T2, T3, T4, T5, T6, T7> Tail;Tail5113,210532
struct Templates8 {Templates85119,210765
  typedef TemplateSel<T1> Head;Head5120,210785
  typedef Templates7<T2, T3, T4, T5, T6, T7, T8> Tail;Tail5121,210817
struct Templates9 {Templates95127,211074
  typedef TemplateSel<T1> Head;Head5128,211094
  typedef Templates8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;Tail5129,211126
struct Templates10 {Templates105136,211412
  typedef TemplateSel<T1> Head;Head5137,211433
  typedef Templates9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;Tail5138,211465
struct Templates11 {Templates115145,211777
  typedef TemplateSel<T1> Head;Head5146,211798
  typedef Templates10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;Tail5147,211830
struct Templates12 {Templates125154,212169
  typedef TemplateSel<T1> Head;Head5155,212190
  typedef Templates11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;Tail5156,212222
struct Templates13 {Templates135164,212591
  typedef TemplateSel<T1> Head;Head5165,212612
  typedef Templates12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;Tail5166,212644
struct Templates14 {Templates145174,213039
  typedef TemplateSel<T1> Head;Head5175,213060
      T14> Tail;Tail5177,213166
struct Templates15 {Templates155185,213519
  typedef TemplateSel<T1> Head;Head5186,213540
      T15> Tail;Tail5188,213651
struct Templates16 {Templates165197,214029
  typedef TemplateSel<T1> Head;Head5198,214050
      T15, T16> Tail;Tail5200,214161
struct Templates17 {Templates175209,214565
  typedef TemplateSel<T1> Head;Head5210,214586
      T15, T16, T17> Tail;Tail5212,214697
struct Templates18 {Templates185221,215127
  typedef TemplateSel<T1> Head;Head5222,215148
      T15, T16, T17, T18> Tail;Tail5224,215259
struct Templates19 {Templates195234,215719
  typedef TemplateSel<T1> Head;Head5235,215740
      T15, T16, T17, T18, T19> Tail;Tail5237,215851
struct Templates20 {Templates205247,216337
  typedef TemplateSel<T1> Head;Head5248,216358
      T15, T16, T17, T18, T19, T20> Tail;Tail5250,216469
struct Templates21 {Templates215260,216981
  typedef TemplateSel<T1> Head;Head5261,217002
      T15, T16, T17, T18, T19, T20, T21> Tail;Tail5263,217113
struct Templates22 {Templates225274,217655
  typedef TemplateSel<T1> Head;Head5275,217676
      T15, T16, T17, T18, T19, T20, T21, T22> Tail;Tail5277,217787
struct Templates23 {Templates235288,218355
  typedef TemplateSel<T1> Head;Head5289,218376
      T15, T16, T17, T18, T19, T20, T21, T22, T23> Tail;Tail5291,218487
struct Templates24 {Templates245302,219081
  typedef TemplateSel<T1> Head;Head5303,219102
      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;Tail5305,219213
struct Templates25 {Templates255317,219837
  typedef TemplateSel<T1> Head;Head5318,219858
      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;Tail5320,219969
struct Templates26 {Templates265332,220619
  typedef TemplateSel<T1> Head;Head5333,220640
      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;Tail5335,220751
struct Templates27 {Templates275347,221427
  typedef TemplateSel<T1> Head;Head5348,221448
      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;Tail5350,221559
struct Templates28 {Templates285363,222265
  typedef TemplateSel<T1> Head;Head5364,222286
      T28> Tail;Tail5367,222468
struct Templates29 {Templates295380,223135
  typedef TemplateSel<T1> Head;Head5381,223156
      T29> Tail;Tail5384,223343
struct Templates30 {Templates305397,224031
  typedef TemplateSel<T1> Head;Head5398,224052
      T29, T30> Tail;Tail5401,224239
struct Templates31 {Templates315415,224957
  typedef TemplateSel<T1> Head;Head5416,224978
      T29, T30, T31> Tail;Tail5419,225165
struct Templates32 {Templates325433,225909
  typedef TemplateSel<T1> Head;Head5434,225930
      T29, T30, T31, T32> Tail;Tail5437,226117
struct Templates33 {Templates335451,226887
  typedef TemplateSel<T1> Head;Head5452,226908
      T29, T30, T31, T32, T33> Tail;Tail5455,227095
struct Templates34 {Templates345470,227895
  typedef TemplateSel<T1> Head;Head5471,227916
      T29, T30, T31, T32, T33, T34> Tail;Tail5474,228103
struct Templates35 {Templates355489,228929
  typedef TemplateSel<T1> Head;Head5490,228950
      T29, T30, T31, T32, T33, T34, T35> Tail;Tail5493,229137
struct Templates36 {Templates365508,229989
  typedef TemplateSel<T1> Head;Head5509,230010
      T29, T30, T31, T32, T33, T34, T35, T36> Tail;Tail5512,230197
struct Templates37 {Templates375528,231079
  typedef TemplateSel<T1> Head;Head5529,231100
      T29, T30, T31, T32, T33, T34, T35, T36, T37> Tail;Tail5532,231287
struct Templates38 {Templates385548,232195
  typedef TemplateSel<T1> Head;Head5549,232216
      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;Tail5552,232403
struct Templates39 {Templates395568,233337
  typedef TemplateSel<T1> Head;Head5569,233358
      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;Tail5572,233545
struct Templates40 {Templates405589,234509
  typedef TemplateSel<T1> Head;Head5590,234530
      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;Tail5593,234717
struct Templates41 {Templates415610,235707
  typedef TemplateSel<T1> Head;Head5611,235728
      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;Tail5614,235915
struct Templates42 {Templates425631,236931
  typedef TemplateSel<T1> Head;Head5632,236952
      T42> Tail;Tail5636,237210
struct Templates43 {Templates435654,238191
  typedef TemplateSel<T1> Head;Head5655,238212
      T43> Tail;Tail5659,238475
struct Templates44 {Templates445677,239477
  typedef TemplateSel<T1> Head;Head5678,239498
      T43, T44> Tail;Tail5682,239761
struct Templates45 {Templates455700,240789
  typedef TemplateSel<T1> Head;Head5701,240810
      T43, T44, T45> Tail;Tail5705,241073
struct Templates46 {Templates465724,242131
  typedef TemplateSel<T1> Head;Head5725,242152
      T43, T44, T45, T46> Tail;Tail5729,242415
struct Templates47 {Templates475748,243499
  typedef TemplateSel<T1> Head;Head5749,243520
      T43, T44, T45, T46, T47> Tail;Tail5753,243783
struct Templates48 {Templates485772,244893
  typedef TemplateSel<T1> Head;Head5773,244914
      T43, T44, T45, T46, T47, T48> Tail;Tail5777,245177
struct Templates49 {Templates495797,246317
  typedef TemplateSel<T1> Head;Head5798,246338
      T43, T44, T45, T46, T47, T48, T49> Tail;Tail5802,246601
struct Templates50 {Templates505822,247767
  typedef TemplateSel<T1> Head;Head5823,247788
      T43, T44, T45, T46, T47, T48, T49, T50> Tail;Tail5827,248051
struct Templates {Templates5869,250402
      T42, T43, T44, T45, T46, T47, T48, T49, T50> type;type5873,250651
struct Templates<NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,Templates5877,250724
  typedef Templates0 type;type5883,251113
struct Templates<T1, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,Templates5886,251173
  typedef Templates1<T1> type;type5892,251559
struct Templates<T1, T2, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,Templates5895,251643
  typedef Templates2<T1, T2> type;type5901,252026
struct Templates<T1, T2, T3, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,Templates5904,252134
  typedef Templates3<T1, T2, T3> type;type5909,252510
struct Templates<T1, T2, T3, T4, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,Templates5913,252646
  typedef Templates4<T1, T2, T3, T4> type;type5918,253019
struct Templates<T1, T2, T3, T4, T5, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,Templates5922,253179
  typedef Templates5<T1, T2, T3, T4, T5> type;type5927,253549
struct Templates<T1, T2, T3, T4, T5, T6, NoneT, NoneT, NoneT, NoneT, NoneT,Templates5931,253733
  typedef Templates6<T1, T2, T3, T4, T5, T6> type;type5936,254100
struct Templates<T1, T2, T3, T4, T5, T6, T7, NoneT, NoneT, NoneT, NoneT, NoneT,Templates5941,254312
  typedef Templates7<T1, T2, T3, T4, T5, T6, T7> type;type5946,254676
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, NoneT, NoneT, NoneT, NoneT,Templates5951,254912
  typedef Templates8<T1, T2, T3, T4, T5, T6, T7, T8> type;type5956,255273
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, NoneT, NoneT, NoneT,Templates5961,255533
  typedef Templates9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;type5966,255891
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, NoneT, NoneT, NoneT,Templates5972,256180
  typedef Templates10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;type5977,256536
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, NoneT, NoneT,Templates5983,256852
  typedef Templates11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;type5988,257206
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, NoneT,Templates5994,257548
  typedef Templates12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> type;type5999,257900
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, NoneT,Templates6006,258272
      T13> type;type6012,258695
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6019,259026
      T14> type;type6025,259452
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6032,259804
      T14, T15> type;type6038,260228
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6046,260610
      T14, T15, T16> type;type6052,261032
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6060,261440
      T14, T15, T16, T17> type;type6066,261860
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6074,262294
      T14, T15, T16, T17, T18> type;type6080,262712
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6089,263176
      T14, T15, T16, T17, T18, T19> type;type6095,263592
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6104,264082
      T14, T15, T16, T17, T18, T19, T20> type;type6110,264496
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6119,265012
      T14, T15, T16, T17, T18, T19, T20, T21> type;type6125,265424
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6135,265970
      T14, T15, T16, T17, T18, T19, T20, T21, T22> type;type6141,266380
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6151,266952
      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;type6157,267360
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6167,267958
      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;type6173,268364
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6184,268992
      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;type6190,269396
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6201,270050
      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> type;type6207,270452
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6218,271132
      T27> type;type6225,271603
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6237,272248
      T28> type;type6244,272722
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6256,273388
      T28, T29> type;type6263,273860
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6275,274552
      T28, T29, T30> type;type6281,275018
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6294,275740
      T28, T29, T30, T31> type;type6300,276204
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6313,276952
      T28, T29, T30, T31, T32> type;type6319,277414
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6332,278188
      T28, T29, T30, T31, T32, T33> type;type6338,278648
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6352,279452
      T28, T29, T30, T31, T32, T33, T34> type;type6358,279910
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6372,280740
      T28, T29, T30, T31, T32, T33, T34, T35> type;type6378,281196
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6392,282052
      T28, T29, T30, T31, T32, T33, T34, T35, T36> type;type6398,282506
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6413,283392
      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;type6419,283844
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6434,284756
      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;type6440,285206
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6455,286144
      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;type6461,286592
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6477,287560
      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> type;type6483,288006
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6499,289000
      T41> type;type6506,289515
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6522,290470
      T42> type;type6529,290988
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6546,291968
      T42, T43> type;type6553,292484
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6570,293490
      T42, T43, T44> type;type6577,294004
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6594,295036
      T42, T43, T44, T45> type;type6601,295548
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6619,296610
      T42, T43, T44, T45, T46> type;type6626,297120
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6644,298208
      T42, T43, T44, T45, T46, T47> type;type6651,298716
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6669,299830
      T42, T43, T44, T45, T46, T47, T48> type;type6676,300336
struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,Templates6695,301480
      T42, T43, T44, T45, T46, T47, T48, T49> type;type6702,301984
struct TypeList { typedef Types1<T> type; };TypeList6710,302219
struct TypeList { typedef Types1<T> type; };type6710,302219
struct TypeList<Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,TypeList6722,303002
      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>::type type;type6729,303509
#define GTEST_CONCAT_TOKEN_(GTEST_CONCAT_TOKEN_6747,304106
#define GTEST_CONCAT_TOKEN_IMPL_(GTEST_CONCAT_TOKEN_IMPL_6748,304179
inline void GTestStreamToHelper(std::ostream* os, const T& val) {GTestStreamToHelper6776,305532
namespace proto2 { class Message; }proto26781,305638
namespace testing {testing6783,305675
namespace internal {internal6797,306193
# define GTEST_IS_NULL_LITERAL_(GTEST_IS_NULL_LITERAL_6839,308103
# define GTEST_IS_NULL_LITERAL_(GTEST_IS_NULL_LITERAL_6841,308150
class GTEST_API_ ScopedTrace {ScopedTrace6850,308550
} GTEST_ATTRIBUTE_UNUSED_;  // A ScopedTrace object does its job in itsGTEST_ATTRIBUTE_UNUSED_6864,309009
# define GTEST_CREF_WORKAROUND_ GTEST_CREF_WORKAROUND_6884,310003
# define GTEST_CREF_WORKAROUND_GTEST_CREF_WORKAROUND_6886,310048
#define GTEST_FORMAT_IMPL_(GTEST_FORMAT_IMPL_6895,310396
#undef GTEST_FORMAT_IMPL_GTEST_FORMAT_IMPL_6919,311274
#define GTEST_FORMAT_CHAR_PTR_IMPL_(GTEST_FORMAT_CHAR_PTR_IMPL_6925,311532
#undef GTEST_FORMAT_CHAR_PTR_IMPL_GTEST_FORMAT_CHAR_PTR_IMPL_6937,312040
class FloatingPoint {FloatingPoint6997,314314
  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;Bits7001,314442
  static const size_t kBitCount = 8*sizeof(RawType);kBitCount7006,314549
  static const size_t kFractionBitCount =kFractionBitCount7009,314640
  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;kExponentBitCount7013,314766
  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);kSignBitMask7016,314876
  static const Bits kFractionBitMask =kFractionBitMask7019,314990
  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);kExponentBitMask7023,315121
  static const size_t kMaxUlps = 4;kMaxUlps7037,315846
  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }FloatingPoint7045,316203
  static RawType ReinterpretBits(const Bits bits) {ReinterpretBits7052,316416
  static RawType Infinity() {Infinity7059,316620
  const Bits &bits() const { return u_.bits_; }bits7066,316777
  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }exponent_bits7069,316873
  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }fraction_bits7072,316990
  Bits sign_bit() const { return kSignBitMask & u_.bits_; }sign_bit7075,317102
  bool is_nan() const {is_nan7078,317213
  bool AlmostEquals(const FloatingPoint& rhs) const {AlmostEquals7090,317716
  union FloatingPointUnion {FloatingPointUnion7101,318098
    RawType value_;  // The raw floating-point number.value_7102,318127
    Bits bits_;      // The bits that represent the number.bits_7103,318182
  static Bits SignAndMagnitudeToBiased(const Bits &sam) {SignAndMagnitudeToBiased7121,318907
  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits &sam1,DistanceBetweenSignAndMagnitudeNumbers7133,319288
  FloatingPointUnion u_;u_7140,319628
typedef FloatingPoint<float> Float;Float7145,319743
typedef FloatingPoint<double> Double;Double7146,319779
typedef const void* TypeId;TypeId7154,320203
class TypeIdHelper {TypeIdHelper7157,320254
  static bool dummy_;dummy_7162,320472
bool TypeIdHelper<T>::dummy_ = false;dummy_7166,320520
TypeId GetTypeId() {GetTypeId7172,320780
class TestFactoryBase {TestFactoryBase7189,321447
  virtual ~TestFactoryBase() {}~TestFactoryBase7191,321480
  TestFactoryBase() {}TestFactoryBase7198,321672
class TestFactoryImpl : public TestFactoryBase {TestFactoryImpl7207,321899
  virtual Test* CreateTest() { return new TestClass; }CreateTest7209,321957
typedef void (*SetUpTestCaseFunc)();SetUpTestCaseFunc7226,322600
typedef void (*TearDownTestCaseFunc)();TearDownTestCaseFunc7227,322637
class GTEST_API_ TypedTestCasePState {TypedTestCasePState7263,324255
  TypedTestCasePState() : registered_(false) {}TypedTestCasePState7265,324303
  bool AddTestName(const char* file, int line, const char* case_name,AddTestName7270,324502
  bool registered_;registered_7290,325227
  ::std::set<const char*> defined_test_names_;defined_test_names_7291,325247
inline const char* SkipComma(const char* str) {SkipComma7296,325414
inline String GetPrefixUntilComma(const char* str) {GetPrefixUntilComma7307,325713
class TypeParameterizedTest {TypeParameterizedTest7320,326334
  static bool Register(const char* prefix, const char* case_name,Register7326,326593
class TypeParameterizedTest<Fixture, TestSel, Types0> {TypeParameterizedTest7353,327680
  static bool Register(const char* /*prefix*/, const char* /*case_name*/,Register7355,327745
class TypeParameterizedTestCase {TypeParameterizedTestCase7366,328250
  static bool Register(const char* prefix, const char* case_name,Register7368,328293
class TypeParameterizedTestCase<Fixture, Templates0, Types> {TypeParameterizedTestCase7384,328942
  static bool Register(const char* /*prefix*/, const char* /*case_name*/,Register7386,329013
inline bool AlwaysFalse() { return !AlwaysTrue(); }AlwaysFalse7414,330032
struct GTEST_API_ ConstCharPtr {ConstCharPtr7419,330243
  ConstCharPtr(const char* str) : value(str) {}ConstCharPtr7420,330276
  operator bool() const { return true; }operator bool7421,330324
  const char* value;value7422,330365
class GTEST_API_ Random {Random7430,330706
  static const UInt32 kMaxRange = 1u << 31;kMaxRange7432,330741
  explicit Random(UInt32 seed) : state_(seed) {}Random7434,330786
  void Reseed(UInt32 seed) { state_ = seed; }Reseed7436,330836
  UInt32 state_;state_7443,331032
struct CompileAssertTypesEqual<T, T> {CompileAssertTypesEqual7453,331316
struct RemoveReference { typedef T type; };  // NOLINTRemoveReference7460,331561
struct RemoveReference { typedef T type; };  // NOLINTtype7460,331561
struct RemoveReference<T&> { typedef T type; };  // NOLINTRemoveReference7462,331638
struct RemoveReference<T&> { typedef T type; };  // NOLINTtype7462,331638
#define GTEST_REMOVE_REFERENCE_(GTEST_REMOVE_REFERENCE_7466,331806
struct RemoveConst { typedef T type; };  // NOLINTRemoveConst7473,332089
struct RemoveConst { typedef T type; };  // NOLINTtype7473,332089
struct RemoveConst<const T> { typedef T type; };  // NOLINTRemoveConst7475,332162
struct RemoveConst<const T> { typedef T type; };  // NOLINTtype7475,332162
struct RemoveConst<const T[N]> {RemoveConst7484,332621
  typedef typename RemoveConst<T>::type type[N];type7485,332654
#define GTEST_REMOVE_CONST_(GTEST_REMOVE_CONST_7491,332818
#define GTEST_REMOVE_REFERENCE_AND_CONST_(GTEST_REMOVE_REFERENCE_AND_CONST_7495,332957
struct AddReference { typedef T& type; };  // NOLINTAddReference7502,333251
struct AddReference { typedef T& type; };  // NOLINTtype7502,333251
struct AddReference<T&> { typedef T& type; };  // NOLINTAddReference7504,333326
struct AddReference<T&> { typedef T& type; };  // NOLINTtype7504,333326
#define GTEST_ADD_REFERENCE_(GTEST_ADD_REFERENCE_7508,333489
#define GTEST_REFERENCE_TO_CONST_(GTEST_REFERENCE_TO_CONST_7520,333867
class ImplicitlyConvertible {ImplicitlyConvertible7527,334150
  static const bool value =value7560,335497
  static const bool value = __is_convertible(From, To);value7567,335874
  static const bool value =value7569,335936
const bool ImplicitlyConvertible<From, To>::value;value7574,336087
struct IsAProtocolMessageIsAProtocolMessage7580,336315
typedef int IsContainer;IsContainer7607,337740
IsContainer IsContainerTest(int /* dummy */,IsContainerTest7609,337784
typedef char IsNotContainer;IsNotContainer7615,337992
IsNotContainer IsContainerTest(long /* dummy */) { return '\0'; }IsContainerTest7617,338040
template<> struct EnableIf<true> { typedef void type; };  // NOLINTEnableIf7624,338404
template<> struct EnableIf<true> { typedef void type; };  // NOLINTtype7624,338404
inline bool ArrayEq(const T& lhs, const U& rhs) { return lhs == rhs; }ArrayEq7637,338877
inline bool ArrayEq(const T(&lhs)[N], const U(&rhs)[N]) {T7641,339031
bool ArrayEq(const T* lhs, size_t size, const U* rhs) {ArrayEq7649,339358
Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {ArrayAwareFind7660,339709
inline void CopyArray(const T& from, U* to) { *to = from; }CopyArray7677,340247
inline void CopyArray(const T(&from)[N], U(*to)[N]) {T7681,340390
void CopyArray(const T* from, size_t size, U* to) {CopyArray7689,340711
enum RelationToSource {RelationToSource7697,340948
  kReference,  // The NativeArray references the native array.kReference7698,340972
  kCopy        // The NativeArray makes a copy of the native array andkCopy7699,341035
class NativeArray {NativeArray7712,341701
  typedef Element value_type;value_type7715,341765
  typedef Element* iterator;iterator7716,341795
  typedef const Element* const_iterator;const_iterator7717,341824
  NativeArray(const Element* array, size_t count, RelationToSource relation) {NativeArray7720,341903
  NativeArray(const NativeArray& rhs) {NativeArray7725,342044
  ~NativeArray() {~NativeArray7729,342147
  size_t size() const { return size_; }size7739,342478
  const_iterator begin() const { return array_; }begin7740,342518
  const_iterator end() const { return array_ + size_; }end7741,342568
  bool operator==(const NativeArray& rhs) const {operator ==7742,342624
  void Init(const Element* array, size_t a_size, RelationToSource relation) {Init7750,342862
  const Element* array_;array_7762,343184
  size_t size_;size_7763,343209
  RelationToSource relation_to_source_;relation_to_source_7764,343225
#define GTEST_MESSAGE_AT_(GTEST_MESSAGE_AT_7772,343359
#define GTEST_MESSAGE_(GTEST_MESSAGE_7776,343521
#define GTEST_FATAL_FAILURE_(GTEST_FATAL_FAILURE_7779,343631
#define GTEST_NONFATAL_FAILURE_(GTEST_NONFATAL_FAILURE_7782,343747
#define GTEST_SUCCESS_(GTEST_SUCCESS_7785,343862
#define GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_7791,344124
#define GTEST_TEST_THROW_(GTEST_TEST_THROW_7794,344249
#define GTEST_TEST_NO_THROW_(GTEST_TEST_NO_THROW_7820,345265
#define GTEST_TEST_ANY_THROW_(GTEST_TEST_ANY_THROW_7834,345757
#define GTEST_TEST_BOOLEAN_(GTEST_TEST_BOOLEAN_7856,346575
#define GTEST_TEST_NO_FATAL_FAILURE_(GTEST_TEST_NO_FATAL_FAILURE_7865,346917
#define GTEST_TEST_CLASS_NAME_(GTEST_TEST_CLASS_NAME_7880,347634
#define GTEST_TEST_(GTEST_TEST_7884,347769
#define GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_7945,350597
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_7984,352533
namespace testing {testing7989,352621
namespace internal {internal7990,352641
const char kDeathTestStyleFlag[] = "death_test_style";kDeathTestStyleFlag7995,352774
const char kDeathTestUseFork[] = "death_test_use_fork";kDeathTestUseFork7996,352829
const char kInternalRunDeathTestFlag[] = "internal_run_death_test";kInternalRunDeathTestFlag7997,352885
class GTEST_API_ DeathTest {DeathTest8014,353598
  virtual ~DeathTest() { }~DeathTest8027,354345
  class ReturnSentinel {ReturnSentinel8030,354437
    explicit ReturnSentinel(DeathTest* test) : test_(test) { }ReturnSentinel8032,354473
    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }~ReturnSentinel8033,354536
    DeathTest* const test_;test_8035,354623
  } GTEST_ATTRIBUTE_UNUSED_;GTEST_ATTRIBUTE_UNUSED_8037,354704
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };TestRole8044,355069
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };OVERSEE_TEST8044,355069
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };EXECUTE_TEST8044,355069
  enum AbortReason {AbortReason8047,355189
    TEST_ENCOUNTERED_RETURN_STATEMENT,TEST_ENCOUNTERED_RETURN_STATEMENT8048,355210
    TEST_THREW_EXCEPTION,TEST_THREW_EXCEPTION8049,355249
    TEST_DID_NOT_DIETEST_DID_NOT_DIE8050,355275
  static String last_death_test_message_;last_death_test_message_8079,356292
class DeathTestFactory {DeathTestFactory8085,356455
  virtual ~DeathTestFactory() { }~DeathTestFactory8087,356489
class DefaultDeathTestFactory : public DeathTestFactory {DefaultDeathTestFactory8093,356724
#  define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(GTEST_EXECUTE_DEATH_TEST_STATEMENT_8106,357280
#  define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(GTEST_EXECUTE_DEATH_TEST_STATEMENT_8123,357971
# define GTEST_DEATH_TEST_(GTEST_DEATH_TEST_8130,358211
class InternalRunDeathTestFlag {InternalRunDeathTestFlag8168,359802
  InternalRunDeathTestFlag(const String& a_file,InternalRunDeathTestFlag8170,359844
  ~InternalRunDeathTestFlag() {~InternalRunDeathTestFlag8177,360106
  String file() const { return file_; }file8182,360198
  int line() const { return line_; }line8183,360238
  int index() const { return index_; }index8184,360275
  int write_fd() const { return write_fd_; }write_fd8185,360314
  String file_;file_8188,360370
  int line_;line_8189,360386
  int index_;index_8190,360399
  int write_fd_;write_fd_8191,360413
# define GTEST_UNSUPPORTED_DEATH_TEST_(GTEST_UNSUPPORTED_DEATH_TEST_8235,362793
namespace testing {testing8255,363505
# define ASSERT_EXIT(ASSERT_EXIT8369,368340
# define EXPECT_EXIT(EXPECT_EXIT8374,368553
# define ASSERT_DEATH(ASSERT_DEATH8380,368879
# define EXPECT_DEATH(EXPECT_DEATH8385,369087
class GTEST_API_ ExitedWithCode {ExitedWithCode8391,369351
  const int exit_code_;exit_code_8399,369588
class GTEST_API_ KilledBySignal {KilledBySignal8405,369725
  const int signum_;signum_8410,369859
#  define EXPECT_DEBUG_DEATH(EXPECT_DEBUG_DEATH8459,371365
#  define ASSERT_DEBUG_DEATH(ASSERT_DEBUG_DEATH8462,371478
#  define EXPECT_DEBUG_DEATH(EXPECT_DEBUG_DEATH8467,371599
#  define ASSERT_DEBUG_DEATH(ASSERT_DEBUG_DEATH8470,371682
# define EXPECT_DEATH_IF_SUPPORTED(EXPECT_DEATH_IF_SUPPORTED8482,372168
# define ASSERT_DEATH_IF_SUPPORTED(ASSERT_DEATH_IF_SUPPORTED8484,372258
# define EXPECT_DEATH_IF_SUPPORTED(EXPECT_DEATH_IF_SUPPORTED8487,372354
# define ASSERT_DEATH_IF_SUPPORTED(ASSERT_DEATH_IF_SUPPORTED8489,372463
#define GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_8542,374824
namespace testing {testing8547,374890
class GTEST_API_ Message {Message8575,375760
  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);BasicNarrowIoManip8579,375885
  Message() : ss_(new ::std::stringstream) {Message8587,376241
  Message(const Message& msg) : ss_(new ::std::stringstream) {  // NOLINTMessage8594,376488
  explicit Message(const char* str) : ss_(new ::std::stringstream) {Message8599,376639
  inline Message& operator <<(const T& value) {operator <<8606,376838
  inline Message& operator <<(const T& val) {operator <<8613,377054
  inline Message& operator <<(T* const& pointer) {  // NOLINToperator <<8632,377828
  Message& operator <<(BasicNarrowIoManip val) {operator <<8648,378411
  Message& operator <<(bool b) {operator <<8654,378564
  Message& operator <<(const wchar_t* wide_c_str) {operator <<8660,378747
  Message& operator <<(wchar_t* wide_c_str) {operator <<8663,378870
  internal::String GetString() const {GetString8683,379671
  inline void StreamHelper(internal::true_type /*dummy*/, T* pointer) {StreamHelper8695,380119
  inline void StreamHelper(internal::false_type /*dummy*/, const T& value) {StreamHelper8703,380338
  const internal::scoped_ptr< ::std::stringstream> ss_;ss_8709,380548
inline std::ostream& operator <<(std::ostream& os, const Message& sb) {operator <<8717,380794
#define GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_8765,382907
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_8947,390703
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_9024,394462
namespace testing {testing9030,394562
namespace internal {internal9031,394582
class linked_ptr_internal {linked_ptr_internal9043,395166
  void join_new() {join_new9046,395262
  void join(linked_ptr_internal const* ptr) {join9063,395921
  bool depart() {depart9075,396309
  mutable linked_ptr_internal const* next_;next_9086,396545
class linked_ptr {linked_ptr9090,396615
  typedef T element_type;element_type9092,396643
  explicit linked_ptr(T* ptr = NULL) { capture(ptr); }linked_ptr9096,396787
  ~linked_ptr() { depart(); }~linked_ptr9097,396842
  template <typename U> linked_ptr(linked_ptr<U> const& ptr) { copy(&ptr); }linked_ptr9100,396953
  linked_ptr(linked_ptr const& ptr) {  // NOLINTlinked_ptr9101,397030
  template <typename U> linked_ptr& operator=(linked_ptr<U> const& ptr) {operator =9107,397187
  linked_ptr& operator=(linked_ptr const& ptr) {operator =9113,397314
  void reset(T* ptr = NULL) {reset9122,397478
  T* get() const { return value_; }get9126,397544
  T* operator->() const { return value_; }operator ->9127,397580
  T& operator*() const { return *value_; }operator *9128,397623
  bool operator==(T* p) const { return value_ == p; }operator ==9130,397667
  bool operator!=(T* p) const { return value_ != p; }operator !=9131,397721
  bool operator==(linked_ptr<U> const& ptr) const {operator ==9133,397799
  bool operator!=(linked_ptr<U> const& ptr) const {operator !=9137,397911
  T* value_;value_9145,398062
  linked_ptr_internal link_;link_9146,398075
  void depart() {depart9148,398105
  void capture(T* ptr) {capture9152,398167
  template <typename U> void copy(linked_ptr<U> const* ptr) {copy9157,398237
bool operator==(T* ptr, const linked_ptr<T>& x) {operator ==9167,398440
bool operator!=(T* ptr, const linked_ptr<T>& x) {operator !=9172,398546
linked_ptr<T> make_linked_ptr(T* ptr) {make_linked_ptr9180,398833
#define GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_9283,403454
namespace testing {testing9291,403606
namespace internal2 {internal29295,403760
enum TypeKind {TypeKind9305,404132
  kProtobuf,              // a protobuf typekProtobuf9306,404148
  kConvertibleToInteger,  // a type implicitly convertible to BiggestIntkConvertibleToInteger9307,404193
  kOtherType              // anything elsekOtherType9309,404331
class TypeWithoutFormatter {TypeWithoutFormatter9317,404672
  static void PrintValue(const T& value, ::std::ostream* os) {PrintValue9320,404776
const size_t kProtobufOneLinerMaxLength = 50;kProtobufOneLinerMaxLength9329,405142
class TypeWithoutFormatter<T, kProtobuf> {TypeWithoutFormatter9332,405211
  static void PrintValue(const T& value, ::std::ostream* os) {PrintValue9334,405263
class TypeWithoutFormatter<T, kConvertibleToInteger> {TypeWithoutFormatter9344,405629
  static void PrintValue(const T& value, ::std::ostream* os) {PrintValue9353,406084
::std::basic_ostream<Char, CharTraits>& operator<<(operator <<9384,407551
namespace testing_internal {testing_internal9398,408096
void DefaultPrintNonContainerTo(const T& value, ::std::ostream* os) {DefaultPrintNonContainerTo9403,408258
namespace testing {testing9435,409638
namespace internal {internal9436,409658
void DefaultPrintTo(IsContainer /* dummy */,DefaultPrintTo9454,410309
void DefaultPrintTo(IsNotContainer /* dummy */,DefaultPrintTo9488,411431
void DefaultPrintTo(IsNotContainer /* dummy */,DefaultPrintTo9520,412693
void PrintTo(const T& value, ::std::ostream* os) {PrintTo9538,413516
inline void PrintTo(char c, ::std::ostream* os) {PrintTo9571,415006
inline void PrintTo(bool x, ::std::ostream* os) {PrintTo9579,415320
inline void PrintTo(char* s, ::std::ostream* os) {PrintTo9594,415964
inline void PrintTo(const signed char* s, ::std::ostream* os) {PrintTo9600,416183
inline void PrintTo(signed char* s, ::std::ostream* os) {PrintTo9603,416295
inline void PrintTo(const unsigned char* s, ::std::ostream* os) {PrintTo9606,416401
inline void PrintTo(unsigned char* s, ::std::ostream* os) {PrintTo9609,416515
inline void PrintTo(wchar_t* s, ::std::ostream* os) {PrintTo9621,417100
void PrintRawArrayTo(const T a[], size_t count, ::std::ostream* os) {PrintRawArrayTo9632,417403
inline void PrintTo(const ::string& s, ::std::ostream* os) {PrintTo9643,417737
inline void PrintTo(const ::std::string& s, ::std::ostream* os) {PrintTo9649,417934
inline void PrintTo(const ::wstring& s, ::std::ostream* os) {PrintTo9656,418177
inline void PrintTo(const ::std::wstring& s, ::std::ostream* os) {PrintTo9663,418411
inline void PrintTo(const ::std::tr1::tuple<>& t, ::std::ostream* os) {PrintTo9682,419080
void PrintTo(const ::std::tr1::tuple<T1>& t, ::std::ostream* os) {PrintTo9687,419201
void PrintTo(const ::std::tr1::tuple<T1, T2>& t, ::std::ostream* os) {PrintTo9692,419330
void PrintTo(const ::std::tr1::tuple<T1, T2, T3>& t, ::std::ostream* os) {PrintTo9697,419476
void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4>& t, ::std::ostream* os) {PrintTo9702,419639
void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5>& t,PrintTo9707,419819
void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6>& t,PrintTo9714,420039
void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7>& t,PrintTo9721,420276
void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8>& t,PrintTo9728,420530
void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>& t,PrintTo9735,420801
void PrintTo(PrintTo9742,421090
void PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) {PrintTo9751,421323
class UniversalPrinter {UniversalPrinter9764,421804
  static void Print(const T& value, ::std::ostream* os) {Print9776,422258
void UniversalPrintArray(const T* begin, size_t len, ::std::ostream* os) {UniversalPrintArray9796,423004
class UniversalPrinter<T[N]> {UniversalPrinter9824,423986
  static void Print(const T (&a)[N], ::std::ostream* os) {T9828,424108
class UniversalPrinter<T&> {UniversalPrinter9835,424276
  static void Print(const T& value, ::std::ostream* os) {Print9844,424584
void UniversalTersePrint(const T& value, ::std::ostream* os) {UniversalTersePrint9862,425238
inline void UniversalTersePrint(const char* str, ::std::ostream* os) {UniversalTersePrint9865,425332
inline void UniversalTersePrint(char* str, ::std::ostream* os) {UniversalTersePrint9872,425497
void UniversalPrint(const T& value, ::std::ostream* os) {UniversalPrint9881,425864
typedef ::std::vector<string> Strings;Strings9886,425990
struct TuplePrefixPrinter {TuplePrefixPrinter9897,426403
  static void PrintPrefixTo(const Tuple& t, ::std::ostream* os) {PrintPrefixTo9900,426502
  static void TersePrintPrefixToStrings(const Tuple& t, Strings* strings) {TersePrintPrefixToStrings9910,426899
struct TuplePrefixPrinter<0> {TuplePrefixPrinter9920,427199
  static void PrintPrefixTo(const Tuple&, ::std::ostream*) {}PrintPrefixTo9922,427258
  static void TersePrintPrefixToStrings(const Tuple&, Strings*) {}TersePrintPrefixToStrings9925,427349
struct TuplePrefixPrinter<1> {TuplePrefixPrinter9933,427740
  static void PrintPrefixTo(const Tuple& t, ::std::ostream* os) {PrintPrefixTo9935,427799
  static void TersePrintPrefixToStrings(const Tuple& t, Strings* strings) {TersePrintPrefixToStrings9941,428015
void PrintTupleTo(const T& t, ::std::ostream* os) {PrintTupleTo9951,428323
Strings UniversalTersePrintTupleFieldsToStrings(const Tuple& value) {UniversalTersePrintTupleFieldsToStrings9962,428687
::std::string PrintToString(const T& value) {PrintToString9973,428985
namespace testing {testing9985,429225
namespace internal {internal9986,429245
class ParamIteratorInterface {ParamIteratorInterface10003,429910
  virtual ~ParamIteratorInterface() {}~ParamIteratorInterface10005,429950
class ParamIterator {ParamIterator10033,431378
  typedef T value_type;value_type10035,431409
  typedef const T& reference;reference10036,431433
  typedef ptrdiff_t difference_type;difference_type10037,431463
  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}ParamIterator10040,431560
  ParamIterator& operator=(const ParamIterator& other) {operator =10041,431637
  const T& operator*() const { return *impl_->Current(); }operator *10047,431782
  const T* operator->() const { return impl_->Current(); }operator ->10048,431841
  ParamIterator& operator++() {operator ++10050,431935
  ParamIterator operator++(int /*unused*/) {operator ++10055,432047
  bool operator==(const ParamIterator& other) const {operator ==10060,432206
  bool operator!=(const ParamIterator& other) const {operator !=10063,432340
  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}ParamIterator10069,432473
  scoped_ptr<ParamIteratorInterface<T> > impl_;impl_10070,432548
class ParamGeneratorInterface {ParamGeneratorInterface10076,432736
  typedef T ParamType;ParamType10078,432777
  virtual ~ParamGeneratorInterface() {}~ParamGeneratorInterface10080,432801
class ParamGenerator {ParamGenerator10093,433352
  typedef ParamIterator<T> iterator;iterator10095,433384
  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}ParamGenerator10097,433422
  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}ParamGenerator10098,433499
  ParamGenerator& operator=(const ParamGenerator& other) {operator =10100,433570
  iterator begin() const { return iterator(impl_->Begin()); }begin10105,433677
  iterator end() const { return iterator(impl_->End()); }end10106,433739
  linked_ptr<const ParamGeneratorInterface<T> > impl_;impl_10109,433808
class RangeGenerator : public ParamGeneratorInterface<T> {RangeGenerator10117,434122
  RangeGenerator(T begin, T end, IncrementT step)RangeGenerator10119,434190
  virtual ~RangeGenerator() {}~RangeGenerator10122,434346
  virtual ParamIteratorInterface<T>* Begin() const {Begin10124,434378
  virtual ParamIteratorInterface<T>* End() const {End10127,434484
  class Iterator : public ParamIteratorInterface<T> {Iterator10132,434606
    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,Iterator10134,434671
    virtual ~Iterator() {}~Iterator10137,434842
    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {BaseGenerator10139,434870
    virtual void Advance() {Advance10142,434966
    virtual ParamIteratorInterface<T>* Clone() const {Clone10146,435048
    virtual const T* Current() const { return &value_; }Current10149,435143
    virtual bool Equals(const ParamIteratorInterface<T>& other) const {Equals10150,435200
    Iterator(const Iterator& other)Iterator10162,435729
    const ParamGeneratorInterface<T>* const base_;base_10170,436009
    T value_;value_10171,436060
    int index_;index_10172,436074
    const IncrementT step_;step_10173,436090
  static int CalculateEndIndex(const T& begin,CalculateEndIndex10176,436159
  const T begin_;begin_10188,436522
  const T end_;end_10189,436540
  const IncrementT step_;step_10190,436556
  const int end_index_;end_index_10193,436719
class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {ValuesInIteratorRangeGenerator10202,437049
  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)ValuesInIteratorRangeGenerator10205,437171
  virtual ~ValuesInIteratorRangeGenerator() {}~ValuesInIteratorRangeGenerator10207,437282
  virtual ParamIteratorInterface<T>* Begin() const {Begin10209,437330
  virtual ParamIteratorInterface<T>* End() const {End10212,437438
  typedef typename ::std::vector<T> ContainerType;ContainerType10217,437553
  class Iterator : public ParamIteratorInterface<T> {Iterator10219,437605
    Iterator(const ParamGeneratorInterface<T>* base,Iterator10221,437670
    virtual ~Iterator() {}~Iterator10224,437831
    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {BaseGenerator10226,437859
    virtual void Advance() {Advance10229,437955
    virtual ParamIteratorInterface<T>* Clone() const {Clone10233,438031
    virtual const T* Current() const {Current10243,438606
    virtual bool Equals(const ParamIteratorInterface<T>& other) const {Equals10248,438751
    Iterator(const Iterator& other)Iterator10259,439243
    const ParamGeneratorInterface<T>* const base_;base_10266,439526
    typename ContainerType::const_iterator iterator_;iterator_10267,439577
    mutable scoped_ptr<const T> value_;value_10273,439947
  const ContainerType container_;container_10279,440160
class ParameterizedTestFactory : public TestFactoryBase {ParameterizedTestFactory10287,440409
  typedef typename TestClass::ParamType ParamType;ParamType10289,440476
  explicit ParameterizedTestFactory(ParamType parameter) :ParameterizedTestFactory10290,440527
  virtual Test* CreateTest() {CreateTest10292,440617
  const ParamType parameter_;parameter_10298,440729
class TestMetaFactoryBase {TestMetaFactoryBase10308,441048
  virtual ~TestMetaFactoryBase() {}~TestMetaFactoryBase10310,441085
class TestMetaFactoryTestMetaFactory10324,441658
  typedef typename TestCase::ParamType ParamType;ParamType10327,441754
  TestMetaFactory() {}TestMetaFactory10329,441805
  virtual TestFactoryBase* CreateTestFactory(ParamType parameter) {CreateTestFactory10331,441829
class ParameterizedTestCaseInfoBase {ParameterizedTestCaseInfoBase10349,442624
  virtual ~ParameterizedTestCaseInfoBase() {}~ParameterizedTestCaseInfoBase10351,442671
  ParameterizedTestCaseInfoBase() {}ParameterizedTestCaseInfoBase10364,443223
class ParameterizedTestCaseInfo : public ParameterizedTestCaseInfoBase {ParameterizedTestCaseInfo10378,443715
  typedef typename TestCase::ParamType ParamType;ParamType10383,443967
  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();GeneratorCreationFunc10385,444089
  explicit ParameterizedTestCaseInfo(const char* name)ParameterizedTestCaseInfo10387,444152
  virtual const string& GetTestCaseName() const { return test_case_name_; }GetTestCaseName10391,444288
  virtual TypeId GetTestCaseTypeId() const { return GetTypeId<TestCase>(); }GetTestCaseTypeId10393,444402
  void AddTestPattern(const char* test_case_name,AddTestPattern10400,444867
  int AddTestCaseInstantiation(const string& instantiation_name,AddTestCaseInstantiation10409,445356
  virtual void RegisterTests() {RegisterTests10421,446096
  struct TestInfo {TestInfo10459,447717
    TestInfo(const char* a_test_case_base_name,TestInfo10460,447737
    const string test_case_base_name;test_case_base_name10467,448041
    const string test_base_name;test_base_name10468,448079
    const scoped_ptr<TestMetaFactoryBase<ParamType> > test_meta_factory;test_meta_factory10469,448112
  typedef ::std::vector<linked_ptr<TestInfo> > TestInfoContainer;TestInfoContainer10471,448190
      InstantiationContainer;InstantiationContainer10475,448454
  const string test_case_name_;test_case_name_10477,448485
  TestInfoContainer tests_;tests_10478,448517
  InstantiationContainer instantiations_;instantiations_10479,448545
class ParameterizedTestCaseRegistry {ParameterizedTestCaseRegistry10490,448992
  ParameterizedTestCaseRegistry() {}ParameterizedTestCaseRegistry10492,449039
  ~ParameterizedTestCaseRegistry() {~ParameterizedTestCaseRegistry10493,449076
  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder(GetTestCasePatternHolder10503,449424
  void RegisterTests() {RegisterTests10533,450724
  typedef ::std::vector<ParameterizedTestCaseInfoBase*> TestCaseInfoContainer;TestCaseInfoContainer10541,450919
  TestCaseInfoContainer test_case_infos_;test_case_infos_10543,450999
#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_10600,453510
namespace testing {testing10608,453777
internal::ParamGenerator<T> ValuesIn(const T (&array)[N]);T10618,454124
namespace internal {internal10624,454312
class ValueArray1 {ValueArray110628,454427
  explicit ValueArray1(T1 v1) : v1_(v1) {}ValueArray110630,454456
  operator ParamGenerator<T>() const { return ValuesIn(&v1_, &v1_ + 1); }operator ParamGenerator<T>10633,454524
  const T1 v1_;v1_10639,454706
class ValueArray2 {ValueArray210643,454762
  ValueArray2(T1 v1, T2 v2) : v1_(v1), v2_(v2) {}ValueArray210645,454791
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10648,454866
  const T1 v1_;v1_10657,455079
  const T2 v2_;v2_10658,455095
class ValueArray3 {ValueArray310662,455164
  ValueArray3(T1 v1, T2 v2, T3 v3) : v1_(v1), v2_(v2), v3_(v3) {}ValueArray310664,455193
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10667,455284
  const T1 v1_;v1_10676,455502
  const T2 v2_;v2_10677,455518
  const T3 v3_;v3_10678,455534
class ValueArray4 {ValueArray410682,455616
  ValueArray4(T1 v1, T2 v2, T3 v3, T4 v4) : v1_(v1), v2_(v2), v3_(v3),ValueArray410684,455645
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10688,455758
  const T1 v1_;v1_10697,455981
  const T2 v2_;v2_10698,455997
  const T3 v3_;v3_10699,456013
  const T4 v4_;v4_10700,456029
class ValueArray5 {ValueArray510704,456124
  ValueArray5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) : v1_(v1), v2_(v2), v3_(v3),ValueArray510706,456153
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10710,456282
  const T1 v1_;v1_10719,456510
  const T2 v2_;v2_10720,456526
  const T3 v3_;v3_10721,456542
  const T4 v4_;v4_10722,456558
  const T5 v5_;v5_10723,456574
class ValueArray6 {ValueArray610728,456686
  ValueArray6(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) : v1_(v1), v2_(v2),ValueArray610730,456715
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10734,456860
  const T1 v1_;v1_10743,457093
  const T2 v2_;v2_10744,457109
  const T3 v3_;v3_10745,457125
  const T4 v4_;v4_10746,457141
  const T5 v5_;v5_10747,457157
  const T6 v6_;v6_10748,457173
class ValueArray7 {ValueArray710753,457298
  ValueArray7(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) : v1_(v1),ValueArray710755,457327
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10759,457488
  const T1 v1_;v1_10768,457726
  const T2 v2_;v2_10769,457742
  const T3 v3_;v3_10770,457758
  const T4 v4_;v4_10771,457774
  const T5 v5_;v5_10772,457790
  const T6 v6_;v6_10773,457806
  const T7 v7_;v7_10774,457822
class ValueArray8 {ValueArray810779,457960
  ValueArray8(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,ValueArray810781,457989
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10786,458172
  const T1 v1_;v1_10795,458415
  const T2 v2_;v2_10796,458431
  const T3 v3_;v3_10797,458447
  const T4 v4_;v4_10798,458463
  const T5 v5_;v5_10799,458479
  const T6 v6_;v6_10800,458495
  const T7 v7_;v7_10801,458511
  const T8 v8_;v8_10802,458527
class ValueArray9 {ValueArray910807,458678
  ValueArray9(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,ValueArray910809,458707
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10814,458906
  const T1 v1_;v1_10823,459154
  const T2 v2_;v2_10824,459170
  const T3 v3_;v3_10825,459186
  const T4 v4_;v4_10826,459202
  const T5 v5_;v5_10827,459218
  const T6 v6_;v6_10828,459234
  const T7 v7_;v7_10829,459250
  const T8 v8_;v8_10830,459266
  const T9 v9_;v9_10831,459282
class ValueArray10 {ValueArray1010836,459447
  ValueArray10(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1010838,459477
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10843,459697
  const T1 v1_;v1_10852,459952
  const T2 v2_;v2_10853,459968
  const T3 v3_;v3_10854,459984
  const T4 v4_;v4_10855,460000
  const T5 v5_;v5_10856,460016
  const T6 v6_;v6_10857,460032
  const T7 v7_;v7_10858,460048
  const T8 v8_;v8_10859,460064
  const T9 v9_;v9_10860,460080
  const T10 v10_;v10_10861,460096
class ValueArray11 {ValueArray1110867,460281
  ValueArray11(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1110869,460311
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10874,460551
  const T1 v1_;v1_10883,460812
  const T2 v2_;v2_10884,460828
  const T3 v3_;v3_10885,460844
  const T4 v4_;v4_10886,460860
  const T5 v5_;v5_10887,460876
  const T6 v6_;v6_10888,460892
  const T7 v7_;v7_10889,460908
  const T8 v8_;v8_10890,460924
  const T9 v9_;v9_10891,460940
  const T10 v10_;v10_10892,460956
  const T11 v11_;v11_10893,460974
class ValueArray12 {ValueArray1210899,461173
  ValueArray12(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1210901,461203
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10906,461463
  const T1 v1_;v1_10916,461738
  const T2 v2_;v2_10917,461754
  const T3 v3_;v3_10918,461770
  const T4 v4_;v4_10919,461786
  const T5 v5_;v5_10920,461802
  const T6 v6_;v6_10921,461818
  const T7 v7_;v7_10922,461834
  const T8 v8_;v8_10923,461850
  const T9 v9_;v9_10924,461866
  const T10 v10_;v10_10925,461882
  const T11 v11_;v11_10926,461900
  const T12 v12_;v12_10927,461918
class ValueArray13 {ValueArray1310933,462131
  ValueArray13(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1310935,462161
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10941,462447
  const T1 v1_;v1_10951,462728
  const T2 v2_;v2_10952,462744
  const T3 v3_;v3_10953,462760
  const T4 v4_;v4_10954,462776
  const T5 v5_;v5_10955,462792
  const T6 v6_;v6_10956,462808
  const T7 v7_;v7_10957,462824
  const T8 v8_;v8_10958,462840
  const T9 v9_;v9_10959,462856
  const T10 v10_;v10_10960,462872
  const T11 v11_;v11_10961,462890
  const T12 v12_;v12_10962,462908
  const T13 v13_;v13_10963,462926
class ValueArray14 {ValueArray1410969,463153
  ValueArray14(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1410971,463183
  operator ParamGenerator<T>() const {operator ParamGenerator<T>10977,463489
  const T1 v1_;v1_10987,463776
  const T2 v2_;v2_10988,463792
  const T3 v3_;v3_10989,463808
  const T4 v4_;v4_10990,463824
  const T5 v5_;v5_10991,463840
  const T6 v6_;v6_10992,463856
  const T7 v7_;v7_10993,463872
  const T8 v8_;v8_10994,463888
  const T9 v9_;v9_10995,463904
  const T10 v10_;v10_10996,463920
  const T11 v11_;v11_10997,463938
  const T12 v12_;v12_10998,463956
  const T13 v13_;v13_10999,463974
  const T14 v14_;v14_11000,463992
class ValueArray15 {ValueArray1511006,464233
  ValueArray15(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1511008,464263
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11014,464589
  const T1 v1_;v1_11024,464882
  const T2 v2_;v2_11025,464898
  const T3 v3_;v3_11026,464914
  const T4 v4_;v4_11027,464930
  const T5 v5_;v5_11028,464946
  const T6 v6_;v6_11029,464962
  const T7 v7_;v7_11030,464978
  const T8 v8_;v8_11031,464994
  const T9 v9_;v9_11032,465010
  const T10 v10_;v10_11033,465026
  const T11 v11_;v11_11034,465044
  const T12 v12_;v12_11035,465062
  const T13 v13_;v13_11036,465080
  const T14 v14_;v14_11037,465098
  const T15 v15_;v15_11038,465116
class ValueArray16 {ValueArray1611045,465375
  ValueArray16(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1611047,465405
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11054,465757
  const T1 v1_;v1_11064,466056
  const T2 v2_;v2_11065,466072
  const T3 v3_;v3_11066,466088
  const T4 v4_;v4_11067,466104
  const T5 v5_;v5_11068,466120
  const T6 v6_;v6_11069,466136
  const T7 v7_;v7_11070,466152
  const T8 v8_;v8_11071,466168
  const T9 v9_;v9_11072,466184
  const T10 v10_;v10_11073,466200
  const T11 v11_;v11_11074,466218
  const T12 v12_;v12_11075,466236
  const T13 v13_;v13_11076,466254
  const T14 v14_;v14_11077,466272
  const T15 v15_;v15_11078,466290
  const T16 v16_;v16_11079,466308
class ValueArray17 {ValueArray1711086,466581
  ValueArray17(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1711088,466611
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11095,466983
  const T1 v1_;v1_11105,467288
  const T2 v2_;v2_11106,467304
  const T3 v3_;v3_11107,467320
  const T4 v4_;v4_11108,467336
  const T5 v5_;v5_11109,467352
  const T6 v6_;v6_11110,467368
  const T7 v7_;v7_11111,467384
  const T8 v8_;v8_11112,467400
  const T9 v9_;v9_11113,467416
  const T10 v10_;v10_11114,467432
  const T11 v11_;v11_11115,467450
  const T12 v12_;v12_11116,467468
  const T13 v13_;v13_11117,467486
  const T14 v14_;v14_11118,467504
  const T15 v15_;v15_11119,467522
  const T16 v16_;v16_11120,467540
  const T17 v17_;v17_11121,467558
class ValueArray18 {ValueArray1811128,467845
  ValueArray18(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1811130,467875
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11137,468267
  const T1 v1_;v1_11147,468578
  const T2 v2_;v2_11148,468594
  const T3 v3_;v3_11149,468610
  const T4 v4_;v4_11150,468626
  const T5 v5_;v5_11151,468642
  const T6 v6_;v6_11152,468658
  const T7 v7_;v7_11153,468674
  const T8 v8_;v8_11154,468690
  const T9 v9_;v9_11155,468706
  const T10 v10_;v10_11156,468722
  const T11 v11_;v11_11157,468740
  const T12 v12_;v12_11158,468758
  const T13 v13_;v13_11159,468776
  const T14 v14_;v14_11160,468794
  const T15 v15_;v15_11161,468812
  const T16 v16_;v16_11162,468830
  const T17 v17_;v17_11163,468848
  const T18 v18_;v18_11164,468866
class ValueArray19 {ValueArray1911171,469167
  ValueArray19(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray1911173,469197
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11180,469609
  const T1 v1_;v1_11190,469926
  const T2 v2_;v2_11191,469942
  const T3 v3_;v3_11192,469958
  const T4 v4_;v4_11193,469974
  const T5 v5_;v5_11194,469990
  const T6 v6_;v6_11195,470006
  const T7 v7_;v7_11196,470022
  const T8 v8_;v8_11197,470038
  const T9 v9_;v9_11198,470054
  const T10 v10_;v10_11199,470070
  const T11 v11_;v11_11200,470088
  const T12 v12_;v12_11201,470106
  const T13 v13_;v13_11202,470124
  const T14 v14_;v14_11203,470142
  const T15 v15_;v15_11204,470160
  const T16 v16_;v16_11205,470178
  const T17 v17_;v17_11206,470196
  const T18 v18_;v18_11207,470214
  const T19 v19_;v19_11208,470232
class ValueArray20 {ValueArray2011215,470547
  ValueArray20(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2011217,470577
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11225,471015
  const T1 v1_;v1_11235,471338
  const T2 v2_;v2_11236,471354
  const T3 v3_;v3_11237,471370
  const T4 v4_;v4_11238,471386
  const T5 v5_;v5_11239,471402
  const T6 v6_;v6_11240,471418
  const T7 v7_;v7_11241,471434
  const T8 v8_;v8_11242,471450
  const T9 v9_;v9_11243,471466
  const T10 v10_;v10_11244,471482
  const T11 v11_;v11_11245,471500
  const T12 v12_;v12_11246,471518
  const T13 v13_;v13_11247,471536
  const T14 v14_;v14_11248,471554
  const T15 v15_;v15_11249,471572
  const T16 v16_;v16_11250,471590
  const T17 v17_;v17_11251,471608
  const T18 v18_;v18_11252,471626
  const T19 v19_;v19_11253,471644
  const T20 v20_;v20_11254,471662
class ValueArray21 {ValueArray2111262,471995
  ValueArray21(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2111264,472025
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11272,472483
  const T1 v1_;v1_11282,472812
  const T2 v2_;v2_11283,472828
  const T3 v3_;v3_11284,472844
  const T4 v4_;v4_11285,472860
  const T5 v5_;v5_11286,472876
  const T6 v6_;v6_11287,472892
  const T7 v7_;v7_11288,472908
  const T8 v8_;v8_11289,472924
  const T9 v9_;v9_11290,472940
  const T10 v10_;v10_11291,472956
  const T11 v11_;v11_11292,472974
  const T12 v12_;v12_11293,472992
  const T13 v13_;v13_11294,473010
  const T14 v14_;v14_11295,473028
  const T15 v15_;v15_11296,473046
  const T16 v16_;v16_11297,473064
  const T17 v17_;v17_11298,473082
  const T18 v18_;v18_11299,473100
  const T19 v19_;v19_11300,473118
  const T20 v20_;v20_11301,473136
  const T21 v21_;v21_11302,473154
class ValueArray22 {ValueArray2211310,473501
  ValueArray22(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2211312,473531
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11320,474009
  const T1 v1_;v1_11330,474344
  const T2 v2_;v2_11331,474360
  const T3 v3_;v3_11332,474376
  const T4 v4_;v4_11333,474392
  const T5 v5_;v5_11334,474408
  const T6 v6_;v6_11335,474424
  const T7 v7_;v7_11336,474440
  const T8 v8_;v8_11337,474456
  const T9 v9_;v9_11338,474472
  const T10 v10_;v10_11339,474488
  const T11 v11_;v11_11340,474506
  const T12 v12_;v12_11341,474524
  const T13 v13_;v13_11342,474542
  const T14 v14_;v14_11343,474560
  const T15 v15_;v15_11344,474578
  const T16 v16_;v16_11345,474596
  const T17 v17_;v17_11346,474614
  const T18 v18_;v18_11347,474632
  const T19 v19_;v19_11348,474650
  const T20 v20_;v20_11349,474668
  const T21 v21_;v21_11350,474686
  const T22 v22_;v22_11351,474704
class ValueArray23 {ValueArray2311359,475065
  ValueArray23(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2311361,475095
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11370,475599
  const T1 v1_;v1_11381,475948
  const T2 v2_;v2_11382,475964
  const T3 v3_;v3_11383,475980
  const T4 v4_;v4_11384,475996
  const T5 v5_;v5_11385,476012
  const T6 v6_;v6_11386,476028
  const T7 v7_;v7_11387,476044
  const T8 v8_;v8_11388,476060
  const T9 v9_;v9_11389,476076
  const T10 v10_;v10_11390,476092
  const T11 v11_;v11_11391,476110
  const T12 v12_;v12_11392,476128
  const T13 v13_;v13_11393,476146
  const T14 v14_;v14_11394,476164
  const T15 v15_;v15_11395,476182
  const T16 v16_;v16_11396,476200
  const T17 v17_;v17_11397,476218
  const T18 v18_;v18_11398,476236
  const T19 v19_;v19_11399,476254
  const T20 v20_;v20_11400,476272
  const T21 v21_;v21_11401,476290
  const T22 v22_;v22_11402,476308
  const T23 v23_;v23_11403,476326
class ValueArray24 {ValueArray2411411,476701
  ValueArray24(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2411413,476731
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11422,477255
  const T1 v1_;v1_11433,477610
  const T2 v2_;v2_11434,477626
  const T3 v3_;v3_11435,477642
  const T4 v4_;v4_11436,477658
  const T5 v5_;v5_11437,477674
  const T6 v6_;v6_11438,477690
  const T7 v7_;v7_11439,477706
  const T8 v8_;v8_11440,477722
  const T9 v9_;v9_11441,477738
  const T10 v10_;v10_11442,477754
  const T11 v11_;v11_11443,477772
  const T12 v12_;v12_11444,477790
  const T13 v13_;v13_11445,477808
  const T14 v14_;v14_11446,477826
  const T15 v15_;v15_11447,477844
  const T16 v16_;v16_11448,477862
  const T17 v17_;v17_11449,477880
  const T18 v18_;v18_11450,477898
  const T19 v19_;v19_11451,477916
  const T20 v20_;v20_11452,477934
  const T21 v21_;v21_11453,477952
  const T22 v22_;v22_11454,477970
  const T23 v23_;v23_11455,477988
  const T24 v24_;v24_11456,478006
class ValueArray25 {ValueArray2511464,478395
  ValueArray25(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2511466,478425
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11475,478969
  const T1 v1_;v1_11486,479330
  const T2 v2_;v2_11487,479346
  const T3 v3_;v3_11488,479362
  const T4 v4_;v4_11489,479378
  const T5 v5_;v5_11490,479394
  const T6 v6_;v6_11491,479410
  const T7 v7_;v7_11492,479426
  const T8 v8_;v8_11493,479442
  const T9 v9_;v9_11494,479458
  const T10 v10_;v10_11495,479474
  const T11 v11_;v11_11496,479492
  const T12 v12_;v12_11497,479510
  const T13 v13_;v13_11498,479528
  const T14 v14_;v14_11499,479546
  const T15 v15_;v15_11500,479564
  const T16 v16_;v16_11501,479582
  const T17 v17_;v17_11502,479600
  const T18 v18_;v18_11503,479618
  const T19 v19_;v19_11504,479636
  const T20 v20_;v20_11505,479654
  const T21 v21_;v21_11506,479672
  const T22 v22_;v22_11507,479690
  const T23 v23_;v23_11508,479708
  const T24 v24_;v24_11509,479726
  const T25 v25_;v25_11510,479744
class ValueArray26 {ValueArray2611519,480151
  ValueArray26(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2611521,480181
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11530,480745
  const T1 v1_;v1_11541,481112
  const T2 v2_;v2_11542,481128
  const T3 v3_;v3_11543,481144
  const T4 v4_;v4_11544,481160
  const T5 v5_;v5_11545,481176
  const T6 v6_;v6_11546,481192
  const T7 v7_;v7_11547,481208
  const T8 v8_;v8_11548,481224
  const T9 v9_;v9_11549,481240
  const T10 v10_;v10_11550,481256
  const T11 v11_;v11_11551,481274
  const T12 v12_;v12_11552,481292
  const T13 v13_;v13_11553,481310
  const T14 v14_;v14_11554,481328
  const T15 v15_;v15_11555,481346
  const T16 v16_;v16_11556,481364
  const T17 v17_;v17_11557,481382
  const T18 v18_;v18_11558,481400
  const T19 v19_;v19_11559,481418
  const T20 v20_;v20_11560,481436
  const T21 v21_;v21_11561,481454
  const T22 v22_;v22_11562,481472
  const T23 v23_;v23_11563,481490
  const T24 v24_;v24_11564,481508
  const T25 v25_;v25_11565,481526
  const T26 v26_;v26_11566,481544
class ValueArray27 {ValueArray2711575,481965
  ValueArray27(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2711577,481995
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11587,482585
  const T1 v1_;v1_11598,482958
  const T2 v2_;v2_11599,482974
  const T3 v3_;v3_11600,482990
  const T4 v4_;v4_11601,483006
  const T5 v5_;v5_11602,483022
  const T6 v6_;v6_11603,483038
  const T7 v7_;v7_11604,483054
  const T8 v8_;v8_11605,483070
  const T9 v9_;v9_11606,483086
  const T10 v10_;v10_11607,483102
  const T11 v11_;v11_11608,483120
  const T12 v12_;v12_11609,483138
  const T13 v13_;v13_11610,483156
  const T14 v14_;v14_11611,483174
  const T15 v15_;v15_11612,483192
  const T16 v16_;v16_11613,483210
  const T17 v17_;v17_11614,483228
  const T18 v18_;v18_11615,483246
  const T19 v19_;v19_11616,483264
  const T20 v20_;v20_11617,483282
  const T21 v21_;v21_11618,483300
  const T22 v22_;v22_11619,483318
  const T23 v23_;v23_11620,483336
  const T24 v24_;v24_11621,483354
  const T25 v25_;v25_11622,483372
  const T26 v26_;v26_11623,483390
  const T27 v27_;v27_11624,483408
class ValueArray28 {ValueArray2811633,483843
  ValueArray28(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2811635,483873
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11645,484483
  const T1 v1_;v1_11656,484862
  const T2 v2_;v2_11657,484878
  const T3 v3_;v3_11658,484894
  const T4 v4_;v4_11659,484910
  const T5 v5_;v5_11660,484926
  const T6 v6_;v6_11661,484942
  const T7 v7_;v7_11662,484958
  const T8 v8_;v8_11663,484974
  const T9 v9_;v9_11664,484990
  const T10 v10_;v10_11665,485006
  const T11 v11_;v11_11666,485024
  const T12 v12_;v12_11667,485042
  const T13 v13_;v13_11668,485060
  const T14 v14_;v14_11669,485078
  const T15 v15_;v15_11670,485096
  const T16 v16_;v16_11671,485114
  const T17 v17_;v17_11672,485132
  const T18 v18_;v18_11673,485150
  const T19 v19_;v19_11674,485168
  const T20 v20_;v20_11675,485186
  const T21 v21_;v21_11676,485204
  const T22 v22_;v22_11677,485222
  const T23 v23_;v23_11678,485240
  const T24 v24_;v24_11679,485258
  const T25 v25_;v25_11680,485276
  const T26 v26_;v26_11681,485294
  const T27 v27_;v27_11682,485312
  const T28 v28_;v28_11683,485330
class ValueArray29 {ValueArray2911692,485779
  ValueArray29(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray2911694,485809
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11704,486439
  const T1 v1_;v1_11715,486824
  const T2 v2_;v2_11716,486840
  const T3 v3_;v3_11717,486856
  const T4 v4_;v4_11718,486872
  const T5 v5_;v5_11719,486888
  const T6 v6_;v6_11720,486904
  const T7 v7_;v7_11721,486920
  const T8 v8_;v8_11722,486936
  const T9 v9_;v9_11723,486952
  const T10 v10_;v10_11724,486968
  const T11 v11_;v11_11725,486986
  const T12 v12_;v12_11726,487004
  const T13 v13_;v13_11727,487022
  const T14 v14_;v14_11728,487040
  const T15 v15_;v15_11729,487058
  const T16 v16_;v16_11730,487076
  const T17 v17_;v17_11731,487094
  const T18 v18_;v18_11732,487112
  const T19 v19_;v19_11733,487130
  const T20 v20_;v20_11734,487148
  const T21 v21_;v21_11735,487166
  const T22 v22_;v22_11736,487184
  const T23 v23_;v23_11737,487202
  const T24 v24_;v24_11738,487220
  const T25 v25_;v25_11739,487238
  const T26 v26_;v26_11740,487256
  const T27 v27_;v27_11741,487274
  const T28 v28_;v28_11742,487292
  const T29 v29_;v29_11743,487310
class ValueArray30 {ValueArray3011752,487773
  ValueArray30(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3011754,487803
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11765,488459
  const T1 v1_;v1_11776,488850
  const T2 v2_;v2_11777,488866
  const T3 v3_;v3_11778,488882
  const T4 v4_;v4_11779,488898
  const T5 v5_;v5_11780,488914
  const T6 v6_;v6_11781,488930
  const T7 v7_;v7_11782,488946
  const T8 v8_;v8_11783,488962
  const T9 v9_;v9_11784,488978
  const T10 v10_;v10_11785,488994
  const T11 v11_;v11_11786,489012
  const T12 v12_;v12_11787,489030
  const T13 v13_;v13_11788,489048
  const T14 v14_;v14_11789,489066
  const T15 v15_;v15_11790,489084
  const T16 v16_;v16_11791,489102
  const T17 v17_;v17_11792,489120
  const T18 v18_;v18_11793,489138
  const T19 v19_;v19_11794,489156
  const T20 v20_;v20_11795,489174
  const T21 v21_;v21_11796,489192
  const T22 v22_;v22_11797,489210
  const T23 v23_;v23_11798,489228
  const T24 v24_;v24_11799,489246
  const T25 v25_;v25_11800,489264
  const T26 v26_;v26_11801,489282
  const T27 v27_;v27_11802,489300
  const T28 v28_;v28_11803,489318
  const T29 v29_;v29_11804,489336
  const T30 v30_;v30_11805,489354
class ValueArray31 {ValueArray3111815,489835
  ValueArray31(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3111817,489865
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11828,490541
  const T1 v1_;v1_11839,490938
  const T2 v2_;v2_11840,490954
  const T3 v3_;v3_11841,490970
  const T4 v4_;v4_11842,490986
  const T5 v5_;v5_11843,491002
  const T6 v6_;v6_11844,491018
  const T7 v7_;v7_11845,491034
  const T8 v8_;v8_11846,491050
  const T9 v9_;v9_11847,491066
  const T10 v10_;v10_11848,491082
  const T11 v11_;v11_11849,491100
  const T12 v12_;v12_11850,491118
  const T13 v13_;v13_11851,491136
  const T14 v14_;v14_11852,491154
  const T15 v15_;v15_11853,491172
  const T16 v16_;v16_11854,491190
  const T17 v17_;v17_11855,491208
  const T18 v18_;v18_11856,491226
  const T19 v19_;v19_11857,491244
  const T20 v20_;v20_11858,491262
  const T21 v21_;v21_11859,491280
  const T22 v22_;v22_11860,491298
  const T23 v23_;v23_11861,491316
  const T24 v24_;v24_11862,491334
  const T25 v25_;v25_11863,491352
  const T26 v26_;v26_11864,491370
  const T27 v27_;v27_11865,491388
  const T28 v28_;v28_11866,491406
  const T29 v29_;v29_11867,491424
  const T30 v30_;v30_11868,491442
  const T31 v31_;v31_11869,491460
class ValueArray32 {ValueArray3211879,491955
  ValueArray32(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3211881,491985
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11892,492681
  const T1 v1_;v1_11903,493084
  const T2 v2_;v2_11904,493100
  const T3 v3_;v3_11905,493116
  const T4 v4_;v4_11906,493132
  const T5 v5_;v5_11907,493148
  const T6 v6_;v6_11908,493164
  const T7 v7_;v7_11909,493180
  const T8 v8_;v8_11910,493196
  const T9 v9_;v9_11911,493212
  const T10 v10_;v10_11912,493228
  const T11 v11_;v11_11913,493246
  const T12 v12_;v12_11914,493264
  const T13 v13_;v13_11915,493282
  const T14 v14_;v14_11916,493300
  const T15 v15_;v15_11917,493318
  const T16 v16_;v16_11918,493336
  const T17 v17_;v17_11919,493354
  const T18 v18_;v18_11920,493372
  const T19 v19_;v19_11921,493390
  const T20 v20_;v20_11922,493408
  const T21 v21_;v21_11923,493426
  const T22 v22_;v22_11924,493444
  const T23 v23_;v23_11925,493462
  const T24 v24_;v24_11926,493480
  const T25 v25_;v25_11927,493498
  const T26 v26_;v26_11928,493516
  const T27 v27_;v27_11929,493534
  const T28 v28_;v28_11930,493552
  const T29 v29_;v29_11931,493570
  const T30 v30_;v30_11932,493588
  const T31 v31_;v31_11933,493606
  const T32 v32_;v32_11934,493624
class ValueArray33 {ValueArray3311944,494133
  ValueArray33(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3311946,494163
  operator ParamGenerator<T>() const {operator ParamGenerator<T>11958,494885
  const T1 v1_;v1_11969,495294
  const T2 v2_;v2_11970,495310
  const T3 v3_;v3_11971,495326
  const T4 v4_;v4_11972,495342
  const T5 v5_;v5_11973,495358
  const T6 v6_;v6_11974,495374
  const T7 v7_;v7_11975,495390
  const T8 v8_;v8_11976,495406
  const T9 v9_;v9_11977,495422
  const T10 v10_;v10_11978,495438
  const T11 v11_;v11_11979,495456
  const T12 v12_;v12_11980,495474
  const T13 v13_;v13_11981,495492
  const T14 v14_;v14_11982,495510
  const T15 v15_;v15_11983,495528
  const T16 v16_;v16_11984,495546
  const T17 v17_;v17_11985,495564
  const T18 v18_;v18_11986,495582
  const T19 v19_;v19_11987,495600
  const T20 v20_;v20_11988,495618
  const T21 v21_;v21_11989,495636
  const T22 v22_;v22_11990,495654
  const T23 v23_;v23_11991,495672
  const T24 v24_;v24_11992,495690
  const T25 v25_;v25_11993,495708
  const T26 v26_;v26_11994,495726
  const T27 v27_;v27_11995,495744
  const T28 v28_;v28_11996,495762
  const T29 v29_;v29_11997,495780
  const T30 v30_;v30_11998,495798
  const T31 v31_;v31_11999,495816
  const T32 v32_;v32_12000,495834
  const T33 v33_;v33_12001,495852
class ValueArray34 {ValueArray3412011,496375
  ValueArray34(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3412013,496405
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12025,497147
  const T1 v1_;v1_12036,497562
  const T2 v2_;v2_12037,497578
  const T3 v3_;v3_12038,497594
  const T4 v4_;v4_12039,497610
  const T5 v5_;v5_12040,497626
  const T6 v6_;v6_12041,497642
  const T7 v7_;v7_12042,497658
  const T8 v8_;v8_12043,497674
  const T9 v9_;v9_12044,497690
  const T10 v10_;v10_12045,497706
  const T11 v11_;v11_12046,497724
  const T12 v12_;v12_12047,497742
  const T13 v13_;v13_12048,497760
  const T14 v14_;v14_12049,497778
  const T15 v15_;v15_12050,497796
  const T16 v16_;v16_12051,497814
  const T17 v17_;v17_12052,497832
  const T18 v18_;v18_12053,497850
  const T19 v19_;v19_12054,497868
  const T20 v20_;v20_12055,497886
  const T21 v21_;v21_12056,497904
  const T22 v22_;v22_12057,497922
  const T23 v23_;v23_12058,497940
  const T24 v24_;v24_12059,497958
  const T25 v25_;v25_12060,497976
  const T26 v26_;v26_12061,497994
  const T27 v27_;v27_12062,498012
  const T28 v28_;v28_12063,498030
  const T29 v29_;v29_12064,498048
  const T30 v30_;v30_12065,498066
  const T31 v31_;v31_12066,498084
  const T32 v32_;v32_12067,498102
  const T33 v33_;v33_12068,498120
  const T34 v34_;v34_12069,498138
class ValueArray35 {ValueArray3512079,498675
  ValueArray35(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3512081,498705
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12093,499467
  const T1 v1_;v1_12105,499896
  const T2 v2_;v2_12106,499912
  const T3 v3_;v3_12107,499928
  const T4 v4_;v4_12108,499944
  const T5 v5_;v5_12109,499960
  const T6 v6_;v6_12110,499976
  const T7 v7_;v7_12111,499992
  const T8 v8_;v8_12112,500008
  const T9 v9_;v9_12113,500024
  const T10 v10_;v10_12114,500040
  const T11 v11_;v11_12115,500058
  const T12 v12_;v12_12116,500076
  const T13 v13_;v13_12117,500094
  const T14 v14_;v14_12118,500112
  const T15 v15_;v15_12119,500130
  const T16 v16_;v16_12120,500148
  const T17 v17_;v17_12121,500166
  const T18 v18_;v18_12122,500184
  const T19 v19_;v19_12123,500202
  const T20 v20_;v20_12124,500220
  const T21 v21_;v21_12125,500238
  const T22 v22_;v22_12126,500256
  const T23 v23_;v23_12127,500274
  const T24 v24_;v24_12128,500292
  const T25 v25_;v25_12129,500310
  const T26 v26_;v26_12130,500328
  const T27 v27_;v27_12131,500346
  const T28 v28_;v28_12132,500364
  const T29 v29_;v29_12133,500382
  const T30 v30_;v30_12134,500400
  const T31 v31_;v31_12135,500418
  const T32 v32_;v32_12136,500436
  const T33 v33_;v33_12137,500454
  const T34 v34_;v34_12138,500472
  const T35 v35_;v35_12139,500490
class ValueArray36 {ValueArray3612150,501045
  ValueArray36(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3612152,501075
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12164,501857
  const T1 v1_;v1_12176,502292
  const T2 v2_;v2_12177,502308
  const T3 v3_;v3_12178,502324
  const T4 v4_;v4_12179,502340
  const T5 v5_;v5_12180,502356
  const T6 v6_;v6_12181,502372
  const T7 v7_;v7_12182,502388
  const T8 v8_;v8_12183,502404
  const T9 v9_;v9_12184,502420
  const T10 v10_;v10_12185,502436
  const T11 v11_;v11_12186,502454
  const T12 v12_;v12_12187,502472
  const T13 v13_;v13_12188,502490
  const T14 v14_;v14_12189,502508
  const T15 v15_;v15_12190,502526
  const T16 v16_;v16_12191,502544
  const T17 v17_;v17_12192,502562
  const T18 v18_;v18_12193,502580
  const T19 v19_;v19_12194,502598
  const T20 v20_;v20_12195,502616
  const T21 v21_;v21_12196,502634
  const T22 v22_;v22_12197,502652
  const T23 v23_;v23_12198,502670
  const T24 v24_;v24_12199,502688
  const T25 v25_;v25_12200,502706
  const T26 v26_;v26_12201,502724
  const T27 v27_;v27_12202,502742
  const T28 v28_;v28_12203,502760
  const T29 v29_;v29_12204,502778
  const T30 v30_;v30_12205,502796
  const T31 v31_;v31_12206,502814
  const T32 v32_;v32_12207,502832
  const T33 v33_;v33_12208,502850
  const T34 v34_;v34_12209,502868
  const T35 v35_;v35_12210,502886
  const T36 v36_;v36_12211,502904
class ValueArray37 {ValueArray3712222,503473
  ValueArray37(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3712224,503503
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12237,504311
  const T1 v1_;v1_12249,504752
  const T2 v2_;v2_12250,504768
  const T3 v3_;v3_12251,504784
  const T4 v4_;v4_12252,504800
  const T5 v5_;v5_12253,504816
  const T6 v6_;v6_12254,504832
  const T7 v7_;v7_12255,504848
  const T8 v8_;v8_12256,504864
  const T9 v9_;v9_12257,504880
  const T10 v10_;v10_12258,504896
  const T11 v11_;v11_12259,504914
  const T12 v12_;v12_12260,504932
  const T13 v13_;v13_12261,504950
  const T14 v14_;v14_12262,504968
  const T15 v15_;v15_12263,504986
  const T16 v16_;v16_12264,505004
  const T17 v17_;v17_12265,505022
  const T18 v18_;v18_12266,505040
  const T19 v19_;v19_12267,505058
  const T20 v20_;v20_12268,505076
  const T21 v21_;v21_12269,505094
  const T22 v22_;v22_12270,505112
  const T23 v23_;v23_12271,505130
  const T24 v24_;v24_12272,505148
  const T25 v25_;v25_12273,505166
  const T26 v26_;v26_12274,505184
  const T27 v27_;v27_12275,505202
  const T28 v28_;v28_12276,505220
  const T29 v29_;v29_12277,505238
  const T30 v30_;v30_12278,505256
  const T31 v31_;v31_12279,505274
  const T32 v32_;v32_12280,505292
  const T33 v33_;v33_12281,505310
  const T34 v34_;v34_12282,505328
  const T35 v35_;v35_12283,505346
  const T36 v36_;v36_12284,505364
  const T37 v37_;v37_12285,505382
class ValueArray38 {ValueArray3812296,505965
  ValueArray38(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3812298,505995
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12311,506823
  const T1 v1_;v1_12323,507270
  const T2 v2_;v2_12324,507286
  const T3 v3_;v3_12325,507302
  const T4 v4_;v4_12326,507318
  const T5 v5_;v5_12327,507334
  const T6 v6_;v6_12328,507350
  const T7 v7_;v7_12329,507366
  const T8 v8_;v8_12330,507382
  const T9 v9_;v9_12331,507398
  const T10 v10_;v10_12332,507414
  const T11 v11_;v11_12333,507432
  const T12 v12_;v12_12334,507450
  const T13 v13_;v13_12335,507468
  const T14 v14_;v14_12336,507486
  const T15 v15_;v15_12337,507504
  const T16 v16_;v16_12338,507522
  const T17 v17_;v17_12339,507540
  const T18 v18_;v18_12340,507558
  const T19 v19_;v19_12341,507576
  const T20 v20_;v20_12342,507594
  const T21 v21_;v21_12343,507612
  const T22 v22_;v22_12344,507630
  const T23 v23_;v23_12345,507648
  const T24 v24_;v24_12346,507666
  const T25 v25_;v25_12347,507684
  const T26 v26_;v26_12348,507702
  const T27 v27_;v27_12349,507720
  const T28 v28_;v28_12350,507738
  const T29 v29_;v29_12351,507756
  const T30 v30_;v30_12352,507774
  const T31 v31_;v31_12353,507792
  const T32 v32_;v32_12354,507810
  const T33 v33_;v33_12355,507828
  const T34 v34_;v34_12356,507846
  const T35 v35_;v35_12357,507864
  const T36 v36_;v36_12358,507882
  const T37 v37_;v37_12359,507900
  const T38 v38_;v38_12360,507918
class ValueArray39 {ValueArray3912371,508515
  ValueArray39(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray3912373,508545
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12386,509393
  const T1 v1_;v1_12398,509846
  const T2 v2_;v2_12399,509862
  const T3 v3_;v3_12400,509878
  const T4 v4_;v4_12401,509894
  const T5 v5_;v5_12402,509910
  const T6 v6_;v6_12403,509926
  const T7 v7_;v7_12404,509942
  const T8 v8_;v8_12405,509958
  const T9 v9_;v9_12406,509974
  const T10 v10_;v10_12407,509990
  const T11 v11_;v11_12408,510008
  const T12 v12_;v12_12409,510026
  const T13 v13_;v13_12410,510044
  const T14 v14_;v14_12411,510062
  const T15 v15_;v15_12412,510080
  const T16 v16_;v16_12413,510098
  const T17 v17_;v17_12414,510116
  const T18 v18_;v18_12415,510134
  const T19 v19_;v19_12416,510152
  const T20 v20_;v20_12417,510170
  const T21 v21_;v21_12418,510188
  const T22 v22_;v22_12419,510206
  const T23 v23_;v23_12420,510224
  const T24 v24_;v24_12421,510242
  const T25 v25_;v25_12422,510260
  const T26 v26_;v26_12423,510278
  const T27 v27_;v27_12424,510296
  const T28 v28_;v28_12425,510314
  const T29 v29_;v29_12426,510332
  const T30 v30_;v30_12427,510350
  const T31 v31_;v31_12428,510368
  const T32 v32_;v32_12429,510386
  const T33 v33_;v33_12430,510404
  const T34 v34_;v34_12431,510422
  const T35 v35_;v35_12432,510440
  const T36 v36_;v36_12433,510458
  const T37 v37_;v37_12434,510476
  const T38 v38_;v38_12435,510494
  const T39 v39_;v39_12436,510512
class ValueArray40 {ValueArray4012447,511123
  ValueArray40(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4012449,511153
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12463,512027
  const T1 v1_;v1_12475,512486
  const T2 v2_;v2_12476,512502
  const T3 v3_;v3_12477,512518
  const T4 v4_;v4_12478,512534
  const T5 v5_;v5_12479,512550
  const T6 v6_;v6_12480,512566
  const T7 v7_;v7_12481,512582
  const T8 v8_;v8_12482,512598
  const T9 v9_;v9_12483,512614
  const T10 v10_;v10_12484,512630
  const T11 v11_;v11_12485,512648
  const T12 v12_;v12_12486,512666
  const T13 v13_;v13_12487,512684
  const T14 v14_;v14_12488,512702
  const T15 v15_;v15_12489,512720
  const T16 v16_;v16_12490,512738
  const T17 v17_;v17_12491,512756
  const T18 v18_;v18_12492,512774
  const T19 v19_;v19_12493,512792
  const T20 v20_;v20_12494,512810
  const T21 v21_;v21_12495,512828
  const T22 v22_;v22_12496,512846
  const T23 v23_;v23_12497,512864
  const T24 v24_;v24_12498,512882
  const T25 v25_;v25_12499,512900
  const T26 v26_;v26_12500,512918
  const T27 v27_;v27_12501,512936
  const T28 v28_;v28_12502,512954
  const T29 v29_;v29_12503,512972
  const T30 v30_;v30_12504,512990
  const T31 v31_;v31_12505,513008
  const T32 v32_;v32_12506,513026
  const T33 v33_;v33_12507,513044
  const T34 v34_;v34_12508,513062
  const T35 v35_;v35_12509,513080
  const T36 v36_;v36_12510,513098
  const T37 v37_;v37_12511,513116
  const T38 v38_;v38_12512,513134
  const T39 v39_;v39_12513,513152
  const T40 v40_;v40_12514,513170
class ValueArray41 {ValueArray4112526,513799
  ValueArray41(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4112528,513829
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12542,514723
  const T1 v1_;v1_12554,515188
  const T2 v2_;v2_12555,515204
  const T3 v3_;v3_12556,515220
  const T4 v4_;v4_12557,515236
  const T5 v5_;v5_12558,515252
  const T6 v6_;v6_12559,515268
  const T7 v7_;v7_12560,515284
  const T8 v8_;v8_12561,515300
  const T9 v9_;v9_12562,515316
  const T10 v10_;v10_12563,515332
  const T11 v11_;v11_12564,515350
  const T12 v12_;v12_12565,515368
  const T13 v13_;v13_12566,515386
  const T14 v14_;v14_12567,515404
  const T15 v15_;v15_12568,515422
  const T16 v16_;v16_12569,515440
  const T17 v17_;v17_12570,515458
  const T18 v18_;v18_12571,515476
  const T19 v19_;v19_12572,515494
  const T20 v20_;v20_12573,515512
  const T21 v21_;v21_12574,515530
  const T22 v22_;v22_12575,515548
  const T23 v23_;v23_12576,515566
  const T24 v24_;v24_12577,515584
  const T25 v25_;v25_12578,515602
  const T26 v26_;v26_12579,515620
  const T27 v27_;v27_12580,515638
  const T28 v28_;v28_12581,515656
  const T29 v29_;v29_12582,515674
  const T30 v30_;v30_12583,515692
  const T31 v31_;v31_12584,515710
  const T32 v32_;v32_12585,515728
  const T33 v33_;v33_12586,515746
  const T34 v34_;v34_12587,515764
  const T35 v35_;v35_12588,515782
  const T36 v36_;v36_12589,515800
  const T37 v37_;v37_12590,515818
  const T38 v38_;v38_12591,515836
  const T39 v39_;v39_12592,515854
  const T40 v40_;v40_12593,515872
  const T41 v41_;v41_12594,515890
class ValueArray42 {ValueArray4212606,516533
  ValueArray42(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4212608,516563
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12622,517477
  const T1 v1_;v1_12634,517948
  const T2 v2_;v2_12635,517964
  const T3 v3_;v3_12636,517980
  const T4 v4_;v4_12637,517996
  const T5 v5_;v5_12638,518012
  const T6 v6_;v6_12639,518028
  const T7 v7_;v7_12640,518044
  const T8 v8_;v8_12641,518060
  const T9 v9_;v9_12642,518076
  const T10 v10_;v10_12643,518092
  const T11 v11_;v11_12644,518110
  const T12 v12_;v12_12645,518128
  const T13 v13_;v13_12646,518146
  const T14 v14_;v14_12647,518164
  const T15 v15_;v15_12648,518182
  const T16 v16_;v16_12649,518200
  const T17 v17_;v17_12650,518218
  const T18 v18_;v18_12651,518236
  const T19 v19_;v19_12652,518254
  const T20 v20_;v20_12653,518272
  const T21 v21_;v21_12654,518290
  const T22 v22_;v22_12655,518308
  const T23 v23_;v23_12656,518326
  const T24 v24_;v24_12657,518344
  const T25 v25_;v25_12658,518362
  const T26 v26_;v26_12659,518380
  const T27 v27_;v27_12660,518398
  const T28 v28_;v28_12661,518416
  const T29 v29_;v29_12662,518434
  const T30 v30_;v30_12663,518452
  const T31 v31_;v31_12664,518470
  const T32 v32_;v32_12665,518488
  const T33 v33_;v33_12666,518506
  const T34 v34_;v34_12667,518524
  const T35 v35_;v35_12668,518542
  const T36 v36_;v36_12669,518560
  const T37 v37_;v37_12670,518578
  const T38 v38_;v38_12671,518596
  const T39 v39_;v39_12672,518614
  const T40 v40_;v40_12673,518632
  const T41 v41_;v41_12674,518650
  const T42 v42_;v42_12675,518668
class ValueArray43 {ValueArray4312687,519325
  ValueArray43(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4312689,519355
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12703,520289
  const T1 v1_;v1_12715,520766
  const T2 v2_;v2_12716,520782
  const T3 v3_;v3_12717,520798
  const T4 v4_;v4_12718,520814
  const T5 v5_;v5_12719,520830
  const T6 v6_;v6_12720,520846
  const T7 v7_;v7_12721,520862
  const T8 v8_;v8_12722,520878
  const T9 v9_;v9_12723,520894
  const T10 v10_;v10_12724,520910
  const T11 v11_;v11_12725,520928
  const T12 v12_;v12_12726,520946
  const T13 v13_;v13_12727,520964
  const T14 v14_;v14_12728,520982
  const T15 v15_;v15_12729,521000
  const T16 v16_;v16_12730,521018
  const T17 v17_;v17_12731,521036
  const T18 v18_;v18_12732,521054
  const T19 v19_;v19_12733,521072
  const T20 v20_;v20_12734,521090
  const T21 v21_;v21_12735,521108
  const T22 v22_;v22_12736,521126
  const T23 v23_;v23_12737,521144
  const T24 v24_;v24_12738,521162
  const T25 v25_;v25_12739,521180
  const T26 v26_;v26_12740,521198
  const T27 v27_;v27_12741,521216
  const T28 v28_;v28_12742,521234
  const T29 v29_;v29_12743,521252
  const T30 v30_;v30_12744,521270
  const T31 v31_;v31_12745,521288
  const T32 v32_;v32_12746,521306
  const T33 v33_;v33_12747,521324
  const T34 v34_;v34_12748,521342
  const T35 v35_;v35_12749,521360
  const T36 v36_;v36_12750,521378
  const T37 v37_;v37_12751,521396
  const T38 v38_;v38_12752,521414
  const T39 v39_;v39_12753,521432
  const T40 v40_;v40_12754,521450
  const T41 v41_;v41_12755,521468
  const T42 v42_;v42_12756,521486
  const T43 v43_;v43_12757,521504
class ValueArray44 {ValueArray4412769,522175
  ValueArray44(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4412771,522205
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12786,523165
  const T1 v1_;v1_12798,523648
  const T2 v2_;v2_12799,523664
  const T3 v3_;v3_12800,523680
  const T4 v4_;v4_12801,523696
  const T5 v5_;v5_12802,523712
  const T6 v6_;v6_12803,523728
  const T7 v7_;v7_12804,523744
  const T8 v8_;v8_12805,523760
  const T9 v9_;v9_12806,523776
  const T10 v10_;v10_12807,523792
  const T11 v11_;v11_12808,523810
  const T12 v12_;v12_12809,523828
  const T13 v13_;v13_12810,523846
  const T14 v14_;v14_12811,523864
  const T15 v15_;v15_12812,523882
  const T16 v16_;v16_12813,523900
  const T17 v17_;v17_12814,523918
  const T18 v18_;v18_12815,523936
  const T19 v19_;v19_12816,523954
  const T20 v20_;v20_12817,523972
  const T21 v21_;v21_12818,523990
  const T22 v22_;v22_12819,524008
  const T23 v23_;v23_12820,524026
  const T24 v24_;v24_12821,524044
  const T25 v25_;v25_12822,524062
  const T26 v26_;v26_12823,524080
  const T27 v27_;v27_12824,524098
  const T28 v28_;v28_12825,524116
  const T29 v29_;v29_12826,524134
  const T30 v30_;v30_12827,524152
  const T31 v31_;v31_12828,524170
  const T32 v32_;v32_12829,524188
  const T33 v33_;v33_12830,524206
  const T34 v34_;v34_12831,524224
  const T35 v35_;v35_12832,524242
  const T36 v36_;v36_12833,524260
  const T37 v37_;v37_12834,524278
  const T38 v38_;v38_12835,524296
  const T39 v39_;v39_12836,524314
  const T40 v40_;v40_12837,524332
  const T41 v41_;v41_12838,524350
  const T42 v42_;v42_12839,524368
  const T43 v43_;v43_12840,524386
  const T44 v44_;v44_12841,524404
class ValueArray45 {ValueArray4512853,525089
  ValueArray45(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4512855,525119
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12870,526099
  const T1 v1_;v1_12882,526588
  const T2 v2_;v2_12883,526604
  const T3 v3_;v3_12884,526620
  const T4 v4_;v4_12885,526636
  const T5 v5_;v5_12886,526652
  const T6 v6_;v6_12887,526668
  const T7 v7_;v7_12888,526684
  const T8 v8_;v8_12889,526700
  const T9 v9_;v9_12890,526716
  const T10 v10_;v10_12891,526732
  const T11 v11_;v11_12892,526750
  const T12 v12_;v12_12893,526768
  const T13 v13_;v13_12894,526786
  const T14 v14_;v14_12895,526804
  const T15 v15_;v15_12896,526822
  const T16 v16_;v16_12897,526840
  const T17 v17_;v17_12898,526858
  const T18 v18_;v18_12899,526876
  const T19 v19_;v19_12900,526894
  const T20 v20_;v20_12901,526912
  const T21 v21_;v21_12902,526930
  const T22 v22_;v22_12903,526948
  const T23 v23_;v23_12904,526966
  const T24 v24_;v24_12905,526984
  const T25 v25_;v25_12906,527002
  const T26 v26_;v26_12907,527020
  const T27 v27_;v27_12908,527038
  const T28 v28_;v28_12909,527056
  const T29 v29_;v29_12910,527074
  const T30 v30_;v30_12911,527092
  const T31 v31_;v31_12912,527110
  const T32 v32_;v32_12913,527128
  const T33 v33_;v33_12914,527146
  const T34 v34_;v34_12915,527164
  const T35 v35_;v35_12916,527182
  const T36 v36_;v36_12917,527200
  const T37 v37_;v37_12918,527218
  const T38 v38_;v38_12919,527236
  const T39 v39_;v39_12920,527254
  const T40 v40_;v40_12921,527272
  const T41 v41_;v41_12922,527290
  const T42 v42_;v42_12923,527308
  const T43 v43_;v43_12924,527326
  const T44 v44_;v44_12925,527344
  const T45 v45_;v45_12926,527362
class ValueArray46 {ValueArray4612939,528065
  ValueArray46(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4612941,528095
  operator ParamGenerator<T>() const {operator ParamGenerator<T>12956,529095
  const T1 v1_;v1_12968,529590
  const T2 v2_;v2_12969,529606
  const T3 v3_;v3_12970,529622
  const T4 v4_;v4_12971,529638
  const T5 v5_;v5_12972,529654
  const T6 v6_;v6_12973,529670
  const T7 v7_;v7_12974,529686
  const T8 v8_;v8_12975,529702
  const T9 v9_;v9_12976,529718
  const T10 v10_;v10_12977,529734
  const T11 v11_;v11_12978,529752
  const T12 v12_;v12_12979,529770
  const T13 v13_;v13_12980,529788
  const T14 v14_;v14_12981,529806
  const T15 v15_;v15_12982,529824
  const T16 v16_;v16_12983,529842
  const T17 v17_;v17_12984,529860
  const T18 v18_;v18_12985,529878
  const T19 v19_;v19_12986,529896
  const T20 v20_;v20_12987,529914
  const T21 v21_;v21_12988,529932
  const T22 v22_;v22_12989,529950
  const T23 v23_;v23_12990,529968
  const T24 v24_;v24_12991,529986
  const T25 v25_;v25_12992,530004
  const T26 v26_;v26_12993,530022
  const T27 v27_;v27_12994,530040
  const T28 v28_;v28_12995,530058
  const T29 v29_;v29_12996,530076
  const T30 v30_;v30_12997,530094
  const T31 v31_;v31_12998,530112
  const T32 v32_;v32_12999,530130
  const T33 v33_;v33_13000,530148
  const T34 v34_;v34_13001,530166
  const T35 v35_;v35_13002,530184
  const T36 v36_;v36_13003,530202
  const T37 v37_;v37_13004,530220
  const T38 v38_;v38_13005,530238
  const T39 v39_;v39_13006,530256
  const T40 v40_;v40_13007,530274
  const T41 v41_;v41_13008,530292
  const T42 v42_;v42_13009,530310
  const T43 v43_;v43_13010,530328
  const T44 v44_;v44_13011,530346
  const T45 v45_;v45_13012,530364
  const T46 v46_;v46_13013,530382
class ValueArray47 {ValueArray4713026,531099
  ValueArray47(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4713028,531129
  operator ParamGenerator<T>() const {operator ParamGenerator<T>13044,532155
  const T1 v1_;v1_13057,532664
  const T2 v2_;v2_13058,532680
  const T3 v3_;v3_13059,532696
  const T4 v4_;v4_13060,532712
  const T5 v5_;v5_13061,532728
  const T6 v6_;v6_13062,532744
  const T7 v7_;v7_13063,532760
  const T8 v8_;v8_13064,532776
  const T9 v9_;v9_13065,532792
  const T10 v10_;v10_13066,532808
  const T11 v11_;v11_13067,532826
  const T12 v12_;v12_13068,532844
  const T13 v13_;v13_13069,532862
  const T14 v14_;v14_13070,532880
  const T15 v15_;v15_13071,532898
  const T16 v16_;v16_13072,532916
  const T17 v17_;v17_13073,532934
  const T18 v18_;v18_13074,532952
  const T19 v19_;v19_13075,532970
  const T20 v20_;v20_13076,532988
  const T21 v21_;v21_13077,533006
  const T22 v22_;v22_13078,533024
  const T23 v23_;v23_13079,533042
  const T24 v24_;v24_13080,533060
  const T25 v25_;v25_13081,533078
  const T26 v26_;v26_13082,533096
  const T27 v27_;v27_13083,533114
  const T28 v28_;v28_13084,533132
  const T29 v29_;v29_13085,533150
  const T30 v30_;v30_13086,533168
  const T31 v31_;v31_13087,533186
  const T32 v32_;v32_13088,533204
  const T33 v33_;v33_13089,533222
  const T34 v34_;v34_13090,533240
  const T35 v35_;v35_13091,533258
  const T36 v36_;v36_13092,533276
  const T37 v37_;v37_13093,533294
  const T38 v38_;v38_13094,533312
  const T39 v39_;v39_13095,533330
  const T40 v40_;v40_13096,533348
  const T41 v41_;v41_13097,533366
  const T42 v42_;v42_13098,533384
  const T43 v43_;v43_13099,533402
  const T44 v44_;v44_13100,533420
  const T45 v45_;v45_13101,533438
  const T46 v46_;v46_13102,533456
  const T47 v47_;v47_13103,533474
class ValueArray48 {ValueArray4813116,534205
  ValueArray48(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4813118,534235
  operator ParamGenerator<T>() const {operator ParamGenerator<T>13134,535281
  const T1 v1_;v1_13147,535796
  const T2 v2_;v2_13148,535812
  const T3 v3_;v3_13149,535828
  const T4 v4_;v4_13150,535844
  const T5 v5_;v5_13151,535860
  const T6 v6_;v6_13152,535876
  const T7 v7_;v7_13153,535892
  const T8 v8_;v8_13154,535908
  const T9 v9_;v9_13155,535924
  const T10 v10_;v10_13156,535940
  const T11 v11_;v11_13157,535958
  const T12 v12_;v12_13158,535976
  const T13 v13_;v13_13159,535994
  const T14 v14_;v14_13160,536012
  const T15 v15_;v15_13161,536030
  const T16 v16_;v16_13162,536048
  const T17 v17_;v17_13163,536066
  const T18 v18_;v18_13164,536084
  const T19 v19_;v19_13165,536102
  const T20 v20_;v20_13166,536120
  const T21 v21_;v21_13167,536138
  const T22 v22_;v22_13168,536156
  const T23 v23_;v23_13169,536174
  const T24 v24_;v24_13170,536192
  const T25 v25_;v25_13171,536210
  const T26 v26_;v26_13172,536228
  const T27 v27_;v27_13173,536246
  const T28 v28_;v28_13174,536264
  const T29 v29_;v29_13175,536282
  const T30 v30_;v30_13176,536300
  const T31 v31_;v31_13177,536318
  const T32 v32_;v32_13178,536336
  const T33 v33_;v33_13179,536354
  const T34 v34_;v34_13180,536372
  const T35 v35_;v35_13181,536390
  const T36 v36_;v36_13182,536408
  const T37 v37_;v37_13183,536426
  const T38 v38_;v38_13184,536444
  const T39 v39_;v39_13185,536462
  const T40 v40_;v40_13186,536480
  const T41 v41_;v41_13187,536498
  const T42 v42_;v42_13188,536516
  const T43 v43_;v43_13189,536534
  const T44 v44_;v44_13190,536552
  const T45 v45_;v45_13191,536570
  const T46 v46_;v46_13192,536588
  const T47 v47_;v47_13193,536606
  const T48 v48_;v48_13194,536624
class ValueArray49 {ValueArray4913207,537369
  ValueArray49(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray4913209,537399
  operator ParamGenerator<T>() const {operator ParamGenerator<T>13225,538465
  const T1 v1_;v1_13238,538986
  const T2 v2_;v2_13239,539002
  const T3 v3_;v3_13240,539018
  const T4 v4_;v4_13241,539034
  const T5 v5_;v5_13242,539050
  const T6 v6_;v6_13243,539066
  const T7 v7_;v7_13244,539082
  const T8 v8_;v8_13245,539098
  const T9 v9_;v9_13246,539114
  const T10 v10_;v10_13247,539130
  const T11 v11_;v11_13248,539148
  const T12 v12_;v12_13249,539166
  const T13 v13_;v13_13250,539184
  const T14 v14_;v14_13251,539202
  const T15 v15_;v15_13252,539220
  const T16 v16_;v16_13253,539238
  const T17 v17_;v17_13254,539256
  const T18 v18_;v18_13255,539274
  const T19 v19_;v19_13256,539292
  const T20 v20_;v20_13257,539310
  const T21 v21_;v21_13258,539328
  const T22 v22_;v22_13259,539346
  const T23 v23_;v23_13260,539364
  const T24 v24_;v24_13261,539382
  const T25 v25_;v25_13262,539400
  const T26 v26_;v26_13263,539418
  const T27 v27_;v27_13264,539436
  const T28 v28_;v28_13265,539454
  const T29 v29_;v29_13266,539472
  const T30 v30_;v30_13267,539490
  const T31 v31_;v31_13268,539508
  const T32 v32_;v32_13269,539526
  const T33 v33_;v33_13270,539544
  const T34 v34_;v34_13271,539562
  const T35 v35_;v35_13272,539580
  const T36 v36_;v36_13273,539598
  const T37 v37_;v37_13274,539616
  const T38 v38_;v38_13275,539634
  const T39 v39_;v39_13276,539652
  const T40 v40_;v40_13277,539670
  const T41 v41_;v41_13278,539688
  const T42 v42_;v42_13279,539706
  const T43 v43_;v43_13280,539724
  const T44 v44_;v44_13281,539742
  const T45 v45_;v45_13282,539760
  const T46 v46_;v46_13283,539778
  const T47 v47_;v47_13284,539796
  const T48 v48_;v48_13285,539814
  const T49 v49_;v49_13286,539832
class ValueArray50 {ValueArray5013299,540591
  ValueArray50(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,ValueArray5013301,540621
  operator ParamGenerator<T>() const {operator ParamGenerator<T>13317,541707
  const T1 v1_;v1_13330,542234
  const T2 v2_;v2_13331,542250
  const T3 v3_;v3_13332,542266
  const T4 v4_;v4_13333,542282
  const T5 v5_;v5_13334,542298
  const T6 v6_;v6_13335,542314
  const T7 v7_;v7_13336,542330
  const T8 v8_;v8_13337,542346
  const T9 v9_;v9_13338,542362
  const T10 v10_;v10_13339,542378
  const T11 v11_;v11_13340,542396
  const T12 v12_;v12_13341,542414
  const T13 v13_;v13_13342,542432
  const T14 v14_;v14_13343,542450
  const T15 v15_;v15_13344,542468
  const T16 v16_;v16_13345,542486
  const T17 v17_;v17_13346,542504
  const T18 v18_;v18_13347,542522
  const T19 v19_;v19_13348,542540
  const T20 v20_;v20_13349,542558
  const T21 v21_;v21_13350,542576
  const T22 v22_;v22_13351,542594
  const T23 v23_;v23_13352,542612
  const T24 v24_;v24_13353,542630
  const T25 v25_;v25_13354,542648
  const T26 v26_;v26_13355,542666
  const T27 v27_;v27_13356,542684
  const T28 v28_;v28_13357,542702
  const T29 v29_;v29_13358,542720
  const T30 v30_;v30_13359,542738
  const T31 v31_;v31_13360,542756
  const T32 v32_;v32_13361,542774
  const T33 v33_;v33_13362,542792
  const T34 v34_;v34_13363,542810
  const T35 v35_;v35_13364,542828
  const T36 v36_;v36_13365,542846
  const T37 v37_;v37_13366,542864
  const T38 v38_;v38_13367,542882
  const T39 v39_;v39_13368,542900
  const T40 v40_;v40_13369,542918
  const T41 v41_;v41_13370,542936
  const T42 v42_;v42_13371,542954
  const T43 v43_;v43_13372,542972
  const T44 v44_;v44_13373,542990
  const T45 v45_;v45_13374,543008
  const T46 v46_;v46_13375,543026
  const T47 v47_;v47_13376,543044
  const T48 v48_;v48_13377,543062
  const T49 v49_;v49_13378,543080
  const T50 v50_;v50_13379,543098
class CartesianProductGenerator2CartesianProductGenerator213389,543336
  typedef ::std::tr1::tuple<T1, T2> ParamType;ParamType13392,543446
  CartesianProductGenerator2(const ParamGenerator<T1>& g1,CartesianProductGenerator213394,543494
  virtual ~CartesianProductGenerator2() {}~CartesianProductGenerator213397,543617
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin13399,543661
  virtual ParamIteratorInterface<ParamType>* End() const {End13402,543793
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator13407,543930
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator13409,544003
    virtual ~Iterator() {}~Iterator13419,544458
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator13421,544486
    virtual void Advance() {Advance13426,544725
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone13435,544922
    virtual const ParamType* Current() const { return &current_value_; }Current13438,545025
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals13439,545098
    Iterator(const Iterator& other)Iterator13457,545937
    void ComputeCurrentValue() {ComputeCurrentValue13468,546232
    bool AtEnd() const {AtEnd13472,546351
    const ParamGeneratorInterface<ParamType>* const base_;base_13483,546697
    const typename ParamGenerator<T1>::iterator begin1_;begin1_13486,546886
    const typename ParamGenerator<T1>::iterator end1_;end1_13487,546943
    typename ParamGenerator<T1>::iterator current1_;current1_13488,546998
    const typename ParamGenerator<T2>::iterator begin2_;begin2_13489,547051
    const typename ParamGenerator<T2>::iterator end2_;end2_13490,547108
    typename ParamGenerator<T2>::iterator current2_;current2_13491,547163
    ParamType current_value_;current_value_13492,547216
  const ParamGenerator<T1> g1_;g1_13498,547411
  const ParamGenerator<T2> g2_;g2_13499,547443
class CartesianProductGenerator3CartesianProductGenerator313504,547566
  typedef ::std::tr1::tuple<T1, T2, T3> ParamType;ParamType13507,547680
  CartesianProductGenerator3(const ParamGenerator<T1>& g1,CartesianProductGenerator313509,547732
  virtual ~CartesianProductGenerator3() {}~CartesianProductGenerator313512,547894
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin13514,547938
  virtual ParamIteratorInterface<ParamType>* End() const {End13518,548096
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator13523,548249
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator13525,548322
    virtual ~Iterator() {}~Iterator13538,548943
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator13540,548971
    virtual void Advance() {Advance13545,549210
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone13558,549497
    virtual const ParamType* Current() const { return &current_value_; }Current13561,549600
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals13562,549673
    Iterator(const Iterator& other)Iterator13581,550561
    void ComputeCurrentValue() {ComputeCurrentValue13595,550952
    bool AtEnd() const {AtEnd13599,551083
    const ParamGeneratorInterface<ParamType>* const base_;base_13611,551461
    const typename ParamGenerator<T1>::iterator begin1_;begin1_13614,551650
    const typename ParamGenerator<T1>::iterator end1_;end1_13615,551707
    typename ParamGenerator<T1>::iterator current1_;current1_13616,551762
    const typename ParamGenerator<T2>::iterator begin2_;begin2_13617,551815
    const typename ParamGenerator<T2>::iterator end2_;end2_13618,551872
    typename ParamGenerator<T2>::iterator current2_;current2_13619,551927
    const typename ParamGenerator<T3>::iterator begin3_;begin3_13620,551980
    const typename ParamGenerator<T3>::iterator end3_;end3_13621,552037
    typename ParamGenerator<T3>::iterator current3_;current3_13622,552092
    ParamType current_value_;current_value_13623,552145
  const ParamGenerator<T1> g1_;g1_13629,552340
  const ParamGenerator<T2> g2_;g2_13630,552372
  const ParamGenerator<T3> g3_;g3_13631,552404
class CartesianProductGenerator4CartesianProductGenerator413636,552540
  typedef ::std::tr1::tuple<T1, T2, T3, T4> ParamType;ParamType13639,552658
  CartesianProductGenerator4(const ParamGenerator<T1>& g1,CartesianProductGenerator413641,552714
  virtual ~CartesianProductGenerator4() {}~CartesianProductGenerator413645,552921
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin13647,552965
  virtual ParamIteratorInterface<ParamType>* End() const {End13651,553141
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator13657,553318
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator13659,553391
    virtual ~Iterator() {}~Iterator13675,554178
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator13677,554206
    virtual void Advance() {Advance13682,554445
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone13699,554822
    virtual const ParamType* Current() const { return &current_value_; }Current13702,554925
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals13703,554998
    Iterator(const Iterator& other)Iterator13723,555935
    void ComputeCurrentValue() {ComputeCurrentValue13740,556422
    bool AtEnd() const {AtEnd13745,556577
    const ParamGeneratorInterface<ParamType>* const base_;base_13758,556987
    const typename ParamGenerator<T1>::iterator begin1_;begin1_13761,557176
    const typename ParamGenerator<T1>::iterator end1_;end1_13762,557233
    typename ParamGenerator<T1>::iterator current1_;current1_13763,557288
    const typename ParamGenerator<T2>::iterator begin2_;begin2_13764,557341
    const typename ParamGenerator<T2>::iterator end2_;end2_13765,557398
    typename ParamGenerator<T2>::iterator current2_;current2_13766,557453
    const typename ParamGenerator<T3>::iterator begin3_;begin3_13767,557506
    const typename ParamGenerator<T3>::iterator end3_;end3_13768,557563
    typename ParamGenerator<T3>::iterator current3_;current3_13769,557618
    const typename ParamGenerator<T4>::iterator begin4_;begin4_13770,557671
    const typename ParamGenerator<T4>::iterator end4_;end4_13771,557728
    typename ParamGenerator<T4>::iterator current4_;current4_13772,557783
    ParamType current_value_;current_value_13773,557836
  const ParamGenerator<T1> g1_;g1_13779,558031
  const ParamGenerator<T2> g2_;g2_13780,558063
  const ParamGenerator<T3> g3_;g3_13781,558095
  const ParamGenerator<T4> g4_;g4_13782,558127
class CartesianProductGenerator5CartesianProductGenerator513787,558276
  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5> ParamType;ParamType13790,558398
  CartesianProductGenerator5(const ParamGenerator<T1>& g1,CartesianProductGenerator513792,558458
  virtual ~CartesianProductGenerator5() {}~CartesianProductGenerator513796,558704
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin13798,558748
  virtual ParamIteratorInterface<ParamType>* End() const {End13802,558942
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator13808,559135
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator13810,559208
    virtual ~Iterator() {}~Iterator13829,560161
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator13831,560189
    virtual void Advance() {Advance13836,560428
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone13857,560895
    virtual const ParamType* Current() const { return &current_value_; }Current13860,560998
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals13861,561071
    Iterator(const Iterator& other)Iterator13882,562057
    void ComputeCurrentValue() {ComputeCurrentValue13902,562640
    bool AtEnd() const {AtEnd13907,562807
    const ParamGeneratorInterface<ParamType>* const base_;base_13921,563249
    const typename ParamGenerator<T1>::iterator begin1_;begin1_13924,563438
    const typename ParamGenerator<T1>::iterator end1_;end1_13925,563495
    typename ParamGenerator<T1>::iterator current1_;current1_13926,563550
    const typename ParamGenerator<T2>::iterator begin2_;begin2_13927,563603
    const typename ParamGenerator<T2>::iterator end2_;end2_13928,563660
    typename ParamGenerator<T2>::iterator current2_;current2_13929,563715
    const typename ParamGenerator<T3>::iterator begin3_;begin3_13930,563768
    const typename ParamGenerator<T3>::iterator end3_;end3_13931,563825
    typename ParamGenerator<T3>::iterator current3_;current3_13932,563880
    const typename ParamGenerator<T4>::iterator begin4_;begin4_13933,563933
    const typename ParamGenerator<T4>::iterator end4_;end4_13934,563990
    typename ParamGenerator<T4>::iterator current4_;current4_13935,564045
    const typename ParamGenerator<T5>::iterator begin5_;begin5_13936,564098
    const typename ParamGenerator<T5>::iterator end5_;end5_13937,564155
    typename ParamGenerator<T5>::iterator current5_;current5_13938,564210
    ParamType current_value_;current_value_13939,564263
  const ParamGenerator<T1> g1_;g1_13945,564458
  const ParamGenerator<T2> g2_;g2_13946,564490
  const ParamGenerator<T3> g3_;g3_13947,564522
  const ParamGenerator<T4> g4_;g4_13948,564554
  const ParamGenerator<T5> g5_;g5_13949,564586
class CartesianProductGenerator6CartesianProductGenerator613955,564752
  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> ParamType;ParamType13959,564886
  CartesianProductGenerator6(const ParamGenerator<T1>& g1,CartesianProductGenerator613961,564950
  virtual ~CartesianProductGenerator6() {}~CartesianProductGenerator613966,565241
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin13968,565285
  virtual ParamIteratorInterface<ParamType>* End() const {End13972,565497
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator13978,565706
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator13980,565779
    virtual ~Iterator() {}~Iterator14002,566898
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator14004,566926
    virtual void Advance() {Advance14009,567165
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone14034,567722
    virtual const ParamType* Current() const { return &current_value_; }Current14037,567825
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals14038,567898
    Iterator(const Iterator& other)Iterator14060,568933
    void ComputeCurrentValue() {ComputeCurrentValue14083,569612
    bool AtEnd() const {AtEnd14088,569791
    const ParamGeneratorInterface<ParamType>* const base_;base_14103,570265
    const typename ParamGenerator<T1>::iterator begin1_;begin1_14106,570454
    const typename ParamGenerator<T1>::iterator end1_;end1_14107,570511
    typename ParamGenerator<T1>::iterator current1_;current1_14108,570566
    const typename ParamGenerator<T2>::iterator begin2_;begin2_14109,570619
    const typename ParamGenerator<T2>::iterator end2_;end2_14110,570676
    typename ParamGenerator<T2>::iterator current2_;current2_14111,570731
    const typename ParamGenerator<T3>::iterator begin3_;begin3_14112,570784
    const typename ParamGenerator<T3>::iterator end3_;end3_14113,570841
    typename ParamGenerator<T3>::iterator current3_;current3_14114,570896
    const typename ParamGenerator<T4>::iterator begin4_;begin4_14115,570949
    const typename ParamGenerator<T4>::iterator end4_;end4_14116,571006
    typename ParamGenerator<T4>::iterator current4_;current4_14117,571061
    const typename ParamGenerator<T5>::iterator begin5_;begin5_14118,571114
    const typename ParamGenerator<T5>::iterator end5_;end5_14119,571171
    typename ParamGenerator<T5>::iterator current5_;current5_14120,571226
    const typename ParamGenerator<T6>::iterator begin6_;begin6_14121,571279
    const typename ParamGenerator<T6>::iterator end6_;end6_14122,571336
    typename ParamGenerator<T6>::iterator current6_;current6_14123,571391
    ParamType current_value_;current_value_14124,571444
  const ParamGenerator<T1> g1_;g1_14130,571639
  const ParamGenerator<T2> g2_;g2_14131,571671
  const ParamGenerator<T3> g3_;g3_14132,571703
  const ParamGenerator<T4> g4_;g4_14133,571735
  const ParamGenerator<T5> g5_;g5_14134,571767
  const ParamGenerator<T6> g6_;g6_14135,571799
class CartesianProductGenerator7CartesianProductGenerator714141,571978
  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7> ParamType;ParamType14145,572116
  CartesianProductGenerator7(const ParamGenerator<T1>& g1,CartesianProductGenerator714147,572184
  virtual ~CartesianProductGenerator7() {}~CartesianProductGenerator714152,572514
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin14154,572558
  virtual ParamIteratorInterface<ParamType>* End() const {End14159,572796
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator14165,573021
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator14167,573094
    virtual ~Iterator() {}~Iterator14192,574379
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator14194,574407
    virtual void Advance() {Advance14199,574646
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone14228,575293
    virtual const ParamType* Current() const { return &current_value_; }Current14231,575396
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals14232,575469
    Iterator(const Iterator& other)Iterator14255,576553
    void ComputeCurrentValue() {ComputeCurrentValue14281,577328
    bool AtEnd() const {AtEnd14286,577519
    const ParamGeneratorInterface<ParamType>* const base_;base_14302,578025
    const typename ParamGenerator<T1>::iterator begin1_;begin1_14305,578214
    const typename ParamGenerator<T1>::iterator end1_;end1_14306,578271
    typename ParamGenerator<T1>::iterator current1_;current1_14307,578326
    const typename ParamGenerator<T2>::iterator begin2_;begin2_14308,578379
    const typename ParamGenerator<T2>::iterator end2_;end2_14309,578436
    typename ParamGenerator<T2>::iterator current2_;current2_14310,578491
    const typename ParamGenerator<T3>::iterator begin3_;begin3_14311,578544
    const typename ParamGenerator<T3>::iterator end3_;end3_14312,578601
    typename ParamGenerator<T3>::iterator current3_;current3_14313,578656
    const typename ParamGenerator<T4>::iterator begin4_;begin4_14314,578709
    const typename ParamGenerator<T4>::iterator end4_;end4_14315,578766
    typename ParamGenerator<T4>::iterator current4_;current4_14316,578821
    const typename ParamGenerator<T5>::iterator begin5_;begin5_14317,578874
    const typename ParamGenerator<T5>::iterator end5_;end5_14318,578931
    typename ParamGenerator<T5>::iterator current5_;current5_14319,578986
    const typename ParamGenerator<T6>::iterator begin6_;begin6_14320,579039
    const typename ParamGenerator<T6>::iterator end6_;end6_14321,579096
    typename ParamGenerator<T6>::iterator current6_;current6_14322,579151
    const typename ParamGenerator<T7>::iterator begin7_;begin7_14323,579204
    const typename ParamGenerator<T7>::iterator end7_;end7_14324,579261
    typename ParamGenerator<T7>::iterator current7_;current7_14325,579316
    ParamType current_value_;current_value_14326,579369
  const ParamGenerator<T1> g1_;g1_14332,579564
  const ParamGenerator<T2> g2_;g2_14333,579596
  const ParamGenerator<T3> g3_;g3_14334,579628
  const ParamGenerator<T4> g4_;g4_14335,579660
  const ParamGenerator<T5> g5_;g5_14336,579692
  const ParamGenerator<T6> g6_;g6_14337,579724
  const ParamGenerator<T7> g7_;g7_14338,579756
class CartesianProductGenerator8CartesianProductGenerator814344,579948
  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8> ParamType;ParamType14348,580090
  CartesianProductGenerator8(const ParamGenerator<T1>& g1,CartesianProductGenerator814350,580162
  virtual ~CartesianProductGenerator8() {}~CartesianProductGenerator814357,580547
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin14359,580591
  virtual ParamIteratorInterface<ParamType>* End() const {End14364,580847
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator14371,581096
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator14373,581169
    virtual ~Iterator() {}~Iterator14401,582620
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator14403,582648
    virtual void Advance() {Advance14408,582887
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone14441,583624
    virtual const ParamType* Current() const { return &current_value_; }Current14444,583727
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals14445,583800
    Iterator(const Iterator& other)Iterator14469,584933
    void ComputeCurrentValue() {ComputeCurrentValue14498,585804
    bool AtEnd() const {AtEnd14503,586007
    const ParamGeneratorInterface<ParamType>* const base_;base_14520,586545
    const typename ParamGenerator<T1>::iterator begin1_;begin1_14523,586734
    const typename ParamGenerator<T1>::iterator end1_;end1_14524,586791
    typename ParamGenerator<T1>::iterator current1_;current1_14525,586846
    const typename ParamGenerator<T2>::iterator begin2_;begin2_14526,586899
    const typename ParamGenerator<T2>::iterator end2_;end2_14527,586956
    typename ParamGenerator<T2>::iterator current2_;current2_14528,587011
    const typename ParamGenerator<T3>::iterator begin3_;begin3_14529,587064
    const typename ParamGenerator<T3>::iterator end3_;end3_14530,587121
    typename ParamGenerator<T3>::iterator current3_;current3_14531,587176
    const typename ParamGenerator<T4>::iterator begin4_;begin4_14532,587229
    const typename ParamGenerator<T4>::iterator end4_;end4_14533,587286
    typename ParamGenerator<T4>::iterator current4_;current4_14534,587341
    const typename ParamGenerator<T5>::iterator begin5_;begin5_14535,587394
    const typename ParamGenerator<T5>::iterator end5_;end5_14536,587451
    typename ParamGenerator<T5>::iterator current5_;current5_14537,587506
    const typename ParamGenerator<T6>::iterator begin6_;begin6_14538,587559
    const typename ParamGenerator<T6>::iterator end6_;end6_14539,587616
    typename ParamGenerator<T6>::iterator current6_;current6_14540,587671
    const typename ParamGenerator<T7>::iterator begin7_;begin7_14541,587724
    const typename ParamGenerator<T7>::iterator end7_;end7_14542,587781
    typename ParamGenerator<T7>::iterator current7_;current7_14543,587836
    const typename ParamGenerator<T8>::iterator begin8_;begin8_14544,587889
    const typename ParamGenerator<T8>::iterator end8_;end8_14545,587946
    typename ParamGenerator<T8>::iterator current8_;current8_14546,588001
    ParamType current_value_;current_value_14547,588054
  const ParamGenerator<T1> g1_;g1_14553,588249
  const ParamGenerator<T2> g2_;g2_14554,588281
  const ParamGenerator<T3> g3_;g3_14555,588313
  const ParamGenerator<T4> g4_;g4_14556,588345
  const ParamGenerator<T5> g5_;g5_14557,588377
  const ParamGenerator<T6> g6_;g6_14558,588409
  const ParamGenerator<T7> g7_;g7_14559,588441
  const ParamGenerator<T8> g8_;g8_14560,588473
class CartesianProductGenerator9CartesianProductGenerator914566,588678
  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> ParamType;ParamType14570,588824
  CartesianProductGenerator9(const ParamGenerator<T1>& g1,CartesianProductGenerator914572,588900
  virtual ~CartesianProductGenerator9() {}~CartesianProductGenerator914579,589324
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin14581,589368
  virtual ParamIteratorInterface<ParamType>* End() const {End14586,589642
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator14593,589907
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator14595,589980
    virtual ~Iterator() {}~Iterator14626,591597
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator14628,591625
    virtual void Advance() {Advance14633,591864
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone14670,592691
    virtual const ParamType* Current() const { return &current_value_; }Current14673,592794
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals14674,592867
    Iterator(const Iterator& other)Iterator14699,594049
    void ComputeCurrentValue() {ComputeCurrentValue14731,595016
    bool AtEnd() const {AtEnd14737,595243
    const ParamGeneratorInterface<ParamType>* const base_;base_14755,595813
    const typename ParamGenerator<T1>::iterator begin1_;begin1_14758,596002
    const typename ParamGenerator<T1>::iterator end1_;end1_14759,596059
    typename ParamGenerator<T1>::iterator current1_;current1_14760,596114
    const typename ParamGenerator<T2>::iterator begin2_;begin2_14761,596167
    const typename ParamGenerator<T2>::iterator end2_;end2_14762,596224
    typename ParamGenerator<T2>::iterator current2_;current2_14763,596279
    const typename ParamGenerator<T3>::iterator begin3_;begin3_14764,596332
    const typename ParamGenerator<T3>::iterator end3_;end3_14765,596389
    typename ParamGenerator<T3>::iterator current3_;current3_14766,596444
    const typename ParamGenerator<T4>::iterator begin4_;begin4_14767,596497
    const typename ParamGenerator<T4>::iterator end4_;end4_14768,596554
    typename ParamGenerator<T4>::iterator current4_;current4_14769,596609
    const typename ParamGenerator<T5>::iterator begin5_;begin5_14770,596662
    const typename ParamGenerator<T5>::iterator end5_;end5_14771,596719
    typename ParamGenerator<T5>::iterator current5_;current5_14772,596774
    const typename ParamGenerator<T6>::iterator begin6_;begin6_14773,596827
    const typename ParamGenerator<T6>::iterator end6_;end6_14774,596884
    typename ParamGenerator<T6>::iterator current6_;current6_14775,596939
    const typename ParamGenerator<T7>::iterator begin7_;begin7_14776,596992
    const typename ParamGenerator<T7>::iterator end7_;end7_14777,597049
    typename ParamGenerator<T7>::iterator current7_;current7_14778,597104
    const typename ParamGenerator<T8>::iterator begin8_;begin8_14779,597157
    const typename ParamGenerator<T8>::iterator end8_;end8_14780,597214
    typename ParamGenerator<T8>::iterator current8_;current8_14781,597269
    const typename ParamGenerator<T9>::iterator begin9_;begin9_14782,597322
    const typename ParamGenerator<T9>::iterator end9_;end9_14783,597379
    typename ParamGenerator<T9>::iterator current9_;current9_14784,597434
    ParamType current_value_;current_value_14785,597487
  const ParamGenerator<T1> g1_;g1_14791,597682
  const ParamGenerator<T2> g2_;g2_14792,597714
  const ParamGenerator<T3> g3_;g3_14793,597746
  const ParamGenerator<T4> g4_;g4_14794,597778
  const ParamGenerator<T5> g5_;g5_14795,597810
  const ParamGenerator<T6> g6_;g6_14796,597842
  const ParamGenerator<T7> g7_;g7_14797,597874
  const ParamGenerator<T8> g8_;g8_14798,597906
  const ParamGenerator<T9> g9_;g9_14799,597938
class CartesianProductGenerator10CartesianProductGenerator1014805,598157
  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ParamType;ParamType14809,598309
  CartesianProductGenerator10(const ParamGenerator<T1>& g1,CartesianProductGenerator1014811,598390
  virtual ~CartesianProductGenerator10() {}~CartesianProductGenerator1014819,598864
  virtual ParamIteratorInterface<ParamType>* Begin() const {Begin14821,598909
  virtual ParamIteratorInterface<ParamType>* End() const {End14826,599203
  class Iterator : public ParamIteratorInterface<ParamType> {Iterator14833,599486
    Iterator(const ParamGeneratorInterface<ParamType>* base,Iterator14835,599559
    virtual ~Iterator() {}~Iterator14869,601352
    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {BaseGenerator14871,601380
    virtual void Advance() {Advance14876,601619
    virtual ParamIteratorInterface<ParamType>* Clone() const {Clone14917,602541
    virtual const ParamType* Current() const { return &current_value_; }Current14920,602644
    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {Equals14921,602717
    Iterator(const Iterator& other)Iterator14947,603950
    void ComputeCurrentValue() {ComputeCurrentValue14982,605019
    bool AtEnd() const {AtEnd14988,605259
    const ParamGeneratorInterface<ParamType>* const base_;base_15007,605863
    const typename ParamGenerator<T1>::iterator begin1_;begin1_15010,606052
    const typename ParamGenerator<T1>::iterator end1_;end1_15011,606109
    typename ParamGenerator<T1>::iterator current1_;current1_15012,606164
    const typename ParamGenerator<T2>::iterator begin2_;begin2_15013,606217
    const typename ParamGenerator<T2>::iterator end2_;end2_15014,606274
    typename ParamGenerator<T2>::iterator current2_;current2_15015,606329
    const typename ParamGenerator<T3>::iterator begin3_;begin3_15016,606382
    const typename ParamGenerator<T3>::iterator end3_;end3_15017,606439
    typename ParamGenerator<T3>::iterator current3_;current3_15018,606494
    const typename ParamGenerator<T4>::iterator begin4_;begin4_15019,606547
    const typename ParamGenerator<T4>::iterator end4_;end4_15020,606604
    typename ParamGenerator<T4>::iterator current4_;current4_15021,606659
    const typename ParamGenerator<T5>::iterator begin5_;begin5_15022,606712
    const typename ParamGenerator<T5>::iterator end5_;end5_15023,606769
    typename ParamGenerator<T5>::iterator current5_;current5_15024,606824
    const typename ParamGenerator<T6>::iterator begin6_;begin6_15025,606877
    const typename ParamGenerator<T6>::iterator end6_;end6_15026,606934
    typename ParamGenerator<T6>::iterator current6_;current6_15027,606989
    const typename ParamGenerator<T7>::iterator begin7_;begin7_15028,607042
    const typename ParamGenerator<T7>::iterator end7_;end7_15029,607099
    typename ParamGenerator<T7>::iterator current7_;current7_15030,607154
    const typename ParamGenerator<T8>::iterator begin8_;begin8_15031,607207
    const typename ParamGenerator<T8>::iterator end8_;end8_15032,607264
    typename ParamGenerator<T8>::iterator current8_;current8_15033,607319
    const typename ParamGenerator<T9>::iterator begin9_;begin9_15034,607372
    const typename ParamGenerator<T9>::iterator end9_;end9_15035,607429
    typename ParamGenerator<T9>::iterator current9_;current9_15036,607484
    const typename ParamGenerator<T10>::iterator begin10_;begin10_15037,607537
    const typename ParamGenerator<T10>::iterator end10_;end10_15038,607596
    typename ParamGenerator<T10>::iterator current10_;current10_15039,607653
    ParamType current_value_;current_value_15040,607708
  const ParamGenerator<T1> g1_;g1_15046,607905
  const ParamGenerator<T2> g2_;g2_15047,607937
  const ParamGenerator<T3> g3_;g3_15048,607969
  const ParamGenerator<T4> g4_;g4_15049,608001
  const ParamGenerator<T5> g5_;g5_15050,608033
  const ParamGenerator<T6> g6_;g6_15051,608065
  const ParamGenerator<T7> g7_;g7_15052,608097
  const ParamGenerator<T8> g8_;g8_15053,608129
  const ParamGenerator<T9> g9_;g9_15054,608161
  const ParamGenerator<T10> g10_;g10_15055,608193
class CartesianProductHolder2 {CartesianProductHolder215066,608543
CartesianProductHolder2(const Generator1& g1, const Generator2& g2)CartesianProductHolder215068,608584
  operator ParamGenerator< ::std::tr1::tuple<T1, T2> >() const {operator ParamGenerator< ::std::tr1::tuple<T1, T2> >15071,608718
  const Generator1 g1_;g1_15082,609107
  const Generator2 g2_;g2_15083,609131
class CartesianProductHolder3 {CartesianProductHolder315087,609257
CartesianProductHolder3(const Generator1& g1, const Generator2& g2,CartesianProductHolder315089,609298
  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3> >() const {operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3> >15093,609480
  const Generator1 g1_;g1_15105,609928
  const Generator2 g2_;g2_15106,609952
  const Generator3 g3_;g3_15107,609976
class CartesianProductHolder4 {CartesianProductHolder415112,610124
CartesianProductHolder4(const Generator1& g1, const Generator2& g2,CartesianProductHolder415114,610165
  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4> >() const {operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4> >15118,610391
  const Generator1 g1_;g1_15131,610898
  const Generator2 g2_;g2_15132,610922
  const Generator3 g3_;g3_15133,610946
  const Generator4 g4_;g4_15134,610970
class CartesianProductHolder5 {CartesianProductHolder515139,611136
CartesianProductHolder5(const Generator1& g1, const Generator2& g2,CartesianProductHolder515141,611177
  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5> >() const {operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5> >15145,611447
  const Generator1 g1_;g1_15159,612013
  const Generator2 g2_;g2_15160,612037
  const Generator3 g3_;g3_15161,612061
  const Generator4 g4_;g4_15162,612085
  const Generator5 g5_;g5_15163,612109
class CartesianProductHolder6 {CartesianProductHolder615168,612293
CartesianProductHolder6(const Generator1& g1, const Generator2& g2,CartesianProductHolder615170,612334
  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> >() const {operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> >15176,612658
  const Generator1 g1_;g1_15191,613283
  const Generator2 g2_;g2_15192,613307
  const Generator3 g3_;g3_15193,613331
  const Generator4 g4_;g4_15194,613355
  const Generator5 g5_;g5_15195,613379
  const Generator6 g6_;g6_15196,613403
class CartesianProductHolder7 {CartesianProductHolder715201,613605
CartesianProductHolder7(const Generator1& g1, const Generator2& g2,CartesianProductHolder715203,613646
  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6,operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7> >15209,614014
  const Generator1 g1_;g1_15226,614704
  const Generator2 g2_;g2_15227,614728
  const Generator3 g3_;g3_15228,614752
  const Generator4 g4_;g4_15229,614776
  const Generator5 g5_;g5_15230,614800
  const Generator6 g6_;g6_15231,614824
  const Generator7 g7_;g7_15232,614848
class CartesianProductHolder8 {CartesianProductHolder815238,615072
CartesianProductHolder8(const Generator1& g1, const Generator2& g2,CartesianProductHolder815240,615113
  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7,operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8> >15247,615535
  const Generator1 g1_;g1_15265,616284
  const Generator2 g2_;g2_15266,616308
  const Generator3 g3_;g3_15267,616332
  const Generator4 g4_;g4_15268,616356
  const Generator5 g5_;g5_15269,616380
  const Generator6 g6_;g6_15270,616404
  const Generator7 g7_;g7_15271,616428
  const Generator8 g8_;g8_15272,616452
class CartesianProductHolder9 {CartesianProductHolder915278,616694
CartesianProductHolder9(const Generator1& g1, const Generator2& g2,CartesianProductHolder915280,616735
  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8,operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> >15288,617205
  const Generator1 g1_;g1_15308,618021
  const Generator2 g2_;g2_15309,618045
  const Generator3 g3_;g3_15310,618069
  const Generator4 g4_;g4_15311,618093
  const Generator5 g5_;g5_15312,618117
  const Generator6 g6_;g6_15313,618141
  const Generator7 g7_;g7_15314,618165
  const Generator8 g8_;g8_15315,618189
  const Generator9 g9_;g9_15316,618213
class CartesianProductHolder10 {CartesianProductHolder1015322,618474
CartesianProductHolder10(const Generator1& g1, const Generator2& g2,CartesianProductHolder1015324,618516
  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8,operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> >15332,619036
  const Generator1 g1_;g1_15354,619930
  const Generator2 g2_;g2_15355,619954
  const Generator3 g3_;g3_15356,619978
  const Generator4 g4_;g4_15357,620002
  const Generator5 g5_;g5_15358,620026
  const Generator6 g6_;g6_15359,620050
  const Generator7 g7_;g7_15360,620074
  const Generator8 g8_;g8_15361,620098
  const Generator9 g9_;g9_15362,620122
  const Generator10 g10_;g10_15363,620146
namespace testing {testing15377,620423
internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {Range15422,622245
internal::ParamGenerator<T> Range(T start, T end) {Range15428,622447
ValuesIn(ForwardIterator begin, ForwardIterator end) {ValuesIn15490,624521
internal::ParamGenerator<typename Container::value_type> ValuesIn(ValuesIn15503,624962
internal::ValueArray1<T1> Values(T1 v1) {Values15528,625850
internal::ValueArray2<T1, T2> Values(T1 v1, T2 v2) {Values15533,625971
internal::ValueArray3<T1, T2, T3> Values(T1 v1, T2 v2, T3 v3) {Values15538,626124
internal::ValueArray4<T1, T2, T3, T4> Values(T1 v1, T2 v2, T3 v3, T4 v4) {Values15543,626309
internal::ValueArray5<T1, T2, T3, T4, T5> Values(T1 v1, T2 v2, T3 v3, T4 v4,Values15548,626526
internal::ValueArray6<T1, T2, T3, T4, T5, T6> Values(T1 v1, T2 v2, T3 v3,Values15555,626783
internal::ValueArray7<T1, T2, T3, T4, T5, T6, T7> Values(T1 v1, T2 v2, T3 v3,Values15562,627072
internal::ValueArray8<T1, T2, T3, T4, T5, T6, T7, T8> Values(T1 v1, T2 v2,Values15570,627399
internal::ValueArray9<T1, T2, T3, T4, T5, T6, T7, T8, T9> Values(T1 v1, T2 v2,Values15578,627758
internal::ValueArray10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Values(T1 v1,Values15586,628150
    T11> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values15596,628650
    T12> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values15606,629133
    T13> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values15616,629654
    T14> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values15626,630213
    T14, T15> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,Values15637,630811
    T14, T15, T16> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,Values15649,631451
    T14, T15, T16, T17> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,Values15662,632133
    T14, T15, T16, T17, T18> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,Values15675,632853
    T14, T15, T16, T17, T18, T19> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,Values15688,633611
    T14, T15, T16, T17, T18, T19, T20> Values(T1 v1, T2 v2, T3 v3, T4 v4,Values15701,634407
    T14, T15, T16, T17, T18, T19, T20, T21> Values(T1 v1, T2 v2, T3 v3, T4 v4,Values15715,635245
    T14, T15, T16, T17, T18, T19, T20, T21, T22> Values(T1 v1, T2 v2, T3 v3,Values15729,636121
    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> Values(T1 v1, T2 v2,Values15745,637045
    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Values(T1 v1, T2 v2,Values15761,638007
    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Values(T1 v1,Values15777,639007
    T26> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values15795,640113
    T27> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values15813,641202
    T28> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values15831,642329
    T29> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values15850,643500
    T29, T30> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,Values15869,644704
    T29, T30, T31> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,Values15889,645950
    T29, T30, T31, T32> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,Values15909,647234
    T29, T30, T31, T32, T33> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,Values15930,648560
    T29, T30, T31, T32, T33, T34> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,Values15951,649924
    T29, T30, T31, T32, T33, T34, T35> Values(T1 v1, T2 v2, T3 v3, T4 v4,Values15972,651326
    T29, T30, T31, T32, T33, T34, T35, T36> Values(T1 v1, T2 v2, T3 v3, T4 v4,Values15994,652770
    T29, T30, T31, T32, T33, T34, T35, T36, T37> Values(T1 v1, T2 v2, T3 v3,Values16017,654258
    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Values(T1 v1, T2 v2,Values16041,655788
    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Values(T1 v1, T2 v2,Values16065,657356
    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Values(T1 v1,Values16089,658962
    T41> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values16115,660674
    T42> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values16140,662365
    T43> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values16167,664104
    T44> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,Values16194,665881
    T44, T45> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,Values16221,667691
    T44, T45, T46> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,Values16249,669543
    T44, T45, T46, T47> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,Values16277,671433
    T44, T45, T46, T47, T48> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,Values16305,673361
    T44, T45, T46, T47, T48, T49> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,Values16334,675331
    T44, T45, T46, T47, T48, T49, T50> Values(T1 v1, T2 v2, T3 v3, T4 v4,Values16363,677339
inline internal::ParamGenerator<bool> Bool() {Bool16400,679117
internal::CartesianProductHolder2<Generator1, Generator2> Combine(Combine16454,681149
internal::CartesianProductHolder3<Generator1, Generator2, Generator3> Combine(Combine16461,681425
    Generator4> Combine(Combine16470,681846
    Generator4, Generator5> Combine(Combine16481,682286
    Generator4, Generator5, Generator6> Combine(Combine16492,682797
    Generator4, Generator5, Generator6, Generator7> Combine(Combine16504,683383
    Generator4, Generator5, Generator6, Generator7, Generator8> Combine(Combine16517,684048
    Generator9> Combine(Combine16531,684848
    Generator10> Combine(Combine16546,685677
# define TEST_P(TEST_P16560,686216
# define INSTANTIATE_TEST_CASE_P(INSTANTIATE_TEST_CASE_P16586,687355
#define GTEST_INCLUDE_GTEST_GTEST_PROD_H_GTEST_INCLUDE_GTEST_GTEST_PROD_H_16636,689793
#define FRIEND_TEST(FRIEND_TEST16656,690257
#define GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_16693,692054
namespace testing {testing16698,692139
class GTEST_API_ TestPartResult {TestPartResult16704,692369
  enum Type {Type16708,692531
    kSuccess,          // Succeeded.kSuccess16709,692545
    kNonFatalFailure,  // Failed but the test can continue.kNonFatalFailure16710,692582
    kFatalFailure      // Failed and the test should be terminated.kFatalFailure16711,692642
  TestPartResult(Type a_type,TestPartResult16717,692872
  Type type() const { return type_; }type16729,693233
  const char* file_name() const { return file_name_.c_str(); }file_name16733,693372
  int line_number() const { return line_number_; }line_number16737,693534
  const char* summary() const { return summary_.c_str(); }summary16740,693632
  const char* message() const { return message_.c_str(); }message16743,693745
  bool passed() const { return type_ == kSuccess; }passed16746,693849
  bool failed() const { return type_ != kSuccess; }failed16749,693946
  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }nonfatally_failed16752,694055
  bool fatally_failed() const { return type_ == kFatalFailure; }fatally_failed16755,694179
  Type type_;type_16757,694254
  internal::String file_name_;file_name_16765,694527
  int line_number_;line_number_16768,694665
  internal::String summary_;  // The test failure summary.summary_16769,694685
  internal::String message_;  // The test failure message.message_16770,694744
class GTEST_API_ TestPartResultArray {TestPartResultArray16780,695038
  TestPartResultArray() {}TestPartResultArray16782,695086
  std::vector<TestPartResult> array_;array_16794,695430
class TestPartResultReporterInterface {TestPartResultReporterInterface16800,695587
  virtual ~TestPartResultReporterInterface() {}~TestPartResultReporterInterface16802,695636
namespace internal {internal16807,695760
class GTEST_API_ HasNewFatalFailureHelperHasNewFatalFailureHelper16815,696216
  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }has_new_fatal_failure16821,696450
  bool has_new_fatal_failure_;has_new_fatal_failure_16823,696532
  TestPartResultReporterInterface* original_reporter_;original_reporter_16824,696563
#define GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_16866,698433
# define GTEST_TYPE_PARAMS_(GTEST_TYPE_PARAMS_16991,702742
# define TYPED_TEST_CASE(TYPED_TEST_CASE16996,702983
# define TYPED_TEST(TYPED_TEST17000,703120
# define GTEST_CASE_NAMESPACE_(GTEST_CASE_NAMESPACE_17030,704291
# define GTEST_TYPED_TEST_CASE_P_STATE_(GTEST_TYPED_TEST_CASE_P_STATE_17037,704541
# define GTEST_REGISTERED_TEST_NAMES_(GTEST_REGISTERED_TEST_NAMES_17044,704831
# define TYPED_TEST_CASE_P(TYPED_TEST_CASE_P17050,705131
# define TYPED_TEST_P(TYPED_TEST_P17054,705270
# define REGISTER_TYPED_TEST_CASE_P(REGISTER_TYPED_TEST_CASE_P17070,705921
# define INSTANTIATE_TYPED_TEST_CASE_P(INSTANTIATE_TYPED_TEST_CASE_P17081,706459
namespace testing {testing17107,707594
const int kMaxStackTraceDepth = 100;kMaxStackTraceDepth17171,709910
namespace internal {internal17173,709948
String StreamableToString(const T& streamable) {StreamableToString17197,710808
class GTEST_API_ AssertionResult {AssertionResult17290,713830
  explicit AssertionResult(bool success) : success_(success) {}AssertionResult17296,714049
  operator bool() const { return success_; }  // NOLINToperator bool17299,714161
  const char* message() const {message17308,714585
  const char* failure_message() const { return message(); }failure_message17313,714807
  template <typename T> AssertionResult& operator<<(const T& value) {operator <<17316,714924
      ::std::ostream& (*basic_manipulator)(::std::ostream& stream)) {basic_manipulator17324,715180
  void AppendMessage(const Message& a_message) {AppendMessage17331,715384
  bool success_;success_17338,715611
  internal::scoped_ptr< ::std::string> message_;message_17343,715863
class GTEST_API_ Test {Test17381,717006
  typedef internal::SetUpTestCaseFunc SetUpTestCaseFunc;SetUpTestCaseFunc17387,717154
  typedef internal::TearDownTestCaseFunc TearDownTestCaseFunc;TearDownTestCaseFunc17388,717211
  static void SetUpTestCase() {}SetUpTestCase17399,717641
  static void TearDownTestCase() {}TearDownTestCase17407,717967
  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }HasFailure17417,718286
  void DeleteSelf_() { delete this; }DeleteSelf_17462,719990
  const internal::GTestFlagSaver* const gtest_flag_saver_;gtest_flag_saver_17465,720099
  struct Setup_should_be_spelled_SetUp {};Setup_should_be_spelled_SetUp17483,720858
  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }Setup17484,720901
typedef internal::TimeInMillis TimeInMillis;TimeInMillis17490,721045
class TestProperty {TestProperty17496,721279
  TestProperty(const char* a_key, const char* a_value) :TestProperty17501,721461
  const char* key() const {key17506,721591
  const char* value() const {value17511,721684
  void SetValue(const char* new_value) {SetValue17516,721817
  internal::String key_;key_17522,721932
  internal::String value_;value_17524,721994
class GTEST_API_ TestResult {TestResult17533,722266
  bool Passed() const { return !Failed(); }Passed17549,722740
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time17561,723068
  const std::vector<TestPartResult>& test_part_results() const {test_part_results17583,723883
  const std::vector<TestProperty>& test_properties() const {test_properties17588,724024
  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }set_elapsed_time17593,724147
  int death_test_count() const { return death_test_count_; }death_test_count17611,725011
  int increment_death_test_count() { return ++death_test_count_; }increment_death_test_count17614,725136
  internal::Mutex test_properites_mutex_;test_properites_mutex_17624,725422
  std::vector<TestPartResult> test_part_results_;test_part_results_17627,725500
  std::vector<TestProperty> test_properties_;test_properties_17629,725584
  int death_test_count_;death_test_count_17631,725665
  TimeInMillis elapsed_time_;elapsed_time_17633,725730
class GTEST_API_ TestInfo {TestInfo17650,726242
  const char* test_case_name() const { return test_case_name_.c_str(); }test_case_name17657,726430
  const char* name() const { return name_.c_str(); }name17660,726532
  const char* type_param() const {type_param17664,726697
  const char* value_param() const {value_param17672,726941
  bool should_run() const { return should_run_; }should_run17694,727924
  const TestResult* result() const { return &result_; }result17697,728012
  int increment_death_test_count() {increment_death_test_count17726,729031
  static void ClearTestResult(TestInfo* test_info) {ClearTestResult17734,729222
  const std::string test_case_name_;     // Test case nametest_case_name_17739,729368
  const std::string name_;               // Test namename_17740,729427
  const internal::scoped_ptr<const ::std::string> type_param_;type_param_17743,729580
  const internal::scoped_ptr<const ::std::string> value_param_;value_param_17746,729748
  const internal::TypeId fixture_class_id_;   // ID of the test fixture classfixture_class_id_17747,729812
  bool should_run_;                 // True iff this test should runshould_run_17748,729890
  bool is_disabled_;                // True iff this test is disabledis_disabled_17749,729959
  bool matches_filter_;             // True if this test matches thematches_filter_17750,730029
  internal::TestFactoryBase* const factory_;  // The factory that createsfactory_17752,730160
  TestResult result_;result_17757,730399
class GTEST_API_ TestCase {TestCase17765,730560
  const char* name() const { return name_.c_str(); }name17787,731352
  const char* type_param() const {type_param17791,731511
  bool should_run() const { return should_run_; }should_run17798,731698
  bool Passed() const { return !Failed(); }Passed17816,732259
  bool Failed() const { return failed_test_count() > 0; }Failed17819,732348
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time17822,732455
  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }test_info_list17833,732836
  const std::vector<TestInfo*>& test_info_list() const {test_info_list17836,732972
  void set_should_run(bool should) { should_run_ = should; }set_should_run17845,733275
  static void ClearTestCaseResult(TestCase* test_case) {ClearTestCaseResult17855,733632
  void RunSetUpTestCase() { (*set_up_tc_)(); }RunSetUpTestCase17864,733905
  void RunTearDownTestCase() { (*tear_down_tc_)(); }RunTearDownTestCase17868,734086
  static bool TestPassed(const TestInfo* test_info) {TestPassed17871,734175
  static bool TestFailed(const TestInfo* test_info) {TestFailed17876,734338
  static bool TestDisabled(const TestInfo* test_info) {TestDisabled17881,734506
  static bool ShouldRunTest(const TestInfo* test_info) {ShouldRunTest17886,734651
  internal::String name_;name_17897,734952
  const internal::scoped_ptr<const ::std::string> type_param_;type_param_17900,735077
  std::vector<TestInfo*> test_info_list_;test_info_list_17903,735236
  std::vector<int> test_indices_;test_indices_17907,735487
  Test::SetUpTestCaseFunc set_up_tc_;set_up_tc_17909,735578
  Test::TearDownTestCaseFunc tear_down_tc_;tear_down_tc_17911,735676
  bool should_run_;should_run_17913,735773
  TimeInMillis elapsed_time_;elapsed_time_17915,735829
class Environment {Environment17935,736582
  virtual ~Environment() {}~Environment17938,736673
  virtual void SetUp() {}SetUp17941,736762
  virtual void TearDown() {}TearDown17944,736852
  struct Setup_should_be_spelled_SetUp {};Setup_should_be_spelled_SetUp17948,737029
  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }Setup17949,737072
class TestEventListener {TestEventListener17954,737269
  virtual ~TestEventListener() {}~TestEventListener17956,737304
class EmptyTestEventListener : public TestEventListener {EmptyTestEventListener18007,739452
  virtual void OnTestProgramStart(const UnitTest& /*unit_test*/) {}OnTestProgramStart18009,739519
  virtual void OnTestIterationStart(const UnitTest& /*unit_test*/,OnTestIterationStart18010,739587
  virtual void OnEnvironmentsSetUpStart(const UnitTest& /*unit_test*/) {}OnEnvironmentsSetUpStart18012,739712
  virtual void OnEnvironmentsSetUpEnd(const UnitTest& /*unit_test*/) {}OnEnvironmentsSetUpEnd18013,739786
  virtual void OnTestCaseStart(const TestCase& /*test_case*/) {}OnTestCaseStart18014,739858
  virtual void OnTestStart(const TestInfo& /*test_info*/) {}OnTestStart18015,739923
  virtual void OnTestPartResult(const TestPartResult& /*test_part_result*/) {}OnTestPartResult18016,739984
  virtual void OnTestEnd(const TestInfo& /*test_info*/) {}OnTestEnd18017,740063
  virtual void OnTestCaseEnd(const TestCase& /*test_case*/) {}OnTestCaseEnd18018,740122
  virtual void OnEnvironmentsTearDownStart(const UnitTest& /*unit_test*/) {}OnEnvironmentsTearDownStart18019,740185
  virtual void OnEnvironmentsTearDownEnd(const UnitTest& /*unit_test*/) {}OnEnvironmentsTearDownEnd18020,740262
  virtual void OnTestIterationEnd(const UnitTest& /*unit_test*/,OnTestIterationEnd18021,740337
  virtual void OnTestProgramEnd(const UnitTest& /*unit_test*/) {}OnTestProgramEnd18023,740458
class GTEST_API_ TestEventListeners {TestEventListeners18027,740607
  TestEventListener* default_result_printer() const {default_result_printer18047,741526
  TestEventListener* default_xml_generator() const {default_xml_generator18058,742078
  internal::TestEventRepeater* repeater_;repeater_18094,743609
  TestEventListener* default_result_printer_;default_result_printer_18096,743709
  TestEventListener* default_xml_generator_;default_xml_generator_18098,743822
class GTEST_API_ UnitTest {UnitTest18114,744316
  int Run() GTEST_MUST_USE_RESULT_;GTEST_MUST_USE_RESULT_18127,744814
  internal::UnitTestImpl* impl() { return impl_; }impl18229,748709
  const internal::UnitTestImpl* impl() const { return impl_; }impl18230,748760
  mutable internal::Mutex mutex_;mutex_18258,749717
  internal::UnitTestImpl* impl_;impl_18264,750009
inline Environment* AddGlobalTestEnvironment(Environment* env) {AddGlobalTestEnvironment18288,751035
namespace internal {internal18307,751786
String FormatForComparisonFailureMessage(const T1& value,FormatForComparisonFailureMessage18322,752447
AssertionResult CmpHelperEQ(const char* expected_expression,CmpHelperEQ18331,752795
class EqHelper {EqHelper18369,754357
  static AssertionResult Compare(const char* expected_expression,Compare18373,754476
  static AssertionResult Compare(const char* expected_expression,Compare18387,755147
class EqHelper<true> {EqHelper18399,755634
  static AssertionResult Compare(Compare18406,755928
  static AssertionResult Compare(Compare18424,756762
#define GTEST_IMPL_CMP_HELPER_(GTEST_IMPL_CMP_HELPER_18451,758000
#undef GTEST_IMPL_CMP_HELPER_GTEST_IMPL_CMP_HELPER_18480,759170
namespace internal {internal18569,763275
AssertionResult CmpHelperFloatingPointEQ(const char* expected_expression,CmpHelperFloatingPointEQ18579,763542
class GTEST_API_ AssertHelper {AssertHelper18616,765057
  struct AssertHelperData {AssertHelperData18634,765732
    AssertHelperData(TestPartResult::Type t,AssertHelperData18635,765760
    TestPartResult::Type const type;type18641,765988
    const char*        const file;file18642,766025
    int                const line;line18643,766060
    String             const message;message18644,766095
  AssertHelperData* const data_;data_18650,766207
class WithParamInterface {WithParamInterface18693,767535
  typedef T ParamType;ParamType18695,767571
  virtual ~WithParamInterface() {}~WithParamInterface18696,767594
  const ParamType& GetParam() const { return *parameter_; }GetParam18703,767974
  static void SetParam(const ParamType* parameter) {SetParam18708,768186
  static const ParamType* parameter_;parameter_18713,768343
const T* WithParamInterface<T>::parameter_ = NULL;parameter_18720,768555
class TestWithParam : public Test, public WithParamInterface<T> {TestWithParam18726,768769
#define ADD_FAILURE(ADD_FAILURE18757,769932
#define ADD_FAILURE_AT(ADD_FAILURE_AT18761,770082
#define GTEST_FAIL(GTEST_FAIL18766,770282
# define FAIL(FAIL18771,770489
#define GTEST_SUCCEED(GTEST_SUCCEED18775,770573
# define SUCCEED(SUCCEED18780,770786
#define EXPECT_THROW(EXPECT_THROW18792,771209
#define EXPECT_NO_THROW(EXPECT_NO_THROW18794,771339
#define EXPECT_ANY_THROW(EXPECT_ANY_THROW18796,771435
#define ASSERT_THROW(ASSERT_THROW18798,771533
#define ASSERT_NO_THROW(ASSERT_NO_THROW18800,771660
#define ASSERT_ANY_THROW(ASSERT_ANY_THROW18802,771753
#define EXPECT_TRUE(EXPECT_TRUE18808,772043
#define EXPECT_FALSE(EXPECT_FALSE18811,772183
#define ASSERT_TRUE(ASSERT_TRUE18814,772327
#define ASSERT_FALSE(ASSERT_FALSE18817,772464
#define GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_18858,774499
#define GTEST_ASSERT_(GTEST_ASSERT_18897,775843
AssertionResult AssertPred1Helper(const char* pred_text,AssertPred1Helper18909,776193
#define GTEST_PRED_FORMAT1_(GTEST_PRED_FORMAT1_18922,776723
#define GTEST_PRED1_(GTEST_PRED1_18928,776940
#define EXPECT_PRED_FORMAT1(EXPECT_PRED_FORMAT118935,777243
#define EXPECT_PRED1(EXPECT_PRED118937,777354
#define ASSERT_PRED_FORMAT1(ASSERT_PRED_FORMAT118939,777437
#define ASSERT_PRED1(ASSERT_PRED118941,777545
AssertionResult AssertPred2Helper(const char* pred_text,AssertPred2Helper18951,777791
#define GTEST_PRED_FORMAT2_(GTEST_PRED_FORMAT2_18968,778533
#define GTEST_PRED2_(GTEST_PRED2_18974,778763
#define EXPECT_PRED_FORMAT2(EXPECT_PRED_FORMAT218983,779174
#define EXPECT_PRED2(EXPECT_PRED218985,779293
#define ASSERT_PRED_FORMAT2(ASSERT_PRED_FORMAT218987,779384
#define ASSERT_PRED2(ASSERT_PRED218989,779500
AssertionResult AssertPred3Helper(const char* pred_text,AssertPred3Helper19000,779777
#define GTEST_PRED_FORMAT3_(GTEST_PRED_FORMAT3_19021,780731
#define GTEST_PRED3_(GTEST_PRED3_19027,780974
#define EXPECT_PRED_FORMAT3(EXPECT_PRED_FORMAT319038,781493
#define EXPECT_PRED3(EXPECT_PRED319040,781620
#define ASSERT_PRED_FORMAT3(ASSERT_PRED_FORMAT319042,781719
#define ASSERT_PRED3(ASSERT_PRED319044,781843
AssertionResult AssertPred4Helper(const char* pred_text,AssertPred4Helper19056,782151
#define GTEST_PRED_FORMAT4_(GTEST_PRED_FORMAT4_19081,783317
#define GTEST_PRED4_(GTEST_PRED4_19087,783573
#define EXPECT_PRED_FORMAT4(EXPECT_PRED_FORMAT419100,784197
#define EXPECT_PRED4(EXPECT_PRED419102,784332
#define ASSERT_PRED_FORMAT4(ASSERT_PRED_FORMAT419104,784439
#define ASSERT_PRED4(ASSERT_PRED419106,784571
AssertionResult AssertPred5Helper(const char* pred_text,AssertPred5Helper19119,784910
#define GTEST_PRED_FORMAT5_(GTEST_PRED_FORMAT5_19148,786288
#define GTEST_PRED5_(GTEST_PRED5_19154,786557
#define EXPECT_PRED_FORMAT5(EXPECT_PRED_FORMAT519169,787288
#define EXPECT_PRED5(EXPECT_PRED519171,787431
#define ASSERT_PRED_FORMAT5(ASSERT_PRED_FORMAT519173,787546
#define ASSERT_PRED5(ASSERT_PRED519175,787686
#define EXPECT_EQ(EXPECT_EQ19228,789835
#define EXPECT_NE(EXPECT_NE19232,790036
#define EXPECT_LE(EXPECT_LE19234,790148
#define EXPECT_LT(EXPECT_LT19236,790248
#define EXPECT_GE(EXPECT_GE19238,790348
#define EXPECT_GT(EXPECT_GT19240,790448
#define GTEST_ASSERT_EQ(GTEST_ASSERT_EQ19243,790549
#define GTEST_ASSERT_NE(GTEST_ASSERT_NE19247,790756
#define GTEST_ASSERT_LE(GTEST_ASSERT_LE19249,790862
#define GTEST_ASSERT_LT(GTEST_ASSERT_LT19251,790968
#define GTEST_ASSERT_GE(GTEST_ASSERT_GE19253,791074
#define GTEST_ASSERT_GT(GTEST_ASSERT_GT19255,791180
# define ASSERT_EQ(ASSERT_EQ19262,791453
# define ASSERT_NE(ASSERT_NE19266,791553
# define ASSERT_LE(ASSERT_LE19270,791653
# define ASSERT_LT(ASSERT_LT19274,791753
# define ASSERT_GE(ASSERT_GE19278,791853
# define ASSERT_GT(ASSERT_GT19282,791953
#define EXPECT_STREQ(EXPECT_STREQ19301,792656
#define EXPECT_STRNE(EXPECT_STRNE19303,792774
#define EXPECT_STRCASEEQ(EXPECT_STRCASEEQ19305,792872
#define EXPECT_STRCASENE(EXPECT_STRCASENE19307,792998
#define ASSERT_STREQ(ASSERT_STREQ19310,793104
#define ASSERT_STRNE(ASSERT_STRNE19312,793222
#define ASSERT_STRCASEEQ(ASSERT_STRCASEEQ19314,793320
#define ASSERT_STRCASENE(ASSERT_STRCASENE19316,793446
#define EXPECT_FLOAT_EQ(EXPECT_FLOAT_EQ19333,794196
#define EXPECT_DOUBLE_EQ(EXPECT_DOUBLE_EQ19337,794358
#define ASSERT_FLOAT_EQ(ASSERT_FLOAT_EQ19341,794522
#define ASSERT_DOUBLE_EQ(ASSERT_DOUBLE_EQ19345,794684
#define EXPECT_NEAR(EXPECT_NEAR19349,794848
#define ASSERT_NEAR(ASSERT_NEAR19353,795005
# define EXPECT_HRESULT_SUCCEEDED(EXPECT_HRESULT_SUCCEEDED19381,796211
# define ASSERT_HRESULT_SUCCEEDED(ASSERT_HRESULT_SUCCEEDED19384,796325
# define EXPECT_HRESULT_FAILED(EXPECT_HRESULT_FAILED19387,796439
# define ASSERT_HRESULT_FAILED(ASSERT_HRESULT_FAILED19390,796550
#define ASSERT_NO_FATAL_FAILURE(ASSERT_NO_FATAL_FAILURE19405,796984
#define EXPECT_NO_FATAL_FAILURE(EXPECT_NO_FATAL_FAILURE19407,797095
#define SCOPED_TRACE(SCOPED_TRACE19421,797757
bool StaticAssertTypeEq() {StaticAssertTypeEq19456,798932
#define GTEST_TEST(GTEST_TEST19486,800052
# define TEST(TEST19493,800366
#define TEST_F(TEST_F19522,801193
#define RUN_ALL_TESTS(RUN_ALL_TESTS19532,801564

src/gtest/gtest_main.cc,58
GTEST_API_ int main(int argc, char **argv) {main34,1604

src/gtest/gtest-all.cpp,57309
#define GTEST_INCLUDE_GTEST_GTEST_SPI_H_GTEST_INCLUDE_GTEST_GTEST_SPI_H_110,5362
namespace testing {testing113,5405
class GTEST_API_ ScopedFakeTestPartResultReporterScopedFakeTestPartResultReporter124,6004
  enum InterceptMode {InterceptMode128,6162
    INTERCEPT_ONLY_CURRENT_THREAD,  // Intercepts only thread local failures.INTERCEPT_ONLY_CURRENT_THREAD129,6185
    INTERCEPT_ALL_THREADS           // Intercepts all failures.INTERCEPT_ALL_THREADS130,6263
  const InterceptMode intercept_mode_;intercept_mode_155,7251
  TestPartResultReporterInterface* old_reporter_;old_reporter_156,7290
  TestPartResultArray* const result_;result_157,7340
namespace internal {internal162,7452
class GTEST_API_ SingleFailureChecker {SingleFailureChecker169,7786
  const TestPartResultArray* const results_;results_177,8073
  const TestPartResult::Type type_;type_178,8118
  const string substr_;substr_179,8154
#define EXPECT_FATAL_FAILURE(EXPECT_FATAL_FAILURE211,9478
#define EXPECT_FATAL_FAILURE_ON_ALL_THREADS(EXPECT_FATAL_FAILURE_ON_ALL_THREADS228,10135
#define EXPECT_NONFATAL_FAILURE(EXPECT_NONFATAL_FAILURE277,12319
#define EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS(EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS291,12894
# define GTEST_HAS_GETTIMEOFDAY_ GTEST_HAS_GETTIMEOFDAY_324,13850
#define GTEST_IMPLEMENTATION_ GTEST_IMPLEMENTATION_401,16124
#define GTEST_SRC_GTEST_INTERNAL_INL_H_GTEST_SRC_GTEST_INTERNAL_INL_H_439,17993
namespace testing {testing466,18772
namespace internal {internal475,19046
const char kAlsoRunDisabledTestsFlag[] = "also_run_disabled_tests";kAlsoRunDisabledTestsFlag482,19312
const char kBreakOnFailureFlag[] = "break_on_failure";kBreakOnFailureFlag483,19380
const char kCatchExceptionsFlag[] = "catch_exceptions";kCatchExceptionsFlag484,19435
const char kColorFlag[] = "color";kColorFlag485,19491
const char kFilterFlag[] = "filter";kFilterFlag486,19526
const char kListTestsFlag[] = "list_tests";kListTestsFlag487,19563
const char kOutputFlag[] = "output";kOutputFlag488,19607
const char kPrintTimeFlag[] = "print_time";kPrintTimeFlag489,19644
const char kRandomSeedFlag[] = "random_seed";kRandomSeedFlag490,19688
const char kRepeatFlag[] = "repeat";kRepeatFlag491,19734
const char kShuffleFlag[] = "shuffle";kShuffleFlag492,19771
const char kStackTraceDepthFlag[] = "stack_trace_depth";kStackTraceDepthFlag493,19810
const char kStreamResultToFlag[] = "stream_result_to";kStreamResultToFlag494,19867
const char kThrowOnFailureFlag[] = "throw_on_failure";kThrowOnFailureFlag495,19922
const int kMaxRandomSeed = 99999;kMaxRandomSeed498,20033
inline int GetRandomSeedFromFlag(Int32 random_seed_flag) {GetRandomSeedFromFlag522,20933
inline int GetNextRandomSeed(int seed) {GetNextRandomSeed538,21583
class GTestFlagSaver {GTestFlagSaver548,21970
  GTestFlagSaver() {GTestFlagSaver551,22018
  ~GTestFlagSaver() {~GTestFlagSaver572,22928
  bool also_run_disabled_tests_;also_run_disabled_tests_593,23837
  bool break_on_failure_;break_on_failure_594,23870
  bool catch_exceptions_;catch_exceptions_595,23896
  String color_;color_596,23922
  String death_test_style_;death_test_style_597,23939
  bool death_test_use_fork_;death_test_use_fork_598,23967
  String filter_;filter_599,23996
  String internal_run_death_test_;internal_run_death_test_600,24014
  bool list_tests_;list_tests_601,24049
  String output_;output_602,24069
  bool print_time_;print_time_603,24087
  internal::Int32 random_seed_;random_seed_604,24107
  internal::Int32 repeat_;repeat_605,24139
  bool shuffle_;shuffle_606,24166
  internal::Int32 stack_trace_depth_;stack_trace_depth_607,24183
  String stream_result_to_;stream_result_to_608,24221
  bool throw_on_failure_;throw_on_failure_609,24249
} GTEST_ATTRIBUTE_UNUSED_;GTEST_ATTRIBUTE_UNUSED_610,24275
inline int CountIf(const Container& c, Predicate predicate) {CountIf670,27387
void ForEach(const Container& c, Functor functor) {ForEach683,27834
inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {GetElementOr690,28056
void ShuffleRange(internal::Random* random, int begin, int end,ShuffleRange699,28466
inline void Shuffle(internal::Random* random, std::vector<E>* v) {Shuffle720,29339
static void Delete(T* x) {Delete727,29567
class TestPropertyKeyIs {TestPropertyKeyIs734,29720
  explicit TestPropertyKeyIs(const char* key)TestPropertyKeyIs739,29829
  bool operator()(const TestProperty& test_property) const {operator ()743,29967
  String key_;key_748,30102
class GTEST_API_ UnitTestOptions {UnitTestOptions761,30566
class OsStackTraceGetterInterface {OsStackTraceGetterInterface806,32387
  OsStackTraceGetterInterface() {}OsStackTraceGetterInterface808,32432
  virtual ~OsStackTraceGetterInterface() {}~OsStackTraceGetterInterface809,32467
class OsStackTraceGetter : public OsStackTraceGetterInterface {OsStackTraceGetter829,33290
  OsStackTraceGetter() : caller_frame_(NULL) {}OsStackTraceGetter831,33363
  static const char* const kElidedFramesMarker;kElidedFramesMarker837,33620
  Mutex mutex_;  // protects all internal statemutex_840,33679
  void* caller_frame_;caller_frame_846,33997
struct TraceInfo {TraceInfo852,34128
  const char* file;file853,34147
  int line;line854,34167
  String message;message855,34179
class DefaultGlobalTestPartResultReporterDefaultGlobalTestPartResultReporter860,34330
  UnitTestImpl* const unit_test_;unit_test_869,34685
class DefaultPerThreadTestPartResultReporterDefaultPerThreadTestPartResultReporter876,34929
  UnitTestImpl* const unit_test_;unit_test_885,35340
class GTEST_API_ UnitTestImpl {UnitTestImpl894,35681
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time949,37591
  bool Passed() const { return !Failed(); }Passed952,37727
  bool Failed() const {Failed956,37891
  const TestCase* GetTestCase(int i) const {GetTestCase962,38147
  TestCase* GetMutableTestCase(int i) {GetMutableTestCase969,38458
  TestEventListeners* listeners() { return &listeners_; }listeners975,38665
  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }ad_hoc_test_result982,38944
  void AddTestInfo(Test::SetUpTestCaseFunc set_up_tc,AddTestInfo1030,41055
  internal::ParameterizedTestCaseRegistry& parameterized_test_registry() {parameterized_test_registry1055,42212
  void set_current_test_case(TestCase* a_current_test_case) {set_current_test_case1061,42434
  void set_current_test_info(TestInfo* a_current_test_info) {set_current_test_info1068,42718
  void ClearNonAdHocTestResult() {ClearNonAdHocTestResult1087,43590
  void ClearAdHocTestResult() {ClearAdHocTestResult1092,43738
  enum ReactionToSharding {ReactionToSharding1096,43808
    HONOR_SHARDING_PROTOCOL,HONOR_SHARDING_PROTOCOL1097,43836
    IGNORE_SHARDING_PROTOCOLIGNORE_SHARDING_PROTOCOL1098,43865
  const TestCase* current_test_case() const { return current_test_case_; }current_test_case1112,44421
  TestInfo* current_test_info() { return current_test_info_; }current_test_info1113,44496
  const TestInfo* current_test_info() const { return current_test_info_; }current_test_info1114,44559
  std::vector<Environment*>& environments() { return environments_; }environments1118,44745
  std::vector<TraceInfo>& gtest_trace_stack() {gtest_trace_stack1121,44873
  const std::vector<TraceInfo>& gtest_trace_stack() const {gtest_trace_stack1124,44969
  void InitDeathTestSubprocessControlInfo() {InitDeathTestSubprocessControlInfo1129,45096
  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {internal_run_death_test_flag1136,45465
  internal::DeathTestFactory* death_test_factory() {death_test_factory1141,45649
  int random_seed() const { return random_seed_; }random_seed1168,46692
  internal::Random* random() { return &random_; }random1171,46783
  bool catch_exceptions() const { return catch_exceptions_; }catch_exceptions1182,47184
  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }set_catch_exceptions1189,47406
  UnitTest* const parent_;parent_1192,47541
  internal::FilePath original_working_dir_;original_working_dir_1196,47649
  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;default_global_test_part_result_reporter_1199,47739
      default_per_thread_test_part_result_reporter_;default_per_thread_test_part_result_reporter_1201,47861
  TestPartResultReporterInterface* global_test_part_result_repoter_;global_test_part_result_repoter_1204,47986
  internal::Mutex global_test_part_result_reporter_mutex_;global_test_part_result_reporter_mutex_1207,48130
      per_thread_test_part_result_reporter_;per_thread_test_part_result_reporter_1211,48323
  std::vector<Environment*> environments_;environments_1215,48471
  std::vector<TestCase*> test_cases_;test_cases_1219,48611
  std::vector<int> test_case_indices_;test_case_indices_1225,48875
  internal::ParameterizedTestCaseRegistry parameterized_test_registry_;parameterized_test_registry_1230,49027
  bool parameterized_tests_registered_;parameterized_tests_registered_1233,49177
  int last_death_test_case_;last_death_test_case_1237,49316
  TestCase* current_test_case_;current_test_case_1243,49622
  TestInfo* current_test_info_;current_test_info_1249,49927
  TestResult ad_hoc_test_result_;ad_hoc_test_result_1259,50431
  TestEventListeners listeners_;listeners_1263,50557
  OsStackTraceGetterInterface* os_stack_trace_getter_;os_stack_trace_getter_1269,50814
  bool post_flag_parse_init_performed_;post_flag_parse_init_performed_1272,50923
  int random_seed_;random_seed_1275,51031
  internal::Random random_;random_1278,51086
  TimeInMillis elapsed_time_;elapsed_time_1281,51168
  internal::scoped_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;internal_run_death_test_flag_1286,51340
  internal::scoped_ptr<internal::DeathTestFactory> death_test_factory_;death_test_factory_1287,51420
  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;gtest_trace_stack_1291,51596
  bool catch_exceptions_;catch_exceptions_1295,51754
inline UnitTestImpl* GetUnitTestImpl() {GetUnitTestImpl1302,51941
class AutoHandle {AutoHandle1339,53326
  AutoHandle() : handle_(INVALID_HANDLE_VALUE) {}AutoHandle1341,53354
  explicit AutoHandle(HANDLE handle) : handle_(handle) {}AutoHandle1342,53404
  ~AutoHandle() { Reset(); }~AutoHandle1344,53463
  HANDLE Get() const { return handle_; }Get1346,53493
  void Reset() { Reset(INVALID_HANDLE_VALUE); }Reset1347,53534
  void Reset(HANDLE handle) {Reset1348,53582
  HANDLE handle_;handle_1357,53761
bool ParseNaturalNumber(const ::std::string& str, Integer* number) {ParseNaturalNumber1368,54102
class TestResultAccessor {TestResultAccessor1415,55761
  static void RecordProperty(TestResult* test_result,RecordProperty1417,55797
  static void ClearTestPartResults(TestResult* test_result) {ClearTestPartResults1422,55960
  static const std::vector<testing::TestPartResult>& test_part_results(test_part_results1426,56068
#undef GTEST_IMPLEMENTATION_GTEST_IMPLEMENTATION_1436,56324
# define vsnprintf vsnprintf1439,56375
namespace testing {testing1442,56434
static const char kDisableTestFilter[] = "DISABLED_*:*/DISABLED_*";kDisableTestFilter1453,56668
static const char kDeathTestCaseFilter[] = "*DeathTest:*DeathTest/*";kDeathTestCaseFilter1458,56893
static const char kUniversalFilter[] = "*";kUniversalFilter1461,57006
static const char kDefaultOutputFile[] = "test_detail.xml";kDefaultOutputFile1464,57094
static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";kTestShardIndex1467,57214
static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";kTestTotalShards1469,57343
static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";kTestShardStatusFile1471,57469
namespace internal {internal1473,57540
const char kStackTraceMarker[] = "\nStack trace:\n";kStackTraceMarker1477,57644
bool g_help_flag = false;g_help_flag1481,57800
namespace internal {internal1582,61593
UInt32 Random::Generate(UInt32 range) {Generate1587,61764
int g_init_gtest_count = 0;g_init_gtest_count1611,62824
static bool GTestIsInitialized() { return g_init_gtest_count != 0; }GTestIsInitialized1612,62852
static int SumOverTestCaseList(const std::vector<TestCase*>& case_list,SumOverTestCaseList1617,63071
static bool TestCasePassed(const TestCase* test_case) {TestCasePassed1627,63375
static bool TestCaseFailed(const TestCase* test_case) {TestCaseFailed1632,63533
static bool ShouldRunTestCase(const TestCase* test_case) {ShouldRunTestCase1638,63726
AssertHelper::AssertHelper(TestPartResult::Type type,AssertHelper1643,63851
AssertHelper::~AssertHelper() {~AssertHelper1650,64101
void AssertHelper::operator=(const Message& message) const {operator =1655,64208
String g_executable_path;g_executable_path1669,64775
FilePath GetCurrentExecutableName() {GetCurrentExecutableName1673,64892
String UnitTestOptions::GetOutputFormat() {GetOutputFormat1688,65272
String UnitTestOptions::GetAbsolutePathToOutputFile() {GetAbsolutePathToOutputFile1700,65723
bool UnitTestOptions::PatternMatchesString(const char *pattern,PatternMatchesString1736,67210
bool UnitTestOptions::MatchesFilter(const String& name, const char* filter) {MatchesFilter1753,67931
bool UnitTestOptions::FilterMatchesTest(const String &test_case_name,FilterMatchesTest1777,68593
int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {GTestShouldProcessSEH1811,69996
ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(ScopedFakeTestPartResultReporter1840,71045
ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(ScopedFakeTestPartResultReporter1850,71390
void ScopedFakeTestPartResultReporter::Init() {Init1857,71597
ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {~ScopedFakeTestPartResultReporter1870,72104
void ScopedFakeTestPartResultReporter::ReportTestPartResult(ReportTestPartResult1881,72575
namespace internal {internal1886,72702
TypeId GetTestTypeId() {GetTestTypeId1897,73322
extern const TypeId kTestTypeIdInGoogleTest = GetTestTypeId();kTestTypeIdInGoogleTest1903,73503
AssertionResult HasOneFailure(const char* /* results_expr */,HasOneFailure1908,73729
SingleFailureChecker:: SingleFailureChecker(SingleFailureChecker1947,75258
SingleFailureChecker::~SingleFailureChecker() {~SingleFailureChecker1959,75716
DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter(DefaultGlobalTestPartResultReporter1963,75832
void DefaultGlobalTestPartResultReporter::ReportTestPartResult(ReportTestPartResult1966,75963
DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter(DefaultPerThreadTestPartResultReporter1972,76195
void DefaultPerThreadTestPartResultReporter::ReportTestPartResult(ReportTestPartResult1975,76332
UnitTestImpl::GetGlobalTestPartResultReporter() {GetGlobalTestPartResultReporter1982,76599
void UnitTestImpl::SetGlobalTestPartResultReporter(SetGlobalTestPartResultReporter1988,76811
UnitTestImpl::GetTestPartResultReporterForCurrentThread() {GetTestPartResultReporterForCurrentThread1996,77130
void UnitTestImpl::SetTestPartResultReporterForCurrentThread(SetTestPartResultReporterForCurrentThread2001,77309
int UnitTestImpl::successful_test_case_count() const {successful_test_case_count2007,77523
int UnitTestImpl::failed_test_case_count() const {failed_test_case_count2012,77669
int UnitTestImpl::total_test_case_count() const {total_test_case_count2017,77808
int UnitTestImpl::test_case_to_run_count() const {test_case_to_run_count2023,77996
int UnitTestImpl::successful_test_count() const {successful_test_count2028,78140
int UnitTestImpl::failed_test_count() const {failed_test_count2033,78306
int UnitTestImpl::disabled_test_count() const {disabled_test_count2038,78466
int UnitTestImpl::total_test_count() const {total_test_count2043,78625
int UnitTestImpl::test_to_run_count() const {test_to_run_count2048,78790
String UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {CurrentOsStackTraceExceptTop2062,79407
TimeInMillis GetTimeInMillis() {GetTimeInMillis2068,79564
String String::ShowCStringQuoted(const char* c_str) {ShowCStringQuoted2130,81622
static char* CloneString(const char* str, size_t length) {CloneString2138,82014
const char * String::CloneCString(const char* c_str) {CloneCString2152,82447
LPCWSTR String::AnsiToUtf16(const char* ansi) {AnsiToUtf162162,82847
const char* String::Utf16ToAnsi(LPCWSTR utf16_str)  {Utf16ToAnsi2179,83488
bool String::CStringEquals(const char * lhs, const char * rhs) {CStringEquals2198,84162
static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,StreamWideCharsToMessage2210,84530
Message& Message::operator <<(const ::std::wstring& wstr) {operator <<2236,85454
Message& Message::operator <<(const ::wstring& wstr) {operator <<2245,85797
AssertionResult::AssertionResult(const AssertionResult& other)AssertionResult2253,86061
AssertionResult AssertionResult::operator!() const {operator !2261,86378
AssertionResult AssertionSuccess() {AssertionSuccess2269,86589
AssertionResult AssertionFailure() {AssertionFailure2274,86697
AssertionResult AssertionFailure(const Message& message) {AssertionFailure2280,86887
namespace internal {internal2284,86989
AssertionResult EqFailure(const char* expected_expression,EqFailure2301,87603
String GetBoolAssertionFailureMessage(const AssertionResult& assertion_result,GetBoolAssertionFailureMessage2324,88345
AssertionResult DoubleNearPredFormat(const char* expr1,DoubleNearPredFormat2339,89015
AssertionResult FloatingPointLE(const char* expr1,FloatingPointLE2361,89969
AssertionResult FloatLE(const char* expr1, const char* expr2,FloatLE2398,91239
AssertionResult DoubleLE(const char* expr1, const char* expr2,DoubleLE2405,91561
namespace internal {internal2410,91750
AssertionResult CmpHelperEQ(const char* expected_expression,CmpHelperEQ2414,91849
#define GTEST_IMPL_CMP_HELPER_(GTEST_IMPL_CMP_HELPER_2432,92572
#undef GTEST_IMPL_CMP_HELPER_GTEST_IMPL_CMP_HELPER_2461,93672
AssertionResult CmpHelperSTREQ(const char* expected_expression,CmpHelperSTREQ2464,93753
AssertionResult CmpHelperSTRCASEEQ(const char* expected_expression,CmpHelperSTRCASEEQ2480,94342
AssertionResult CmpHelperSTRNE(const char* s1_expression,CmpHelperSTRNE2496,94957
AssertionResult CmpHelperSTRCASENE(const char* s1_expression,CmpHelperSTRCASENE2510,95519
bool IsSubstringPred(const char* needle, const char* haystack) {IsSubstringPred2534,96295
bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {IsSubstringPred2541,96480
bool IsSubstringPred(const StringType& needle,IsSubstringPred2550,96768
AssertionResult IsSubstringImpl(IsSubstringImpl2560,97183
AssertionResult IsSubstring(IsSubstring2583,98131
AssertionResult IsSubstring(IsSubstring2589,98345
AssertionResult IsNotSubstring(IsNotSubstring2595,98565
AssertionResult IsNotSubstring(IsNotSubstring2601,98783
AssertionResult IsSubstring(IsSubstring2607,99007
AssertionResult IsNotSubstring(IsNotSubstring2613,99239
AssertionResult IsSubstring(IsSubstring2620,99501
AssertionResult IsNotSubstring(IsNotSubstring2626,99735
namespace internal {internal2633,100006
AssertionResult HRESULTFailureHelper(const char* expr,HRESULTFailureHelper2640,100123
AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  // NOLINTIsHRESULTSuccess2681,101842
AssertionResult IsHRESULTFailure(const char* expr, long hr) {  // NOLINTIsHRESULTFailure2688,102029
const UInt32 kMaxCodePoint1 = (static_cast<UInt32>(1) <<  7) - 1;kMaxCodePoint12710,102686
const UInt32 kMaxCodePoint2 = (static_cast<UInt32>(1) << (5 + 6)) - 1;kMaxCodePoint22713,102820
const UInt32 kMaxCodePoint3 = (static_cast<UInt32>(1) << (4 + 2*6)) - 1;kMaxCodePoint32716,102961
const UInt32 kMaxCodePoint4 = (static_cast<UInt32>(1) << (3 + 3*6)) - 1;kMaxCodePoint42719,103103
inline UInt32 ChopLowBits(UInt32* bits, int n) {ChopLowBits2724,103346
char* CodePointToUtf8(UInt32 code_point, char* str) {CodePointToUtf82738,103966
inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {IsUtf16SurrogatePair2778,106020
inline UInt32 CreateCodePointFromUtf16SurrogatePair(wchar_t first,CreateCodePointFromUtf16SurrogatePair2784,106246
String WideStringToUtf8(const wchar_t* str, int num_chars) {WideStringToUtf82807,107502
String String::ShowWideCString(const wchar_t * wide_c_str) {ShowWideCString2833,108374
String String::ShowWideCStringQuoted(const wchar_t* wide_c_str) {ShowWideCStringQuoted2841,108669
bool String::WideCStringEquals(const wchar_t * lhs, const wchar_t * rhs) {WideCStringEquals2854,109143
AssertionResult CmpHelperSTREQ(const char* expected_expression,CmpHelperSTREQ2863,109375
AssertionResult CmpHelperSTRNE(const char* s1_expression,CmpHelperSTRNE2879,109976
bool String::CaseInsensitiveCStringEquals(const char * lhs, const char * rhs) {CaseInsensitiveCStringEquals2899,110816
bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,CaseInsensitiveWideCStringEquals2919,111696
int String::Compare(const String & rhs) const {Compare2944,112476
bool String::EndsWith(const char* suffix) const {EndsWith2969,113244
bool String::EndsWithCaseInsensitive(const char* suffix) const {EndsWithCaseInsensitive2982,113728
String String::Format(const char * format, ...) {Format3003,114496
String StringStreamToString(::std::stringstream* ss) {StringStreamToString3038,115779
String AppendUserMessage(const String& gtest_msg,AppendUserMessage3058,116400
TestResult::TestResult()TestResult3077,116837
TestResult::~TestResult() {~TestResult3083,116928
const TestPartResult& TestResult::GetTestPartResult(int i) const {GetTestPartResult3089,117118
const TestProperty& TestResult::GetTestProperty(int i) const {GetTestProperty3098,117430
void TestResult::ClearTestPartResults() {ClearTestPartResults3105,117635
void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {AddTestPartResult3110,117750
void TestResult::RecordProperty(const TestProperty& test_property) {RecordProperty3117,118073
bool TestResult::ValidateTestProperty(const TestProperty& test_property) {ValidateTestProperty3134,118786
void TestResult::Clear() {Clear3148,119240
bool TestResult::Failed() const {Failed3156,119411
static bool TestPartFatallyFailed(const TestPartResult& result) {TestPartFatallyFailed3165,119625
bool TestResult::HasFatalFailure() const {HasFatalFailure3170,119773
static bool TestPartNonfatallyFailed(const TestPartResult& result) {TestPartNonfatallyFailed3175,119938
bool TestResult::HasNonfatalFailure() const {HasNonfatalFailure3180,120101
int TestResult::total_part_count() const {total_part_count3186,120352
int TestResult::test_property_count() const {test_property_count3191,120498
Test::Test()Test3200,120697
Test::~Test() {~Test3205,120828
void Test::SetUp() {SetUp3212,120941
void Test::TearDown() {TearDown3218,121034
void Test::RecordProperty(const char* key, const char* value) {RecordProperty3222,121134
void Test::RecordProperty(const char* key, int value) {RecordProperty3227,121343
namespace internal {internal3233,121511
void ReportFailureInUnknownLocation(TestPartResult::Type result_type,ReportFailureInUnknownLocation3235,121533
bool Test::HasSameFixtureClass() {HasSameFixtureClass3254,122362
static internal::String* FormatSehExceptionMessage(DWORD exception_code,FormatSehExceptionMessage3321,125463
static internal::String FormatCxxExceptionMessage(const char* description,FormatCxxExceptionMessage3335,125944
class GoogleTestFailureException : public ::std::runtime_error {GoogleTestFailureException3357,126840
  explicit GoogleTestFailureException(const TestPartResult& failure)GoogleTestFailureException3359,126914
namespace internal {internal3364,127097
Result HandleSehExceptionsInMethodIfSupported(HandleSehExceptionsInMethodIfSupported3374,127611
Result HandleExceptionsInMethodIfSupported(HandleExceptionsInMethodIfSupported3401,128675
void Test::Run() {Run3455,130945
bool Test::HasFatalFailure() {HasFatalFailure3477,131806
bool Test::HasNonfatalFailure() {HasNonfatalFailure3482,131982
TestInfo::TestInfo(const char* a_test_case_name,TestInfo3493,132325
TestInfo::~TestInfo() { delete factory_; }~TestInfo3511,133025
namespace internal {internal3513,133069
TestInfo* MakeAndRegisterTestInfo(MakeAndRegisterTestInfo3532,133993
void ReportInvalidTestCaseType(const char* test_case_name,ReportInvalidTestCaseType3548,134529
class TestNameIs {TestNameIs3578,135677
  explicit TestNameIs(const char* name)TestNameIs3583,135772
  bool operator()(const TestInfo * test_info) const {operator ()3587,135900
  internal::String name_;name_3592,136050
namespace internal {internal3597,136097
void UnitTestImpl::RegisterParameterizedTests() {RegisterParameterizedTests3602,136326
void TestInfo::Run() {Run3615,136658
int TestCase::successful_test_count() const {successful_test_count3662,138221
int TestCase::failed_test_count() const {failed_test_count3667,138371
int TestCase::disabled_test_count() const {disabled_test_count3671,138463
int TestCase::test_to_run_count() const {test_to_run_count3676,138621
int TestCase::total_test_count() const {total_test_count3681,138749
TestCase::TestCase(const char* a_name, const char* a_type_param,TestCase3694,139239
TestCase::~TestCase() {~TestCase3706,139656
const TestInfo* TestCase::GetTestInfo(int i) const {GetTestInfo3713,139918
TestInfo* TestCase::GetMutableTestInfo(int i) {GetMutableTestInfo3720,140218
void TestCase::AddTestInfo(TestInfo * test_info) {AddTestInfo3727,140477
void TestCase::Run() {Run3733,140675
void TestCase::ClearResult() {ClearResult3761,141624
void TestCase::ShuffleTests(internal::Random* random) {ShuffleTests3766,141754
void TestCase::UnshuffleTests() {UnshuffleTests3771,141904
static internal::String FormatCountableNoun(int count,FormatCountableNoun3782,142295
static internal::String FormatTestCount(int test_count) {FormatTestCount3790,142655
static internal::String FormatTestCaseCount(int test_case_count) {FormatTestCaseCount3795,142811
static const char * TestPartResultTypeToString(TestPartResult::Type type) {TestPartResultTypeToString3803,143215
static internal::String PrintTestPartResultToString(PrintTestPartResultToString3821,143627
static void PrintTestPartResult(const TestPartResult& test_part_result) {PrintTestPartResult3831,144049
namespace internal {internal3851,144890
enum GTestColor {GTestColor3853,144912
  COLOR_DEFAULT,COLOR_DEFAULT3854,144930
  COLOR_RED,COLOR_RED3855,144947
  COLOR_GREEN,COLOR_GREEN3856,144960
  COLOR_YELLOWCOLOR_YELLOW3857,144975
WORD GetColorAttribute(GTestColor color) {GetColorAttribute3863,145100
const char* GetAnsiColorCode(GTestColor color) {GetAnsiColorCode3876,145459
bool ShouldUseColor(bool stdout_is_tty) {ShouldUseColor3888,145802
void ColoredPrintf(GTestColor color, const char* fmt, ...) {ColoredPrintf3923,147374
void PrintFullTestCommentIfPresent(const TestInfo& test_info) {PrintFullTestCommentIfPresent3969,148932
class PrettyUnitTestResultPrinter : public TestEventListener {PrettyUnitTestResultPrinter3989,149525
  PrettyUnitTestResultPrinter() {}PrettyUnitTestResultPrinter3991,149597
  static void PrintTestName(const char * test_case, const char * test) {PrintTestName3992,149632
  virtual void OnTestProgramStart(const UnitTest& /*unit_test*/) {}OnTestProgramStart3997,149823
  virtual void OnEnvironmentsSetUpEnd(const UnitTest& /*unit_test*/) {}OnEnvironmentsSetUpEnd4000,150038
  virtual void OnEnvironmentsTearDownEnd(const UnitTest& /*unit_test*/) {}OnEnvironmentsTearDownEnd4007,150468
  virtual void OnTestProgramEnd(const UnitTest& /*unit_test*/) {}OnTestProgramEnd4009,150620
  internal::String test_case_name_;test_case_name_4014,150757
void PrettyUnitTestResultPrinter::OnTestIterationStart(OnTestIterationStart4018,150847
void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart(OnEnvironmentsSetUpStart4053,152168
void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {OnTestCaseStart4060,152381
void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {OnTestStart4074,152877
void PrettyUnitTestResultPrinter::OnTestPartResult(OnTestPartResult4082,153135
void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {OnTestEnd4093,153481
void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {OnTestCaseEnd4112,154044
void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart(OnEnvironmentsTearDownStart4125,154541
void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {PrintFailedTests4133,154817
void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd4157,155635
class TestEventRepeater : public TestEventListener {TestEventRepeater4200,157329
  TestEventRepeater() : forwarding_enabled_(true) {}TestEventRepeater4202,157391
  bool forwarding_enabled() const { return forwarding_enabled_; }forwarding_enabled4209,157691
  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }set_forwarding_enabled4210,157757
  bool forwarding_enabled_;forwarding_enabled_4229,158796
  std::vector<TestEventListener*> listeners_;listeners_4231,158872
TestEventRepeater::~TestEventRepeater() {~TestEventRepeater4236,158977
void TestEventRepeater::Append(TestEventListener *listener) {Append4240,159072
TestEventListener* TestEventRepeater::Release(TestEventListener *listener) {Release4245,159249
#define GTEST_REPEATER_METHOD_(GTEST_REPEATER_METHOD_4258,159654
#define GTEST_REVERSE_REPEATER_METHOD_(GTEST_REVERSE_REPEATER_METHOD_4268,159983
#undef GTEST_REPEATER_METHOD_GTEST_REPEATER_METHOD_4289,160883
#undef GTEST_REVERSE_REPEATER_METHOD_GTEST_REVERSE_REPEATER_METHOD_4290,160913
void TestEventRepeater::OnTestIterationStart(const UnitTest& unit_test,OnTestIterationStart4292,160952
void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd4301,161246
class XmlUnitTestResultPrinter : public EmptyTestEventListener {XmlUnitTestResultPrinter4313,161624
  static bool IsNormalizableWhitespace(char c) {IsNormalizableWhitespace4322,161970
  static bool IsValidXmlCharacter(char c) {IsValidXmlCharacter4327,162118
  static String EscapeXmlAttribute(const char* str) {EscapeXmlAttribute4341,162730
  static String EscapeXmlText(const char* str) { return EscapeXml(str, false); }EscapeXmlText4346,162900
  const String output_file_;output_file_4369,164005
XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)XmlUnitTestResultPrinter4375,164143
void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd4385,164460
String XmlUnitTestResultPrinter::EscapeXml(const char* str, bool is_attribute) {EscapeXml4427,166221
string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string& str) {RemoveInvalidXmlCharacters4472,167351
std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {FormatTimeInMillisAsSeconds4499,168322
void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,OutputXmlCDataSection4506,168525
void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,OutputXmlTestInfo4527,169237
void XmlUnitTestResultPrinter::PrintXmlTestCase(FILE* out,PrintXmlTestCase4575,171073
void XmlUnitTestResultPrinter::PrintXmlUnitTest(FILE* out,PrintXmlUnitTest4596,171966
String XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(TestPropertiesAsXmlAttributes4617,172925
class StreamingListener : public EmptyTestEventListener {StreamingListener4633,173449
  StreamingListener(const string& host, const string& port)StreamingListener4638,173626
  virtual ~StreamingListener() {~StreamingListener4644,173822
  void OnTestProgramStart(const UnitTest& /* unit_test */) {OnTestProgramStart4649,173908
  void OnTestProgramEnd(const UnitTest& unit_test) {OnTestProgramEnd4653,174012
  void OnTestIterationStart(const UnitTest& /* unit_test */, int iteration) {OnTestIterationStart4663,174371
  void OnTestIterationEnd(const UnitTest& unit_test, int /* iteration */) {OnTestIterationEnd4668,174558
  void OnTestCaseStart(const TestCase& test_case) {OnTestCaseStart4674,174843
  void OnTestCaseEnd(const TestCase& test_case) {OnTestCaseEnd4678,174977
  void OnTestStart(const TestInfo& test_info) {OnTestStart4684,175231
  void OnTestEnd(const TestInfo& test_info) {OnTestEnd4688,175357
  void OnTestPartResult(const TestPartResult& test_part_result) {OnTestPartResult4695,175604
  void CloseConnection() {CloseConnection4710,176140
  void Send(const string& message) {Send4719,176357
  int sockfd_;   // socket file descriptorsockfd_4731,176742
  const string host_name_;host_name_4732,176785
  const string port_num_;port_num_4733,176812
string StreamingListener::UrlEncode(const char* str) {UrlEncode4743,177260
void StreamingListener::MakeConnection() {MakeConnection4762,177686
ScopedTrace::ScopedTrace(const char* file, int line, const Message& message) {ScopedTrace4811,179335
ScopedTrace::~ScopedTrace() {~ScopedTrace4822,179630
String OsStackTraceGetter::CurrentStackTrace(int, int) {CurrentStackTrace4838,180101
void OsStackTraceGetter::UponLeavingGTest() {UponLeavingGTest4843,180196
OsStackTraceGetter::kElidedFramesMarker =kElidedFramesMarker4847,180263
TestEventListeners::TestEventListeners()TestEventListeners4854,180408
TestEventListeners::~TestEventListeners() { delete repeater_; }~TestEventListeners4860,180578
void TestEventListeners::Append(TestEventListener* listener) {Append4866,180911
TestEventListener* TestEventListeners::Release(TestEventListener* listener) {Release4873,181204
TestEventListener* TestEventListeners::repeater() { return repeater_; }repeater4883,181573
void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {SetDefaultResultPrinter4890,181999
void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {SetDefaultXmlGenerator4906,182707
bool TestEventListeners::EventForwardingEnabled() const {EventForwardingEnabled4919,183153
void TestEventListeners::SuppressEventForwarding() {SuppressEventForwarding4923,183256
UnitTest * UnitTest::GetInstance() {GetInstance4936,183718
int UnitTest::successful_test_case_count() const {successful_test_case_count4958,184617
int UnitTest::failed_test_case_count() const {failed_test_case_count4963,184759
int UnitTest::total_test_case_count() const {total_test_case_count4968,184890
int UnitTest::test_case_to_run_count() const {test_case_to_run_count4974,185069
int UnitTest::successful_test_count() const {successful_test_count4979,185202
int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }failed_test_count4984,185329
int UnitTest::disabled_test_count() const {disabled_test_count4987,185448
int UnitTest::total_test_count() const { return impl()->total_test_count(); }total_test_count4992,185568
int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }test_to_run_count4995,185692
internal::TimeInMillis UnitTest::elapsed_time() const {elapsed_time4998,185816
bool UnitTest::Passed() const { return impl()->Passed(); }Passed5003,185979
bool UnitTest::Failed() const { return impl()->Failed(); }Failed5007,186154
const TestCase* UnitTest::GetTestCase(int i) const {GetTestCase5011,186362
TestCase* UnitTest::GetMutableTestCase(int i) {GetMutableTestCase5017,186599
TestEventListeners& UnitTest::listeners() {listeners5023,186785
Environment* UnitTest::AddEnvironment(Environment* env) {AddEnvironment5037,187339
void UnitTest::AddTestPartResult(TestPartResult::Type result_type,AddTestPartResult5051,187775
void UnitTest::RecordPropertyForCurrentTest(const char* key,RecordPropertyForCurrentTest5114,190322
int UnitTest::Run() {Run5125,190768
const char* UnitTest::original_working_dir() const {original_working_dir5182,193229
const TestCase* UnitTest::current_test_case() const {current_test_case5189,193450
const TestInfo* UnitTest::current_test_info() const {current_test_info5197,193699
int UnitTest::random_seed() const { return impl_->random_seed(); }random_seed5203,193900
    UnitTest::parameterized_test_registry() {parameterized_test_registry5210,194182
UnitTest::UnitTest() {UnitTest5216,194340
UnitTest::~UnitTest() {~UnitTest5221,194437
void UnitTest::PushGTestTrace(const internal::TraceInfo& trace) {PushGTestTrace5228,194587
void UnitTest::PopGTestTrace() {PopGTestTrace5235,194815
namespace internal {internal5240,194929
UnitTestImpl::UnitTestImpl(UnitTest* parent)UnitTestImpl5242,194951
UnitTestImpl::~UnitTestImpl() {~UnitTestImpl5281,196601
void UnitTestImpl::SuppressTestEventsIfInSubprocess() {SuppressTestEventsIfInSubprocess5294,196996
void UnitTestImpl::ConfigureXmlOutput() {ConfigureXmlOutput5302,197313
void UnitTestImpl::ConfigureStreamingOutput() {ConfigureStreamingOutput5317,197906
void UnitTestImpl::PostFlagParsingInit() {PostFlagParsingInit5338,198787
class TestCaseNameIs {TestCaseNameIs5372,199938
  explicit TestCaseNameIs(const String& name)TestCaseNameIs5375,199988
  bool operator()(const TestCase* test_case) const {operator ()5379,200117
  String name_;name_5384,200264
TestCase* UnitTestImpl::GetTestCase(const char* test_case_name,GetTestCase5399,200870
static void SetUpEnvironment(Environment* env) { env->SetUp(); }SetUpEnvironment5436,202424
static void TearDownEnvironment(Environment* env) { env->TearDown(); }TearDownEnvironment5437,202489
bool UnitTestImpl::RunAllTests() {RunAllTests5448,203062
void WriteToShardStatusFileIfNeeded() {WriteToShardStatusFileIfNeeded5584,208037
bool ShouldShard(const char* total_shards_env,ShouldShard5606,208983
Int32 Int32FromEnvOrDie(const char* var, Int32 default_val) {Int32FromEnvOrDie5651,210731
bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {ShouldRunTestOnShard5669,211343
int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {FilterTests5680,211869
void UnitTestImpl::ListTestsMatchingFilter() {ListTestsMatchingFilter5734,214147
void UnitTestImpl::set_os_stack_trace_getter(set_os_stack_trace_getter5759,214953
OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {os_stack_trace_getter5770,215320
TestResult* UnitTestImpl::current_test_result() {current_test_result5780,215652
void UnitTestImpl::ShuffleTests() {ShuffleTests5787,215914
void UnitTestImpl::UnshuffleTests() {UnshuffleTests5802,216460
String GetCurrentOsStackTraceExceptTop(UnitTest* /*unit_test*/,GetCurrentOsStackTraceExceptTop5821,217240
class ClassUniqueToAlwaysTrue {};ClassUniqueToAlwaysTrue5831,217674
bool IsTrue(bool condition) { return condition; }IsTrue5834,217711
bool AlwaysTrue() {AlwaysTrue5836,217762
bool SkipPrefix(const char* prefix, const char** pstr) {SkipPrefix5849,218253
const char* ParseFlagValue(const char* str,ParseFlagValue5863,218698
bool ParseBoolFlag(const char* str, const char* flag, bool* value) {ParseBoolFlag5901,220030
bool ParseInt32Flag(const char* str, const char* flag, Int32* value) {ParseInt32Flag5918,220623
bool ParseStringFlag(const char* str, const char* flag, String* value) {ParseStringFlag5935,221234
static bool HasGoogleTestFlagPrefix(const char* str) {HasGoogleTestFlagPrefix5953,222002
static void PrintColorEncoded(const char* str) {PrintColorEncoded5973,222783
static const char kColorEncodedHelpMessage[] =kColorEncodedHelpMessage6007,223673
void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {ParseGoogleTestFlagsOnlyImpl6075,227077
void ParseGoogleTestFlagsOnly(int* argc, char** argv) {ParseGoogleTestFlagsOnly6145,230108
void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {ParseGoogleTestFlagsOnly6148,230210
void InitGoogleTestImpl(int* argc, CharType** argv) {InitGoogleTestImpl6157,230481
void InitGoogleTest(int* argc, char** argv) {InitGoogleTest6191,231464
void InitGoogleTest(int* argc, wchar_t** argv) {InitGoogleTest6197,231645
#define GTEST_IMPLEMENTATION_ GTEST_IMPLEMENTATION_6262,234060
#undef GTEST_IMPLEMENTATION_GTEST_IMPLEMENTATION_6263,234092
namespace testing {testing6265,234122
static const char kDefaultDeathTestStyle[] = "fast";kDefaultDeathTestStyle6270,234191
namespace internal {internal6293,235297
ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {ExitedWithCode6307,235811
bool ExitedWithCode::operator()(int exit_status) const {operator ()6311,235928
KilledBySignal::KilledBySignal(int signum) : signum_(signum) {KilledBySignal6325,236215
bool KilledBySignal::operator()(int exit_status) const {operator ()6329,236323
namespace internal {internal6334,236484
static String ExitSummary(int exit_code) {ExitSummary6340,236640
bool ExitedUnsuccessfully(int exit_status) {ExitedUnsuccessfully6366,237248
static String DeathTestThreadWarning(size_t thread_count) {DeathTestThreadWarning6375,237619
static const char kDeathTestLived = 'L';kDeathTestLived6388,238095
static const char kDeathTestReturned = 'R';kDeathTestReturned6389,238136
static const char kDeathTestThrew = 'T';kDeathTestThrew6390,238180
static const char kDeathTestInternalError = 'I';kDeathTestInternalError6391,238221
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };DeathTestOutcome6402,238860
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };IN_PROGRESS6402,238860
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };DIED6402,238860
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };LIVED6402,238860
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };RETURNED6402,238860
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };THREW6402,238860
void DeathTestAbort(const String& message) {DeathTestAbort6409,239227
# define GTEST_DEATH_TEST_CHECK_(GTEST_DEATH_TEST_CHECK_6430,239977
# define GTEST_DEATH_TEST_CHECK_SYSCALL_(GTEST_DEATH_TEST_CHECK_SYSCALL_6446,240778
String GetLastErrnoDescription() {GetLastErrnoDescription6460,241285
static void FailFromInternalError(int fd) {FailFromInternalError6468,241647
DeathTest::DeathTest() {DeathTest6491,242281
bool DeathTest::Create(const char* statement, const RE* regex,Create6501,242596
const char* DeathTest::LastMessage() {LastMessage6507,242834
void DeathTest::set_last_death_test_message(const String& message) {set_last_death_test_message6511,242919
String DeathTest::last_death_test_message_;last_death_test_message_6515,243029
class DeathTestImpl : public DeathTest {DeathTestImpl6518,243146
  DeathTestImpl(const char* a_statement, const RE* a_regex)DeathTestImpl6520,243199
  ~DeathTestImpl() { GTEST_DEATH_TEST_CHECK_(read_fd_ == -1); }~DeathTestImpl6530,243513
  const char* statement() const { return statement_; }statement6535,243652
  const RE* regex() const { return regex_; }regex6536,243707
  bool spawned() const { return spawned_; }spawned6537,243752
  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }set_spawned6538,243796
  int status() const { return status_; }status6539,243859
  void set_status(int a_status) { status_ = a_status; }set_status6540,243900
  DeathTestOutcome outcome() const { return outcome_; }outcome6541,243956
  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }set_outcome6542,244012
  int read_fd() const { return read_fd_; }read_fd6543,244087
  void set_read_fd(int fd) { read_fd_ = fd; }set_read_fd6544,244130
  int write_fd() const { return write_fd_; }write_fd6545,244176
  void set_write_fd(int fd) { write_fd_ = fd; }set_write_fd6546,244221
  const char* const statement_;statement_6557,244706
  const RE* const regex_;regex_6560,244877
  bool spawned_;spawned_6562,244976
  int status_;status_6564,245036
  DeathTestOutcome outcome_;outcome_6566,245086
  int read_fd_;read_fd_6570,245287
  int write_fd_;write_fd_6574,245479
void DeathTestImpl::ReadAndInterpretStatusByte() {ReadAndInterpretStatusByte6581,245741
void DeathTestImpl::Abort(AbortReason reason) {Abort6626,247250
static ::std::string FormatDeathTestOutput(const ::std::string& output) {FormatDeathTestOutput6649,248489
bool DeathTestImpl::Passed(bool status_ok) {Passed6686,250044
class WindowsDeathTest : public DeathTestImpl {WindowsDeathTest6764,253215
  WindowsDeathTest(const char* a_statement,WindowsDeathTest6766,253272
  const char* const file_;file_6778,253688
  const int line_;line_6780,253772
  AutoHandle write_handle_;write_handle_6782,253854
  AutoHandle child_handle_;child_handle_6784,253909
  AutoHandle event_handle_;event_handle_6789,254200
int WindowsDeathTest::Wait() {Wait6795,254395
DeathTest::TestRole WindowsDeathTest::AssumeRole() {AssumeRole6840,256108
class ForkingDeathTest : public DeathTestImpl {ForkingDeathTest6936,260121
  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }set_child_pid6944,260340
  pid_t child_pid_;child_pid_6948,260493
ForkingDeathTest::ForkingDeathTest(const char* a_statement, const RE* a_regex)ForkingDeathTest6952,260551
int ForkingDeathTest::Wait() {Wait6959,260861
class NoExecDeathTest : public ForkingDeathTest {NoExecDeathTest6973,261205
  NoExecDeathTest(const char* a_statement, const RE* a_regex) :NoExecDeathTest6975,261264
DeathTest::TestRole NoExecDeathTest::AssumeRole() {AssumeRole6982,261561
class ExecDeathTest : public ForkingDeathTest {ExecDeathTest7027,263382
  ExecDeathTest(const char* a_statement, const RE* a_regex,ExecDeathTest7029,263439
  const char* const file_;file_7035,263725
  const int line_;line_7037,263809
class Arguments {Arguments7041,263890
  Arguments() {Arguments7043,263917
  ~Arguments() {~Arguments7047,263965
  void AddArgument(const char* argument) {AddArgument7053,264099
  void AddArguments(const ::std::vector<Str>& arguments) {AddArguments7058,264233
  char* const* Argv() {Argv7065,264489
  std::vector<char*> args_;args_7069,264549
struct ExecDeathTestArgs {ExecDeathTestArgs7074,264690
  char* const* argv;  // Command-line arguments for the child's call to execargv7075,264717
  int close_fd;       // File descriptor to close; the read end of a pipeclose_fd7076,264794
inline char** GetEnviron() {GetEnviron7080,264891
extern "C" char** environ;environ7089,265250
inline char** GetEnviron() { return environ; }GetEnviron7090,265277
static int ExecDeathTestChildMain(void* child_arg) {ExecDeathTestChildMain7096,265560
bool StackLowerThanAddress(const void* ptr) GTEST_NO_INLINE_;GTEST_NO_INLINE_7135,267350
bool StackLowerThanAddress(const void* ptr) {StackLowerThanAddress7136,267412
bool StackGrowsDown() {StackGrowsDown7141,267497
static pid_t ExecDeathTestFork(char* const* argv, int close_fd) {ExecDeathTestFork7149,267733
DeathTest::TestRole ExecDeathTest::AssumeRole() {AssumeRole7187,269053
bool DefaultDeathTestFactory::Create(const char* statement, const RE* regex,Create7240,270974
static void SplitString(const ::std::string& str, char delimiter,SplitString7294,272756
int GetStatusFileDescriptor(unsigned int parent_process_id,GetStatusFileDescriptor7315,273525
InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {ParseInternalRunDeathTestFlag7380,276309
# define GTEST_PATH_MAX_ GTEST_PATH_MAX_7479,280012
namespace testing {testing7489,280254
namespace internal {internal7490,280274
const char kPathSeparator = '\\';kPathSeparator7497,280563
const char kAlternatePathSeparator = '/';kAlternatePathSeparator7498,280597
const char kPathSeparatorString[] = "\\";kPathSeparatorString7499,280639
const char kAlternatePathSeparatorString[] = "/";kAlternatePathSeparatorString7500,280681
const char kCurrentDirectoryString[] = "\\";kCurrentDirectoryString7505,280929
const DWORD kInvalidFileAttributes = 0xffffffff;kInvalidFileAttributes7507,281027
const char kCurrentDirectoryString[] = ".\\";kCurrentDirectoryString7509,281083
static bool IsPathSeparator(char c) {IsPathSeparator7518,281385
FilePath FilePath::GetCurrentDir() {GetCurrentDir7527,281628
FilePath FilePath::RemoveExtension(const char* extension) const {RemoveExtension7545,282378
const char* FilePath::FindLastPathSeparator() const {FindLastPathSeparator7556,282870
FilePath FilePath::RemoveDirectoryName() const {RemoveDirectoryName7575,283698
FilePath FilePath::RemoveFileName() const {RemoveFileName7586,284300
FilePath FilePath::MakeFileName(const FilePath& directory,MakeFileName7603,284871
FilePath FilePath::ConcatPaths(const FilePath& directory,ConcatPaths7618,285470
bool FilePath::FileOrDirectoryExists() const {FileOrDirectoryExists7629,285960
bool FilePath::DirectoryExists() const {DirectoryExists7643,286436
bool FilePath::IsRootDirectory() const {IsRootDirectory7673,287359
bool FilePath::IsAbsolutePath() const {IsAbsolutePath7685,287799
FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,GenerateUniqueFileName7706,288646
bool FilePath::IsDirectory() const {IsDirectory7720,289273
bool FilePath::CreateDirectoriesRecursively() const {CreateDirectoriesRecursively7728,289588
bool FilePath::CreateFolder() const {CreateFolder7745,290225
FilePath FilePath::RemoveTrailingPathSeparator() const {RemoveTrailingPathSeparator7766,290987
void FilePath::Normalize() {Normalize7776,291437
#define GTEST_IMPLEMENTATION_ GTEST_IMPLEMENTATION_7866,294411
#undef GTEST_IMPLEMENTATION_GTEST_IMPLEMENTATION_7867,294443
namespace testing {testing7869,294473
namespace internal {internal7870,294493
const int kStdOutFileno = 1;kStdOutFileno7874,294631
const int kStdErrFileno = 2;kStdErrFileno7875,294660
size_t GetThreadCount() {GetThreadCount7885,294919
size_t GetThreadCount() {GetThreadCount7904,295497
RE::~RE() {~RE7916,295772
bool RE::FullMatch(const char* str, const RE& re) {FullMatch7929,296195
bool RE::PartialMatch(const char* str, const RE& re) {PartialMatch7938,296461
void RE::Init(const char* regex) {Init7946,296690
bool IsInSet(char ch, const char* str) {IsInSet7979,297948
bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }IsAsciiDigit7986,298191
bool IsAsciiPunct(char ch) {IsAsciiPunct7987,298253
bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }IsRepeat7990,298344
bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \f\n\r\t\v"); }IsAsciiWhiteSpace7991,298398
bool IsAsciiWordChar(char ch) {IsAsciiWordChar7992,298469
bool IsValidEscape(char c) {IsValidEscape7998,298672
bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {AtomMatchesChar8004,298895
String FormatRegexSyntaxError(const char* regex, int index) {FormatRegexSyntaxError8026,299692
bool ValidateRegex(const char* regex) {ValidateRegex8033,299993
bool MatchRepetitionAndRegexAtHead(MatchRepetitionAndRegexAtHead8096,302301
bool MatchRegexAtHead(const char* regex, const char* str) {MatchRegexAtHead8123,303355
bool MatchRegexAnywhere(const char* regex, const char* str) {MatchRegexAnywhere8159,304866
RE::~RE() {~RE8176,305238
bool RE::FullMatch(const char* str, const RE& re) {FullMatch8182,305398
bool RE::PartialMatch(const char* str, const RE& re) {PartialMatch8188,305617
void RE::Init(const char* regex) {Init8193,305791
const char kUnknownFile[] = "unknown file";kUnknownFile8228,306757
GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {FormatFileLocation8232,306939
GTEST_API_ ::std::string FormatCompilerIndependentFileLocation(FormatCompilerIndependentFileLocation8250,307661
GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)GTestLog8261,307938
GTestLog::~GTestLog() {~GTestLog8272,308416
class CapturedStream {CapturedStream8289,308852
  CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {CapturedStream8292,308940
  ~CapturedStream() {~CapturedStream8322,310206
  String GetCapturedString() {GetCapturedString8326,310264
  const int fd_;  // A stream to capture.fd_8348,310836
  int uncaptured_fd_;uncaptured_fd_8349,310878
  ::std::string filename_;filename_8351,310959
size_t CapturedStream::GetFileSize(FILE* file) {GetFileSize8357,311084
String CapturedStream::ReadEntireFile(FILE* file) {ReadEntireFile8363,311258
static CapturedStream* g_captured_stderr = NULL;g_captured_stderr8389,311992
static CapturedStream* g_captured_stdout = NULL;g_captured_stdout8390,312041
void CaptureStream(int fd, const char* stream_name, CapturedStream** stream) {CaptureStream8393,312145
String GetCapturedStream(CapturedStream** captured_stream) {GetCapturedStream8402,312473
void CaptureStdout() {CaptureStdout8412,312705
void CaptureStderr() {CaptureStderr8417,312821
String GetCapturedStdout() { return GetCapturedStream(&g_captured_stdout); }GetCapturedStdout8422,312968
String GetCapturedStderr() { return GetCapturedStream(&g_captured_stderr); }GetCapturedStderr8425,313105
::std::vector<String> g_argvs;g_argvs8432,313317
const ::std::vector<String>& GetArgvs() { return g_argvs; }GetArgvs8435,313401
namespace posix {posix8440,313523
void Abort() {Abort8441,313541
static String FlagToEnvVar(const char* flag) {FlagToEnvVar8451,313849
bool ParseInt32(const Message& src_text, const char* str, Int32* value) {ParseInt328466,314307
bool BoolFromGTestEnv(const char* flag, bool default_value) {BoolFromGTestEnv8508,315750
Int32 Int32FromGTestEnv(const char* flag, Int32 default_value) {Int32FromGTestEnv8518,316209
const char* StringFromGTestEnv(const char* flag, const char* default_value) {StringFromGTestEnv8540,316942
namespace testing {testing8597,319437
# define snprintf snprintf8604,319566
void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,PrintByteSegmentInObjectTo8612,319831
void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,PrintBytesInObjectToImpl8631,320385
namespace internal2 {internal28656,321259
void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,PrintBytesInObjectTo8663,321596
namespace internal {internal8670,321789
enum CharFormat {CharFormat8677,322075
  kAsIs,kAsIs8678,322093
  kHexEscape,kHexEscape8679,322102
  kSpecialEscapekSpecialEscape8680,322116
inline bool IsPrintableAscii(wchar_t c) {IsPrintableAscii8686,322293
static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {PrintAsCharLiteralTo8695,322654
static CharFormat PrintAsWideStringLiteralTo(wchar_t c, ostream* os) {PrintAsWideStringLiteralTo8741,323617
static CharFormat PrintAsNarrowStringLiteralTo(char c, ostream* os) {PrintAsNarrowStringLiteralTo8756,324009
void PrintCharAndCodeTo(Char c, ostream* os) {PrintCharAndCodeTo8765,324481
void PrintTo(unsigned char c, ::std::ostream* os) {PrintTo8790,325311
void PrintTo(signed char c, ::std::ostream* os) {PrintTo8793,325409
void PrintTo(wchar_t wc, ostream* os) {PrintTo8799,325647
static void PrintCharsAsStringTo(const char* begin, size_t len, ostream* os) {PrintCharsAsStringTo8806,325901
void UniversalPrintArray(const char* begin, size_t len, ostream* os) {UniversalPrintArray8823,326535
static void PrintWideCharsAsStringTo(const wchar_t* begin, size_t len,PrintWideCharsAsStringTo8830,326827
void PrintTo(const char* s, ostream* os) {PrintTo8848,327509
void PrintTo(const wchar_t* s, ostream* os) {PrintTo8865,328214
void PrintStringTo(const ::string& s, ostream* os) {PrintStringTo8877,328511
void PrintStringTo(const ::std::string& s, ostream* os) {PrintStringTo8882,328650
void PrintWideStringTo(const ::wstring& s, ostream* os) {PrintWideStringTo8888,328818
void PrintWideStringTo(const ::std::wstring& s, ostream* os) {PrintWideStringTo8894,328993
#define GTEST_IMPLEMENTATION_ GTEST_IMPLEMENTATION_8941,331130
#undef GTEST_IMPLEMENTATION_GTEST_IMPLEMENTATION_8942,331162
namespace testing {testing8944,331192
internal::String TestPartResult::ExtractSummary(const char* message) {ExtractSummary8950,331328
std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {operator <<8957,331632
void TestPartResultArray::Append(const TestPartResult& result) {Append8967,332054
const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {GetTestPartResult8972,332210
int TestPartResultArray::size() const {size8982,332523
namespace internal {internal8986,332608
HasNewFatalFailureHelper::HasNewFatalFailureHelper()HasNewFatalFailureHelper8988,332630
HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {~HasNewFatalFailureHelper8995,332910
void HasNewFatalFailureHelper::ReportTestPartResult(ReportTestPartResult9000,333060
namespace testing {testing9042,334921
namespace internal {internal9043,334941
static const char* SkipSpaces(const char* str) {SkipSpaces9049,335107
const char* TypedTestCasePState::VerifyRegisteredTestNames(VerifyRegisteredTestNames9058,335366

tools/net_speed_benchmark.cpp,44
int main(int argc, char** argv) {main3,28

tools/device_query.cpp,44
int main(int argc, char** argv) {main3,29

tools/caffe.cpp,1072
typedef int (*BrewFunction)();BrewFunction59,1870
typedef std::map<caffe::string, BrewFunction> BrewMap;BrewMap60,1901
BrewMap g_brew_map;g_brew_map61,1956
#define RegisterBrewFunction(RegisterBrewFunction63,1977
static BrewFunction GetBrewFunction(const caffe::string& name) {GetBrewFunction74,2200
static void get_gpus(vector<int>* gpus) {get_gpus89,2696
caffe::Phase get_phase_from_flags(caffe::Phase default_value) {get_phase_from_flags112,3252
vector<string> get_stages_from_flags() {get_stages_from_flags124,3601
int device_query() {device_query137,3982
RegisterBrewFunction(device_query);device_query147,4219
void CopyLayers(caffe::Solver<float>* solver, const std::string& model_list) {CopyLayers151,4342
caffe::SolverAction::Enum GetRequestedAction(GetRequestedAction165,4936
int train() {train180,5354
RegisterBrewFunction(train);train262,8019
int test() {test266,8074
RegisterBrewFunction(test);test335,10528
int time() {time339,10608
RegisterBrewFunction(time);time427,14095
int main(int argc, char** argv) {main429,14124

tools/upgrade_solver_proto_text.cpp,46
int main(int argc, char** argv) {main18,474

tools/extra/plot_training_log.py.example,1134
def get_log_parsing_script():get_log_parsing_script12,233
def get_log_file_suffix():get_log_file_suffix17,398
def get_chart_type_description_separator():get_chart_type_description_separator20,444
def is_x_axis_field(field):is_x_axis_field23,509
def create_field_index():create_field_index27,613
def get_supported_chart_types():get_supported_chart_types41,1168
def get_chart_type_description(chart_type):get_chart_type_description54,1690
def get_data_file_type(chart_type):get_data_file_type59,1888
def get_data_file(chart_type, path_to_log):get_data_file64,2052
def get_field_descriptions(chart_type):get_field_descriptions68,2199
def get_field_indices(x_axis_field, y_axis_field):get_field_indices75,2458
def load_data(data_file, field_idx0, field_idx1):load_data80,2669
def random_marker():random_marker91,3048
def get_data_label(path_to_log):get_data_label97,3206
def get_legend_loc(chart_type):get_legend_loc102,3359
def plot_chart(chart_type, path_to_png, path_to_log_list):plot_chart111,3638
def print_help():print_help140,4943
def is_valid_chart_type(chart_type):is_valid_chart_type160,5840

tools/extra/summarize.py,385
COLORS = ['92', '93', '94', '95', '97', '96', '42', '43;30', '100',COLORS18,425
DISCONNECTED_COLOR = '41'DISCONNECTED_COLOR20,530
def read_net(filename):read_net22,557
def format_param(param):format_param28,712
def printed_len(s):printed_len38,992
def print_table(table, max_width):print_table41,1061
def summarize_net(net):summarize_net63,1928
def main():main128,4405

tools/extra/parse_log.py,479
def parse_log(path_to_log):parse_log17,186
def parse_line_for_net_output(regex_obj, row, row_dict_list,parse_line_for_net_output86,2725
def fix_initial_nan_learning_rate(dict_list):fix_initial_nan_learning_rate128,4347
def save_csv_files(logfile_path, output_dir, train_dict_list, test_dict_list,save_csv_files141,4800
def write_csv(output_filename, dict_list, delimiter, verbose=False):write_csv157,5406
def parse_args():parse_args178,6002
def main():main202,6838

tools/extra/extract_seconds.py,275
def extract_datetime_from_line(line, year):extract_datetime_from_line6,60
def get_log_created_year(input_file):get_log_created_year22,594
def get_start_time(line_iterable, year):get_start_time31,848
def extract_seconds(input_file, output_file):extract_seconds44,1179

tools/extra/resize_and_crop_images.py,500
FLAGS = gflags.FLAGSFLAGS17,645
class OpenCVResizeCrop:OpenCVResizeCrop19,667
    def resize_and_crop_image(self, input_file, output_file, output_side_length = 256):resize_and_crop_image20,691
class PILResizeCrop:PILResizeCrop38,1577
    def resize_and_crop_image(self, input_file, output_file, output_side_length = 256, fit = True):resize_and_crop_image40,1687
class ResizeCropImagesMapper(mapreducer.BasicMapper):ResizeCropImagesMapper73,2947
    def map(self, key, value):map77,3132

tools/extra/parse_log.sh,0

tools/extra/launch_resize_and_crop_images.sh,0

tools/upgrade_net_proto_text.cpp,46
int main(int argc, char** argv) {main18,466

tools/train_net.cpp,44
int main(int argc, char** argv) {main3,28

tools/upgrade_net_proto_binary.cpp,46
int main(int argc, char** argv) {main18,468

tools/extract_features.cpp,138
int main(int argc, char** argv) {main25,527
int feature_extraction_pipeline(int argc, char** argv) {feature_extraction_pipeline31,706

tools/convert_imageset.cpp,47
int main(int argc, char** argv) {main46,1543

tools/finetune_net.cpp,44
int main(int argc, char** argv) {main3,28

tools/compute_image_mean.cpp,46
int main(int argc, char** argv) {main24,482

tools/test_net.cpp,44
int main(int argc, char** argv) {main3,28

include/caffe/layer_factory.hpp,951
#define CAFFE_LAYER_FACTORY_H_CAFFE_LAYER_FACTORY_H_40,1275
namespace caffe {caffe50,1449
class LayerRegistry {LayerRegistry56,1534
  typedef shared_ptr<Layer<Dtype> > (*Creator)(const LayerParameter&);Creator58,1565
  typedef std::map<string, Creator> CreatorRegistry;CreatorRegistry59,1636
  static CreatorRegistry& Registry() {Registry61,1690
  static void AddCreator(const string& type, Creator creator) {AddCreator67,1845
  static shared_ptr<Layer<Dtype> > CreateLayer(const LayerParameter& param) {CreateLayer75,2127
  static vector<string> LayerTypeList() {LayerTypeList86,2553
  LayerRegistry() {}LayerRegistry99,2972
  static string LayerTypeListString() {LayerTypeListString101,2994
class LayerRegisterer {LayerRegisterer117,3403
  LayerRegisterer(const string& type,LayerRegisterer119,3436
#define REGISTER_LAYER_CREATOR(REGISTER_LAYER_CREATOR127,3673
#define REGISTER_LAYER_CLASS(REGISTER_LAYER_CLASS131,3917

include/caffe/layer.hpp,2616
#define CAFFE_LAYER_H_CAFFE_LAYER_H_2,23
namespace boost { class mutex; }boost18,400
namespace caffe {caffe20,434
class Layer {Layer33,917
  explicit Layer(const LayerParameter& param)Layer40,1120
  virtual ~Layer() {}~Layer52,1558
  void SetUp(const vector<Blob<Dtype>*>& bottom,SetUp67,2128
  virtual void LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp91,2997
  vector<shared_ptr<Blob<Dtype> > >& blobs() {blobs157,5618
  const LayerParameter& layer_param() const { return layer_param_; }layer_param164,5742
  inline Dtype loss(const int top_index) const {loss174,6050
  inline void set_loss(const int top_index, const Dtype value) {set_loss181,6256
  virtual inline const char* type() const { return ""; }type191,6492
  virtual inline int ExactNumBottomBlobs() const { return -1; }ExactNumBottomBlobs200,6824
  virtual inline int MinBottomBlobs() const { return -1; }MinBottomBlobs208,7168
  virtual inline int MaxBottomBlobs() const { return -1; }MaxBottomBlobs216,7507
  virtual inline int ExactNumTopBlobs() const { return -1; }ExactNumTopBlobs224,7834
  virtual inline int MinTopBlobs() const { return -1; }MinTopBlobs232,8169
  virtual inline int MaxTopBlobs() const { return -1; }MaxTopBlobs240,8499
  virtual inline bool EqualNumBottomTopBlobs() const { return false; }EqualNumBottomTopBlobs248,8793
  virtual inline bool AutoTopBlobs() const { return false; }AutoTopBlobs258,9155
  virtual inline bool AllowForceBackward(const int bottom_index) const {AllowForceBackward268,9529
  inline bool param_propagate_down(const int param_id) {param_propagate_down279,9912
  inline void set_param_propagate_down(const int param_id, const bool value) {set_param_propagate_down287,10221
  LayerParameter layer_param_;layer_param_297,10532
  Phase phase_;phase_299,10597
  vector<shared_ptr<Blob<Dtype> > > blobs_;blobs_301,10689
  vector<bool> param_propagate_down_;param_propagate_down_303,10808
  vector<Dtype> loss_;loss_307,10959
  virtual void Forward_gpu(const vector<Blob<Dtype>*>& bottom,Forward_gpu316,11281
  virtual void Backward_gpu(const vector<Blob<Dtype>*>& top,Backward_gpu334,11987
  virtual void CheckBlobCounts(const vector<Blob<Dtype>*>& bottom,CheckBlobCounts346,12460
  inline void SetLossWeights(const vector<Blob<Dtype>*>& top) {SetLossWeights389,14112
inline Dtype Layer<Dtype>::Forward(const vector<Blob<Dtype>*>& bottom,Forward413,15051
inline void Layer<Dtype>::Backward(const vector<Blob<Dtype>*>& top,Backward449,16172
void Layer<Dtype>::ToProto(LayerParameter* param, bool write_diff) {ToProto466,16635

include/caffe/util/im2col.hpp,90
#define _CAFFE_UTIL_IM2COL_HPP__CAFFE_UTIL_IM2COL_HPP_2,32
namespace caffe {caffe4,65

include/caffe/util/mkl_alternate.hpp,465
#define CAFFE_UTIL_MKL_ALTERNATE_H_CAFFE_UTIL_MKL_ALTERNATE_H_2,36
#define DEFINE_VSL_UNARY_FUNC(DEFINE_VSL_UNARY_FUNC24,488
#define DEFINE_VSL_UNARY_FUNC_WITH_PARAM(DEFINE_VSL_UNARY_FUNC_WITH_PARAM47,1316
#define DEFINE_VSL_BINARY_FUNC(DEFINE_VSL_BINARY_FUNC66,2011
inline void cblas_saxpby(const int N, const float alpha, const float* X,cblas_saxpby89,2905
inline void cblas_daxpby(const int N, const double alpha, const double* X,cblas_daxpby95,3168

include/caffe/util/db.hpp,609
#define CAFFE_UTIL_DB_HPPCAFFE_UTIL_DB_HPP2,26
namespace caffe { namespace db {caffe9,135
namespace caffe { namespace db {db9,135
enum Mode { READ, WRITE, NEW };Mode11,169
enum Mode { READ, WRITE, NEW };READ11,169
enum Mode { READ, WRITE, NEW };WRITE11,169
enum Mode { READ, WRITE, NEW };NEW11,169
class Cursor {Cursor13,202
  Cursor() { }Cursor15,226
  virtual ~Cursor() { }~Cursor16,241
class Transaction {Transaction26,452
  Transaction() { }Transaction28,481
  virtual ~Transaction() { }~Transaction29,501
class DB {DB36,668
  DB() { }DB38,688
  virtual ~DB() { }~DB39,699

include/caffe/util/hdf5.hpp,82
#define CAFFE_UTIL_HDF5_H_CAFFE_UTIL_HDF5_H_2,27
namespace caffe {caffe11,141

include/caffe/util/math_functions.hpp,517
#define CAFFE_UTIL_MATH_FUNCTIONS_H_CAFFE_UTIL_MATH_FUNCTIONS_H_2,37
namespace caffe {caffe13,287
inline void caffe_memset(const size_t N, const int alpha, void* X) {caffe_memset42,1273
inline int8_t caffe_sign(Dtype val) {caffe_sign114,3537
#define DEFINE_CAFFE_CPU_UNARY_FUNC(DEFINE_CAFFE_CPU_UNARY_FUNC124,4006
inline void caffe_gpu_memset(const size_t N, const int alpha, void* X) {caffe_gpu_memset177,5990
#define DEFINE_AND_INSTANTIATE_GPU_UNARY_FUNC(DEFINE_AND_INSTANTIATE_GPU_UNARY_FUNC260,8750

include/caffe/util/benchmark.hpp,875
#define CAFFE_UTIL_BENCHMARK_H_CAFFE_UTIL_BENCHMARK_H_2,32
namespace caffe {caffe8,163
class Timer {Timer10,182
  inline bool initted() { return initted_; }initted20,375
  inline bool running() { return running_; }running21,420
  inline bool has_run_at_least_once() { return has_run_at_least_once_; }has_run_at_least_once22,465
  bool initted_;initted_27,567
  bool running_;running_28,584
  bool has_run_at_least_once_;has_run_at_least_once_29,601
  cudaEvent_t start_gpu_;start_gpu_31,649
  cudaEvent_t stop_gpu_;stop_gpu_32,675
  boost::posix_time::ptime start_cpu_;start_cpu_34,707
  boost::posix_time::ptime stop_cpu_;stop_cpu_35,746
  float elapsed_milliseconds_;elapsed_milliseconds_36,784
  float elapsed_microseconds_;elapsed_microseconds_37,815
class CPUTimer : public Timer {CPUTimer40,850
  virtual ~CPUTimer() {}~CPUTimer43,914

include/caffe/util/signal_handler.h,277
#define INCLUDE_CAFFE_UTIL_SIGNAL_HANDLER_H_INCLUDE_CAFFE_UTIL_SIGNAL_HANDLER_H_2,45
namespace caffe {caffe7,154
class SignalHandler {SignalHandler9,173
  SolverAction::Enum SIGINT_action_;SIGINT_action_18,491
  SolverAction::Enum SIGHUP_action_;SIGHUP_action_19,528

include/caffe/util/device_alternate.hpp,651
#define CAFFE_UTIL_DEVICE_ALTERNATE_H_CAFFE_UTIL_DEVICE_ALTERNATE_H_2,39
#define NO_GPU NO_GPU10,174
#define STUB_GPU(STUB_GPU12,252
#define STUB_GPU_FORWARD(STUB_GPU_FORWARD21,630
#define STUB_GPU_BACKWARD(STUB_GPU_BACKWARD26,836
#define CUDA_CHECK(CUDA_CHECK48,1420
#define CUBLAS_CHECK(CUBLAS_CHECK55,1647
#define CURAND_CHECK(CURAND_CHECK62,1847
#define CUDA_KERNEL_LOOP(CUDA_KERNEL_LOOP70,2076
#define CUDA_POST_KERNEL_CHECK CUDA_POST_KERNEL_CHECK76,2301
namespace caffe {caffe78,2367
const int CAFFE_CUDA_NUM_THREADS = 512;CAFFE_CUDA_NUM_THREADS85,2568
inline int CAFFE_GET_BLOCKS(const int N) {CAFFE_GET_BLOCKS88,2648

include/caffe/util/blocking_queue.hpp,225
#define CAFFE_UTIL_BLOCKING_QUEUE_HPP_CAFFE_UTIL_BLOCKING_QUEUE_HPP_2,39
namespace caffe {caffe7,115
class BlockingQueue {BlockingQueue10,155
  std::queue<T> queue_;queue_37,731
  shared_ptr<sync> sync_;sync_38,755

include/caffe/util/rng.hpp,350
#define CAFFE_RNG_CPP_HPP_CAFFE_RNG_CPP_HPP_2,27
namespace caffe {caffe12,212
typedef boost::mt19937 rng_t;rng_t14,231
inline rng_t* caffe_rng() {caffe_rng16,262
inline void shuffle(RandomAccessIterator begin, RandomAccessIterator end,shuffle22,452
inline void shuffle(RandomAccessIterator begin, RandomAccessIterator end) {shuffle38,996

include/caffe/util/format.hpp,173
#define CAFFE_UTIL_FORMAT_H_CAFFE_UTIL_FORMAT_H_2,29
namespace caffe {caffe8,180
inline std::string format_int(int n, int numberOfLeadingZeros = 0 ) {format_int10,199

include/caffe/util/nccl.hpp,372
#define CAFFE_UTIL_NCCL_H_CAFFE_UTIL_NCCL_H_2,27
#define NCCL_CHECK(NCCL_CHECK9,119
namespace caffe {caffe16,273
namespace nccl {nccl18,292
template<> class dataType<float> {dataType22,353
  static const ncclDataType_t type = ncclFloat;type24,397
template<> class dataType<double> {dataType26,448
  static const ncclDataType_t type = ncclDouble;type28,493

include/caffe/util/qnn.hpp,77
#define CAFFE_UTIL_QNN_H_CAFFE_UTIL_QNN_H_2,26
namespace caffecaffe8,124

include/caffe/util/db_leveldb.hpp,1430
#define CAFFE_UTIL_DB_LEVELDB_HPPCAFFE_UTIL_DB_LEVELDB_HPP3,53
namespace caffe { namespace db {caffe12,195
namespace caffe { namespace db {db12,195
class LevelDBCursor : public Cursor {LevelDBCursor14,229
  explicit LevelDBCursor(leveldb::Iterator* iter)LevelDBCursor16,276
  ~LevelDBCursor() { delete iter_; }~LevelDBCursor21,432
  virtual void SeekToFirst() { iter_->SeekToFirst(); }SeekToFirst22,469
  virtual void Next() { iter_->Next(); }Next23,524
  virtual string key() { return iter_->key().ToString(); }key24,565
  virtual string value() { return iter_->value().ToString(); }value25,624
  virtual bool valid() { return iter_->Valid(); }valid26,687
  leveldb::Iterator* iter_;iter_29,748
class LevelDBTransaction : public Transaction {LevelDBTransaction32,780
  explicit LevelDBTransaction(leveldb::DB* db) : db_(db) { CHECK_NOTNULL(db_); }LevelDBTransaction34,837
  virtual void Put(const string& key, const string& value) {Put35,918
  virtual void Commit() {Commit38,1011
  leveldb::DB* db_;db_45,1247
  leveldb::WriteBatch batch_;batch_46,1267
class LevelDB : public DB {LevelDB51,1349
  LevelDB() : db_(NULL) { }LevelDB53,1386
  virtual ~LevelDB() { Close(); }~LevelDB54,1414
  virtual void Close() {Close56,1502
  virtual LevelDBCursor* NewCursor() {NewCursor62,1596
  virtual LevelDBTransaction* NewTransaction() {NewTransaction65,1711
  leveldb::DB* db_;db_70,1815

include/caffe/util/io.hpp,1698
#define CAFFE_UTIL_IO_H_CAFFE_UTIL_IO_H_2,25
#define CAFFE_TMP_DIR_RETRIES CAFFE_TMP_DIR_RETRIES16,337
namespace caffe {caffe19,379
inline void MakeTempDir(string* temp_dirname) {MakeTempDir24,467
inline void MakeTempFilename(string* temp_filename) {MakeTempFilename39,953
inline bool ReadProtoFromTextFile(const string& filename, Message* proto) {ReadProtoFromTextFile54,1406
inline void ReadProtoFromTextFileOrDie(const char* filename, Message* proto) {ReadProtoFromTextFileOrDie58,1542
inline void ReadProtoFromTextFileOrDie(const string& filename, Message* proto) {ReadProtoFromTextFileOrDie62,1673
inline void WriteProtoToTextFile(const Message& proto, const string& filename) {WriteProtoToTextFile67,1883
inline bool ReadProtoFromBinaryFile(const string& filename, Message* proto) {ReadProtoFromBinaryFile73,2085
inline void ReadProtoFromBinaryFileOrDie(const char* filename, Message* proto) {ReadProtoFromBinaryFileOrDie77,2225
inline void ReadProtoFromBinaryFileOrDie(const string& filename,ReadProtoFromBinaryFileOrDie81,2360
inline void WriteProtoToBinaryFile(WriteProtoToBinaryFile88,2618
inline bool ReadFileToDatum(const string& filename, Datum* datum) {ReadFileToDatum95,2838
inline bool ReadImageToDatum(const string& filename, const int label,ReadImageToDatum103,3129
inline bool ReadImageToDatum(const string& filename, const int label,ReadImageToDatum109,3384
inline bool ReadImageToDatum(const string& filename, const int label,ReadImageToDatum114,3584
inline bool ReadImageToDatum(const string& filename, const int label,ReadImageToDatum119,3765
inline bool ReadImageToDatum(const string& filename, const int label,ReadImageToDatum124,3921

include/caffe/util/insert_splits.hpp,105
#define _CAFFE_UTIL_INSERT_SPLITS_HPP__CAFFE_UTIL_INSERT_SPLITS_HPP_2,39
namespace caffe {caffe8,133

include/caffe/util/upgrade_proto.hpp,99
#define CAFFE_UTIL_UPGRADE_PROTO_H_CAFFE_UTIL_UPGRADE_PROTO_H_2,36
namespace caffe {caffe8,127

include/caffe/util/cudnn.hpp,1669
#define CAFFE_UTIL_CUDNN_H_CAFFE_UTIL_CUDNN_H_2,28
#define CUDNN_VERSION_MIN(CUDNN_VERSION_MIN10,157
#define CUDNN_CHECK(CUDNN_CHECK13,267
inline const char* cudnnGetErrorString(cudnnStatus_t status) {cudnnGetErrorString20,455
namespace caffe {caffe58,1818
namespace cudnn {cudnn60,1837
template<> class dataType<float>  {dataType63,1898
  static const cudnnDataType_t type = CUDNN_DATA_FLOAT;type65,1943
  static float oneval, zeroval;oneval66,1999
  static float oneval, zeroval;zeroval66,1999
  static const void *one, *zero;one67,2031
  static const void *one, *zero;zero67,2031
template<> class dataType<double> {dataType69,2067
  static const cudnnDataType_t type = CUDNN_DATA_DOUBLE;type71,2112
  static double oneval, zeroval;oneval72,2169
  static double oneval, zeroval;zeroval72,2169
  static const void *one, *zero;one73,2202
  static const void *one, *zero;zero73,2202
inline void createTensor4dDesc(cudnnTensorDescriptor_t* desc) {createTensor4dDesc77,2265
inline void setTensor4dDesc(cudnnTensorDescriptor_t* desc,setTensor4dDesc82,2408
inline void setTensor4dDesc(cudnnTensorDescriptor_t* desc,setTensor4dDesc90,2725
inline void createFilterDesc(cudnnFilterDescriptor_t* desc,createFilterDesc101,3093
inline void createConvolutionDesc(cudnnConvolutionDescriptor_t* conv) {createConvolutionDesc114,3533
inline void setConvolutionDesc(cudnnConvolutionDescriptor_t* conv,setConvolutionDesc119,3689
inline void createPoolingDesc(cudnnPoolingDescriptor_t* pool_desc,createPoolingDesc133,4236
inline void createActivationDescriptor(cudnnActivationDescriptor_t* activ_desc,createActivationDescriptor157,5113

include/caffe/util/db_lmdb.hpp,1404
#define CAFFE_UTIL_DB_LMDB_HPPCAFFE_UTIL_DB_LMDB_HPP3,47
namespace caffe { namespace db {caffe12,165
namespace caffe { namespace db {db12,165
inline void MDB_CHECK(int mdb_status) {MDB_CHECK14,199
class LMDBCursor : public Cursor {LMDBCursor18,307
  explicit LMDBCursor(MDB_txn* mdb_txn, MDB_cursor* mdb_cursor)LMDBCursor20,351
  virtual ~LMDBCursor() {~LMDBCursor24,504
  virtual void SeekToFirst() { Seek(MDB_FIRST); }SeekToFirst28,598
  virtual void Next() { Seek(MDB_NEXT); }Next29,648
  virtual string key() {key30,690
  virtual string value() {value33,800
  virtual bool valid() { return valid_; }valid37,924
  void Seek(MDB_cursor_op op) {Seek40,977
  MDB_txn* mdb_txn_;mdb_txn_50,1221
  MDB_cursor* mdb_cursor_;mdb_cursor_51,1242
  MDB_val mdb_key_, mdb_value_;mdb_key_52,1269
  MDB_val mdb_key_, mdb_value_;mdb_value_52,1269
  bool valid_;valid_53,1301
class LMDBTransaction : public Transaction {LMDBTransaction56,1320
  explicit LMDBTransaction(MDB_env* mdb_env)LMDBTransaction58,1374
  MDB_env* mdb_env_;mdb_env_64,1543
  vector<string> keys, values;keys65,1564
  vector<string> keys, values;values65,1564
class LMDB : public DB {LMDB72,1669
  LMDB() : mdb_env_(NULL) { }LMDB74,1703
  virtual ~LMDB() { Close(); }~LMDB75,1733
  virtual void Close() {Close77,1818
  MDB_env* mdb_env_;mdb_env_88,2067
  MDB_dbi mdb_dbi_;mdb_dbi_89,2088

include/caffe/sgd_solvers.hpp,2297
#define CAFFE_SGD_SOLVERS_HPP_CAFFE_SGD_SOLVERS_HPP_2,31
namespace caffe {caffe9,129
class SGDSolver : public Solver<Dtype> {SGDSolver16,291
  explicit SGDSolver(const SolverParameter& param)SGDSolver18,341
  explicit SGDSolver(const string& param_file)SGDSolver20,437
  virtual inline const char* type() const { return "SGD"; }type22,534
  const vector<shared_ptr<Blob<Dtype> > >& history() { return history_; }history24,595
  vector<shared_ptr<Blob<Dtype> > > history_, update_, temp_;history_43,1554
  vector<shared_ptr<Blob<Dtype> > > history_, update_, temp_;update_43,1554
  vector<shared_ptr<Blob<Dtype> > > history_, update_, temp_;temp_43,1554
class NesterovSolver : public SGDSolver<Dtype> {NesterovSolver49,1685
  explicit NesterovSolver(const SolverParameter& param)NesterovSolver51,1743
  explicit NesterovSolver(const string& param_file)NesterovSolver53,1834
  virtual inline const char* type() const { return "Nesterov"; }type55,1926
class AdaGradSolver : public SGDSolver<Dtype> {AdaGradSolver64,2139
  explicit AdaGradSolver(const SolverParameter& param)AdaGradSolver66,2196
  explicit AdaGradSolver(const string& param_file)AdaGradSolver68,2315
  virtual inline const char* type() const { return "AdaGrad"; }type70,2435
  void constructor_sanity_check() {constructor_sanity_check74,2573
class RMSPropSolver : public SGDSolver<Dtype> {RMSPropSolver84,2780
  explicit RMSPropSolver(const SolverParameter& param)RMSPropSolver86,2837
  explicit RMSPropSolver(const string& param_file)RMSPropSolver88,2956
  virtual inline const char* type() const { return "RMSProp"; }type90,3076
  void constructor_sanity_check() {constructor_sanity_check94,3214
class AdaDeltaSolver : public SGDSolver<Dtype> {AdaDeltaSolver107,3608
  explicit AdaDeltaSolver(const SolverParameter& param)AdaDeltaSolver109,3666
  explicit AdaDeltaSolver(const string& param_file)AdaDeltaSolver111,3778
  virtual inline const char* type() const { return "AdaDelta"; }type113,3891
class AdamSolver : public SGDSolver<Dtype> {AdamSolver131,4474
  explicit AdamSolver(const SolverParameter& param)AdamSolver133,4528
  explicit AdamSolver(const string& param_file)AdamSolver135,4631
  virtual inline const char* type() const { return "Adam"; }type137,4736

include/caffe/parallel.hpp,795
#define CAFFE_PARALLEL_HPP_CAFFE_PARALLEL_HPP_2,28
namespace caffe {caffe21,424
class Params {Params27,680
  virtual ~Params() {~Params30,763
  inline size_t size() const {size33,790
  inline Dtype* data() const {data36,843
  inline Dtype* diff() const {diff39,896
  const size_t size_;           // Size of bufferssize_44,962
  Dtype* data_;                 // Network parametersdata_45,1013
  Dtype* diff_;                 // Gradientdiff_46,1067
class GPUParams : public Params<Dtype> {GPUParams53,1206
class NCCL : public GPUParams<Dtype>,NCCL67,1525
  void on_start() {}on_start105,2457
  ncclComm_t comm_;comm_109,2548
  cudaStream_t stream_;stream_110,2568
  shared_ptr<Solver<Dtype> > solver_;solver_112,2593
  boost::barrier* barrier_;barrier_114,2702

include/caffe/data_transformer.hpp,426
#define CAFFE_DATA_TRANSFORMER_HPPCAFFE_DATA_TRANSFORMER_HPP2,35
namespace caffe {caffe10,179
class DataTransformer {DataTransformer17,354
  virtual ~DataTransformer() {}~DataTransformer20,466
  TransformationParameter param_;param_143,4699
  shared_ptr<Caffe::RNG> rng_;rng_146,4735
  Phase phase_;phase_147,4766
  Blob<Dtype> data_mean_;data_mean_148,4782
  vector<Dtype> mean_values_;mean_values_149,4808

include/caffe/solver_factory.hpp,950
#define CAFFE_SOLVER_FACTORY_H_CAFFE_SOLVER_FACTORY_H_39,1229
namespace caffe {caffe48,1377
class SolverRegistry {SolverRegistry54,1463
  typedef Solver<Dtype>* (*Creator)(const SolverParameter&);Creator56,1495
  typedef std::map<string, Creator> CreatorRegistry;CreatorRegistry57,1556
  static CreatorRegistry& Registry() {Registry59,1610
  static void AddCreator(const string& type, Creator creator) {AddCreator65,1765
  static Solver<Dtype>* CreateSolver(const SolverParameter& param) {CreateSolver73,2050
  static vector<string> SolverTypeList() {SolverTypeList81,2377
  SolverRegistry() {}SolverRegistry94,2801
  static string SolverTypeListString() {SolverTypeListString96,2824
class SolverRegisterer {SolverRegisterer112,3243
  SolverRegisterer(const string& type,SolverRegisterer114,3277
#define REGISTER_SOLVER_CREATOR(REGISTER_SOLVER_CREATOR122,3495
#define REGISTER_SOLVER_CLASS(REGISTER_SOLVER_CLASS126,3739

include/caffe/test/test_caffe_main.hpp,1035
#define CAFFE_TEST_TEST_CAFFE_MAIN_HPP_CAFFE_TEST_TEST_CAFFE_MAIN_HPP_4,172
namespace caffe {caffe27,589
class MultiDeviceTest : public ::testing::Test {MultiDeviceTest30,638
  typedef typename TypeParam::Dtype Dtype;Dtype32,696
  MultiDeviceTest() {MultiDeviceTest34,751
  virtual ~MultiDeviceTest() {}~MultiDeviceTest37,817
typedef ::testing::Types<float, double> TestDtypes;TestDtypes40,853
struct CPUDevice {CPUDevice43,936
  typedef TypeParam Dtype;Dtype44,955
  static const Caffe::Brew device = Caffe::CPU;device45,982
class CPUDeviceTest : public MultiDeviceTest<CPUDevice<Dtype> > {CPUDeviceTest49,1060
                         CPUDevice<double> > TestDtypesAndDevices;TestDtypesAndDevices55,1190
struct GPUDevice {GPUDevice60,1295
  typedef TypeParam Dtype;Dtype61,1314
  static const Caffe::Brew device = Caffe::GPU;device62,1341
class GPUDeviceTest : public MultiDeviceTest<GPUDevice<Dtype> > {GPUDeviceTest66,1419
                         TestDtypesAndDevices;TestDtypesAndDevices71,1614

include/caffe/test/test_gradient_check_util.hpp,1009
#define CAFFE_TEST_GRADIENT_CHECK_UTIL_H_CAFFE_TEST_GRADIENT_CHECK_UTIL_H_2,42
namespace caffe {caffe14,247
class GradientChecker {GradientChecker19,407
  GradientChecker(const Dtype stepsize, const Dtype threshold,GradientChecker24,635
  void CheckGradient(Layer<Dtype>* layer, const vector<Blob<Dtype>*>& bottom,CheckGradient33,1133
  Dtype stepsize_;stepsize_66,2875
  Dtype threshold_;threshold_67,2894
  unsigned int seed_;seed_68,2914
  Dtype kink_;kink_69,2936
  Dtype kink_range_;kink_range_70,2951
void GradientChecker<Dtype>::CheckGradientSingle(Layer<Dtype>* layer,CheckGradientSingle75,3003
void GradientChecker<Dtype>::CheckGradientExhaustive(Layer<Dtype>* layer,CheckGradientExhaustive190,8479
void GradientChecker<Dtype>::CheckGradientEltwise(Layer<Dtype>* layer,CheckGradientEltwise206,9137
void GradientChecker<Dtype>::CheckGradientNet(CheckGradientNet220,9663
Dtype GradientChecker<Dtype>::GetObjAndGradient(const Layer<Dtype>& layer,GetObjAndGradient233,10225

include/caffe/filler.hpp,1848
#define CAFFE_FILLER_HPPCAFFE_FILLER_HPP6,234
namespace caffe {caffe15,412
class Filler {Filler19,523
  explicit Filler(const FillerParameter& param) : filler_param_(param) {}Filler21,547
  virtual ~Filler() {}~Filler22,621
  FillerParameter filler_param_;filler_param_25,700
class ConstantFiller : public Filler<Dtype> {ConstantFiller31,841
  explicit ConstantFiller(const FillerParameter& param)ConstantFiller33,896
  virtual void Fill(Blob<Dtype>* blob) {Fill35,984
class UniformFiller : public Filler<Dtype> {UniformFiller50,1460
  explicit UniformFiller(const FillerParameter& param)UniformFiller52,1514
  virtual void Fill(Blob<Dtype>* blob) {Fill54,1601
class GaussianFiller : public Filler<Dtype> {GaussianFiller65,2022
  explicit GaussianFiller(const FillerParameter& param)GaussianFiller67,2077
  virtual void Fill(Blob<Dtype>* blob) {Fill69,2165
  shared_ptr<SyncedMemory> rand_vec_;rand_vec_94,3287
class PositiveUnitballFiller : public Filler<Dtype> {PositiveUnitballFiller101,3474
  explicit PositiveUnitballFiller(const FillerParameter& param)PositiveUnitballFiller103,3537
  virtual void Fill(Blob<Dtype>* blob) {Fill105,3633
class XavierFiller : public Filler<Dtype> {XavierFiller144,5173
  explicit XavierFiller(const FillerParameter& param)XavierFiller146,5226
  virtual void Fill(Blob<Dtype>* blob) {Fill148,5312
class MSRAFiller : public Filler<Dtype> {MSRAFiller186,6877
  explicit MSRAFiller(const FillerParameter& param)MSRAFiller188,6928
  virtual void Fill(Blob<Dtype>* blob) {Fill190,7012
class BilinearFiller : public Filler<Dtype> {BilinearFiller244,9143
  explicit BilinearFiller(const FillerParameter& param)BilinearFiller246,9198
  virtual void Fill(Blob<Dtype>* blob) {Fill248,9286
Filler<Dtype>* GetFiller(const FillerParameter& param) {GetFiller271,10116

include/caffe/syncedmem.hpp,1157
#define CAFFE_SYNCEDMEM_HPP_CAFFE_SYNCEDMEM_HPP_2,29
namespace caffe {caffe12,150
inline void CaffeMallocHost(void** ptr, size_t size, bool* use_cuda) {CaffeMallocHost19,525
inline void CaffeFreeHost(void* ptr, bool use_cuda) {CaffeFreeHost36,919
class SyncedMemory {SyncedMemory57,1287
  enum SyncedHead { UNINITIALIZED, HEAD_AT_CPU, HEAD_AT_GPU, SYNCED };SyncedHead68,1566
  enum SyncedHead { UNINITIALIZED, HEAD_AT_CPU, HEAD_AT_GPU, SYNCED };UNINITIALIZED68,1566
  enum SyncedHead { UNINITIALIZED, HEAD_AT_CPU, HEAD_AT_GPU, SYNCED };HEAD_AT_CPU68,1566
  enum SyncedHead { UNINITIALIZED, HEAD_AT_CPU, HEAD_AT_GPU, SYNCED };HEAD_AT_GPU68,1566
  enum SyncedHead { UNINITIALIZED, HEAD_AT_CPU, HEAD_AT_GPU, SYNCED };SYNCED68,1566
  SyncedHead head() { return head_; }head69,1637
  size_t size() { return size_; }size70,1675
  void* cpu_ptr_;cpu_ptr_81,1854
  void* gpu_ptr_;gpu_ptr_82,1872
  size_t size_;size_83,1890
  SyncedHead head_;head_84,1906
  bool own_cpu_data_;own_cpu_data_85,1926
  bool cpu_malloc_use_cuda_;cpu_malloc_use_cuda_86,1948
  bool own_gpu_data_;own_gpu_data_87,1977
  int device_;device_88,1999

include/caffe/layers/silence_layer.hpp,626
#define CAFFE_SILENCE_LAYER_HPP_CAFFE_SILENCE_LAYER_HPP_2,33
namespace caffe {caffe10,174
class SilenceLayer : public Layer<Dtype> {SilenceLayer17,351
  explicit SilenceLayer(const LayerParameter& param)SilenceLayer19,403
  virtual void Reshape(const vector<Blob<Dtype>*>& bottom,Reshape21,487
  virtual inline const char* type() const { return "Silence"; }type24,589
  virtual inline int MinBottomBlobs() const { return 1; }MinBottomBlobs25,653
  virtual inline int ExactNumTopBlobs() const { return 0; }ExactNumTopBlobs26,711
  virtual void Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu29,784

include/caffe/layers/deconv_layer.hpp,439
#define CAFFE_DECONV_LAYER_HPP_CAFFE_DECONV_LAYER_HPP_2,32
namespace caffe {caffe12,217
class DeconvolutionLayer : public BaseConvolutionLayer<Dtype> {DeconvolutionLayer29,1068
  explicit DeconvolutionLayer(const LayerParameter& param)DeconvolutionLayer31,1141
  virtual inline const char* type() const { return "Deconvolution"; }type34,1247
  virtual inline bool reverse_dimensions() { return true; }reverse_dimensions45,1816

include/caffe/layers/cudnn_lrn_layer.hpp,680
#define CAFFE_CUDNN_LRN_LAYER_HPP_CAFFE_CUDNN_LRN_LAYER_HPP_2,35
namespace caffe {caffe12,217
class CuDNNLRNLayer : public LRNLayer<Dtype> {CuDNNLRNLayer16,279
  explicit CuDNNLRNLayer(const LayerParameter& param)CuDNNLRNLayer18,335
  bool handles_setup_;handles_setup_32,932
  cudnnHandle_t             handle_;handle_33,955
  cudnnLRNDescriptor_t norm_desc_;norm_desc_34,992
  cudnnTensorDescriptor_t bottom_desc_, top_desc_;bottom_desc_35,1027
  cudnnTensorDescriptor_t bottom_desc_, top_desc_;top_desc_35,1027
  int size_;size_37,1079
  Dtype alpha_, beta_, k_;alpha_38,1092
  Dtype alpha_, beta_, k_;beta_38,1092
  Dtype alpha_, beta_, k_;k_38,1092

include/caffe/layers/batch_reindex_layer.hpp,639
#define CAFFE_BATCHREINDEX_LAYER_HPP_CAFFE_BATCHREINDEX_LAYER_HPP_2,38
namespace caffe {caffe11,203
class BatchReindexLayer : public Layer<Dtype> {BatchReindexLayer21,504
  explicit BatchReindexLayer(const LayerParameter& param)BatchReindexLayer23,561
  virtual inline const char* type() const { return "BatchReindex"; }type28,750
  virtual inline int ExactNumBottomBlobs() const { return 2; }ExactNumBottomBlobs29,819
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs30,882
  struct pair_sort_first {pair_sort_first71,2460
    bool operator()(const std::pair<int, int> &left,operator ()72,2487

include/caffe/layers/rnn_layer.hpp,287
#define CAFFE_RNN_LAYER_HPP_CAFFE_RNN_LAYER_HPP_2,29
namespace caffe {caffe15,300
class RNNLayer : public RecurrentLayer<Dtype> {RNNLayer30,763
  explicit RNNLayer(const LayerParameter& param)RNNLayer32,820
  virtual inline const char* type() const { return "RNN"; }type35,910

include/caffe/layers/data_layer.hpp,596
#define CAFFE_DATA_LAYER_HPP_CAFFE_DATA_LAYER_HPP_2,30
namespace caffe {caffe14,316
class DataLayer : public BasePrefetchingDataLayer<Dtype> {DataLayer17,361
  virtual inline const char* type() const { return "Data"; }type23,610
  virtual inline int ExactNumBottomBlobs() const { return 0; }ExactNumBottomBlobs24,671
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs25,734
  virtual inline int MaxTopBlobs() const { return 2; }MaxTopBlobs26,789
  shared_ptr<db::DB> db_;db_33,936
  shared_ptr<db::Cursor> cursor_;cursor_34,962
  uint64_t offset_;offset_35,996

include/caffe/layers/flatten_layer.hpp,481
#define CAFFE_FLATTEN_LAYER_HPP_CAFFE_FLATTEN_LAYER_HPP_2,33
namespace caffe {caffe10,174
class FlattenLayer : public Layer<Dtype> {FlattenLayer23,691
  explicit FlattenLayer(const LayerParameter& param)FlattenLayer25,743
  virtual inline const char* type() const { return "Flatten"; }type30,927
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs31,991
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs32,1054

include/caffe/layers/inner_product_layer.hpp,754
#define CAFFE_INNER_PRODUCT_LAYER_HPP_CAFFE_INNER_PRODUCT_LAYER_HPP_2,39
namespace caffe {caffe10,186
class InnerProductLayer : public Layer<Dtype> {InnerProductLayer19,468
  explicit InnerProductLayer(const LayerParameter& param)InnerProductLayer21,525
  virtual inline const char* type() const { return "InnerProduct"; }type28,816
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs29,885
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs30,948
  int M_;M_42,1508
  int K_;K_43,1518
  int N_;N_44,1528
  bool bias_term_;bias_term_45,1538
  Blob<Dtype> bias_multiplier_;bias_multiplier_46,1557
  bool transpose_;  ///< if true, assume transposed weightstranspose_47,1589

include/caffe/layers/concat_layer.hpp,627
#define CAFFE_CONCAT_LAYER_HPP_CAFFE_CONCAT_LAYER_HPP_2,32
namespace caffe {caffe10,172
class ConcatLayer : public Layer<Dtype> {ConcatLayer17,359
  explicit ConcatLayer(const LayerParameter& param)ConcatLayer19,410
  virtual inline const char* type() const { return "Concat"; }type26,695
  virtual inline int MinBottomBlobs() const { return 1; }MinBottomBlobs27,758
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs28,816
  int count_;count_79,2988
  int num_concats_;num_concats_80,3002
  int concat_input_size_;concat_input_size_81,3022
  int concat_axis_;concat_axis_82,3048

include/caffe/layers/base_data_layer.hpp,1187
#define CAFFE_DATA_LAYERS_HPP_CAFFE_DATA_LAYERS_HPP_2,31
namespace caffe {caffe13,286
class BaseDataLayer : public Layer<Dtype> {BaseDataLayer21,477
  virtual void DataLayerSetUp(const vector<Blob<Dtype>*>& bottom,DataLayerSetUp29,922
  virtual void Reshape(const vector<Blob<Dtype>*>& bottom,Reshape32,1089
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu35,1191
  virtual void Backward_gpu(const vector<Blob<Dtype>*>& top,Backward_gpu37,1333
  TransformationParameter transform_param_;transform_param_41,1488
  shared_ptr<DataTransformer<Dtype> > data_transformer_;data_transformer_42,1532
  bool output_labels_;output_labels_43,1589
class Batch {Batch47,1642
  Blob<Dtype> data_, label_;data_49,1665
  Blob<Dtype> data_, label_;label_49,1665
class BasePrefetchingDataLayer :BasePrefetchingDataLayer53,1724
  vector<shared_ptr<Batch<Dtype> > > prefetch_;prefetch_72,2490
  BlockingQueue<Batch<Dtype>*> prefetch_free_;prefetch_free_73,2538
  BlockingQueue<Batch<Dtype>*> prefetch_full_;prefetch_full_74,2585
  Batch<Dtype>* prefetch_current_;prefetch_current_75,2632
  Blob<Dtype> transformed_data_;transformed_data_77,2668

include/caffe/layers/dummy_data_layer.hpp,829
#define CAFFE_DUMMY_DATA_LAYER_HPP_CAFFE_DUMMY_DATA_LAYER_HPP_2,36
namespace caffe {caffe11,208
class DummyDataLayer : public Layer<Dtype> {DummyDataLayer19,389
  explicit DummyDataLayer(const LayerParameter& param)DummyDataLayer21,443
  virtual void Reshape(const vector<Blob<Dtype>*>& bottom,Reshape26,690
  virtual inline const char* type() const { return "DummyData"; }type29,792
  virtual inline int ExactNumBottomBlobs() const { return 0; }ExactNumBottomBlobs30,858
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs31,921
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu36,1092
  virtual void Backward_gpu(const vector<Blob<Dtype>*>& top,Backward_gpu38,1234
  vector<shared_ptr<Filler<Dtype> > > fillers_;fillers_41,1377
  vector<bool> refill_;refill_42,1425

include/caffe/layers/exp_layer.hpp,399
#define CAFFE_EXP_LAYER_HPP_CAFFE_EXP_LAYER_HPP_2,29
namespace caffe {caffe12,208
class ExpLayer : public NeuronLayer<Dtype> {ExpLayer20,429
  explicit ExpLayer(const LayerParameter& param)ExpLayer30,823
  virtual inline const char* type() const { return "Exp"; }type35,1012
  Dtype inner_scale_, outer_scale_;inner_scale_75,2652
  Dtype inner_scale_, outer_scale_;outer_scale_75,2652

include/caffe/layers/cudnn_tanh_layer.hpp,526
#define CAFFE_CUDNN_TANH_LAYER_HPP_CAFFE_CUDNN_TANH_LAYER_HPP_2,36
namespace caffe {caffe13,261
class CuDNNTanHLayer : public TanHLayer<Dtype> {CuDNNTanHLayer20,374
  explicit CuDNNTanHLayer(const LayerParameter& param)CuDNNTanHLayer22,432
  bool handles_setup_;handles_setup_36,1032
  cudnnHandle_t             handle_;handle_37,1055
  cudnnTensorDescriptor_t bottom_desc_;bottom_desc_38,1092
  cudnnTensorDescriptor_t top_desc_;top_desc_39,1132
  cudnnActivationDescriptor_t activ_desc_;activ_desc_40,1169

include/caffe/layers/quantization_layer.hpp,955
#define CAFFE_QUANTIZATION_LAYER_HPP_CAFFE_QUANTIZATION_LAYER_HPP_2,38
namespace caffe {caffe12,226
class QuantizationLayer : public NeuronLayer<Dtype> {QuantizationLayer20,425
	explicit QuantizationLayer(const LayerParameter& param)QuantizationLayer29,791
	virtual ~QuantizationLayer() {}~QuantizationLayer31,881
	virtual inline const char* type() const { return "Quantization"; }type37,1061
	virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu57,1694
	int bit_width_;										// total bit width of quantization schemebit_width_66,1918
	QuantizationParameter_RoundMethod round_method_;	// round method of quantization schemeround_method_67,1986
	float range_low_, range_high_;						// low / high rangerange_low_68,2075
	float range_low_, range_high_;						// low / high rangerange_high_68,2075
	QuantizationParameter_RoundStrategy round_strategy_;// round strategy of quantization schemeround_strategy_69,2132

include/caffe/layers/prelu_layer.hpp,637
#define CAFFE_PRELU_LAYER_HPP_CAFFE_PRELU_LAYER_HPP_2,31
namespace caffe {caffe12,212
class PReLULayer : public NeuronLayer<Dtype> {PReLULayer23,670
  explicit PReLULayer(const LayerParameter& param)PReLULayer33,1032
  virtual inline const char* type() const { return "PReLU"; }type42,1324
  bool channel_shared_;channel_shared_93,3497
  Blob<Dtype> multiplier_;  // dot multiplier for backward computation of paramsmultiplier_94,3521
  Blob<Dtype> backward_buff_;  // temporary buffer for backward computationbackward_buff_95,3602
  Blob<Dtype> bottom_memory_;  // memory for in-place computationbottom_memory_96,3678

include/caffe/layers/spp_layer.hpp,1672
#define CAFFE_SPP_LAYER_HPP_CAFFE_SPP_LAYER_HPP_2,29
namespace caffe {caffe10,166
class SPPLayer : public Layer<Dtype> {SPPLayer19,429
  explicit SPPLayer(const LayerParameter& param)SPPLayer21,477
  virtual inline const char* type() const { return "SPP"; }type28,759
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs29,819
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs30,882
  int pyramid_height_;pyramid_height_42,1484
  int bottom_h_, bottom_w_;bottom_h_43,1507
  int bottom_h_, bottom_w_;bottom_w_43,1507
  int num_;num_44,1535
  int channels_;channels_45,1547
  int kernel_h_, kernel_w_;kernel_h_46,1564
  int kernel_h_, kernel_w_;kernel_w_46,1564
  int pad_h_, pad_w_;pad_h_47,1592
  int pad_h_, pad_w_;pad_w_47,1592
  bool reshaped_first_time_;reshaped_first_time_48,1614
  shared_ptr<SplitLayer<Dtype> > split_layer_;split_layer_51,1705
  vector<Blob<Dtype>*> split_top_vec_;split_top_vec_53,1827
  vector<vector<Blob<Dtype>*>*> pooling_bottom_vecs_;pooling_bottom_vecs_55,1946
  vector<shared_ptr<PoolingLayer<Dtype> > > pooling_layers_;pooling_layers_57,2060
  vector<vector<Blob<Dtype>*>*> pooling_top_vecs_;pooling_top_vecs_59,2199
  vector<Blob<Dtype>*> pooling_outputs_;pooling_outputs_61,2312
  vector<FlattenLayer<Dtype>*> flatten_layers_;flatten_layers_63,2421
  vector<vector<Blob<Dtype>*>*> flatten_top_vecs_;flatten_top_vecs_65,2547
  vector<Blob<Dtype>*> flatten_outputs_;flatten_outputs_67,2660
  vector<Blob<Dtype>*> concat_bottom_vec_;concat_bottom_vec_69,2780
  shared_ptr<ConcatLayer<Dtype> > concat_layer_;concat_layer_71,2890

include/caffe/layers/lstm_layer.hpp,873
#define CAFFE_LSTM_LAYER_HPP_CAFFE_LSTM_LAYER_HPP_2,30
namespace caffe {caffe15,302
class LSTMLayer : public RecurrentLayer<Dtype> {LSTMLayer48,1686
  explicit LSTMLayer(const LayerParameter& param)LSTMLayer50,1744
  virtual inline const char* type() const { return "LSTM"; }type53,1835
class LSTMUnitLayer : public Layer<Dtype> {LSTMUnitLayer69,2441
  explicit LSTMUnitLayer(const LayerParameter& param)LSTMUnitLayer71,2494
  virtual inline const char* type() const { return "LSTMUnit"; }type76,2679
  virtual inline int ExactNumBottomBlobs() const { return 3; }ExactNumBottomBlobs77,2744
  virtual inline int ExactNumTopBlobs() const { return 2; }ExactNumTopBlobs78,2807
  virtual inline bool AllowForceBackward(const int bottom_index) const {AllowForceBackward80,2868
  int hidden_dim_;hidden_dim_148,5936
  Blob<Dtype> X_acts_;X_acts_149,5955

include/caffe/layers/recurrent_layer.hpp,1302
#define CAFFE_RECURRENT_LAYER_HPP_CAFFE_RECURRENT_LAYER_HPP_2,35
namespace caffe {caffe15,301
class RecurrentLayer : public Layer<Dtype> {RecurrentLayer26,695
  explicit RecurrentLayer(const LayerParameter& param)RecurrentLayer28,749
  virtual inline const char* type() const { return "Recurrent"; }type36,1061
  virtual inline int MinBottomBlobs() const {MinBottomBlobs37,1127
  virtual inline int MaxBottomBlobs() const { return MinBottomBlobs() + 1; }MaxBottomBlobs46,1407
  virtual inline int ExactNumTopBlobs() const {ExactNumTopBlobs47,1484
  virtual inline bool AllowForceBackward(const int bottom_index) const {AllowForceBackward57,1762
  shared_ptr<Net<Dtype> > unrolled_net_;unrolled_net_151,6307
  int N_;N_154,6423
  int T_;T_160,6586
  bool static_input_;static_input_163,6678
  int last_layer_index_;last_layer_index_169,6854
  bool expose_hidden_;expose_hidden_175,7025
  vector<Blob<Dtype>* > recur_input_blobs_;recur_input_blobs_177,7049
  vector<Blob<Dtype>* > recur_output_blobs_;recur_output_blobs_178,7093
  vector<Blob<Dtype>* > output_blobs_;output_blobs_179,7138
  Blob<Dtype>* x_input_blob_;x_input_blob_180,7177
  Blob<Dtype>* x_static_input_blob_;x_static_input_blob_181,7207
  Blob<Dtype>* cont_input_blob_;cont_input_blob_182,7244

include/caffe/layers/euclidean_loss_layer.hpp,493
#define CAFFE_EUCLIDEAN_LOSS_LAYER_HPP_CAFFE_EUCLIDEAN_LOSS_LAYER_HPP_2,40
namespace caffe {caffe12,228
class EuclideanLossLayer : public LossLayer<Dtype> {EuclideanLossLayer41,1603
  explicit EuclideanLossLayer(const LayerParameter& param)EuclideanLossLayer43,1665
  virtual inline const char* type() const { return "EuclideanLoss"; }type48,1868
  virtual inline bool AllowForceBackward(const int bottom_index) const {AllowForceBackward53,2107
  Blob<Dtype> diff_;diff_102,4479

include/caffe/layers/sigmoid_layer.hpp,312
#define CAFFE_SIGMOID_LAYER_HPP_CAFFE_SIGMOID_LAYER_HPP_2,33
namespace caffe {caffe12,216
class SigmoidLayer : public NeuronLayer<Dtype> {SigmoidLayer23,527
  explicit SigmoidLayer(const LayerParameter& param)SigmoidLayer25,585
  virtual inline const char* type() const { return "Sigmoid"; }type28,676

include/caffe/layers/infogain_loss_layer.hpp,1697
#define CAFFE_INFOGAIN_LOSS_LAYER_HPP_CAFFE_INFOGAIN_LOSS_LAYER_HPP_2,39
namespace caffe {caffe13,268
class InfogainLossLayer : public LossLayer<Dtype> {InfogainLossLayer49,2006
  explicit InfogainLossLayer(const LayerParameter& param)InfogainLossLayer51,2067
  virtual inline int ExactNumBottomBlobs() const { return -1; }ExactNumBottomBlobs61,2572
  virtual inline int MinBottomBlobs() const { return 2; }MinBottomBlobs62,2636
  virtual inline int MaxBottomBlobs() const { return 3; }MaxBottomBlobs63,2694
  virtual inline int ExactNumTopBlobs() const { return -1; }ExactNumTopBlobs67,2862
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs68,2923
  virtual inline int MaxTopBlobs() const { return 2; }MaxTopBlobs69,2978
  virtual inline const char* type() const { return "InfogainLoss"; }type71,3034
  shared_ptr<Layer<Dtype> > softmax_layer_;softmax_layer_123,5715
  Blob<Dtype> prob_;prob_125,5835
  vector<Blob<Dtype>*> softmax_bottom_vec_;softmax_bottom_vec_127,5936
  vector<Blob<Dtype>*> softmax_top_vec_;softmax_top_vec_129,6057
  Blob<Dtype> infogain_;infogain_131,6099
  Blob<Dtype> sum_rows_H_;  // cache the row sums of H.sum_rows_H_132,6124
  bool has_ignore_label_;has_ignore_label_135,6237
  int ignore_label_;ignore_label_137,6326
  LossParameter_NormalizationMode normalization_;normalization_139,6387
  int infogain_axis_, outer_num_, inner_num_, num_labels_;infogain_axis_141,6438
  int infogain_axis_, outer_num_, inner_num_, num_labels_;outer_num_141,6438
  int infogain_axis_, outer_num_, inner_num_, num_labels_;inner_num_141,6438
  int infogain_axis_, outer_num_, inner_num_, num_labels_;num_labels_141,6438

include/caffe/layers/cudnn_sigmoid_layer.hpp,547
#define CAFFE_CUDNN_SIGMOID_LAYER_HPP_CAFFE_CUDNN_SIGMOID_LAYER_HPP_2,39
namespace caffe {caffe13,270
class CuDNNSigmoidLayer : public SigmoidLayer<Dtype> {CuDNNSigmoidLayer20,386
  explicit CuDNNSigmoidLayer(const LayerParameter& param)CuDNNSigmoidLayer22,450
  bool handles_setup_;handles_setup_36,1059
  cudnnHandle_t             handle_;handle_37,1082
  cudnnTensorDescriptor_t bottom_desc_;bottom_desc_38,1119
  cudnnTensorDescriptor_t top_desc_;top_desc_39,1159
  cudnnActivationDescriptor_t activ_desc_;activ_desc_40,1196

include/caffe/layers/softmax_loss_layer.hpp,1222
#define CAFFE_SOFTMAX_WITH_LOSS_LAYER_HPP_CAFFE_SOFTMAX_WITH_LOSS_LAYER_HPP_2,43
namespace caffe {caffe13,276
class SoftmaxWithLossLayer : public LossLayer<Dtype> {SoftmaxWithLossLayer44,1764
  explicit SoftmaxWithLossLayer(const LayerParameter& param)SoftmaxWithLossLayer54,2222
  virtual inline const char* type() const { return "SoftmaxWithLoss"; }type61,2520
  virtual inline int ExactNumTopBlobs() const { return -1; }ExactNumTopBlobs62,2592
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs63,2653
  virtual inline int MaxTopBlobs() const { return 2; }MaxTopBlobs64,2708
  shared_ptr<Layer<Dtype> > softmax_layer_;softmax_layer_111,5110
  Blob<Dtype> prob_;prob_113,5230
  vector<Blob<Dtype>*> softmax_bottom_vec_;softmax_bottom_vec_115,5331
  vector<Blob<Dtype>*> softmax_top_vec_;softmax_top_vec_117,5452
  bool has_ignore_label_;has_ignore_label_119,5549
  int ignore_label_;ignore_label_121,5638
  LossParameter_NormalizationMode normalization_;normalization_123,5699
  int softmax_axis_, outer_num_, inner_num_;softmax_axis_125,5750
  int softmax_axis_, outer_num_, inner_num_;outer_num_125,5750
  int softmax_axis_, outer_num_, inner_num_;inner_num_125,5750

include/caffe/layers/argmax_layer.hpp,696
#define CAFFE_ARGMAX_LAYER_HPP_CAFFE_ARGMAX_LAYER_HPP_2,32
namespace caffe {caffe10,172
class ArgMaxLayer : public Layer<Dtype> {ArgMaxLayer24,663
  explicit ArgMaxLayer(const LayerParameter& param)ArgMaxLayer38,1299
  virtual inline const char* type() const { return "ArgMax"; }type45,1584
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs46,1647
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs47,1710
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu65,2430
  bool out_max_val_;out_max_val_69,2596
  size_t top_k_;top_k_70,2617
  bool has_axis_;has_axis_71,2634
  int axis_;axis_72,2652

include/caffe/layers/cudnn_softmax_layer.hpp,484
#define CAFFE_CUDNN_SOFTMAX_LAYER_HPP_CAFFE_CUDNN_SOFTMAX_LAYER_HPP_2,39
namespace caffe {caffe12,229
class CuDNNSoftmaxLayer : public SoftmaxLayer<Dtype> {CuDNNSoftmaxLayer20,396
  explicit CuDNNSoftmaxLayer(const LayerParameter& param)CuDNNSoftmaxLayer22,460
  bool handles_setup_;handles_setup_36,1068
  cudnnHandle_t             handle_;handle_37,1091
  cudnnTensorDescriptor_t bottom_desc_;bottom_desc_38,1128
  cudnnTensorDescriptor_t top_desc_;top_desc_39,1168

include/caffe/layers/filter_layer.hpp,562
#define CAFFE_FILTER_LAYER_HPP_CAFFE_FILTER_LAYER_HPP_2,32
namespace caffe {caffe10,172
class FilterLayer : public Layer<Dtype> {FilterLayer19,468
  explicit FilterLayer(const LayerParameter& param)FilterLayer21,519
  virtual inline const char* type() const { return "Filter"; }type28,804
  virtual inline int MinBottomBlobs() const { return 2; }MinBottomBlobs29,867
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs30,925
  bool first_reshape_;first_reshape_71,2580
  vector<int> indices_to_forward_;indices_to_forward_72,2603

include/caffe/layers/python_layer.hpp,661
#define CAFFE_PYTHON_LAYER_HPP_CAFFE_PYTHON_LAYER_HPP_2,32
namespace caffe {caffe11,171
class PythonLayer : public Layer<Dtype> {PythonLayer14,216
  PythonLayer(PyObject* self, const LayerParameter& param)PythonLayer16,267
  virtual void LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp19,400
  virtual void Reshape(const vector<Blob<Dtype>*>& bottom,Reshape32,1012
  virtual inline const char* type() const { return "Python"; }type37,1157
  virtual void Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu40,1233
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu44,1381
  bp::object self_;self_50,1594

include/caffe/layers/window_data_layer.hpp,1905
#define CAFFE_WINDOW_DATA_LAYER_HPP_CAFFE_WINDOW_DATA_LAYER_HPP_2,37
namespace caffe {caffe15,338
class WindowDataLayer : public BasePrefetchingDataLayer<Dtype> {WindowDataLayer25,673
  explicit WindowDataLayer(const LayerParameter& param)WindowDataLayer27,747
  virtual inline const char* type() const { return "WindowData"; }type33,990
  virtual inline int ExactNumBottomBlobs() const { return 0; }ExactNumBottomBlobs34,1057
  virtual inline int ExactNumTopBlobs() const { return 2; }ExactNumTopBlobs35,1120
  shared_ptr<Caffe::RNG> prefetch_rng_;prefetch_rng_41,1281
  vector<std::pair<std::string, vector<int> > > image_database_;image_database_42,1321
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };WindowField43,1386
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };IMAGE_INDEX43,1386
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };LABEL43,1386
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };OVERLAP43,1386
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };X143,1386
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };Y143,1386
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };X243,1386
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };Y243,1386
  enum WindowField { IMAGE_INDEX, LABEL, OVERLAP, X1, Y1, X2, Y2, NUM };NUM43,1386
  vector<vector<float> > fg_windows_;fg_windows_44,1459
  vector<vector<float> > bg_windows_;bg_windows_45,1497
  Blob<Dtype> data_mean_;data_mean_46,1535
  vector<Dtype> mean_values_;mean_values_47,1561
  bool has_mean_file_;has_mean_file_48,1591
  bool has_mean_values_;has_mean_values_49,1614
  bool cache_images_;cache_images_50,1639
  vector<std::pair<std::string, Datum > > image_database_cache_;image_database_cache_51,1661

include/caffe/layers/absval_layer.hpp,479
#define CAFFE_ABSVAL_LAYER_HPP_CAFFE_ABSVAL_LAYER_HPP_2,32
namespace caffe {caffe12,214
class AbsValLayer : public NeuronLayer<Dtype> {AbsValLayer25,563
  explicit AbsValLayer(const LayerParameter& param)AbsValLayer27,620
  virtual inline const char* type() const { return "AbsVal"; }type32,812
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs33,875
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs34,938

include/caffe/layers/relu_layer.hpp,291
#define CAFFE_RELU_LAYER_HPP_CAFFE_RELU_LAYER_HPP_2,30
namespace caffe {caffe12,210
class ReLULayer : public NeuronLayer<Dtype> {ReLULayer19,414
  explicit ReLULayer(const LayerParameter& param)ReLULayer27,689
  virtual inline const char* type() const { return "ReLU"; }type30,777

include/caffe/layers/accuracy_layer.hpp,997
#define CAFFE_ACCURACY_LAYER_HPP_CAFFE_ACCURACY_LAYER_HPP_2,34
namespace caffe {caffe12,216
class AccuracyLayer : public Layer<Dtype> {AccuracyLayer19,365
  explicit AccuracyLayer(const LayerParameter& param)AccuracyLayer29,795
  virtual inline const char* type() const { return "Accuracy"; }type36,1082
  virtual inline int ExactNumBottomBlobs() const { return 2; }ExactNumBottomBlobs37,1147
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs41,1305
  virtual inline int MaxTopBlobs() const { return 2; }MaxTopBlobs42,1360
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu76,2827
  int label_axis_, outer_num_, inner_num_;label_axis_85,3223
  int label_axis_, outer_num_, inner_num_;outer_num_85,3223
  int label_axis_, outer_num_, inner_num_;inner_num_85,3223
  int top_k_;top_k_87,3267
  bool has_ignore_label_;has_ignore_label_90,3338
  int ignore_label_;ignore_label_92,3427
  Blob<Dtype> nums_buffer_;nums_buffer_94,3503

include/caffe/layers/tanh_layer.hpp,291
#define CAFFE_TANH_LAYER_HPP_CAFFE_TANH_LAYER_HPP_2,30
namespace caffe {caffe12,210
class TanHLayer : public NeuronLayer<Dtype> {TanHLayer23,531
  explicit TanHLayer(const LayerParameter& param)TanHLayer25,586
  virtual inline const char* type() const { return "TanH"; }type28,674

include/caffe/layers/conv_layer.hpp,426
#define CAFFE_CONV_LAYER_HPP_CAFFE_CONV_LAYER_HPP_2,30
namespace caffe {caffe13,243
class ConvolutionLayer : public BaseConvolutionLayer<Dtype> {ConvolutionLayer32,1146
  explicit ConvolutionLayer(const LayerParameter& param)ConvolutionLayer65,3129
  virtual inline const char* type() const { return "Convolution"; }type68,3233
  virtual inline bool reverse_dimensions() { return false; }reverse_dimensions79,3800

include/caffe/layers/neuron_layer.hpp,398
#define CAFFE_NEURON_LAYER_HPP_CAFFE_NEURON_LAYER_HPP_2,32
namespace caffe {caffe10,172
class NeuronLayer : public Layer<Dtype> {NeuronLayer19,469
  explicit NeuronLayer(const LayerParameter& param)NeuronLayer21,520
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs26,702
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs27,765

include/caffe/layers/cudnn_relu_layer.hpp,526
#define CAFFE_CUDNN_RELU_LAYER_HPP_CAFFE_CUDNN_RELU_LAYER_HPP_2,36
namespace caffe {caffe13,261
class CuDNNReLULayer : public ReLULayer<Dtype> {CuDNNReLULayer20,374
  explicit CuDNNReLULayer(const LayerParameter& param)CuDNNReLULayer22,432
  bool handles_setup_;handles_setup_36,1032
  cudnnHandle_t             handle_;handle_37,1055
  cudnnTensorDescriptor_t bottom_desc_;bottom_desc_38,1092
  cudnnTensorDescriptor_t top_desc_;top_desc_39,1132
  cudnnActivationDescriptor_t activ_desc_;activ_desc_40,1169

include/caffe/layers/reshape_layer.hpp,938
#define CAFFE_XXX_LAYER_HPP_CAFFE_XXX_LAYER_HPP_2,29
namespace caffe {caffe10,166
class ReshapeLayer : public Layer<Dtype> {ReshapeLayer19,432
  explicit ReshapeLayer(const LayerParameter& param)ReshapeLayer21,484
  virtual inline const char* type() const { return "Reshape"; }type28,770
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs29,834
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs30,897
  virtual void Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu33,970
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu35,1075
  virtual void Forward_gpu(const vector<Blob<Dtype>*>& bottom,Forward_gpu37,1217
  virtual void Backward_gpu(const vector<Blob<Dtype>*>& top,Backward_gpu39,1322
  vector<int> copy_axes_;copy_axes_43,1545
  int inferred_axis_;inferred_axis_45,1646
  int constant_count_;constant_count_47,1729

include/caffe/layers/scale_layer.hpp,1124
#define CAFFE_SCALE_LAYER_HPP_CAFFE_SCALE_LAYER_HPP_2,31
namespace caffe {caffe12,210
class ScaleLayer: public Layer<Dtype> {ScaleLayer26,800
  explicit ScaleLayer(const LayerParameter& param)ScaleLayer28,849
  virtual inline const char* type() const { return "Scale"; }type35,1133
  virtual inline int MinBottomBlobs() const { return 1; }MinBottomBlobs37,1206
  virtual inline int MaxBottomBlobs() const { return 2; }MaxBottomBlobs38,1264
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs39,1322
  shared_ptr<Layer<Dtype> > bias_layer_;bias_layer_70,2768
  vector<Blob<Dtype>*> bias_bottom_vec_;bias_bottom_vec_71,2809
  vector<bool> bias_propagate_down_;bias_propagate_down_72,2850
  int bias_param_id_;bias_param_id_73,2887
  Blob<Dtype> sum_multiplier_;sum_multiplier_75,2910
  Blob<Dtype> sum_result_;sum_result_76,2941
  Blob<Dtype> temp_;temp_77,2968
  int axis_;axis_78,2989
  int outer_dim_, scale_dim_, inner_dim_;outer_dim_79,3002
  int outer_dim_, scale_dim_, inner_dim_;scale_dim_79,3002
  int outer_dim_, scale_dim_, inner_dim_;inner_dim_79,3002

include/caffe/layers/input_layer.hpp,695
#define CAFFE_INPUT_LAYER_HPP_CAFFE_INPUT_LAYER_HPP_2,31
namespace caffe {caffe10,170
class InputLayer : public Layer<Dtype> {InputLayer19,416
  explicit InputLayer(const LayerParameter& param)InputLayer21,466
  virtual void Reshape(const vector<Blob<Dtype>*>& bottom,Reshape26,709
  virtual inline const char* type() const { return "Input"; }type29,811
  virtual inline int ExactNumBottomBlobs() const { return 0; }ExactNumBottomBlobs30,873
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs31,936
  virtual void Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu34,1004
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu36,1109

include/caffe/layers/loss_layer.hpp,626
#define CAFFE_LOSS_LAYER_HPP_CAFFE_LOSS_LAYER_HPP_2,30
namespace caffe {caffe10,168
const float kLOG_THRESHOLD = 1e-20;kLOG_THRESHOLD12,187
class LossLayer : public Layer<Dtype> {LossLayer23,559
  explicit LossLayer(const LayerParameter& param)LossLayer25,608
  virtual inline int ExactNumBottomBlobs() const { return 2; }ExactNumBottomBlobs32,892
  virtual inline bool AutoTopBlobs() const { return true; }AutoTopBlobs40,1244
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs41,1304
  virtual inline bool AllowForceBackward(const int bottom_index) const {AllowForceBackward46,1473

include/caffe/layers/power_layer.hpp,432
#define CAFFE_POWER_LAYER_HPP_CAFFE_POWER_LAYER_HPP_2,31
namespace caffe {caffe12,212
class PowerLayer : public NeuronLayer<Dtype> {PowerLayer20,434
  explicit PowerLayer(const LayerParameter& param)PowerLayer29,785
  virtual inline const char* type() const { return "Power"; }type34,976
  Dtype power_;power_78,2826
  Dtype scale_;scale_80,2902
  Dtype shift_;shift_82,2977
  Dtype diff_scale_;diff_scale_84,3038

include/caffe/layers/contrastive_loss_layer.hpp,858
#define CAFFE_CONTRASTIVE_LOSS_LAYER_HPP_CAFFE_CONTRASTIVE_LOSS_LAYER_HPP_2,42
namespace caffe {caffe12,232
class ContrastiveLossLayer : public LossLayer<Dtype> {ContrastiveLossLayer39,1356
  explicit ContrastiveLossLayer(const LayerParameter& param)ContrastiveLossLayer41,1420
  virtual inline int ExactNumBottomBlobs() const { return 3; }ExactNumBottomBlobs46,1628
  virtual inline const char* type() const { return "ContrastiveLoss"; }type47,1691
  virtual inline bool AllowForceBackward(const int bottom_index) const {AllowForceBackward52,1884
  Blob<Dtype> diff_;  // cached for backward passdiff_93,3776
  Blob<Dtype> dist_sq_;  // cached for backward passdist_sq_94,3826
  Blob<Dtype> diff_sq_;  // tmp storage for gpu forward passdiff_sq_95,3879
  Blob<Dtype> summer_vec_;  // tmp storage for gpu forward passsummer_vec_96,3940

include/caffe/layers/base_conv_layer.hpp,2360
#define CAFFE_BASE_CONVOLUTION_LAYER_HPP_CAFFE_BASE_CONVOLUTION_LAYER_HPP_2,42
namespace caffe {caffe11,225
class BaseConvolutionLayer : public Layer<Dtype> {BaseConvolutionLayer18,400
  explicit BaseConvolutionLayer(const LayerParameter& param)BaseConvolutionLayer20,460
  virtual inline int MinBottomBlobs() const { return 1; }MinBottomBlobs27,754
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs28,812
  virtual inline bool EqualNumBottomTopBlobs() const { return true; }EqualNumBottomTopBlobs29,867
  inline int input_shape(int i) {input_shape56,2070
  Blob<int> kernel_shape_;kernel_shape_66,2494
  Blob<int> stride_;stride_68,2572
  Blob<int> pad_;pad_70,2645
  Blob<int> dilation_;dilation_72,2716
  Blob<int> conv_input_shape_;conv_input_shape_74,2801
  vector<int> col_buffer_shape_;col_buffer_shape_76,2887
  vector<int> output_shape_;output_shape_78,2971
  const vector<int>* bottom_shape_;bottom_shape_79,3000
  int num_spatial_axes_;num_spatial_axes_81,3037
  int bottom_dim_;bottom_dim_82,3062
  int top_dim_;top_dim_83,3081
  int channel_axis_;channel_axis_85,3098
  int num_;num_86,3119
  int channels_;channels_87,3131
  int group_;group_88,3148
  int out_spatial_dim_;out_spatial_dim_89,3162
  int weight_offset_;weight_offset_90,3186
  int num_output_;num_output_91,3208
  bool bias_term_;bias_term_92,3227
  bool is_1x1_;is_1x1_93,3246
  bool force_nd_im2col_;force_nd_im2col_94,3262
  inline void conv_im2col_cpu(const Dtype* data, Dtype* col_buff) {conv_im2col_cpu98,3377
  inline void conv_col2im_cpu(const Dtype* col_buff, Dtype* data) {conv_col2im_cpu112,4103
  inline void conv_im2col_gpu(const Dtype* data, Dtype* col_buff) {conv_im2col_gpu127,4846
  inline void conv_col2im_gpu(const Dtype* col_buff, Dtype* data) {conv_col2im_gpu142,5602
  int num_kernels_im2col_;num_kernels_im2col_159,6366
  int num_kernels_col2im_;num_kernels_col2im_160,6393
  int conv_out_channels_;conv_out_channels_161,6420
  int conv_in_channels_;conv_in_channels_162,6446
  int conv_out_spatial_dim_;conv_out_spatial_dim_163,6471
  int kernel_dim_;kernel_dim_164,6500
  int col_offset_;col_offset_165,6519
  int output_offset_;output_offset_166,6538
  Blob<Dtype> col_buffer_;col_buffer_168,6561
  Blob<Dtype> bias_multiplier_;bias_multiplier_169,6588

include/caffe/layers/eltwise_layer.hpp,648
#define CAFFE_ELTWISE_LAYER_HPP_CAFFE_ELTWISE_LAYER_HPP_2,33
namespace caffe {caffe10,174
class EltwiseLayer : public Layer<Dtype> {EltwiseLayer19,413
  explicit EltwiseLayer(const LayerParameter& param)EltwiseLayer21,465
  virtual inline const char* type() const { return "Eltwise"; }type28,751
  virtual inline int MinBottomBlobs() const { return 2; }MinBottomBlobs29,815
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs30,873
  EltwiseParameter_EltwiseOp op_;op_42,1433
  vector<Dtype> coeffs_;coeffs_43,1467
  Blob<int> max_idx_;max_idx_44,1492
  bool stable_prod_grad_;stable_prod_grad_46,1515

include/caffe/layers/memory_data_layer.hpp,1332
#define CAFFE_MEMORY_DATA_LAYER_HPP_CAFFE_MEMORY_DATA_LAYER_HPP_2,37
namespace caffe {caffe12,227
class MemoryDataLayer : public BaseDataLayer<Dtype> {MemoryDataLayer20,398
  explicit MemoryDataLayer(const LayerParameter& param)MemoryDataLayer22,461
  virtual inline const char* type() const { return "MemoryData"; }type27,685
  virtual inline int ExactNumBottomBlobs() const { return 0; }ExactNumBottomBlobs28,752
  virtual inline int ExactNumTopBlobs() const { return 2; }ExactNumTopBlobs29,815
  int batch_size() { return batch_size_; }batch_size42,1283
  int channels() { return channels_; }channels43,1326
  int height() { return height_; }height44,1365
  int width() { return width_; }width45,1400
  int batch_size_, channels_, height_, width_, size_;batch_size_51,1550
  int batch_size_, channels_, height_, width_, size_;channels_51,1550
  int batch_size_, channels_, height_, width_, size_;height_51,1550
  int batch_size_, channels_, height_, width_, size_;width_51,1550
  int batch_size_, channels_, height_, width_, size_;size_51,1550
  Dtype* data_;data_52,1604
  Dtype* labels_;labels_53,1620
  int n_;n_54,1638
  size_t pos_;pos_55,1648
  Blob<Dtype> added_data_;added_data_56,1663
  Blob<Dtype> added_label_;added_label_57,1690
  bool has_new_data_;has_new_data_58,1718

include/caffe/layers/split_layer.hpp,485
#define CAFFE_SPLIT_LAYER_HPP_CAFFE_SPLIT_LAYER_HPP_2,31
namespace caffe {caffe10,170
class SplitLayer : public Layer<Dtype> {SplitLayer19,455
  explicit SplitLayer(const LayerParameter& param)SplitLayer21,505
  virtual inline const char* type() const { return "Split"; }type26,687
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs27,749
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs28,812
  int count_;count_40,1367

include/caffe/layers/multinomial_logistic_loss_layer.hpp,429
#define CAFFE_MULTINOMIAL_LOGISTIC_LOSS_LAYER_HPP_CAFFE_MULTINOMIAL_LOGISTIC_LOSS_LAYER_HPP_2,51
namespace caffe {caffe12,250
class MultinomialLogisticLossLayer : public LossLayer<Dtype> {MultinomialLogisticLossLayer44,1761
  explicit MultinomialLogisticLossLayer(const LayerParameter& param)MultinomialLogisticLossLayer46,1833
  virtual inline const char* type() const { return "MultinomialLogisticLoss"; }type51,2037

include/caffe/layers/mvn_layer.hpp,697
#define CAFFE_MVN_LAYER_HPP_CAFFE_MVN_LAYER_HPP_2,29
namespace caffe {caffe10,166
class MVNLayer : public Layer<Dtype> {MVNLayer18,372
  explicit MVNLayer(const LayerParameter& param)MVNLayer20,420
  virtual inline const char* type() const { return "MVN"; }type25,600
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs26,660
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs27,723
  Blob<Dtype> mean_, variance_, temp_;mean_39,1282
  Blob<Dtype> mean_, variance_, temp_;variance_39,1282
  Blob<Dtype> mean_, variance_, temp_;temp_39,1282
  Blob<Dtype> sum_multiplier_;sum_multiplier_42,1379
  Dtype eps_;eps_43,1410

include/caffe/layers/threshold_layer.hpp,447
#define CAFFE_THRESHOLD_LAYER_HPP_CAFFE_THRESHOLD_LAYER_HPP_2,35
namespace caffe {caffe12,220
class ThresholdLayer : public NeuronLayer<Dtype> {ThresholdLayer19,389
  explicit ThresholdLayer(const LayerParameter& param)ThresholdLayer27,686
  virtual inline const char* type() const { return "Threshold"; }type32,881
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu54,1673
  Dtype threshold_;threshold_59,1840

include/caffe/layers/hdf5_output_layer.hpp,993
#define CAFFE_HDF5_OUTPUT_LAYER_HPP_CAFFE_HDF5_OUTPUT_LAYER_HPP_2,37
namespace caffe {caffe13,219
#define HDF5_DATA_DATASET_NAME HDF5_DATA_DATASET_NAME15,238
#define HDF5_DATA_LABEL_NAME HDF5_DATA_LABEL_NAME16,276
class HDF5OutputLayer : public Layer<Dtype> {HDF5OutputLayer24,463
  explicit HDF5OutputLayer(const LayerParameter& param)HDF5OutputLayer26,518
  virtual void Reshape(const vector<Blob<Dtype>*>& bottom,Reshape32,817
  virtual inline const char* type() const { return "HDF5Output"; }type35,919
  virtual inline int ExactNumBottomBlobs() const { return 2; }ExactNumBottomBlobs37,1029
  virtual inline int ExactNumTopBlobs() const { return 0; }ExactNumTopBlobs38,1092
  inline std::string file_name() const { return file_name_; }file_name40,1153
  bool file_opened_;file_opened_53,1743
  std::string file_name_;file_name_54,1764
  hid_t file_id_;file_id_55,1790
  Blob<Dtype> data_blob_;data_blob_56,1808
  Blob<Dtype> label_blob_;label_blob_57,1834

include/caffe/layers/image_data_layer.hpp,674
#define CAFFE_IMAGE_DATA_LAYER_HPP_CAFFE_IMAGE_DATA_LAYER_HPP_2,36
namespace caffe {caffe15,336
class ImageDataLayer : public BasePrefetchingDataLayer<Dtype> {ImageDataLayer23,512
  explicit ImageDataLayer(const LayerParameter& param)ImageDataLayer25,585
  virtual inline const char* type() const { return "ImageData"; }type31,826
  virtual inline int ExactNumBottomBlobs() const { return 0; }ExactNumBottomBlobs32,892
  virtual inline int ExactNumTopBlobs() const { return 2; }ExactNumTopBlobs33,955
  shared_ptr<Caffe::RNG> prefetch_rng_;prefetch_rng_36,1028
  vector<std::pair<std::string, int> > lines_;lines_40,1149
  int lines_id_;lines_id_41,1196

include/caffe/layers/parameter_layer.hpp,812
#define CAFFE_PARAMETER_LAYER_HPP_CAFFE_PARAMETER_LAYER_HPP_2,35
namespace caffe {caffe8,118
class ParameterLayer : public Layer<Dtype> {ParameterLayer11,163
  explicit ParameterLayer(const LayerParameter& param)ParameterLayer13,217
  virtual void LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp15,303
  virtual void Reshape(const vector<Blob<Dtype>*>& bottom,Reshape26,743
  virtual inline const char* type() const { return "Parameter"; }type28,845
  virtual inline int ExactNumBottomBlobs() const { return 0; }ExactNumBottomBlobs29,911
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs30,974
  virtual void Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu33,1047
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu38,1241

include/caffe/layers/reduction_layer.hpp,707
#define CAFFE_REDUCTION_LAYER_HPP_CAFFE_REDUCTION_LAYER_HPP_2,35
namespace caffe {caffe10,178
class ReductionLayer : public Layer<Dtype> {ReductionLayer20,498
  explicit ReductionLayer(const LayerParameter& param)ReductionLayer22,552
  virtual inline const char* type() const { return "Reduction"; }type29,840
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs30,906
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs31,969
  ReductionParameter_ReductionOp op_;op_44,1589
  Dtype coeff_;coeff_46,1684
  int axis_;axis_48,1757
  int num_;num_50,1818
  int dim_;dim_52,1876
  Blob<Dtype> sum_multiplier_;sum_multiplier_54,1947

include/caffe/layers/slice_layer.hpp,651
#define CAFFE_SLICE_LAYER_HPP_CAFFE_SLICE_LAYER_HPP_2,31
namespace caffe {caffe10,170
class SliceLayer : public Layer<Dtype> {SliceLayer19,435
  explicit SliceLayer(const LayerParameter& param)SliceLayer21,485
  virtual inline const char* type() const { return "Slice"; }type28,769
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs29,831
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs30,894
  int count_;count_42,1449
  int num_slices_;num_slices_43,1463
  int slice_size_;slice_size_44,1482
  int slice_axis_;slice_axis_45,1501
  vector<int> slice_point_;slice_point_46,1520

include/caffe/layers/sigmoid_cross_entropy_loss_layer.hpp,1028
#define CAFFE_SIGMOID_CROSS_ENTROPY_LOSS_LAYER_HPP_CAFFE_SIGMOID_CROSS_ENTROPY_LOSS_LAYER_HPP_2,52
namespace caffe {caffe13,294
class SigmoidCrossEntropyLossLayer : public LossLayer<Dtype> {SigmoidCrossEntropyLossLayer45,1588
  explicit SigmoidCrossEntropyLossLayer(const LayerParameter& param)SigmoidCrossEntropyLossLayer47,1660
  virtual inline const char* type() const { return "SigmoidCrossEntropyLoss"; }type56,2070
  shared_ptr<SigmoidLayer<Dtype> > sigmoid_layer_;sigmoid_layer_108,4656
  shared_ptr<Blob<Dtype> > sigmoid_output_;sigmoid_output_110,4767
  vector<Blob<Dtype>*> sigmoid_bottom_vec_;sigmoid_bottom_vec_112,4883
  vector<Blob<Dtype>*> sigmoid_top_vec_;sigmoid_top_vec_114,4996
  bool has_ignore_label_;has_ignore_label_117,5094
  int ignore_label_;ignore_label_119,5183
  LossParameter_NormalizationMode normalization_;normalization_121,5237
  Dtype normalizer_;normalizer_122,5287
  int outer_num_, inner_num_;outer_num_123,5308
  int outer_num_, inner_num_;inner_num_123,5308

include/caffe/layers/softmax_layer.hpp,689
#define CAFFE_SOFTMAX_LAYER_HPP_CAFFE_SOFTMAX_LAYER_HPP_2,33
namespace caffe {caffe10,174
class SoftmaxLayer : public Layer<Dtype> {SoftmaxLayer18,349
  explicit SoftmaxLayer(const LayerParameter& param)SoftmaxLayer20,401
  virtual inline const char* type() const { return "Softmax"; }type25,585
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs26,649
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs27,712
  int outer_num_;outer_num_39,1271
  int inner_num_;inner_num_40,1289
  int softmax_axis_;softmax_axis_41,1307
  Blob<Dtype> sum_multiplier_;sum_multiplier_43,1385
  Blob<Dtype> scale_;scale_45,1479

include/caffe/layers/dropout_layer.hpp,481
#define CAFFE_DROPOUT_LAYER_HPP_CAFFE_DROPOUT_LAYER_HPP_2,33
namespace caffe {caffe12,216
class DropoutLayer : public NeuronLayer<Dtype> {DropoutLayer26,667
  explicit DropoutLayer(const LayerParameter& param)DropoutLayer34,955
  virtual inline const char* type() const { return "Dropout"; }type41,1247
  Blob<unsigned int> rand_vec_;rand_vec_70,2594
  Dtype threshold_;threshold_72,2680
  Dtype scale_;scale_74,2771
  unsigned int uint_thres_;uint_thres_75,2787

include/caffe/layers/crop_layer.hpp,592
#define CAFFE_CROP_LAYER_HPP_CAFFE_CROP_LAYER_HPP_2,30
namespace caffe {caffe11,187
class CropLayer : public Layer<Dtype> {CropLayer21,459
  explicit CropLayer(const LayerParameter& param)CropLayer23,508
  virtual inline const char* type() const { return "Crop"; }type30,791
  virtual inline int ExactNumBottomBlobs() const { return 2; }ExactNumBottomBlobs31,852
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs32,915
  Blob<int> offsets;offsets44,1475
  Blob<int> src_strides_;src_strides_45,1496
  Blob<int> dest_strides_;dest_strides_46,1522

include/caffe/layers/im2col_layer.hpp,907
#define CAFFE_IM2COL_LAYER_HPP_CAFFE_IM2COL_LAYER_HPP_2,32
namespace caffe {caffe10,172
class Im2colLayer : public Layer<Dtype> {Im2colLayer20,492
  explicit Im2colLayer(const LayerParameter& param)Im2colLayer22,543
  virtual inline const char* type() const { return "Im2col"; }type29,828
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs30,891
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs31,954
  Blob<int> kernel_shape_;kernel_shape_44,1570
  Blob<int> stride_;stride_46,1648
  Blob<int> pad_;pad_48,1721
  Blob<int> dilation_;dilation_50,1792
  int num_spatial_axes_;num_spatial_axes_52,1816
  int bottom_dim_;bottom_dim_53,1841
  int top_dim_;top_dim_54,1860
  int channel_axis_;channel_axis_56,1877
  int num_;num_57,1898
  int channels_;channels_58,1910
  bool force_nd_im2col_;force_nd_im2col_60,1928

include/caffe/layers/cudnn_lcn_layer.hpp,875
#define CAFFE_CUDNN_LCN_LAYER_HPP_CAFFE_CUDNN_LCN_LAYER_HPP_2,35
namespace caffe {caffe13,257
class CuDNNLCNLayer : public LRNLayer<Dtype> {CuDNNLCNLayer17,319
  explicit CuDNNLCNLayer(const LayerParameter& param)CuDNNLCNLayer19,375
  bool handles_setup_;handles_setup_34,1031
  cudnnHandle_t             handle_;handle_35,1054
  cudnnLRNDescriptor_t norm_desc_;norm_desc_36,1091
  cudnnTensorDescriptor_t bottom_desc_, top_desc_;bottom_desc_37,1126
  cudnnTensorDescriptor_t bottom_desc_, top_desc_;top_desc_37,1126
  int size_, pre_pad_;size_39,1178
  int size_, pre_pad_;pre_pad_39,1178
  Dtype alpha_, beta_, k_;alpha_40,1201
  Dtype alpha_, beta_, k_;beta_40,1201
  Dtype alpha_, beta_, k_;k_40,1201
  size_t tempDataSize;tempDataSize42,1229
  void *tempData1, *tempData2;tempData143,1252
  void *tempData1, *tempData2;tempData243,1252

include/caffe/layers/pooling_layer.hpp,1152
#define CAFFE_POOLING_LAYER_HPP_CAFFE_POOLING_LAYER_HPP_2,33
namespace caffe {caffe10,174
class PoolingLayer : public Layer<Dtype> {PoolingLayer18,389
  explicit PoolingLayer(const LayerParameter& param)PoolingLayer20,441
  virtual inline const char* type() const { return "Pooling"; }type27,727
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs28,791
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs29,854
  virtual inline int MaxTopBlobs() const {MaxTopBlobs32,1020
  int kernel_h_, kernel_w_;kernel_h_47,1678
  int kernel_h_, kernel_w_;kernel_w_47,1678
  int stride_h_, stride_w_;stride_h_48,1706
  int stride_h_, stride_w_;stride_w_48,1706
  int pad_h_, pad_w_;pad_h_49,1734
  int pad_h_, pad_w_;pad_w_49,1734
  int channels_;channels_50,1756
  int height_, width_;height_51,1773
  int height_, width_;width_51,1773
  int pooled_height_, pooled_width_;pooled_height_52,1796
  int pooled_height_, pooled_width_;pooled_width_52,1796
  bool global_pooling_;global_pooling_53,1833
  Blob<Dtype> rand_idx_;rand_idx_54,1857
  Blob<int> max_idx_;max_idx_55,1882

include/caffe/layers/hinge_loss_layer.hpp,329
#define CAFFE_HINGE_LOSS_LAYER_HPP_CAFFE_HINGE_LOSS_LAYER_HPP_2,36
namespace caffe {caffe12,220
class HingeLossLayer : public LossLayer<Dtype> {HingeLossLayer58,2394
  explicit HingeLossLayer(const LayerParameter& param)HingeLossLayer60,2452
  virtual inline const char* type() const { return "HingeLoss"; }type63,2543

include/caffe/layers/embed_layer.hpp,624
#define CAFFE_EMBED_LAYER_HPP_CAFFE_EMBED_LAYER_HPP_2,31
namespace caffe {caffe10,170
class EmbedLayer : public Layer<Dtype> {EmbedLayer20,530
  explicit EmbedLayer(const LayerParameter& param)EmbedLayer22,580
  virtual inline const char* type() const { return "Embed"; }type29,864
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs30,926
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs31,989
  int M_;M_43,1549
  int K_;K_44,1559
  int N_;N_45,1569
  bool bias_term_;bias_term_46,1579
  Blob<Dtype> bias_multiplier_;bias_multiplier_47,1598

include/caffe/layers/lrn_layer.hpp,1747
#define CAFFE_LRN_LAYER_HPP_CAFFE_LRN_LAYER_HPP_2,29
namespace caffe {caffe15,331
class LRNLayer : public Layer<Dtype> {LRNLayer23,544
  explicit LRNLayer(const LayerParameter& param)LRNLayer25,592
  virtual inline const char* type() const { return "LRN"; }type32,874
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs33,934
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs34,997
  int size_;size_59,2353
  int pre_pad_;pre_pad_60,2366
  Dtype alpha_;alpha_61,2382
  Dtype beta_;beta_62,2398
  Dtype k_;k_63,2413
  int num_;num_64,2425
  int channels_;channels_65,2437
  int height_;height_66,2454
  int width_;width_67,2469
  Blob<Dtype> scale_;scale_71,2587
  shared_ptr<SplitLayer<Dtype> > split_layer_;split_layer_74,2660
  vector<Blob<Dtype>*> split_top_vec_;split_top_vec_75,2707
  shared_ptr<PowerLayer<Dtype> > square_layer_;square_layer_76,2746
  Blob<Dtype> square_input_;square_input_77,2794
  Blob<Dtype> square_output_;square_output_78,2823
  vector<Blob<Dtype>*> square_bottom_vec_;square_bottom_vec_79,2853
  vector<Blob<Dtype>*> square_top_vec_;square_top_vec_80,2896
  shared_ptr<PoolingLayer<Dtype> > pool_layer_;pool_layer_81,2936
  Blob<Dtype> pool_output_;pool_output_82,2984
  vector<Blob<Dtype>*> pool_top_vec_;pool_top_vec_83,3012
  shared_ptr<PowerLayer<Dtype> > power_layer_;power_layer_84,3050
  Blob<Dtype> power_output_;power_output_85,3097
  vector<Blob<Dtype>*> power_top_vec_;power_top_vec_86,3126
  shared_ptr<EltwiseLayer<Dtype> > product_layer_;product_layer_87,3165
  Blob<Dtype> product_input_;product_input_88,3216
  vector<Blob<Dtype>*> product_bottom_vec_;product_bottom_vec_89,3246

include/caffe/layers/elu_layer.hpp,284
#define CAFFE_ELU_LAYER_HPP_CAFFE_ELU_LAYER_HPP_2,29
namespace caffe {caffe12,208
class ELULayer : public NeuronLayer<Dtype> {ELULayer24,525
  explicit ELULayer(const LayerParameter& param)ELULayer32,799
  virtual inline const char* type() const { return "ELU"; }type35,886

include/caffe/layers/cudnn_pooling_layer.hpp,782
#define CAFFE_CUDNN_POOLING_LAYER_HPP_CAFFE_CUDNN_POOLING_LAYER_HPP_2,39
namespace caffe {caffe12,229
class CuDNNPoolingLayer : public PoolingLayer<Dtype> {CuDNNPoolingLayer20,394
  explicit CuDNNPoolingLayer(const LayerParameter& param)CuDNNPoolingLayer22,458
  virtual inline int MinTopBlobs() const { return -1; }MinTopBlobs30,869
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs31,925
  bool handles_setup_;handles_setup_39,1242
  cudnnHandle_t             handle_;handle_40,1265
  cudnnTensorDescriptor_t bottom_desc_, top_desc_;bottom_desc_41,1302
  cudnnTensorDescriptor_t bottom_desc_, top_desc_;top_desc_41,1302
  cudnnPoolingDescriptor_t  pooling_desc_;pooling_desc_42,1353
  cudnnPoolingMode_t        mode_;mode_43,1396

include/caffe/layers/batch_norm_layer.hpp,1123
#define CAFFE_BATCHNORM_LAYER_HPP_CAFFE_BATCHNORM_LAYER_HPP_2,35
namespace caffe {caffe10,178
class BatchNormLayer : public Layer<Dtype> {BatchNormLayer40,1597
  explicit BatchNormLayer(const LayerParameter& param)BatchNormLayer42,1651
  virtual inline const char* type() const { return "BatchNorm"; }type49,1939
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs50,2005
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs51,2068
  Blob<Dtype> mean_, variance_, temp_, x_norm_;mean_63,2627
  Blob<Dtype> mean_, variance_, temp_, x_norm_;variance_63,2627
  Blob<Dtype> mean_, variance_, temp_, x_norm_;temp_63,2627
  Blob<Dtype> mean_, variance_, temp_, x_norm_;x_norm_63,2627
  bool use_global_stats_;use_global_stats_64,2675
  Dtype moving_average_fraction_;moving_average_fraction_65,2701
  int channels_;channels_66,2735
  Dtype eps_;eps_67,2752
  Blob<Dtype> batch_sum_multiplier_;batch_sum_multiplier_71,2855
  Blob<Dtype> num_by_chans_;num_by_chans_72,2892
  Blob<Dtype> spatial_sum_multiplier_;spatial_sum_multiplier_73,2921

include/caffe/layers/hdf5_data_layer.hpp,1181
#define CAFFE_HDF5_DATA_LAYER_HPP_CAFFE_HDF5_DATA_LAYER_HPP_2,35
namespace caffe {caffe15,260
class HDF5DataLayer : public Layer<Dtype> {HDF5DataLayer23,435
  explicit HDF5DataLayer(const LayerParameter& param)HDF5DataLayer25,488
  virtual void Reshape(const vector<Blob<Dtype>*>& bottom,Reshape31,773
  virtual inline const char* type() const { return "HDF5Data"; }type34,875
  virtual inline int ExactNumBottomBlobs() const { return 0; }ExactNumBottomBlobs35,940
  virtual inline int MinTopBlobs() const { return 1; }MinTopBlobs36,1003
  virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu46,1308
  virtual void Backward_gpu(const vector<Blob<Dtype>*>& top,Backward_gpu48,1450
  std::vector<std::string> hdf_filenames_;hdf_filenames_52,1648
  unsigned int num_files_;num_files_53,1691
  unsigned int current_file_;current_file_54,1718
  hsize_t current_row_;current_row_55,1748
  std::vector<shared_ptr<Blob<Dtype> > > hdf_blobs_;hdf_blobs_56,1772
  std::vector<unsigned int> data_permutation_;data_permutation_57,1825
  std::vector<unsigned int> file_permutation_;file_permutation_58,1872
  uint64_t offset_;offset_59,1919

include/caffe/layers/log_layer.hpp,497
#define CAFFE_LOG_LAYER_HPP_CAFFE_LOG_LAYER_HPP_2,29
namespace caffe {caffe12,208
class LogLayer : public NeuronLayer<Dtype> {LogLayer20,432
  explicit LogLayer(const LayerParameter& param)LogLayer30,826
  virtual inline const char* type() const { return "Log"; }type35,1015
  Dtype base_scale_;base_scale_75,2658
  Dtype input_scale_, input_shift_;input_scale_76,2679
  Dtype input_scale_, input_shift_;input_shift_76,2679
  Dtype backward_num_scale_;backward_num_scale_77,2715

include/caffe/layers/tile_layer.hpp,742
#define CAFFE_TILE_LAYER_HPP_CAFFE_TILE_LAYER_HPP_2,30
namespace caffe {caffe10,168
class TileLayer : public Layer<Dtype> {TileLayer16,271
  explicit TileLayer(const LayerParameter& param)TileLayer18,320
  virtual inline const char* type() const { return "Tile"; }type23,501
  virtual inline int ExactNumBottomBlobs() const { return 1; }ExactNumBottomBlobs24,562
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs25,625
  unsigned int axis_, tiles_, outer_dim_, inner_dim_;axis_38,1186
  unsigned int axis_, tiles_, outer_dim_, inner_dim_;tiles_38,1186
  unsigned int axis_, tiles_, outer_dim_, inner_dim_;outer_dim_38,1186
  unsigned int axis_, tiles_, outer_dim_, inner_dim_;inner_dim_38,1186

include/caffe/layers/cudnn_conv_layer.hpp,1629
#define CAFFE_CUDNN_CONV_LAYER_HPP_CAFFE_CUDNN_CONV_LAYER_HPP_2,36
namespace caffe {caffe12,220
class CuDNNConvolutionLayer : public ConvolutionLayer<Dtype> {CuDNNConvolutionLayer30,976
  explicit CuDNNConvolutionLayer(const LayerParameter& param)CuDNNConvolutionLayer32,1048
  bool handles_setup_;handles_setup_46,1669
  cudnnHandle_t* handle_;handle_47,1692
  cudaStream_t*  stream_;stream_48,1718
  cudnnConvolutionFwdAlgo_t *fwd_algo_;fwd_algo_51,1800
  cudnnConvolutionBwdFilterAlgo_t *bwd_filter_algo_;bwd_filter_algo_52,1840
  cudnnConvolutionBwdDataAlgo_t *bwd_data_algo_;bwd_data_algo_53,1893
  vector<cudnnTensorDescriptor_t> bottom_descs_, top_descs_;bottom_descs_55,1943
  vector<cudnnTensorDescriptor_t> bottom_descs_, top_descs_;top_descs_55,1943
  cudnnTensorDescriptor_t    bias_desc_;bias_desc_56,2004
  cudnnFilterDescriptor_t      filter_desc_;filter_desc_57,2045
  vector<cudnnConvolutionDescriptor_t> conv_descs_;conv_descs_58,2090
  int bottom_offset_, top_offset_, bias_offset_;bottom_offset_59,2142
  int bottom_offset_, top_offset_, bias_offset_;top_offset_59,2142
  int bottom_offset_, top_offset_, bias_offset_;bias_offset_59,2142
  size_t *workspace_fwd_sizes_;workspace_fwd_sizes_61,2192
  size_t *workspace_bwd_data_sizes_;workspace_bwd_data_sizes_62,2224
  size_t *workspace_bwd_filter_sizes_;workspace_bwd_filter_sizes_63,2261
  size_t workspaceSizeInBytes;  // size of underlying storageworkspaceSizeInBytes64,2300
  void *workspaceData;  // underlying storageworkspaceData65,2362
  void **workspace;  // aliases into workspaceDataworkspace66,2408

include/caffe/layers/bnll_layer.hpp,291
#define CAFFE_BNLL_LAYER_HPP_CAFFE_BNLL_LAYER_HPP_2,30
namespace caffe {caffe12,210
class BNLLLayer : public NeuronLayer<Dtype> {BNLLLayer32,837
  explicit BNLLLayer(const LayerParameter& param)BNLLLayer34,892
  virtual inline const char* type() const { return "BNLL"; }type37,980

include/caffe/layers/bias_layer.hpp,846
#define CAFFE_BIAS_LAYER_HPP_CAFFE_BIAS_LAYER_HPP_2,30
namespace caffe {caffe10,168
class BiasLayer : public Layer<Dtype> {BiasLayer22,667
  explicit BiasLayer(const LayerParameter& param)BiasLayer24,716
  virtual inline const char* type() const { return "Bias"; }type31,999
  virtual inline int MinBottomBlobs() const { return 1; }MinBottomBlobs32,1060
  virtual inline int MaxBottomBlobs() const { return 2; }MaxBottomBlobs33,1118
  virtual inline int ExactNumTopBlobs() const { return 1; }ExactNumTopBlobs34,1176
  Blob<Dtype> bias_multiplier_;bias_multiplier_46,1734
  int outer_dim_, bias_dim_, inner_dim_, dim_;outer_dim_47,1766
  int outer_dim_, bias_dim_, inner_dim_, dim_;bias_dim_47,1766
  int outer_dim_, bias_dim_, inner_dim_, dim_;inner_dim_47,1766
  int outer_dim_, bias_dim_, inner_dim_, dim_;dim_47,1766

include/caffe/blob.hpp,1913
#define CAFFE_BLOB_HPP_CAFFE_BLOB_HPP_2,24
const int kMaxBlobAxes = 32;kMaxBlobAxes12,201
namespace caffe {caffe14,231
class Blob {Blob24,489
  Blob()Blob26,511
  inline string shape_string() const {shape_string54,1731
  inline const vector<int>& shape() const { return shape_; }shape62,1947
  inline int shape(int index) const {shape71,2324
  inline int num_axes() const { return shape_.size(); }num_axes74,2412
  inline int count() const { return count_; }count75,2468
  inline int count(int start_axis, int end_axis) const {count85,2773
  inline int count(int start_axis) const {count103,3309
  inline int CanonicalAxisIndex(int axis_index) const {CanonicalAxisIndex118,3898
  inline int num() const { return LegacyShape(0); }num132,4446
  inline int channels() const { return LegacyShape(1); }channels134,4576
  inline int height() const { return LegacyShape(2); }height136,4709
  inline int width() const { return LegacyShape(3); }width138,4839
  inline int LegacyShape(int index) const {LegacyShape139,4893
  inline int offset(const int n, const int c = 0, const int h = 0,offset153,5383
  inline int offset(const vector<int>& indices) const {offset166,5758
  inline Dtype data_at(const int n, const int c, const int h,data_at191,6568
  inline Dtype diff_at(const int n, const int c, const int h,diff_at196,6705
  inline Dtype data_at(const vector<int>& index) const {data_at201,6842
  inline Dtype diff_at(const vector<int>& index) const {diff_at205,6942
  inline const shared_ptr<SyncedMemory>& data() const {data209,7042
  inline const shared_ptr<SyncedMemory>& diff() const {diff214,7139
  shared_ptr<SyncedMemory> data_;data_270,9148
  shared_ptr<SyncedMemory> diff_;diff_271,9182
  shared_ptr<SyncedMemory> shape_data_;shape_data_272,9216
  vector<int> shape_;shape_273,9256
  int count_;count_274,9278
  int capacity_;capacity_275,9292

include/caffe/internal_thread.hpp,367
#define CAFFE_INTERNAL_THREAD_HPP_CAFFE_INTERNAL_THREAD_HPP_2,35
namespace boost { class thread; }boost10,230
namespace caffe {caffe12,265
class InternalThread {InternalThread19,488
  InternalThread() : thread_() {}InternalThread21,520
  virtual void InternalThreadEntry() {}InternalThreadEntry39,1038
  shared_ptr<boost::thread> thread_;thread_48,1298

include/caffe/net.hpp,5851
#define CAFFE_NET_HPP_CAFFE_NET_HPP_2,23
namespace caffe {caffe15,249
class Net {Net24,457
  virtual ~Net() {}~Net29,640
  const vector<Blob<Dtype>*>& ForwardPrefilled(Dtype* loss = NULL) {ForwardPrefilled40,928
  Dtype ForwardBackward() {ForwardBackward85,2522
  inline const string& name() const { return name_; }name123,3899
  inline const vector<string>& layer_names() const { return layer_names_; }layer_names125,3990
  inline const vector<string>& blob_names() const { return blob_names_; }blob_names127,4102
  inline const vector<shared_ptr<Blob<Dtype> > >& blobs() const {blobs129,4207
  inline const vector<shared_ptr<Layer<Dtype> > >& layers() const {layers133,4328
  inline Phase phase() const { return phase_; }phase137,4466
  inline const vector<vector<Blob<Dtype>*> >& bottom_vecs() const {bottom_vecs142,4670
  inline const vector<vector<Blob<Dtype>*> >& top_vecs() const {top_vecs149,4920
  inline const vector<int> & top_ids(int i) const {top_ids153,5068
  inline const vector<int> & bottom_ids(int i) const {bottom_ids159,5314
  inline const vector<vector<bool> >& bottom_need_backward() const {bottom_need_backward164,5509
  inline const vector<Dtype>& blob_loss_weights() const {blob_loss_weights167,5616
  inline const vector<bool>& layer_need_backward() const {layer_need_backward170,5709
  inline const vector<shared_ptr<Blob<Dtype> > >& params() const {params174,5841
  inline const vector<Blob<Dtype>*>& learnable_params() const {learnable_params177,5932
  inline const vector<float>& params_lr() const { return params_lr_; }params_lr181,6101
  inline const vector<bool>& has_params_lr() const { return has_params_lr_; }has_params_lr182,6172
  inline const vector<float>& params_weight_decay() const {params_weight_decay184,6313
  inline const vector<bool>& has_params_decay() const {has_params_decay187,6410
  const map<string, int>& param_names_index() const {param_names_index190,6500
  inline const vector<int>& param_owners() const { return param_owners_; }param_owners193,6589
  inline const vector<string>& param_display_names() const {param_display_names194,6664
  inline int num_inputs() const { return net_input_blobs_.size(); }num_inputs198,6805
  inline int num_outputs() const { return net_output_blobs_.size(); }num_outputs199,6873
  inline const vector<Blob<Dtype>*>& input_blobs() const {input_blobs200,6943
  inline const vector<Blob<Dtype>*>& output_blobs() const {output_blobs203,7035
  inline const vector<int>& input_blob_indices() const {input_blob_indices206,7129
  inline const vector<int>& output_blob_indices() const {output_blob_indices209,7226
  void set_debug_info(const bool value) { debug_info_ = value; }set_debug_info217,7583
  class Callback {Callback231,8127
  const vector<Callback*>& before_forward() const { return before_forward_; }before_forward238,8251
  void add_before_forward(Callback* value) {add_before_forward239,8329
  const vector<Callback*>& after_forward() const { return after_forward_; }after_forward242,8416
  void add_after_forward(Callback* value) {add_after_forward243,8492
  const vector<Callback*>& before_backward() const { return before_backward_; }before_backward246,8577
  void add_before_backward(Callback* value) {add_before_backward247,8657
  const vector<Callback*>& after_backward() const { return after_backward_; }after_backward250,8746
  void add_after_backward(Callback* value) {add_after_backward251,8824
  string name_;name_277,9919
  Phase phase_;phase_279,9973
  vector<shared_ptr<Layer<Dtype> > > layers_;layers_281,10031
  vector<string> layer_names_;layer_names_282,10077
  map<string, int> layer_names_index_;layer_names_index_283,10108
  vector<bool> layer_need_backward_;layer_need_backward_284,10147
  vector<shared_ptr<Blob<Dtype> > > blobs_;blobs_286,10255
  vector<string> blob_names_;blob_names_287,10299
  map<string, int> blob_names_index_;blob_names_index_288,10329
  vector<bool> blob_need_backward_;blob_need_backward_289,10367
  vector<vector<Blob<Dtype>*> > bottom_vecs_;bottom_vecs_293,10568
  vector<vector<int> > bottom_id_vecs_;bottom_id_vecs_294,10614
  vector<vector<bool> > bottom_need_backward_;bottom_need_backward_295,10654
  vector<vector<Blob<Dtype>*> > top_vecs_;top_vecs_297,10772
  vector<vector<int> > top_id_vecs_;top_id_vecs_298,10815
  vector<Dtype> blob_loss_weights_;blob_loss_weights_301,10955
  vector<vector<int> > param_id_vecs_;param_id_vecs_302,10991
  vector<int> param_owners_;param_owners_303,11030
  vector<string> param_display_names_;param_display_names_304,11059
  vector<pair<int, int> > param_layer_indices_;param_layer_indices_305,11098
  map<string, int> param_names_index_;param_names_index_306,11146
  vector<int> net_input_blob_indices_;net_input_blob_indices_308,11244
  vector<int> net_output_blob_indices_;net_output_blob_indices_309,11283
  vector<Blob<Dtype>*> net_input_blobs_;net_input_blobs_310,11323
  vector<Blob<Dtype>*> net_output_blobs_;net_output_blobs_311,11364
  vector<shared_ptr<Blob<Dtype> > > params_;params_313,11443
  vector<Blob<Dtype>*> learnable_params_;learnable_params_314,11488
  vector<int> learnable_param_ids_;learnable_param_ids_322,11875
  vector<float> params_lr_;params_lr_324,11969
  vector<bool> has_params_lr_;has_params_lr_325,11997
  vector<float> params_weight_decay_;params_weight_decay_327,12085
  vector<bool> has_params_decay_;has_params_decay_328,12123
  size_t memory_used_;memory_used_330,12200
  bool debug_info_;debug_info_332,12284
  vector<Callback*> before_forward_;before_forward_334,12319
  vector<Callback*> after_forward_;after_forward_335,12356
  vector<Callback*> before_backward_;before_backward_336,12392
  vector<Callback*> after_backward_;after_backward_337,12430

include/caffe/caffe.hpp,48
#define CAFFE_CAFFE_HPP_CAFFE_CAFFE_HPP_5,177

include/caffe/common.hpp,2223
#define CAFFE_COMMON_HPP_CAFFE_COMMON_HPP_2,26
#define STRINGIFY(STRINGIFY22,463
#define AS_STRING(AS_STRING23,487
#define DISABLE_COPY_AND_ASSIGN(DISABLE_COPY_AND_ASSIGN35,1000
#define INSTANTIATE_CLASS(INSTANTIATE_CLASS41,1190
#define INSTANTIATE_LAYER_GPU_FORWARD(INSTANTIATE_LAYER_GPU_FORWARD46,1343
#define INSTANTIATE_LAYER_GPU_BACKWARD(INSTANTIATE_LAYER_GPU_BACKWARD54,1686
#define INSTANTIATE_LAYER_GPU_FUNCS(INSTANTIATE_LAYER_GPU_FUNCS64,2129
#define NOT_IMPLEMENTED NOT_IMPLEMENTED70,2389
namespace cv { class Mat; }cv73,2466
namespace caffe {caffe75,2495
class Caffe {Caffe102,3311
  enum Brew { CPU, GPU };Brew111,3566
  enum Brew { CPU, GPU };CPU111,3566
  enum Brew { CPU, GPU };GPU111,3566
  class RNG {RNG115,3732
    shared_ptr<Generator> generator_;generator_124,3923
  inline static RNG& rng_stream() {rng_stream128,4022
  inline static cublasHandle_t cublas_handle() { return Get().cublas_handle_; }cublas_handle135,4208
  inline static curandGenerator_t curand_generator() {curand_generator136,4288
  inline static Brew mode() { return Get().mode_; }mode142,4437
  inline static void set_mode(Brew mode) { Get().mode_ = mode; }set_mode148,4822
  inline static int solver_count() { return Get().solver_count_; }solver_count162,5507
  inline static void set_solver_count(int val) { Get().solver_count_ = val; }set_solver_count163,5574
  inline static int solver_rank() { return Get().solver_rank_; }solver_rank164,5652
  inline static void set_solver_rank(int val) { Get().solver_rank_ = val; }set_solver_rank165,5717
  inline static bool multiprocess() { return Get().multiprocess_; }multiprocess166,5793
  inline static void set_multiprocess(bool val) { Get().multiprocess_ = val; }set_multiprocess167,5861
  inline static bool root_solver() { return Get().solver_rank_ == 0; }root_solver168,5940
  cublasHandle_t cublas_handle_;cublas_handle_172,6041
  curandGenerator_t curand_generator_;curand_generator_173,6074
  shared_ptr<RNG> random_generator_;random_generator_175,6120
  Brew mode_;mode_177,6158
  int solver_count_;solver_count_180,6196
  int solver_rank_;solver_rank_181,6217
  bool multiprocess_;multiprocess_182,6237

include/caffe/solver.hpp,1759
#define CAFFE_SOLVER_HPP_CAFFE_SOLVER_HPP_2,26
namespace caffe {caffe11,217
  namespace SolverAction {SolverAction21,637
    enum Enum {Enum22,664
      NONE = 0,  // Take no special action.NONE23,680
      STOP = 1,  // Stop training. snapshot_after_train controls whether aSTOP24,724
      SNAPSHOT = 2  // Take a snapshot, and keep training.SNAPSHOT26,840
typedef boost::function<SolverAction::Enum()> ActionCallback;ActionCallback33,990
class Solver {Solver42,1283
  inline void Solve(const string resume_file) { Solve(resume_file.c_str()); }Solve58,1973
  virtual ~Solver() {}~Solver69,2623
  inline const SolverParameter& param() const { return param_; }param70,2646
  inline shared_ptr<Net<Dtype> > net() { return net_; }net71,2711
  inline const vector<shared_ptr<Net<Dtype> > >& test_nets() {test_nets72,2767
  int iter() const { return iter_; }iter75,2857
  class Callback {Callback78,2947
  const vector<Callback*>& callbacks() const { return callbacks_; }callbacks86,3113
  void add_callback(Callback* value) {add_callback87,3181
  virtual inline const char* type() const { return ""; }type95,3347
  SolverParameter param_;param_112,4049
  int iter_;iter_113,4075
  int current_step_;current_step_114,4088
  shared_ptr<Net<Dtype> > net_;net_115,4109
  vector<shared_ptr<Net<Dtype> > > test_nets_;test_nets_116,4141
  vector<Callback*> callbacks_;callbacks_117,4188
  vector<Dtype> losses_;losses_118,4220
  Dtype smoothed_loss_;smoothed_loss_119,4245
  ActionCallback action_request_function_;action_request_function_123,4408
  bool requested_early_exit_;requested_early_exit_126,4504
  Timer iteration_timer_;iteration_timer_129,4591
  float iterations_last_;iterations_last_130,4617

build/src/caffe/proto/caffe.pb.cc,193138
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATIONINTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION4,84
namespace caffe {caffe19,581
const ::google::protobuf::Descriptor* BlobShape_descriptor_ = NULL;BlobShape_descriptor_23,613
  BlobShape_reflection_ = NULL;BlobShape_reflection_25,745
const ::google::protobuf::Descriptor* BlobProto_descriptor_ = NULL;BlobProto_descriptor_26,777
  BlobProto_reflection_ = NULL;BlobProto_reflection_28,909
const ::google::protobuf::Descriptor* BlobProtoVector_descriptor_ = NULL;BlobProtoVector_descriptor_29,941
  BlobProtoVector_reflection_ = NULL;BlobProtoVector_reflection_31,1079
const ::google::protobuf::Descriptor* Datum_descriptor_ = NULL;Datum_descriptor_32,1117
  Datum_reflection_ = NULL;Datum_reflection_34,1245
const ::google::protobuf::Descriptor* FillerParameter_descriptor_ = NULL;FillerParameter_descriptor_35,1273
  FillerParameter_reflection_ = NULL;FillerParameter_reflection_37,1411
const ::google::protobuf::EnumDescriptor* FillerParameter_VarianceNorm_descriptor_ = NULL;FillerParameter_VarianceNorm_descriptor_38,1449
const ::google::protobuf::Descriptor* NetParameter_descriptor_ = NULL;NetParameter_descriptor_39,1540
  NetParameter_reflection_ = NULL;NetParameter_reflection_41,1675
const ::google::protobuf::Descriptor* SolverParameter_descriptor_ = NULL;SolverParameter_descriptor_42,1710
  SolverParameter_reflection_ = NULL;SolverParameter_reflection_44,1848
const ::google::protobuf::EnumDescriptor* SolverParameter_SnapshotFormat_descriptor_ = NULL;SolverParameter_SnapshotFormat_descriptor_45,1886
const ::google::protobuf::EnumDescriptor* SolverParameter_SolverMode_descriptor_ = NULL;SolverParameter_SolverMode_descriptor_46,1979
const ::google::protobuf::EnumDescriptor* SolverParameter_SolverType_descriptor_ = NULL;SolverParameter_SolverType_descriptor_47,2068
const ::google::protobuf::Descriptor* SolverState_descriptor_ = NULL;SolverState_descriptor_48,2157
  SolverState_reflection_ = NULL;SolverState_reflection_50,2291
const ::google::protobuf::Descriptor* NetState_descriptor_ = NULL;NetState_descriptor_51,2325
  NetState_reflection_ = NULL;NetState_reflection_53,2456
const ::google::protobuf::Descriptor* NetStateRule_descriptor_ = NULL;NetStateRule_descriptor_54,2487
  NetStateRule_reflection_ = NULL;NetStateRule_reflection_56,2622
const ::google::protobuf::Descriptor* ParamSpec_descriptor_ = NULL;ParamSpec_descriptor_57,2657
  ParamSpec_reflection_ = NULL;ParamSpec_reflection_59,2789
const ::google::protobuf::EnumDescriptor* ParamSpec_DimCheckMode_descriptor_ = NULL;ParamSpec_DimCheckMode_descriptor_60,2821
const ::google::protobuf::Descriptor* LayerParameter_descriptor_ = NULL;LayerParameter_descriptor_61,2906
  LayerParameter_reflection_ = NULL;LayerParameter_reflection_63,3043
const ::google::protobuf::Descriptor* TransformationParameter_descriptor_ = NULL;TransformationParameter_descriptor_64,3080
  TransformationParameter_reflection_ = NULL;TransformationParameter_reflection_66,3226
const ::google::protobuf::Descriptor* LossParameter_descriptor_ = NULL;LossParameter_descriptor_67,3272
  LossParameter_reflection_ = NULL;LossParameter_reflection_69,3408
const ::google::protobuf::EnumDescriptor* LossParameter_NormalizationMode_descriptor_ = NULL;LossParameter_NormalizationMode_descriptor_70,3444
const ::google::protobuf::Descriptor* AccuracyParameter_descriptor_ = NULL;AccuracyParameter_descriptor_71,3538
  AccuracyParameter_reflection_ = NULL;AccuracyParameter_reflection_73,3678
const ::google::protobuf::Descriptor* ArgMaxParameter_descriptor_ = NULL;ArgMaxParameter_descriptor_74,3718
  ArgMaxParameter_reflection_ = NULL;ArgMaxParameter_reflection_76,3856
const ::google::protobuf::Descriptor* ConcatParameter_descriptor_ = NULL;ConcatParameter_descriptor_77,3894
  ConcatParameter_reflection_ = NULL;ConcatParameter_reflection_79,4032
const ::google::protobuf::Descriptor* BatchNormParameter_descriptor_ = NULL;BatchNormParameter_descriptor_80,4070
  BatchNormParameter_reflection_ = NULL;BatchNormParameter_reflection_82,4211
const ::google::protobuf::Descriptor* BiasParameter_descriptor_ = NULL;BiasParameter_descriptor_83,4252
  BiasParameter_reflection_ = NULL;BiasParameter_reflection_85,4388
const ::google::protobuf::Descriptor* ContrastiveLossParameter_descriptor_ = NULL;ContrastiveLossParameter_descriptor_86,4424
  ContrastiveLossParameter_reflection_ = NULL;ContrastiveLossParameter_reflection_88,4571
const ::google::protobuf::Descriptor* ConvolutionParameter_descriptor_ = NULL;ConvolutionParameter_descriptor_89,4618
  ConvolutionParameter_reflection_ = NULL;ConvolutionParameter_reflection_91,4761
const ::google::protobuf::EnumDescriptor* ConvolutionParameter_Engine_descriptor_ = NULL;ConvolutionParameter_Engine_descriptor_92,4804
const ::google::protobuf::Descriptor* CropParameter_descriptor_ = NULL;CropParameter_descriptor_93,4894
  CropParameter_reflection_ = NULL;CropParameter_reflection_95,5030
const ::google::protobuf::Descriptor* DataParameter_descriptor_ = NULL;DataParameter_descriptor_96,5066
  DataParameter_reflection_ = NULL;DataParameter_reflection_98,5202
const ::google::protobuf::EnumDescriptor* DataParameter_DB_descriptor_ = NULL;DataParameter_DB_descriptor_99,5238
const ::google::protobuf::Descriptor* DropoutParameter_descriptor_ = NULL;DropoutParameter_descriptor_100,5317
  DropoutParameter_reflection_ = NULL;DropoutParameter_reflection_102,5456
const ::google::protobuf::Descriptor* DummyDataParameter_descriptor_ = NULL;DummyDataParameter_descriptor_103,5495
  DummyDataParameter_reflection_ = NULL;DummyDataParameter_reflection_105,5636
const ::google::protobuf::Descriptor* EltwiseParameter_descriptor_ = NULL;EltwiseParameter_descriptor_106,5677
  EltwiseParameter_reflection_ = NULL;EltwiseParameter_reflection_108,5816
const ::google::protobuf::EnumDescriptor* EltwiseParameter_EltwiseOp_descriptor_ = NULL;EltwiseParameter_EltwiseOp_descriptor_109,5855
const ::google::protobuf::Descriptor* ELUParameter_descriptor_ = NULL;ELUParameter_descriptor_110,5944
  ELUParameter_reflection_ = NULL;ELUParameter_reflection_112,6079
const ::google::protobuf::Descriptor* EmbedParameter_descriptor_ = NULL;EmbedParameter_descriptor_113,6114
  EmbedParameter_reflection_ = NULL;EmbedParameter_reflection_115,6251
const ::google::protobuf::Descriptor* ExpParameter_descriptor_ = NULL;ExpParameter_descriptor_116,6288
  ExpParameter_reflection_ = NULL;ExpParameter_reflection_118,6423
const ::google::protobuf::Descriptor* FlattenParameter_descriptor_ = NULL;FlattenParameter_descriptor_119,6458
  FlattenParameter_reflection_ = NULL;FlattenParameter_reflection_121,6597
const ::google::protobuf::Descriptor* HDF5DataParameter_descriptor_ = NULL;HDF5DataParameter_descriptor_122,6636
  HDF5DataParameter_reflection_ = NULL;HDF5DataParameter_reflection_124,6776
const ::google::protobuf::Descriptor* HDF5OutputParameter_descriptor_ = NULL;HDF5OutputParameter_descriptor_125,6816
  HDF5OutputParameter_reflection_ = NULL;HDF5OutputParameter_reflection_127,6958
const ::google::protobuf::Descriptor* HingeLossParameter_descriptor_ = NULL;HingeLossParameter_descriptor_128,7000
  HingeLossParameter_reflection_ = NULL;HingeLossParameter_reflection_130,7141
const ::google::protobuf::EnumDescriptor* HingeLossParameter_Norm_descriptor_ = NULL;HingeLossParameter_Norm_descriptor_131,7182
const ::google::protobuf::Descriptor* ImageDataParameter_descriptor_ = NULL;ImageDataParameter_descriptor_132,7268
  ImageDataParameter_reflection_ = NULL;ImageDataParameter_reflection_134,7409
const ::google::protobuf::Descriptor* InfogainLossParameter_descriptor_ = NULL;InfogainLossParameter_descriptor_135,7450
  InfogainLossParameter_reflection_ = NULL;InfogainLossParameter_reflection_137,7594
const ::google::protobuf::Descriptor* InnerProductParameter_descriptor_ = NULL;InnerProductParameter_descriptor_138,7638
  InnerProductParameter_reflection_ = NULL;InnerProductParameter_reflection_140,7782
const ::google::protobuf::Descriptor* InputParameter_descriptor_ = NULL;InputParameter_descriptor_141,7826
  InputParameter_reflection_ = NULL;InputParameter_reflection_143,7963
const ::google::protobuf::Descriptor* LogParameter_descriptor_ = NULL;LogParameter_descriptor_144,8000
  LogParameter_reflection_ = NULL;LogParameter_reflection_146,8135
const ::google::protobuf::Descriptor* LRNParameter_descriptor_ = NULL;LRNParameter_descriptor_147,8170
  LRNParameter_reflection_ = NULL;LRNParameter_reflection_149,8305
const ::google::protobuf::EnumDescriptor* LRNParameter_NormRegion_descriptor_ = NULL;LRNParameter_NormRegion_descriptor_150,8340
const ::google::protobuf::EnumDescriptor* LRNParameter_Engine_descriptor_ = NULL;LRNParameter_Engine_descriptor_151,8426
const ::google::protobuf::Descriptor* MemoryDataParameter_descriptor_ = NULL;MemoryDataParameter_descriptor_152,8508
  MemoryDataParameter_reflection_ = NULL;MemoryDataParameter_reflection_154,8650
const ::google::protobuf::Descriptor* MVNParameter_descriptor_ = NULL;MVNParameter_descriptor_155,8692
  MVNParameter_reflection_ = NULL;MVNParameter_reflection_157,8827
const ::google::protobuf::Descriptor* ParameterParameter_descriptor_ = NULL;ParameterParameter_descriptor_158,8862
  ParameterParameter_reflection_ = NULL;ParameterParameter_reflection_160,9003
const ::google::protobuf::Descriptor* PoolingParameter_descriptor_ = NULL;PoolingParameter_descriptor_161,9044
  PoolingParameter_reflection_ = NULL;PoolingParameter_reflection_163,9183
const ::google::protobuf::EnumDescriptor* PoolingParameter_PoolMethod_descriptor_ = NULL;PoolingParameter_PoolMethod_descriptor_164,9222
const ::google::protobuf::EnumDescriptor* PoolingParameter_Engine_descriptor_ = NULL;PoolingParameter_Engine_descriptor_165,9312
const ::google::protobuf::Descriptor* PowerParameter_descriptor_ = NULL;PowerParameter_descriptor_166,9398
  PowerParameter_reflection_ = NULL;PowerParameter_reflection_168,9535
const ::google::protobuf::Descriptor* PythonParameter_descriptor_ = NULL;PythonParameter_descriptor_169,9572
  PythonParameter_reflection_ = NULL;PythonParameter_reflection_171,9710
const ::google::protobuf::Descriptor* RecurrentParameter_descriptor_ = NULL;RecurrentParameter_descriptor_172,9748
  RecurrentParameter_reflection_ = NULL;RecurrentParameter_reflection_174,9889
const ::google::protobuf::Descriptor* ReductionParameter_descriptor_ = NULL;ReductionParameter_descriptor_175,9930
  ReductionParameter_reflection_ = NULL;ReductionParameter_reflection_177,10071
const ::google::protobuf::EnumDescriptor* ReductionParameter_ReductionOp_descriptor_ = NULL;ReductionParameter_ReductionOp_descriptor_178,10112
const ::google::protobuf::Descriptor* ReLUParameter_descriptor_ = NULL;ReLUParameter_descriptor_179,10205
  ReLUParameter_reflection_ = NULL;ReLUParameter_reflection_181,10341
const ::google::protobuf::EnumDescriptor* ReLUParameter_Engine_descriptor_ = NULL;ReLUParameter_Engine_descriptor_182,10377
const ::google::protobuf::Descriptor* ReshapeParameter_descriptor_ = NULL;ReshapeParameter_descriptor_183,10460
  ReshapeParameter_reflection_ = NULL;ReshapeParameter_reflection_185,10599
const ::google::protobuf::Descriptor* ScaleParameter_descriptor_ = NULL;ScaleParameter_descriptor_186,10638
  ScaleParameter_reflection_ = NULL;ScaleParameter_reflection_188,10775
const ::google::protobuf::Descriptor* SigmoidParameter_descriptor_ = NULL;SigmoidParameter_descriptor_189,10812
  SigmoidParameter_reflection_ = NULL;SigmoidParameter_reflection_191,10951
const ::google::protobuf::EnumDescriptor* SigmoidParameter_Engine_descriptor_ = NULL;SigmoidParameter_Engine_descriptor_192,10990
const ::google::protobuf::Descriptor* SliceParameter_descriptor_ = NULL;SliceParameter_descriptor_193,11076
  SliceParameter_reflection_ = NULL;SliceParameter_reflection_195,11213
const ::google::protobuf::Descriptor* SoftmaxParameter_descriptor_ = NULL;SoftmaxParameter_descriptor_196,11250
  SoftmaxParameter_reflection_ = NULL;SoftmaxParameter_reflection_198,11389
const ::google::protobuf::EnumDescriptor* SoftmaxParameter_Engine_descriptor_ = NULL;SoftmaxParameter_Engine_descriptor_199,11428
const ::google::protobuf::Descriptor* TanHParameter_descriptor_ = NULL;TanHParameter_descriptor_200,11514
  TanHParameter_reflection_ = NULL;TanHParameter_reflection_202,11650
const ::google::protobuf::EnumDescriptor* TanHParameter_Engine_descriptor_ = NULL;TanHParameter_Engine_descriptor_203,11686
const ::google::protobuf::Descriptor* TileParameter_descriptor_ = NULL;TileParameter_descriptor_204,11769
  TileParameter_reflection_ = NULL;TileParameter_reflection_206,11905
const ::google::protobuf::Descriptor* ThresholdParameter_descriptor_ = NULL;ThresholdParameter_descriptor_207,11941
  ThresholdParameter_reflection_ = NULL;ThresholdParameter_reflection_209,12082
const ::google::protobuf::Descriptor* WindowDataParameter_descriptor_ = NULL;WindowDataParameter_descriptor_210,12123
  WindowDataParameter_reflection_ = NULL;WindowDataParameter_reflection_212,12265
const ::google::protobuf::Descriptor* SPPParameter_descriptor_ = NULL;SPPParameter_descriptor_213,12307
  SPPParameter_reflection_ = NULL;SPPParameter_reflection_215,12442
const ::google::protobuf::EnumDescriptor* SPPParameter_PoolMethod_descriptor_ = NULL;SPPParameter_PoolMethod_descriptor_216,12477
const ::google::protobuf::EnumDescriptor* SPPParameter_Engine_descriptor_ = NULL;SPPParameter_Engine_descriptor_217,12563
const ::google::protobuf::Descriptor* V1LayerParameter_descriptor_ = NULL;V1LayerParameter_descriptor_218,12645
  V1LayerParameter_reflection_ = NULL;V1LayerParameter_reflection_220,12784
const ::google::protobuf::EnumDescriptor* V1LayerParameter_LayerType_descriptor_ = NULL;V1LayerParameter_LayerType_descriptor_221,12823
const ::google::protobuf::EnumDescriptor* V1LayerParameter_DimCheckMode_descriptor_ = NULL;V1LayerParameter_DimCheckMode_descriptor_222,12912
const ::google::protobuf::Descriptor* V0LayerParameter_descriptor_ = NULL;V0LayerParameter_descriptor_223,13004
  V0LayerParameter_reflection_ = NULL;V0LayerParameter_reflection_225,13143
const ::google::protobuf::EnumDescriptor* V0LayerParameter_PoolMethod_descriptor_ = NULL;V0LayerParameter_PoolMethod_descriptor_226,13182
const ::google::protobuf::Descriptor* PReLUParameter_descriptor_ = NULL;PReLUParameter_descriptor_227,13272
  PReLUParameter_reflection_ = NULL;PReLUParameter_reflection_229,13409
const ::google::protobuf::Descriptor* QuantizationParameter_descriptor_ = NULL;QuantizationParameter_descriptor_230,13446
  QuantizationParameter_reflection_ = NULL;QuantizationParameter_reflection_232,13590
const ::google::protobuf::EnumDescriptor* QuantizationParameter_RoundMethod_descriptor_ = NULL;QuantizationParameter_RoundMethod_descriptor_233,13634
const ::google::protobuf::EnumDescriptor* QuantizationParameter_RoundStrategy_descriptor_ = NULL;QuantizationParameter_RoundStrategy_descriptor_234,13730
const ::google::protobuf::EnumDescriptor* Phase_descriptor_ = NULL;Phase_descriptor_235,13828
void protobuf_AssignDesc_caffe_2eproto() {protobuf_AssignDesc_caffe_2eproto240,13915
inline void protobuf_AssignDescriptorsOnce() {protobuf_AssignDescriptorsOnce1567,91675
void protobuf_RegisterTypes(const ::std::string&) {protobuf_RegisterTypes1572,91851
void protobuf_ShutdownFile_caffe_2eproto() {protobuf_ShutdownFile_caffe_2eproto1702,100897
void protobuf_AddDesc_caffe_2eproto() {protobuf_AddDesc_caffe_2eproto1834,106345
struct StaticDescriptorInitializer_caffe_2eproto {StaticDescriptorInitializer_caffe_2eproto2377,145172
  StaticDescriptorInitializer_caffe_2eproto() {StaticDescriptorInitializer_caffe_2eproto2378,145223
} static_descriptor_initializer_caffe_2eproto_;static_descriptor_initializer_caffe_2eproto_2381,145313
const ::google::protobuf::EnumDescriptor* Phase_descriptor() {Phase_descriptor2382,145361
bool Phase_IsValid(int value) {Phase_IsValid2386,145490
const int BlobShape::kDimFieldNumber;kDimFieldNumber2400,145713
BlobShape::BlobShape()BlobShape2403,145773
void BlobShape::InitAsDefaultInstance() {InitAsDefaultInstance2408,145851
BlobShape::BlobShape(const BlobShape& from)BlobShape2411,145896
void BlobShape::SharedCtor() {SharedCtor2417,146014
BlobShape::~BlobShape() {~BlobShape2422,146116
void BlobShape::SharedDtor() {SharedDtor2426,146161
void BlobShape::SetCachedSize(int size) const {SetCachedSize2431,146234
const ::google::protobuf::Descriptor* BlobShape::descriptor() {descriptor2436,146388
const BlobShape& BlobShape::default_instance() {default_instance2441,146523
BlobShape* BlobShape::default_instance_ = NULL;default_instance_2446,146671
BlobShape* BlobShape::New() const {New2448,146720
void BlobShape::Clear() {Clear2452,146783
bool BlobShape::MergePartialFromCodedStream(MergePartialFromCodedStream2458,146912
#define DO_(DO_2460,147012
#undef DO_DO_2497,148684
void BlobShape::SerializeWithCachedSizes(SerializeWithCachedSizes2500,148698
::google::protobuf::uint8* BlobShape::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray2518,149372
int BlobShape::ByteSize() const {ByteSize2541,150209
void BlobShape::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom2572,151073
void BlobShape::MergeFrom(const BlobShape& from) {MergeFrom2584,151429
void BlobShape::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom2590,151606
void BlobShape::CopyFrom(const BlobShape& from) {CopyFrom2596,151736
bool BlobShape::IsInitialized() const {IsInitialized2602,151848
void BlobShape::Swap(BlobShape* other) {Swap2607,151907
::google::protobuf::Metadata BlobShape::GetMetadata() const {GetMetadata2616,152164
const int BlobProto::kShapeFieldNumber;kShapeFieldNumber2628,152509
const int BlobProto::kDataFieldNumber;kDataFieldNumber2629,152549
const int BlobProto::kDiffFieldNumber;kDiffFieldNumber2630,152588
const int BlobProto::kDoubleDataFieldNumber;kDoubleDataFieldNumber2631,152627
const int BlobProto::kDoubleDiffFieldNumber;kDoubleDiffFieldNumber2632,152672
const int BlobProto::kNumFieldNumber;kNumFieldNumber2633,152717
const int BlobProto::kChannelsFieldNumber;kChannelsFieldNumber2634,152755
const int BlobProto::kHeightFieldNumber;kHeightFieldNumber2635,152798
const int BlobProto::kWidthFieldNumber;kWidthFieldNumber2636,152839
BlobProto::BlobProto()BlobProto2639,152901
void BlobProto::InitAsDefaultInstance() {InitAsDefaultInstance2644,152979
BlobProto::BlobProto(const BlobProto& from)BlobProto2648,153110
void BlobProto::SharedCtor() {SharedCtor2654,153228
BlobProto::~BlobProto() {~BlobProto2664,153405
void BlobProto::SharedDtor() {SharedDtor2668,153450
void BlobProto::SetCachedSize(int size) const {SetCachedSize2674,153542
const ::google::protobuf::Descriptor* BlobProto::descriptor() {descriptor2679,153696
const BlobProto& BlobProto::default_instance() {default_instance2684,153831
BlobProto* BlobProto::default_instance_ = NULL;default_instance_2689,153979
BlobProto* BlobProto::New() const {New2691,154028
void BlobProto::Clear() {Clear2695,154091
bool BlobProto::MergePartialFromCodedStream(MergePartialFromCodedStream2715,154552
#define DO_(DO_2717,154652
#undef DO_DO_2895,162528
void BlobProto::SerializeWithCachedSizes(SerializeWithCachedSizes2898,162542
::google::protobuf::uint8* BlobProto::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray2972,165395
int BlobProto::ByteSize() const {ByteSize3064,168848
void BlobProto::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom3173,171931
void BlobProto::MergeFrom(const BlobProto& from) {MergeFrom3185,172287
void BlobProto::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom3213,173073
void BlobProto::CopyFrom(const BlobProto& from) {CopyFrom3219,173203
bool BlobProto::IsInitialized() const {IsInitialized3225,173315
void BlobProto::Swap(BlobProto* other) {Swap3230,173374
::google::protobuf::Metadata BlobProto::GetMetadata() const {GetMetadata3247,173948
const int BlobProtoVector::kBlobsFieldNumber;kBlobsFieldNumber3259,174293
BlobProtoVector::BlobProtoVector()BlobProtoVector3262,174361
void BlobProtoVector::InitAsDefaultInstance() {InitAsDefaultInstance3267,174451
BlobProtoVector::BlobProtoVector(const BlobProtoVector& from)BlobProtoVector3270,174502
void BlobProtoVector::SharedCtor() {SharedCtor3276,174638
BlobProtoVector::~BlobProtoVector() {~BlobProtoVector3281,174746
void BlobProtoVector::SharedDtor() {SharedDtor3285,174803
void BlobProtoVector::SetCachedSize(int size) const {SetCachedSize3290,174882
const ::google::protobuf::Descriptor* BlobProtoVector::descriptor() {descriptor3295,175042
const BlobProtoVector& BlobProtoVector::default_instance() {default_instance3300,175189
BlobProtoVector* BlobProtoVector::default_instance_ = NULL;default_instance_3305,175349
BlobProtoVector* BlobProtoVector::New() const {New3307,175410
void BlobProtoVector::Clear() {Clear3311,175491
bool BlobProtoVector::MergePartialFromCodedStream(MergePartialFromCodedStream3317,175628
#define DO_(DO_3319,175734
#undef DO_DO_3351,176915
void BlobProtoVector::SerializeWithCachedSizes(SerializeWithCachedSizes3354,176929
::google::protobuf::uint8* BlobProtoVector::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray3368,177393
int BlobProtoVector::ByteSize() const {ByteSize3384,177925
void BlobProtoVector::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom3406,178533
void BlobProtoVector::MergeFrom(const BlobProtoVector& from) {MergeFrom3418,178907
void BlobProtoVector::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom3424,179100
void BlobProtoVector::CopyFrom(const BlobProtoVector& from) {CopyFrom3430,179236
bool BlobProtoVector::IsInitialized() const {IsInitialized3436,179360
void BlobProtoVector::Swap(BlobProtoVector* other) {Swap3441,179425
::google::protobuf::Metadata BlobProtoVector::GetMetadata() const {GetMetadata3450,179698
const int Datum::kChannelsFieldNumber;kChannelsFieldNumber3462,180061
const int Datum::kHeightFieldNumber;kHeightFieldNumber3463,180100
const int Datum::kWidthFieldNumber;kWidthFieldNumber3464,180137
const int Datum::kDataFieldNumber;kDataFieldNumber3465,180173
const int Datum::kLabelFieldNumber;kLabelFieldNumber3466,180208
const int Datum::kFloatDataFieldNumber;kFloatDataFieldNumber3467,180244
const int Datum::kEncodedFieldNumber;kEncodedFieldNumber3468,180284
Datum::Datum()Datum3471,180344
void Datum::InitAsDefaultInstance() {InitAsDefaultInstance3476,180414
Datum::Datum(const Datum& from)Datum3479,180455
void Datum::SharedCtor() {SharedCtor3485,180561
Datum::~Datum() {~Datum3496,180823
void Datum::SharedDtor() {SharedDtor3500,180860
void Datum::SetCachedSize(int size) const {SetCachedSize3508,181013
const ::google::protobuf::Descriptor* Datum::descriptor() {descriptor3513,181163
const Datum& Datum::default_instance() {default_instance3518,181290
Datum* Datum::default_instance_ = NULL;default_instance_3523,181430
Datum* Datum::New() const {New3525,181471
void Datum::Clear() {Clear3529,181522
bool Datum::MergePartialFromCodedStream(MergePartialFromCodedStream3547,181924
#define DO_(DO_3549,182020
#undef DO_DO_3681,187315
void Datum::SerializeWithCachedSizes(SerializeWithCachedSizes3684,187329
::google::protobuf::uint8* Datum::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray3729,188681
int Datum::ByteSize() const {ByteSize3776,190199
void Datum::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom3839,191780
void Datum::MergeFrom(const Datum& from) {MergeFrom3851,192124
void Datum::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom3877,192771
void Datum::CopyFrom(const Datum& from) {CopyFrom3883,192897
bool Datum::IsInitialized() const {IsInitialized3889,193001
void Datum::Swap(Datum* other) {Swap3894,193056
::google::protobuf::Metadata Datum::GetMetadata() const {GetMetadata3909,193557
const ::google::protobuf::EnumDescriptor* FillerParameter_VarianceNorm_descriptor() {FillerParameter_VarianceNorm_descriptor3920,193873
bool FillerParameter_VarianceNorm_IsValid(int value) {FillerParameter_VarianceNorm_IsValid3924,194048
const FillerParameter_VarianceNorm FillerParameter::FAN_IN;FAN_IN3936,194233
const FillerParameter_VarianceNorm FillerParameter::FAN_OUT;FAN_OUT3937,194293
const FillerParameter_VarianceNorm FillerParameter::AVERAGE;AVERAGE3938,194354
const FillerParameter_VarianceNorm FillerParameter::VarianceNorm_MIN;VarianceNorm_MIN3939,194415
const FillerParameter_VarianceNorm FillerParameter::VarianceNorm_MAX;VarianceNorm_MAX3940,194485
const int FillerParameter::VarianceNorm_ARRAYSIZE;VarianceNorm_ARRAYSIZE3941,194555
::std::string* FillerParameter::_default_type_ = NULL;_default_type_3943,194626
const int FillerParameter::kTypeFieldNumber;kTypeFieldNumber3945,194698
const int FillerParameter::kValueFieldNumber;kValueFieldNumber3946,194743
const int FillerParameter::kMinFieldNumber;kMinFieldNumber3947,194789
const int FillerParameter::kMaxFieldNumber;kMaxFieldNumber3948,194833
const int FillerParameter::kMeanFieldNumber;kMeanFieldNumber3949,194877
const int FillerParameter::kStdFieldNumber;kStdFieldNumber3950,194922
const int FillerParameter::kSparseFieldNumber;kSparseFieldNumber3951,194966
const int FillerParameter::kVarianceNormFieldNumber;kVarianceNormFieldNumber3952,195013
FillerParameter::FillerParameter()FillerParameter3955,195088
void FillerParameter::InitAsDefaultInstance() {InitAsDefaultInstance3960,195178
FillerParameter::FillerParameter(const FillerParameter& from)FillerParameter3963,195229
void FillerParameter::SharedCtor() {SharedCtor3969,195365
FillerParameter::~FillerParameter() {~FillerParameter3982,195629
void FillerParameter::SharedDtor() {SharedDtor3986,195686
void FillerParameter::SetCachedSize(int size) const {SetCachedSize3994,195820
const ::google::protobuf::Descriptor* FillerParameter::descriptor() {descriptor3999,195980
const FillerParameter& FillerParameter::default_instance() {default_instance4004,196127
FillerParameter* FillerParameter::default_instance_ = NULL;default_instance_4009,196287
FillerParameter* FillerParameter::New() const {New4011,196348
void FillerParameter::Clear() {Clear4015,196429
bool FillerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream4034,196830
#define DO_(DO_4036,196936
#undef DO_DO_4186,202802
void FillerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes4189,202816
::google::protobuf::uint8* FillerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray4242,204583
int FillerParameter::ByteSize() const {ByteSize4297,206532
void FillerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom4358,208082
void FillerParameter::MergeFrom(const FillerParameter& from) {MergeFrom4370,208456
void FillerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom4401,209198
void FillerParameter::CopyFrom(const FillerParameter& from) {CopyFrom4407,209334
bool FillerParameter::IsInitialized() const {IsInitialized4413,209458
void FillerParameter::Swap(FillerParameter* other) {Swap4418,209523
::google::protobuf::Metadata FillerParameter::GetMetadata() const {GetMetadata4434,210069
const int NetParameter::kNameFieldNumber;kNameFieldNumber4446,210432
const int NetParameter::kInputFieldNumber;kInputFieldNumber4447,210474
const int NetParameter::kInputShapeFieldNumber;kInputShapeFieldNumber4448,210517
const int NetParameter::kInputDimFieldNumber;kInputDimFieldNumber4449,210565
const int NetParameter::kForceBackwardFieldNumber;kForceBackwardFieldNumber4450,210611
const int NetParameter::kStateFieldNumber;kStateFieldNumber4451,210662
const int NetParameter::kDebugInfoFieldNumber;kDebugInfoFieldNumber4452,210705
const int NetParameter::kLayerFieldNumber;kLayerFieldNumber4453,210752
const int NetParameter::kLayersFieldNumber;kLayersFieldNumber4454,210795
NetParameter::NetParameter()NetParameter4457,210861
void NetParameter::InitAsDefaultInstance() {InitAsDefaultInstance4462,210945
NetParameter::NetParameter(const NetParameter& from)NetParameter4466,211077
void NetParameter::SharedCtor() {SharedCtor4472,211204
NetParameter::~NetParameter() {~NetParameter4481,211460
void NetParameter::SharedDtor() {SharedDtor4485,211511
void NetParameter::SetCachedSize(int size) const {SetCachedSize4494,211690
const ::google::protobuf::Descriptor* NetParameter::descriptor() {descriptor4499,211847
const NetParameter& NetParameter::default_instance() {default_instance4504,211988
NetParameter* NetParameter::default_instance_ = NULL;default_instance_4509,212142
NetParameter* NetParameter::New() const {New4511,212197
void NetParameter::Clear() {Clear4515,212269
bool NetParameter::MergePartialFromCodedStream(MergePartialFromCodedStream4537,212811
#define DO_(DO_4539,212914
#undef DO_DO_4704,219685
void NetParameter::SerializeWithCachedSizes(SerializeWithCachedSizes4707,219699
::google::protobuf::uint8* NetParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray4773,222022
int NetParameter::ByteSize() const {ByteSize4845,224573
void NetParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom4926,226914
void NetParameter::MergeFrom(const NetParameter& from) {MergeFrom4938,227279
void NetParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom4962,228014
void NetParameter::CopyFrom(const NetParameter& from) {CopyFrom4968,228147
bool NetParameter::IsInitialized() const {IsInitialized4974,228265
void NetParameter::Swap(NetParameter* other) {Swap4979,228327
::google::protobuf::Metadata NetParameter::GetMetadata() const {GetMetadata4996,228926
const ::google::protobuf::EnumDescriptor* SolverParameter_SnapshotFormat_descriptor() {SolverParameter_SnapshotFormat_descriptor5007,229263
bool SolverParameter_SnapshotFormat_IsValid(int value) {SolverParameter_SnapshotFormat_IsValid5011,229442
const SolverParameter_SnapshotFormat SolverParameter::HDF5;HDF55022,229617
const SolverParameter_SnapshotFormat SolverParameter::BINARYPROTO;BINARYPROTO5023,229677
const SolverParameter_SnapshotFormat SolverParameter::SnapshotFormat_MIN;SnapshotFormat_MIN5024,229744
const SolverParameter_SnapshotFormat SolverParameter::SnapshotFormat_MAX;SnapshotFormat_MAX5025,229818
const int SolverParameter::SnapshotFormat_ARRAYSIZE;SnapshotFormat_ARRAYSIZE5026,229892
const ::google::protobuf::EnumDescriptor* SolverParameter_SolverMode_descriptor() {SolverParameter_SolverMode_descriptor5028,229965
bool SolverParameter_SolverMode_IsValid(int value) {SolverParameter_SolverMode_IsValid5032,230136
const SolverParameter_SolverMode SolverParameter::CPU;CPU5043,230307
const SolverParameter_SolverMode SolverParameter::GPU;GPU5044,230362
const SolverParameter_SolverMode SolverParameter::SolverMode_MIN;SolverMode_MIN5045,230417
const SolverParameter_SolverMode SolverParameter::SolverMode_MAX;SolverMode_MAX5046,230483
const int SolverParameter::SolverMode_ARRAYSIZE;SolverMode_ARRAYSIZE5047,230549
const ::google::protobuf::EnumDescriptor* SolverParameter_SolverType_descriptor() {SolverParameter_SolverType_descriptor5049,230618
bool SolverParameter_SolverType_IsValid(int value) {SolverParameter_SolverType_IsValid5053,230789
const SolverParameter_SolverType SolverParameter::SGD;SGD5068,231008
const SolverParameter_SolverType SolverParameter::NESTEROV;NESTEROV5069,231063
const SolverParameter_SolverType SolverParameter::ADAGRAD;ADAGRAD5070,231123
const SolverParameter_SolverType SolverParameter::RMSPROP;RMSPROP5071,231182
const SolverParameter_SolverType SolverParameter::ADADELTA;ADADELTA5072,231241
const SolverParameter_SolverType SolverParameter::ADAM;ADAM5073,231301
const SolverParameter_SolverType SolverParameter::SolverType_MIN;SolverType_MIN5074,231357
const SolverParameter_SolverType SolverParameter::SolverType_MAX;SolverType_MAX5075,231423
const int SolverParameter::SolverType_ARRAYSIZE;SolverType_ARRAYSIZE5076,231489
::std::string* SolverParameter::_default_regularization_type_ = NULL;_default_regularization_type_5078,231558
::std::string* SolverParameter::_default_type_ = NULL;_default_type_5079,231628
const int SolverParameter::kNetFieldNumber;kNetFieldNumber5081,231700
const int SolverParameter::kNetParamFieldNumber;kNetParamFieldNumber5082,231744
const int SolverParameter::kTrainNetFieldNumber;kTrainNetFieldNumber5083,231793
const int SolverParameter::kTestNetFieldNumber;kTestNetFieldNumber5084,231842
const int SolverParameter::kTrainNetParamFieldNumber;kTrainNetParamFieldNumber5085,231890
const int SolverParameter::kTestNetParamFieldNumber;kTestNetParamFieldNumber5086,231944
const int SolverParameter::kTrainStateFieldNumber;kTrainStateFieldNumber5087,231997
const int SolverParameter::kTestStateFieldNumber;kTestStateFieldNumber5088,232048
const int SolverParameter::kTestIterFieldNumber;kTestIterFieldNumber5089,232098
const int SolverParameter::kTestIntervalFieldNumber;kTestIntervalFieldNumber5090,232147
const int SolverParameter::kTestComputeLossFieldNumber;kTestComputeLossFieldNumber5091,232200
const int SolverParameter::kTestInitializationFieldNumber;kTestInitializationFieldNumber5092,232256
const int SolverParameter::kBaseLrFieldNumber;kBaseLrFieldNumber5093,232315
const int SolverParameter::kDisplayFieldNumber;kDisplayFieldNumber5094,232362
const int SolverParameter::kAverageLossFieldNumber;kAverageLossFieldNumber5095,232410
const int SolverParameter::kMaxIterFieldNumber;kMaxIterFieldNumber5096,232462
const int SolverParameter::kIterSizeFieldNumber;kIterSizeFieldNumber5097,232510
const int SolverParameter::kLrPolicyFieldNumber;kLrPolicyFieldNumber5098,232559
const int SolverParameter::kGammaFieldNumber;kGammaFieldNumber5099,232608
const int SolverParameter::kPowerFieldNumber;kPowerFieldNumber5100,232654
const int SolverParameter::kMomentumFieldNumber;kMomentumFieldNumber5101,232700
const int SolverParameter::kWeightDecayFieldNumber;kWeightDecayFieldNumber5102,232749
const int SolverParameter::kRegularizationTypeFieldNumber;kRegularizationTypeFieldNumber5103,232801
const int SolverParameter::kStepsizeFieldNumber;kStepsizeFieldNumber5104,232860
const int SolverParameter::kStepvalueFieldNumber;kStepvalueFieldNumber5105,232909
const int SolverParameter::kClipGradientsFieldNumber;kClipGradientsFieldNumber5106,232959
const int SolverParameter::kSnapshotFieldNumber;kSnapshotFieldNumber5107,233013
const int SolverParameter::kSnapshotPrefixFieldNumber;kSnapshotPrefixFieldNumber5108,233062
const int SolverParameter::kSnapshotDiffFieldNumber;kSnapshotDiffFieldNumber5109,233117
const int SolverParameter::kSnapshotFormatFieldNumber;kSnapshotFormatFieldNumber5110,233170
const int SolverParameter::kSolverModeFieldNumber;kSolverModeFieldNumber5111,233225
const int SolverParameter::kDeviceIdFieldNumber;kDeviceIdFieldNumber5112,233276
const int SolverParameter::kRandomSeedFieldNumber;kRandomSeedFieldNumber5113,233325
const int SolverParameter::kTypeFieldNumber;kTypeFieldNumber5114,233376
const int SolverParameter::kDeltaFieldNumber;kDeltaFieldNumber5115,233421
const int SolverParameter::kMomentum2FieldNumber;kMomentum2FieldNumber5116,233467
const int SolverParameter::kRmsDecayFieldNumber;kRmsDecayFieldNumber5117,233517
const int SolverParameter::kDebugInfoFieldNumber;kDebugInfoFieldNumber5118,233566
const int SolverParameter::kSnapshotAfterTrainFieldNumber;kSnapshotAfterTrainFieldNumber5119,233616
const int SolverParameter::kSolverTypeFieldNumber;kSolverTypeFieldNumber5120,233675
const int SolverParameter::kLayerWiseReduceFieldNumber;kLayerWiseReduceFieldNumber5121,233726
SolverParameter::SolverParameter()SolverParameter5124,233804
void SolverParameter::InitAsDefaultInstance() {InitAsDefaultInstance5129,233894
SolverParameter::SolverParameter(const SolverParameter& from)SolverParameter5135,234233
void SolverParameter::SharedCtor() {SharedCtor5141,234369
SolverParameter::~SolverParameter() {~SolverParameter5182,235633
void SolverParameter::SharedDtor() {SharedDtor5186,235690
void SolverParameter::SetCachedSize(int size) const {SetCachedSize5212,236377
const ::google::protobuf::Descriptor* SolverParameter::descriptor() {descriptor5217,236537
const SolverParameter& SolverParameter::default_instance() {default_instance5222,236684
SolverParameter* SolverParameter::default_instance_ = NULL;default_instance_5227,236844
SolverParameter* SolverParameter::New() const {New5229,236905
void SolverParameter::Clear() {Clear5233,236986
bool SolverParameter::MergePartialFromCodedStream(MergePartialFromCodedStream5321,239401
#define DO_(DO_5323,239507
#undef DO_DO_6023,268594
void SolverParameter::SerializeWithCachedSizes(SerializeWithCachedSizes6026,268608
::google::protobuf::uint8* SolverParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray6277,277692
int SolverParameter::ByteSize() const {ByteSize6540,287562
void SolverParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom6828,295753
void SolverParameter::MergeFrom(const SolverParameter& from) {MergeFrom6840,296127
void SolverParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom6970,299938
void SolverParameter::CopyFrom(const SolverParameter& from) {CopyFrom6976,300074
bool SolverParameter::IsInitialized() const {IsInitialized6982,300198
void SolverParameter::Swap(SolverParameter* other) {Swap6987,300263
::google::protobuf::Metadata SolverParameter::GetMetadata() const {GetMetadata7037,302550
const int SolverState::kIterFieldNumber;kIterFieldNumber7049,302913
const int SolverState::kLearnedNetFieldNumber;kLearnedNetFieldNumber7050,302954
const int SolverState::kHistoryFieldNumber;kHistoryFieldNumber7051,303001
const int SolverState::kCurrentStepFieldNumber;kCurrentStepFieldNumber7052,303045
SolverState::SolverState()SolverState7055,303115
void SolverState::InitAsDefaultInstance() {InitAsDefaultInstance7060,303197
SolverState::SolverState(const SolverState& from)SolverState7063,303244
void SolverState::SharedCtor() {SharedCtor7069,303368
SolverState::~SolverState() {~SolverState7077,303597
void SolverState::SharedDtor() {SharedDtor7081,303646
void SolverState::SetCachedSize(int size) const {SetCachedSize7089,303819
const ::google::protobuf::Descriptor* SolverState::descriptor() {descriptor7094,303975
const SolverState& SolverState::default_instance() {default_instance7099,304114
SolverState* SolverState::default_instance_ = NULL;default_instance_7104,304266
SolverState* SolverState::New() const {New7106,304319
void SolverState::Clear() {Clear7110,304388
bool SolverState::MergePartialFromCodedStream(MergePartialFromCodedStream7125,304762
#define DO_(DO_7127,304864
#undef DO_DO_7207,308037
void SolverState::SerializeWithCachedSizes(SerializeWithCachedSizes7210,308051
::google::protobuf::uint8* SolverState::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray7243,309199
int SolverState::ByteSize() const {ByteSize7279,310471
void SolverState::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom7324,311723
void SolverState::MergeFrom(const SolverState& from) {MergeFrom7336,312085
void SolverState::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom7353,312564
void SolverState::CopyFrom(const SolverState& from) {CopyFrom7359,312696
bool SolverState::IsInitialized() const {IsInitialized7365,312812
void SolverState::Swap(SolverState* other) {Swap7370,312873
::google::protobuf::Metadata SolverState::GetMetadata() const {GetMetadata7382,313280
const int NetState::kPhaseFieldNumber;kPhaseFieldNumber7394,313631
const int NetState::kLevelFieldNumber;kLevelFieldNumber7395,313670
const int NetState::kStageFieldNumber;kStageFieldNumber7396,313709
NetState::NetState()NetState7399,313770
void NetState::InitAsDefaultInstance() {InitAsDefaultInstance7404,313846
NetState::NetState(const NetState& from)NetState7407,313890
void NetState::SharedCtor() {SharedCtor7413,314005
NetState::~NetState() {~NetState7420,314134
void NetState::SharedDtor() {SharedDtor7424,314177
void NetState::SetCachedSize(int size) const {SetCachedSize7429,314249
const ::google::protobuf::Descriptor* NetState::descriptor() {descriptor7434,314402
const NetState& NetState::default_instance() {default_instance7439,314535
NetState* NetState::default_instance_ = NULL;default_instance_7444,314681
NetState* NetState::New() const {New7446,314728
void NetState::Clear() {Clear7450,314788
bool NetState::MergePartialFromCodedStream(MergePartialFromCodedStream7460,315004
#define DO_(DO_7462,315103
#undef DO_DO_7534,317930
void NetState::SerializeWithCachedSizes(SerializeWithCachedSizes7537,317944
::google::protobuf::uint8* NetState::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray7565,318884
int NetState::ByteSize() const {ByteSize7594,319924
void NetState::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom7630,320933
void NetState::MergeFrom(const NetState& from) {MergeFrom7642,321286
void NetState::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom7656,321654
void NetState::CopyFrom(const NetState& from) {CopyFrom7662,321783
bool NetState::IsInitialized() const {IsInitialized7668,321893
void NetState::Swap(NetState* other) {Swap7673,321951
::google::protobuf::Metadata NetState::GetMetadata() const {GetMetadata7684,322286
const int NetStateRule::kPhaseFieldNumber;kPhaseFieldNumber7696,322628
const int NetStateRule::kMinLevelFieldNumber;kMinLevelFieldNumber7697,322671
const int NetStateRule::kMaxLevelFieldNumber;kMaxLevelFieldNumber7698,322717
const int NetStateRule::kStageFieldNumber;kStageFieldNumber7699,322763
const int NetStateRule::kNotStageFieldNumber;kNotStageFieldNumber7700,322806
NetStateRule::NetStateRule()NetStateRule7703,322874
void NetStateRule::InitAsDefaultInstance() {InitAsDefaultInstance7708,322958
NetStateRule::NetStateRule(const NetStateRule& from)NetStateRule7711,323006
void NetStateRule::SharedCtor() {SharedCtor7717,323133
NetStateRule::~NetStateRule() {~NetStateRule7725,323288
void NetStateRule::SharedDtor() {SharedDtor7729,323339
void NetStateRule::SetCachedSize(int size) const {SetCachedSize7734,323415
const ::google::protobuf::Descriptor* NetStateRule::descriptor() {descriptor7739,323572
const NetStateRule& NetStateRule::default_instance() {default_instance7744,323713
NetStateRule* NetStateRule::default_instance_ = NULL;default_instance_7749,323867
NetStateRule* NetStateRule::New() const {New7751,323922
void NetStateRule::Clear() {Clear7755,323994
bool NetStateRule::MergePartialFromCodedStream(MergePartialFromCodedStream7767,324260
#define DO_(DO_7769,324363
#undef DO_DO_7876,328646
void NetStateRule::SerializeWithCachedSizes(SerializeWithCachedSizes7879,328660
::google::protobuf::uint8* NetStateRule::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray7921,330117
int NetStateRule::ByteSize() const {ByteSize7964,331712
void NetStateRule::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom8014,333137
void NetStateRule::MergeFrom(const NetStateRule& from) {MergeFrom8026,333502
void NetStateRule::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom8044,334008
void NetStateRule::CopyFrom(const NetStateRule& from) {CopyFrom8050,334141
bool NetStateRule::IsInitialized() const {IsInitialized8056,334259
void NetStateRule::Swap(NetStateRule* other) {Swap8061,334321
::google::protobuf::Metadata NetStateRule::GetMetadata() const {GetMetadata8074,334759
const ::google::protobuf::EnumDescriptor* ParamSpec_DimCheckMode_descriptor() {ParamSpec_DimCheckMode_descriptor8085,335096
bool ParamSpec_DimCheckMode_IsValid(int value) {ParamSpec_DimCheckMode_IsValid8089,335259
const ParamSpec_DimCheckMode ParamSpec::STRICT;STRICT8100,335426
const ParamSpec_DimCheckMode ParamSpec::PERMISSIVE;PERMISSIVE8101,335474
const ParamSpec_DimCheckMode ParamSpec::DimCheckMode_MIN;DimCheckMode_MIN8102,335526
const ParamSpec_DimCheckMode ParamSpec::DimCheckMode_MAX;DimCheckMode_MAX8103,335584
const int ParamSpec::DimCheckMode_ARRAYSIZE;DimCheckMode_ARRAYSIZE8104,335642
const int ParamSpec::kNameFieldNumber;kNameFieldNumber8107,335724
const int ParamSpec::kShareModeFieldNumber;kShareModeFieldNumber8108,335763
const int ParamSpec::kLrMultFieldNumber;kLrMultFieldNumber8109,335807
const int ParamSpec::kDecayMultFieldNumber;kDecayMultFieldNumber8110,335848
ParamSpec::ParamSpec()ParamSpec8113,335914
void ParamSpec::InitAsDefaultInstance() {InitAsDefaultInstance8118,335992
ParamSpec::ParamSpec(const ParamSpec& from)ParamSpec8121,336037
void ParamSpec::SharedCtor() {SharedCtor8127,336155
ParamSpec::~ParamSpec() {~ParamSpec8136,336395
void ParamSpec::SharedDtor() {SharedDtor8140,336440
void ParamSpec::SetCachedSize(int size) const {SetCachedSize8148,336597
const ::google::protobuf::Descriptor* ParamSpec::descriptor() {descriptor8153,336751
const ParamSpec& ParamSpec::default_instance() {default_instance8158,336886
ParamSpec* ParamSpec::default_instance_ = NULL;default_instance_8163,337034
ParamSpec* ParamSpec::New() const {New8165,337083
void ParamSpec::Clear() {Clear8169,337146
bool ParamSpec::MergePartialFromCodedStream(MergePartialFromCodedStream8184,337499
#define DO_(DO_8186,337599
#undef DO_DO_8272,340998
void ParamSpec::SerializeWithCachedSizes(SerializeWithCachedSizes8275,341012
::google::protobuf::uint8* ParamSpec::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray8308,342118
int ParamSpec::ByteSize() const {ByteSize8343,343342
void ParamSpec::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom8382,344349
void ParamSpec::MergeFrom(const ParamSpec& from) {MergeFrom8394,344705
void ParamSpec::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom8413,345205
void ParamSpec::CopyFrom(const ParamSpec& from) {CopyFrom8419,345335
bool ParamSpec::IsInitialized() const {IsInitialized8425,345447
void ParamSpec::Swap(ParamSpec* other) {Swap8430,345506
::google::protobuf::Metadata ParamSpec::GetMetadata() const {GetMetadata8442,345908
const int LayerParameter::kNameFieldNumber;kNameFieldNumber8454,346253
const int LayerParameter::kTypeFieldNumber;kTypeFieldNumber8455,346297
const int LayerParameter::kBottomFieldNumber;kBottomFieldNumber8456,346341
const int LayerParameter::kTopFieldNumber;kTopFieldNumber8457,346387
const int LayerParameter::kPhaseFieldNumber;kPhaseFieldNumber8458,346430
const int LayerParameter::kLossWeightFieldNumber;kLossWeightFieldNumber8459,346475
const int LayerParameter::kParamFieldNumber;kParamFieldNumber8460,346525
const int LayerParameter::kBlobsFieldNumber;kBlobsFieldNumber8461,346570
const int LayerParameter::kPropagateDownFieldNumber;kPropagateDownFieldNumber8462,346615
const int LayerParameter::kIncludeFieldNumber;kIncludeFieldNumber8463,346668
const int LayerParameter::kExcludeFieldNumber;kExcludeFieldNumber8464,346715
const int LayerParameter::kTransformParamFieldNumber;kTransformParamFieldNumber8465,346762
const int LayerParameter::kLossParamFieldNumber;kLossParamFieldNumber8466,346816
const int LayerParameter::kAccuracyParamFieldNumber;kAccuracyParamFieldNumber8467,346865
const int LayerParameter::kArgmaxParamFieldNumber;kArgmaxParamFieldNumber8468,346918
const int LayerParameter::kBatchNormParamFieldNumber;kBatchNormParamFieldNumber8469,346969
const int LayerParameter::kBiasParamFieldNumber;kBiasParamFieldNumber8470,347023
const int LayerParameter::kConcatParamFieldNumber;kConcatParamFieldNumber8471,347072
const int LayerParameter::kContrastiveLossParamFieldNumber;kContrastiveLossParamFieldNumber8472,347123
const int LayerParameter::kConvolutionParamFieldNumber;kConvolutionParamFieldNumber8473,347183
const int LayerParameter::kCropParamFieldNumber;kCropParamFieldNumber8474,347239
const int LayerParameter::kDataParamFieldNumber;kDataParamFieldNumber8475,347288
const int LayerParameter::kDropoutParamFieldNumber;kDropoutParamFieldNumber8476,347337
const int LayerParameter::kDummyDataParamFieldNumber;kDummyDataParamFieldNumber8477,347389
const int LayerParameter::kEltwiseParamFieldNumber;kEltwiseParamFieldNumber8478,347443
const int LayerParameter::kEluParamFieldNumber;kEluParamFieldNumber8479,347495
const int LayerParameter::kEmbedParamFieldNumber;kEmbedParamFieldNumber8480,347543
const int LayerParameter::kExpParamFieldNumber;kExpParamFieldNumber8481,347593
const int LayerParameter::kFlattenParamFieldNumber;kFlattenParamFieldNumber8482,347641
const int LayerParameter::kHdf5DataParamFieldNumber;kHdf5DataParamFieldNumber8483,347693
const int LayerParameter::kHdf5OutputParamFieldNumber;kHdf5OutputParamFieldNumber8484,347746
const int LayerParameter::kHingeLossParamFieldNumber;kHingeLossParamFieldNumber8485,347801
const int LayerParameter::kImageDataParamFieldNumber;kImageDataParamFieldNumber8486,347855
const int LayerParameter::kInfogainLossParamFieldNumber;kInfogainLossParamFieldNumber8487,347909
const int LayerParameter::kInnerProductParamFieldNumber;kInnerProductParamFieldNumber8488,347966
const int LayerParameter::kInputParamFieldNumber;kInputParamFieldNumber8489,348023
const int LayerParameter::kLogParamFieldNumber;kLogParamFieldNumber8490,348073
const int LayerParameter::kLrnParamFieldNumber;kLrnParamFieldNumber8491,348121
const int LayerParameter::kMemoryDataParamFieldNumber;kMemoryDataParamFieldNumber8492,348169
const int LayerParameter::kMvnParamFieldNumber;kMvnParamFieldNumber8493,348224
const int LayerParameter::kParameterParamFieldNumber;kParameterParamFieldNumber8494,348272
const int LayerParameter::kPoolingParamFieldNumber;kPoolingParamFieldNumber8495,348326
const int LayerParameter::kPowerParamFieldNumber;kPowerParamFieldNumber8496,348378
const int LayerParameter::kPreluParamFieldNumber;kPreluParamFieldNumber8497,348428
const int LayerParameter::kPythonParamFieldNumber;kPythonParamFieldNumber8498,348478
const int LayerParameter::kRecurrentParamFieldNumber;kRecurrentParamFieldNumber8499,348529
const int LayerParameter::kReductionParamFieldNumber;kReductionParamFieldNumber8500,348583
const int LayerParameter::kReluParamFieldNumber;kReluParamFieldNumber8501,348637
const int LayerParameter::kReshapeParamFieldNumber;kReshapeParamFieldNumber8502,348686
const int LayerParameter::kScaleParamFieldNumber;kScaleParamFieldNumber8503,348738
const int LayerParameter::kSigmoidParamFieldNumber;kSigmoidParamFieldNumber8504,348788
const int LayerParameter::kSoftmaxParamFieldNumber;kSoftmaxParamFieldNumber8505,348840
const int LayerParameter::kSppParamFieldNumber;kSppParamFieldNumber8506,348892
const int LayerParameter::kSliceParamFieldNumber;kSliceParamFieldNumber8507,348940
const int LayerParameter::kTanhParamFieldNumber;kTanhParamFieldNumber8508,348990
const int LayerParameter::kThresholdParamFieldNumber;kThresholdParamFieldNumber8509,349039
const int LayerParameter::kTileParamFieldNumber;kTileParamFieldNumber8510,349093
const int LayerParameter::kWindowDataParamFieldNumber;kWindowDataParamFieldNumber8511,349142
const int LayerParameter::kQuantizationParamFieldNumber;kQuantizationParamFieldNumber8512,349197
LayerParameter::LayerParameter()LayerParameter8515,349276
void LayerParameter::InitAsDefaultInstance() {InitAsDefaultInstance8520,349364
LayerParameter::LayerParameter(const LayerParameter& from)LayerParameter8571,354607
void LayerParameter::SharedCtor() {SharedCtor8577,354740
LayerParameter::~LayerParameter() {~LayerParameter8633,356236
void LayerParameter::SharedDtor() {SharedDtor8637,356291
void LayerParameter::SetCachedSize(int size) const {SetCachedSize8696,357840
const ::google::protobuf::Descriptor* LayerParameter::descriptor() {descriptor8701,357999
const LayerParameter& LayerParameter::default_instance() {default_instance8706,358144
LayerParameter* LayerParameter::default_instance_ = NULL;default_instance_8711,358302
LayerParameter* LayerParameter::New() const {New8713,358361
void LayerParameter::Clear() {Clear8717,358439
bool LayerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream8901,365359
#define DO_(DO_8903,365464
#undef DO_DO_9788,401221
void LayerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes9791,401235
::google::protobuf::uint8* LayerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray10165,414454
int LayerParameter::ByteSize() const {ByteSize10594,429003
void LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom11040,443376
void LayerParameter::MergeFrom(const LayerParameter& from) {MergeFrom11052,443747
void LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom11234,451286
void LayerParameter::CopyFrom(const LayerParameter& from) {CopyFrom11240,451421
bool LayerParameter::IsInitialized() const {IsInitialized11246,451543
void LayerParameter::Swap(LayerParameter* other) {Swap11251,451607
::google::protobuf::Metadata LayerParameter::GetMetadata() const {GetMetadata11319,454913
const int TransformationParameter::kScaleFieldNumber;kScaleFieldNumber11331,455273
const int TransformationParameter::kMirrorFieldNumber;kMirrorFieldNumber11332,455327
const int TransformationParameter::kCropSizeFieldNumber;kCropSizeFieldNumber11333,455382
const int TransformationParameter::kMeanFileFieldNumber;kMeanFileFieldNumber11334,455439
const int TransformationParameter::kMeanValueFieldNumber;kMeanValueFieldNumber11335,455496
const int TransformationParameter::kForceColorFieldNumber;kForceColorFieldNumber11336,455554
const int TransformationParameter::kForceGrayFieldNumber;kForceGrayFieldNumber11337,455613
TransformationParameter::TransformationParameter()TransformationParameter11340,455693
void TransformationParameter::InitAsDefaultInstance() {InitAsDefaultInstance11345,455799
TransformationParameter::TransformationParameter(const TransformationParameter& from)TransformationParameter11348,455858
void TransformationParameter::SharedCtor() {SharedCtor11354,456018
TransformationParameter::~TransformationParameter() {~TransformationParameter11365,456322
void TransformationParameter::SharedDtor() {SharedDtor11369,456395
void TransformationParameter::SetCachedSize(int size) const {SetCachedSize11377,456576
const ::google::protobuf::Descriptor* TransformationParameter::descriptor() {descriptor11382,456744
const TransformationParameter& TransformationParameter::default_instance() {default_instance11387,456907
TransformationParameter* TransformationParameter::default_instance_ = NULL;default_instance_11392,457083
TransformationParameter* TransformationParameter::New() const {New11394,457160
void TransformationParameter::Clear() {Clear11398,457265
bool TransformationParameter::MergePartialFromCodedStream(MergePartialFromCodedStream11416,457719
#define DO_(DO_11418,457833
#undef DO_DO_11553,463406
void TransformationParameter::SerializeWithCachedSizes(SerializeWithCachedSizes11556,463420
::google::protobuf::uint8* TransformationParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray11604,465083
int TransformationParameter::ByteSize() const {ByteSize11654,466912
void TransformationParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom11711,468348
void TransformationParameter::MergeFrom(const TransformationParameter& from) {MergeFrom11723,468746
void TransformationParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom11749,469474
void TransformationParameter::CopyFrom(const TransformationParameter& from) {CopyFrom11755,469618
bool TransformationParameter::IsInitialized() const {IsInitialized11761,469758
void TransformationParameter::Swap(TransformationParameter* other) {Swap11766,469831
::google::protobuf::Metadata TransformationParameter::GetMetadata() const {GetMetadata11781,470398
const ::google::protobuf::EnumDescriptor* LossParameter_NormalizationMode_descriptor() {LossParameter_NormalizationMode_descriptor11792,470768
bool LossParameter_NormalizationMode_IsValid(int value) {LossParameter_NormalizationMode_IsValid11796,470949
const LossParameter_NormalizationMode LossParameter::FULL;FULL11809,471149
const LossParameter_NormalizationMode LossParameter::VALID;VALID11810,471208
const LossParameter_NormalizationMode LossParameter::BATCH_SIZE;BATCH_SIZE11811,471268
const LossParameter_NormalizationMode LossParameter::NONE;NONE11812,471333
const LossParameter_NormalizationMode LossParameter::NormalizationMode_MIN;NormalizationMode_MIN11813,471392
const LossParameter_NormalizationMode LossParameter::NormalizationMode_MAX;NormalizationMode_MAX11814,471468
const int LossParameter::NormalizationMode_ARRAYSIZE;NormalizationMode_ARRAYSIZE11815,471544
const int LossParameter::kIgnoreLabelFieldNumber;kIgnoreLabelFieldNumber11818,471635
const int LossParameter::kNormalizationFieldNumber;kNormalizationFieldNumber11819,471685
const int LossParameter::kNormalizeFieldNumber;kNormalizeFieldNumber11820,471737
LossParameter::LossParameter()LossParameter11823,471807
void LossParameter::InitAsDefaultInstance() {InitAsDefaultInstance11828,471893
LossParameter::LossParameter(const LossParameter& from)LossParameter11831,471942
void LossParameter::SharedCtor() {SharedCtor11837,472072
LossParameter::~LossParameter() {~LossParameter11845,472243
void LossParameter::SharedDtor() {SharedDtor11849,472296
void LossParameter::SetCachedSize(int size) const {SetCachedSize11854,472373
const ::google::protobuf::Descriptor* LossParameter::descriptor() {descriptor11859,472531
const LossParameter& LossParameter::default_instance() {default_instance11864,472674
LossParameter* LossParameter::default_instance_ = NULL;default_instance_11869,472830
LossParameter* LossParameter::New() const {New11871,472887
void LossParameter::Clear() {Clear11875,472962
bool LossParameter::MergePartialFromCodedStream(MergePartialFromCodedStream11885,473204
#define DO_(DO_11887,473308
#undef DO_DO_11956,476069
void LossParameter::SerializeWithCachedSizes(SerializeWithCachedSizes11959,476083
::google::protobuf::uint8* LossParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray11983,476886
int LossParameter::ByteSize() const {ByteSize12008,477783
void LossParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom12042,478727
void LossParameter::MergeFrom(const LossParameter& from) {MergeFrom12054,479095
void LossParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom12070,479562
void LossParameter::CopyFrom(const LossParameter& from) {CopyFrom12076,479696
bool LossParameter::IsInitialized() const {IsInitialized12082,479816
void LossParameter::Swap(LossParameter* other) {Swap12087,479879
::google::protobuf::Metadata LossParameter::GetMetadata() const {GetMetadata12098,480267
const int AccuracyParameter::kTopKFieldNumber;kTopKFieldNumber12110,480624
const int AccuracyParameter::kAxisFieldNumber;kAxisFieldNumber12111,480671
const int AccuracyParameter::kIgnoreLabelFieldNumber;kIgnoreLabelFieldNumber12112,480718
AccuracyParameter::AccuracyParameter()AccuracyParameter12115,480794
void AccuracyParameter::InitAsDefaultInstance() {InitAsDefaultInstance12120,480888
AccuracyParameter::AccuracyParameter(const AccuracyParameter& from)AccuracyParameter12123,480941
void AccuracyParameter::SharedCtor() {SharedCtor12129,481083
AccuracyParameter::~AccuracyParameter() {~AccuracyParameter12137,481242
void AccuracyParameter::SharedDtor() {SharedDtor12141,481303
void AccuracyParameter::SetCachedSize(int size) const {SetCachedSize12146,481384
const ::google::protobuf::Descriptor* AccuracyParameter::descriptor() {descriptor12151,481546
const AccuracyParameter& AccuracyParameter::default_instance() {default_instance12156,481697
AccuracyParameter* AccuracyParameter::default_instance_ = NULL;default_instance_12161,481861
AccuracyParameter* AccuracyParameter::New() const {New12163,481926
void AccuracyParameter::Clear() {Clear12167,482013
bool AccuracyParameter::MergePartialFromCodedStream(MergePartialFromCodedStream12177,482243
#define DO_(DO_12179,482351
#undef DO_DO_12243,484852
void AccuracyParameter::SerializeWithCachedSizes(SerializeWithCachedSizes12246,484866
::google::protobuf::uint8* AccuracyParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray12269,485609
int AccuracyParameter::ByteSize() const {ByteSize12293,486446
void AccuracyParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom12330,487439
void AccuracyParameter::MergeFrom(const AccuracyParameter& from) {MergeFrom12342,487819
void AccuracyParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom12358,488255
void AccuracyParameter::CopyFrom(const AccuracyParameter& from) {CopyFrom12364,488393
bool AccuracyParameter::IsInitialized() const {IsInitialized12370,488521
void AccuracyParameter::Swap(AccuracyParameter* other) {Swap12375,488588
::google::protobuf::Metadata AccuracyParameter::GetMetadata() const {GetMetadata12386,488958
const int ArgMaxParameter::kOutMaxValFieldNumber;kOutMaxValFieldNumber12398,489327
const int ArgMaxParameter::kTopKFieldNumber;kTopKFieldNumber12399,489377
const int ArgMaxParameter::kAxisFieldNumber;kAxisFieldNumber12400,489422
ArgMaxParameter::ArgMaxParameter()ArgMaxParameter12403,489489
void ArgMaxParameter::InitAsDefaultInstance() {InitAsDefaultInstance12408,489579
ArgMaxParameter::ArgMaxParameter(const ArgMaxParameter& from)ArgMaxParameter12411,489630
void ArgMaxParameter::SharedCtor() {SharedCtor12417,489766
ArgMaxParameter::~ArgMaxParameter() {~ArgMaxParameter12425,489926
void ArgMaxParameter::SharedDtor() {SharedDtor12429,489983
void ArgMaxParameter::SetCachedSize(int size) const {SetCachedSize12434,490062
const ::google::protobuf::Descriptor* ArgMaxParameter::descriptor() {descriptor12439,490222
const ArgMaxParameter& ArgMaxParameter::default_instance() {default_instance12444,490369
ArgMaxParameter* ArgMaxParameter::default_instance_ = NULL;default_instance_12449,490529
ArgMaxParameter* ArgMaxParameter::New() const {New12451,490590
void ArgMaxParameter::Clear() {Clear12455,490671
bool ArgMaxParameter::MergePartialFromCodedStream(MergePartialFromCodedStream12465,490902
#define DO_(DO_12467,491008
#undef DO_DO_12531,493473
void ArgMaxParameter::SerializeWithCachedSizes(SerializeWithCachedSizes12534,493487
::google::protobuf::uint8* ArgMaxParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray12557,494227
int ArgMaxParameter::ByteSize() const {ByteSize12581,495061
void ArgMaxParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom12616,495958
void ArgMaxParameter::MergeFrom(const ArgMaxParameter& from) {MergeFrom12628,496332
void ArgMaxParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom12644,496761
void ArgMaxParameter::CopyFrom(const ArgMaxParameter& from) {CopyFrom12650,496897
bool ArgMaxParameter::IsInitialized() const {IsInitialized12656,497021
void ArgMaxParameter::Swap(ArgMaxParameter* other) {Swap12661,497086
::google::protobuf::Metadata ArgMaxParameter::GetMetadata() const {GetMetadata12672,497450
const int ConcatParameter::kAxisFieldNumber;kAxisFieldNumber12684,497813
const int ConcatParameter::kConcatDimFieldNumber;kConcatDimFieldNumber12685,497858
ConcatParameter::ConcatParameter()ConcatParameter12688,497930
void ConcatParameter::InitAsDefaultInstance() {InitAsDefaultInstance12693,498020
ConcatParameter::ConcatParameter(const ConcatParameter& from)ConcatParameter12696,498071
void ConcatParameter::SharedCtor() {SharedCtor12702,498207
ConcatParameter::~ConcatParameter() {~ConcatParameter12709,498348
void ConcatParameter::SharedDtor() {SharedDtor12713,498405
void ConcatParameter::SetCachedSize(int size) const {SetCachedSize12718,498484
const ::google::protobuf::Descriptor* ConcatParameter::descriptor() {descriptor12723,498644
const ConcatParameter& ConcatParameter::default_instance() {default_instance12728,498791
ConcatParameter* ConcatParameter::default_instance_ = NULL;default_instance_12733,498951
ConcatParameter* ConcatParameter::New() const {New12735,499012
void ConcatParameter::Clear() {Clear12739,499093
bool ConcatParameter::MergePartialFromCodedStream(MergePartialFromCodedStream12748,499303
#define DO_(DO_12750,499409
#undef DO_DO_12798,501275
void ConcatParameter::SerializeWithCachedSizes(SerializeWithCachedSizes12801,501289
::google::protobuf::uint8* ConcatParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray12819,501879
int ConcatParameter::ByteSize() const {ByteSize12838,502547
void ConcatParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom12868,503354
void ConcatParameter::MergeFrom(const ConcatParameter& from) {MergeFrom12880,503728
void ConcatParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom12893,504089
void ConcatParameter::CopyFrom(const ConcatParameter& from) {CopyFrom12899,504225
bool ConcatParameter::IsInitialized() const {IsInitialized12905,504349
void ConcatParameter::Swap(ConcatParameter* other) {Swap12910,504414
::google::protobuf::Metadata ConcatParameter::GetMetadata() const {GetMetadata12920,504738
const int BatchNormParameter::kUseGlobalStatsFieldNumber;kUseGlobalStatsFieldNumber12932,505101
const int BatchNormParameter::kMovingAverageFractionFieldNumber;kMovingAverageFractionFieldNumber12933,505159
const int BatchNormParameter::kEpsFieldNumber;kEpsFieldNumber12934,505224
BatchNormParameter::BatchNormParameter()BatchNormParameter12937,505293
void BatchNormParameter::InitAsDefaultInstance() {InitAsDefaultInstance12942,505389
BatchNormParameter::BatchNormParameter(const BatchNormParameter& from)BatchNormParameter12945,505443
void BatchNormParameter::SharedCtor() {SharedCtor12951,505588
BatchNormParameter::~BatchNormParameter() {~BatchNormParameter12959,505782
void BatchNormParameter::SharedDtor() {SharedDtor12963,505845
void BatchNormParameter::SetCachedSize(int size) const {SetCachedSize12968,505927
const ::google::protobuf::Descriptor* BatchNormParameter::descriptor() {descriptor12973,506090
const BatchNormParameter& BatchNormParameter::default_instance() {default_instance12978,506243
BatchNormParameter* BatchNormParameter::default_instance_ = NULL;default_instance_12983,506409
BatchNormParameter* BatchNormParameter::New() const {New12985,506476
void BatchNormParameter::Clear() {Clear12989,506566
bool BatchNormParameter::MergePartialFromCodedStream(MergePartialFromCodedStream12999,506831
#define DO_(DO_13001,506940
#undef DO_DO_13065,509468
void BatchNormParameter::SerializeWithCachedSizes(SerializeWithCachedSizes13068,509482
::google::protobuf::uint8* BatchNormParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray13091,510293
int BatchNormParameter::ByteSize() const {ByteSize13115,511198
void BatchNormParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom13146,511969
void BatchNormParameter::MergeFrom(const BatchNormParameter& from) {MergeFrom13158,512352
void BatchNormParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom13174,512853
void BatchNormParameter::CopyFrom(const BatchNormParameter& from) {CopyFrom13180,512992
bool BatchNormParameter::IsInitialized() const {IsInitialized13186,513122
void BatchNormParameter::Swap(BatchNormParameter* other) {Swap13191,513190
::google::protobuf::Metadata BatchNormParameter::GetMetadata() const {GetMetadata13202,513604
const int BiasParameter::kAxisFieldNumber;kAxisFieldNumber13214,513976
const int BiasParameter::kNumAxesFieldNumber;kNumAxesFieldNumber13215,514019
const int BiasParameter::kFillerFieldNumber;kFillerFieldNumber13216,514065
BiasParameter::BiasParameter()BiasParameter13219,514132
void BiasParameter::InitAsDefaultInstance() {InitAsDefaultInstance13224,514218
BiasParameter::BiasParameter(const BiasParameter& from)BiasParameter13228,514366
void BiasParameter::SharedCtor() {SharedCtor13234,514496
BiasParameter::~BiasParameter() {~BiasParameter13242,514650
void BiasParameter::SharedDtor() {SharedDtor13246,514703
void BiasParameter::SetCachedSize(int size) const {SetCachedSize13252,514800
const ::google::protobuf::Descriptor* BiasParameter::descriptor() {descriptor13257,514958
const BiasParameter& BiasParameter::default_instance() {default_instance13262,515101
BiasParameter* BiasParameter::default_instance_ = NULL;default_instance_13267,515257
BiasParameter* BiasParameter::New() const {New13269,515314
void BiasParameter::Clear() {Clear13273,515389
bool BiasParameter::MergePartialFromCodedStream(MergePartialFromCodedStream13285,515695
#define DO_(DO_13287,515799
#undef DO_DO_13349,518189
void BiasParameter::SerializeWithCachedSizes(SerializeWithCachedSizes13352,518203
::google::protobuf::uint8* BiasParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray13376,518969
int BiasParameter::ByteSize() const {ByteSize13402,519835
void BiasParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom13439,520841
void BiasParameter::MergeFrom(const BiasParameter& from) {MergeFrom13451,521209
void BiasParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom13467,521671
void BiasParameter::CopyFrom(const BiasParameter& from) {CopyFrom13473,521805
bool BiasParameter::IsInitialized() const {IsInitialized13479,521925
void BiasParameter::Swap(BiasParameter* other) {Swap13484,521988
::google::protobuf::Metadata BiasParameter::GetMetadata() const {GetMetadata13495,522344
const int ContrastiveLossParameter::kMarginFieldNumber;kMarginFieldNumber13507,522701
const int ContrastiveLossParameter::kLegacyVersionFieldNumber;kLegacyVersionFieldNumber13508,522757
ContrastiveLossParameter::ContrastiveLossParameter()ContrastiveLossParameter13511,522842
void ContrastiveLossParameter::InitAsDefaultInstance() {InitAsDefaultInstance13516,522950
ContrastiveLossParameter::ContrastiveLossParameter(const ContrastiveLossParameter& from)ContrastiveLossParameter13519,523010
void ContrastiveLossParameter::SharedCtor() {SharedCtor13525,523173
ContrastiveLossParameter::~ContrastiveLossParameter() {~ContrastiveLossParameter13532,523332
void ContrastiveLossParameter::SharedDtor() {SharedDtor13536,523407
void ContrastiveLossParameter::SetCachedSize(int size) const {SetCachedSize13541,523495
const ::google::protobuf::Descriptor* ContrastiveLossParameter::descriptor() {descriptor13546,523664
const ContrastiveLossParameter& ContrastiveLossParameter::default_instance() {default_instance13551,523829
ContrastiveLossParameter* ContrastiveLossParameter::default_instance_ = NULL;default_instance_13556,524007
ContrastiveLossParameter* ContrastiveLossParameter::New() const {New13558,524086
void ContrastiveLossParameter::Clear() {Clear13562,524194
bool ContrastiveLossParameter::MergePartialFromCodedStream(MergePartialFromCodedStream13571,524422
#define DO_(DO_13573,524537
#undef DO_DO_13621,526400
void ContrastiveLossParameter::SerializeWithCachedSizes(SerializeWithCachedSizes13624,526414
::google::protobuf::uint8* ContrastiveLossParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray13642,527031
int ContrastiveLossParameter::ByteSize() const {ByteSize13661,527726
void ContrastiveLossParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom13687,528375
void ContrastiveLossParameter::MergeFrom(const ContrastiveLossParameter& from) {MergeFrom13699,528776
void ContrastiveLossParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom13712,529173
void ContrastiveLossParameter::CopyFrom(const ContrastiveLossParameter& from) {CopyFrom13718,529318
bool ContrastiveLossParameter::IsInitialized() const {IsInitialized13724,529460
void ContrastiveLossParameter::Swap(ContrastiveLossParameter* other) {Swap13729,529534
::google::protobuf::Metadata ContrastiveLossParameter::GetMetadata() const {GetMetadata13739,529888
const ::google::protobuf::EnumDescriptor* ConvolutionParameter_Engine_descriptor() {ConvolutionParameter_Engine_descriptor13750,530261
bool ConvolutionParameter_Engine_IsValid(int value) {ConvolutionParameter_Engine_IsValid13754,530434
const ConvolutionParameter_Engine ConvolutionParameter::DEFAULT;DEFAULT13766,530618
const ConvolutionParameter_Engine ConvolutionParameter::CAFFE;CAFFE13767,530683
const ConvolutionParameter_Engine ConvolutionParameter::CUDNN;CUDNN13768,530746
const ConvolutionParameter_Engine ConvolutionParameter::Engine_MIN;Engine_MIN13769,530809
const ConvolutionParameter_Engine ConvolutionParameter::Engine_MAX;Engine_MAX13770,530877
const int ConvolutionParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE13771,530945
const int ConvolutionParameter::kNumOutputFieldNumber;kNumOutputFieldNumber13774,531032
const int ConvolutionParameter::kBiasTermFieldNumber;kBiasTermFieldNumber13775,531087
const int ConvolutionParameter::kPadFieldNumber;kPadFieldNumber13776,531141
const int ConvolutionParameter::kKernelSizeFieldNumber;kKernelSizeFieldNumber13777,531190
const int ConvolutionParameter::kStrideFieldNumber;kStrideFieldNumber13778,531246
const int ConvolutionParameter::kDilationFieldNumber;kDilationFieldNumber13779,531298
const int ConvolutionParameter::kPadHFieldNumber;kPadHFieldNumber13780,531352
const int ConvolutionParameter::kPadWFieldNumber;kPadWFieldNumber13781,531402
const int ConvolutionParameter::kKernelHFieldNumber;kKernelHFieldNumber13782,531452
const int ConvolutionParameter::kKernelWFieldNumber;kKernelWFieldNumber13783,531505
const int ConvolutionParameter::kStrideHFieldNumber;kStrideHFieldNumber13784,531558
const int ConvolutionParameter::kStrideWFieldNumber;kStrideWFieldNumber13785,531611
const int ConvolutionParameter::kGroupFieldNumber;kGroupFieldNumber13786,531664
const int ConvolutionParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber13787,531715
const int ConvolutionParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber13788,531773
const int ConvolutionParameter::kEngineFieldNumber;kEngineFieldNumber13789,531829
const int ConvolutionParameter::kAxisFieldNumber;kAxisFieldNumber13790,531881
const int ConvolutionParameter::kForceNdIm2ColFieldNumber;kForceNdIm2ColFieldNumber13791,531931
ConvolutionParameter::ConvolutionParameter()ConvolutionParameter13794,532012
void ConvolutionParameter::InitAsDefaultInstance() {InitAsDefaultInstance13799,532112
ConvolutionParameter::ConvolutionParameter(const ConvolutionParameter& from)ConvolutionParameter13804,532378
void ConvolutionParameter::SharedCtor() {SharedCtor13810,532529
ConvolutionParameter::~ConvolutionParameter() {~ConvolutionParameter13829,532904
void ConvolutionParameter::SharedDtor() {SharedDtor13833,532971
void ConvolutionParameter::SetCachedSize(int size) const {SetCachedSize13840,533107
const ::google::protobuf::Descriptor* ConvolutionParameter::descriptor() {descriptor13845,533272
const ConvolutionParameter& ConvolutionParameter::default_instance() {default_instance13850,533429
ConvolutionParameter* ConvolutionParameter::default_instance_ = NULL;default_instance_13855,533599
ConvolutionParameter* ConvolutionParameter::New() const {New13857,533670
void ConvolutionParameter::Clear() {Clear13861,533766
bool ConvolutionParameter::MergePartialFromCodedStream(MergePartialFromCodedStream13894,534610
#define DO_(DO_13896,534721
#undef DO_DO_14225,548839
void ConvolutionParameter::SerializeWithCachedSizes(SerializeWithCachedSizes14228,548853
::google::protobuf::uint8* ConvolutionParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray14333,552289
int ConvolutionParameter::ByteSize() const {ByteSize14441,556071
void ConvolutionParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom14594,560379
void ConvolutionParameter::MergeFrom(const ConvolutionParameter& from) {MergeFrom14606,560768
void ConvolutionParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom14663,562396
void ConvolutionParameter::CopyFrom(const ConvolutionParameter& from) {CopyFrom14669,562537
bool ConvolutionParameter::IsInitialized() const {IsInitialized14675,562671
void ConvolutionParameter::Swap(ConvolutionParameter* other) {Swap14680,562741
::google::protobuf::Metadata ConvolutionParameter::GetMetadata() const {GetMetadata14706,563761
const int CropParameter::kAxisFieldNumber;kAxisFieldNumber14718,564139
const int CropParameter::kOffsetFieldNumber;kOffsetFieldNumber14719,564182
CropParameter::CropParameter()CropParameter14722,564249
void CropParameter::InitAsDefaultInstance() {InitAsDefaultInstance14727,564335
CropParameter::CropParameter(const CropParameter& from)CropParameter14730,564384
void CropParameter::SharedCtor() {SharedCtor14736,564514
CropParameter::~CropParameter() {~CropParameter14742,564633
void CropParameter::SharedDtor() {SharedDtor14746,564686
void CropParameter::SetCachedSize(int size) const {SetCachedSize14751,564763
const ::google::protobuf::Descriptor* CropParameter::descriptor() {descriptor14756,564921
const CropParameter& CropParameter::default_instance() {default_instance14761,565064
CropParameter* CropParameter::default_instance_ = NULL;default_instance_14766,565220
CropParameter* CropParameter::New() const {New14768,565277
void CropParameter::Clear() {Clear14772,565352
bool CropParameter::MergePartialFromCodedStream(MergePartialFromCodedStream14781,565557
#define DO_(DO_14783,565661
#undef DO_DO_14837,568012
void CropParameter::SerializeWithCachedSizes(SerializeWithCachedSizes14840,568026
::google::protobuf::uint8* CropParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray14859,568624
int CropParameter::ByteSize() const {ByteSize14879,569300
void CropParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom14912,570177
void CropParameter::MergeFrom(const CropParameter& from) {MergeFrom14924,570545
void CropParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom14935,570857
void CropParameter::CopyFrom(const CropParameter& from) {CopyFrom14941,570991
bool CropParameter::IsInitialized() const {IsInitialized14947,571111
void CropParameter::Swap(CropParameter* other) {Swap14952,571174
::google::protobuf::Metadata CropParameter::GetMetadata() const {GetMetadata14962,571481
const ::google::protobuf::EnumDescriptor* DataParameter_DB_descriptor() {DataParameter_DB_descriptor14973,571821
bool DataParameter_DB_IsValid(int value) {DataParameter_DB_IsValid14977,571972
const DataParameter_DB DataParameter::LEVELDB;LEVELDB14988,572133
const DataParameter_DB DataParameter::LMDB;LMDB14989,572180
const DataParameter_DB DataParameter::DB_MIN;DB_MIN14990,572224
const DataParameter_DB DataParameter::DB_MAX;DB_MAX14991,572270
const int DataParameter::DB_ARRAYSIZE;DB_ARRAYSIZE14992,572316
const int DataParameter::kSourceFieldNumber;kSourceFieldNumber14995,572392
const int DataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber14996,572437
const int DataParameter::kRandSkipFieldNumber;kRandSkipFieldNumber14997,572485
const int DataParameter::kBackendFieldNumber;kBackendFieldNumber14998,572532
const int DataParameter::kScaleFieldNumber;kScaleFieldNumber14999,572578
const int DataParameter::kMeanFileFieldNumber;kMeanFileFieldNumber15000,572622
const int DataParameter::kCropSizeFieldNumber;kCropSizeFieldNumber15001,572669
const int DataParameter::kMirrorFieldNumber;kMirrorFieldNumber15002,572716
const int DataParameter::kForceEncodedColorFieldNumber;kForceEncodedColorFieldNumber15003,572761
const int DataParameter::kPrefetchFieldNumber;kPrefetchFieldNumber15004,572817
DataParameter::DataParameter()DataParameter15007,572886
void DataParameter::InitAsDefaultInstance() {InitAsDefaultInstance15012,572972
DataParameter::DataParameter(const DataParameter& from)DataParameter15015,573021
void DataParameter::SharedCtor() {SharedCtor15021,573151
DataParameter::~DataParameter() {~DataParameter15036,573589
void DataParameter::SharedDtor() {SharedDtor15040,573642
void DataParameter::SetCachedSize(int size) const {SetCachedSize15051,573901
const ::google::protobuf::Descriptor* DataParameter::descriptor() {descriptor15056,574059
const DataParameter& DataParameter::default_instance() {default_instance15061,574202
DataParameter* DataParameter::default_instance_ = NULL;default_instance_15066,574358
DataParameter* DataParameter::New() const {New15068,574415
void DataParameter::Clear() {Clear15072,574490
bool DataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream15099,575161
#define DO_(DO_15101,575265
#undef DO_DO_15284,582624
void DataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes15287,582638
::google::protobuf::uint8* DataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray15354,584980
int DataParameter::ByteSize() const {ByteSize15424,587544
void DataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom15505,589749
void DataParameter::MergeFrom(const DataParameter& from) {MergeFrom15517,590117
void DataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom15556,591155
void DataParameter::CopyFrom(const DataParameter& from) {CopyFrom15562,591289
bool DataParameter::IsInitialized() const {IsInitialized15568,591409
void DataParameter::Swap(DataParameter* other) {Swap15573,591472
::google::protobuf::Metadata DataParameter::GetMetadata() const {GetMetadata15591,592164
const int DropoutParameter::kDropoutRatioFieldNumber;kDropoutRatioFieldNumber15603,592521
DropoutParameter::DropoutParameter()DropoutParameter15606,592597
void DropoutParameter::InitAsDefaultInstance() {InitAsDefaultInstance15611,592689
DropoutParameter::DropoutParameter(const DropoutParameter& from)DropoutParameter15614,592741
void DropoutParameter::SharedCtor() {SharedCtor15620,592880
DropoutParameter::~DropoutParameter() {~DropoutParameter15626,593014
void DropoutParameter::SharedDtor() {SharedDtor15630,593073
void DropoutParameter::SetCachedSize(int size) const {SetCachedSize15635,593153
const ::google::protobuf::Descriptor* DropoutParameter::descriptor() {descriptor15640,593314
const DropoutParameter& DropoutParameter::default_instance() {default_instance15645,593463
DropoutParameter* DropoutParameter::default_instance_ = NULL;default_instance_15650,593625
DropoutParameter* DropoutParameter::New() const {New15652,593688
void DropoutParameter::Clear() {Clear15656,593772
bool DropoutParameter::MergePartialFromCodedStream(MergePartialFromCodedStream15664,593973
#define DO_(DO_15666,594080
#undef DO_DO_15698,595311
void DropoutParameter::SerializeWithCachedSizes(SerializeWithCachedSizes15701,595325
::google::protobuf::uint8* DropoutParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray15714,595769
int DropoutParameter::ByteSize() const {ByteSize15728,596275
void DropoutParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom15749,596807
void DropoutParameter::MergeFrom(const DropoutParameter& from) {MergeFrom15761,597184
void DropoutParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom15771,597494
void DropoutParameter::CopyFrom(const DropoutParameter& from) {CopyFrom15777,597631
bool DropoutParameter::IsInitialized() const {IsInitialized15783,597757
void DropoutParameter::Swap(DropoutParameter* other) {Swap15788,597823
::google::protobuf::Metadata DropoutParameter::GetMetadata() const {GetMetadata15797,598119
const int DummyDataParameter::kDataFillerFieldNumber;kDataFillerFieldNumber15809,598485
const int DummyDataParameter::kShapeFieldNumber;kShapeFieldNumber15810,598539
const int DummyDataParameter::kNumFieldNumber;kNumFieldNumber15811,598588
const int DummyDataParameter::kChannelsFieldNumber;kChannelsFieldNumber15812,598635
const int DummyDataParameter::kHeightFieldNumber;kHeightFieldNumber15813,598687
const int DummyDataParameter::kWidthFieldNumber;kWidthFieldNumber15814,598737
DummyDataParameter::DummyDataParameter()DummyDataParameter15817,598808
void DummyDataParameter::InitAsDefaultInstance() {InitAsDefaultInstance15822,598904
DummyDataParameter::DummyDataParameter(const DummyDataParameter& from)DummyDataParameter15825,598958
void DummyDataParameter::SharedCtor() {SharedCtor15831,599103
DummyDataParameter::~DummyDataParameter() {~DummyDataParameter15836,599214
void DummyDataParameter::SharedDtor() {SharedDtor15840,599277
void DummyDataParameter::SetCachedSize(int size) const {SetCachedSize15845,599359
const ::google::protobuf::Descriptor* DummyDataParameter::descriptor() {descriptor15850,599522
const DummyDataParameter& DummyDataParameter::default_instance() {default_instance15855,599675
DummyDataParameter* DummyDataParameter::default_instance_ = NULL;default_instance_15860,599841
DummyDataParameter* DummyDataParameter::New() const {New15862,599908
void DummyDataParameter::Clear() {Clear15866,599998
bool DummyDataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream15877,600236
#define DO_(DO_15879,600345
#undef DO_DO_16014,606628
void DummyDataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes16017,606642
::google::protobuf::uint8* DummyDataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray16061,608077
int DummyDataParameter::ByteSize() const {ByteSize16108,609666
void DummyDataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom16178,611676
void DummyDataParameter::MergeFrom(const DummyDataParameter& from) {MergeFrom16190,612059
void DummyDataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom16201,612439
void DummyDataParameter::CopyFrom(const DummyDataParameter& from) {CopyFrom16207,612578
bool DummyDataParameter::IsInitialized() const {IsInitialized16213,612708
void DummyDataParameter::Swap(DummyDataParameter* other) {Swap16218,612776
::google::protobuf::Metadata DummyDataParameter::GetMetadata() const {GetMetadata16232,613236
const ::google::protobuf::EnumDescriptor* EltwiseParameter_EltwiseOp_descriptor() {EltwiseParameter_EltwiseOp_descriptor16243,613591
bool EltwiseParameter_EltwiseOp_IsValid(int value) {EltwiseParameter_EltwiseOp_IsValid16247,613762
const EltwiseParameter_EltwiseOp EltwiseParameter::PROD;PROD16259,613945
const EltwiseParameter_EltwiseOp EltwiseParameter::SUM;SUM16260,614002
const EltwiseParameter_EltwiseOp EltwiseParameter::MAX;MAX16261,614058
const EltwiseParameter_EltwiseOp EltwiseParameter::EltwiseOp_MIN;EltwiseOp_MIN16262,614114
const EltwiseParameter_EltwiseOp EltwiseParameter::EltwiseOp_MAX;EltwiseOp_MAX16263,614180
const int EltwiseParameter::EltwiseOp_ARRAYSIZE;EltwiseOp_ARRAYSIZE16264,614246
const int EltwiseParameter::kOperationFieldNumber;kOperationFieldNumber16267,614332
const int EltwiseParameter::kCoeffFieldNumber;kCoeffFieldNumber16268,614383
const int EltwiseParameter::kStableProdGradFieldNumber;kStableProdGradFieldNumber16269,614430
EltwiseParameter::EltwiseParameter()EltwiseParameter16272,614508
void EltwiseParameter::InitAsDefaultInstance() {InitAsDefaultInstance16277,614600
EltwiseParameter::EltwiseParameter(const EltwiseParameter& from)EltwiseParameter16280,614652
void EltwiseParameter::SharedCtor() {SharedCtor16286,614791
EltwiseParameter::~EltwiseParameter() {~EltwiseParameter16293,614946
void EltwiseParameter::SharedDtor() {SharedDtor16297,615005
void EltwiseParameter::SetCachedSize(int size) const {SetCachedSize16302,615085
const ::google::protobuf::Descriptor* EltwiseParameter::descriptor() {descriptor16307,615246
const EltwiseParameter& EltwiseParameter::default_instance() {default_instance16312,615395
EltwiseParameter* EltwiseParameter::default_instance_ = NULL;default_instance_16317,615557
EltwiseParameter* EltwiseParameter::New() const {New16319,615620
void EltwiseParameter::Clear() {Clear16323,615704
bool EltwiseParameter::MergePartialFromCodedStream(MergePartialFromCodedStream16333,615946
#define DO_(DO_16335,616053
#undef DO_DO_16410,619269
void EltwiseParameter::SerializeWithCachedSizes(SerializeWithCachedSizes16413,619283
::google::protobuf::uint8* EltwiseParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray16438,620123
int EltwiseParameter::ByteSize() const {ByteSize16464,621057
void EltwiseParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom16498,621974
void EltwiseParameter::MergeFrom(const EltwiseParameter& from) {MergeFrom16510,622351
void EltwiseParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom16524,622780
void EltwiseParameter::CopyFrom(const EltwiseParameter& from) {CopyFrom16530,622917
bool EltwiseParameter::IsInitialized() const {IsInitialized16536,623043
void EltwiseParameter::Swap(EltwiseParameter* other) {Swap16541,623109
::google::protobuf::Metadata EltwiseParameter::GetMetadata() const {GetMetadata16552,623490
const int ELUParameter::kAlphaFieldNumber;kAlphaFieldNumber16564,623856
ELUParameter::ELUParameter()ELUParameter16567,623921
void ELUParameter::InitAsDefaultInstance() {InitAsDefaultInstance16572,624005
ELUParameter::ELUParameter(const ELUParameter& from)ELUParameter16575,624053
void ELUParameter::SharedCtor() {SharedCtor16581,624180
ELUParameter::~ELUParameter() {~ELUParameter16587,624299
void ELUParameter::SharedDtor() {SharedDtor16591,624350
void ELUParameter::SetCachedSize(int size) const {SetCachedSize16596,624426
const ::google::protobuf::Descriptor* ELUParameter::descriptor() {descriptor16601,624583
const ELUParameter& ELUParameter::default_instance() {default_instance16606,624724
ELUParameter* ELUParameter::default_instance_ = NULL;default_instance_16611,624878
ELUParameter* ELUParameter::New() const {New16613,624933
void ELUParameter::Clear() {Clear16617,625005
bool ELUParameter::MergePartialFromCodedStream(MergePartialFromCodedStream16625,625191
#define DO_(DO_16627,625294
#undef DO_DO_16659,626499
void ELUParameter::SerializeWithCachedSizes(SerializeWithCachedSizes16662,626513
::google::protobuf::uint8* ELUParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray16675,626927
int ELUParameter::ByteSize() const {ByteSize16689,627403
void ELUParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom16710,627913
void ELUParameter::MergeFrom(const ELUParameter& from) {MergeFrom16722,628278
void ELUParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom16732,628556
void ELUParameter::CopyFrom(const ELUParameter& from) {CopyFrom16738,628689
bool ELUParameter::IsInitialized() const {IsInitialized16744,628807
void ELUParameter::Swap(ELUParameter* other) {Swap16749,628869
::google::protobuf::Metadata ELUParameter::GetMetadata() const {GetMetadata16758,629141
const int EmbedParameter::kNumOutputFieldNumber;kNumOutputFieldNumber16770,629495
const int EmbedParameter::kInputDimFieldNumber;kInputDimFieldNumber16771,629544
const int EmbedParameter::kBiasTermFieldNumber;kBiasTermFieldNumber16772,629592
const int EmbedParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber16773,629640
const int EmbedParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber16774,629692
EmbedParameter::EmbedParameter()EmbedParameter16777,629764
void EmbedParameter::InitAsDefaultInstance() {InitAsDefaultInstance16782,629852
EmbedParameter::EmbedParameter(const EmbedParameter& from)EmbedParameter16787,630112
void EmbedParameter::SharedCtor() {SharedCtor16793,630245
EmbedParameter::~EmbedParameter() {~EmbedParameter16803,630460
void EmbedParameter::SharedDtor() {SharedDtor16807,630515
void EmbedParameter::SetCachedSize(int size) const {SetCachedSize16814,630645
const ::google::protobuf::Descriptor* EmbedParameter::descriptor() {descriptor16819,630804
const EmbedParameter& EmbedParameter::default_instance() {default_instance16824,630949
EmbedParameter* EmbedParameter::default_instance_ = NULL;default_instance_16829,631107
EmbedParameter* EmbedParameter::New() const {New16831,631166
void EmbedParameter::Clear() {Clear16835,631244
bool EmbedParameter::MergePartialFromCodedStream(MergePartialFromCodedStream16851,631720
#define DO_(DO_16853,631825
#undef DO_DO_16945,635418
void EmbedParameter::SerializeWithCachedSizes(SerializeWithCachedSizes16948,635432
::google::protobuf::uint8* EmbedParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray16983,636590
int EmbedParameter::ByteSize() const {ByteSize17021,637886
void EmbedParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom17070,639249
void EmbedParameter::MergeFrom(const EmbedParameter& from) {MergeFrom17082,639620
void EmbedParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom17104,640329
void EmbedParameter::CopyFrom(const EmbedParameter& from) {CopyFrom17110,640464
bool EmbedParameter::IsInitialized() const {IsInitialized17116,640586
void EmbedParameter::Swap(EmbedParameter* other) {Swap17121,640650
::google::protobuf::Metadata EmbedParameter::GetMetadata() const {GetMetadata17134,641132
const int ExpParameter::kBaseFieldNumber;kBaseFieldNumber17146,641492
const int ExpParameter::kScaleFieldNumber;kScaleFieldNumber17147,641534
const int ExpParameter::kShiftFieldNumber;kShiftFieldNumber17148,641577
ExpParameter::ExpParameter()ExpParameter17151,641642
void ExpParameter::InitAsDefaultInstance() {InitAsDefaultInstance17156,641726
ExpParameter::ExpParameter(const ExpParameter& from)ExpParameter17159,641774
void ExpParameter::SharedCtor() {SharedCtor17165,641901
ExpParameter::~ExpParameter() {~ExpParameter17173,642048
void ExpParameter::SharedDtor() {SharedDtor17177,642099
void ExpParameter::SetCachedSize(int size) const {SetCachedSize17182,642175
const ::google::protobuf::Descriptor* ExpParameter::descriptor() {descriptor17187,642332
const ExpParameter& ExpParameter::default_instance() {default_instance17192,642473
ExpParameter* ExpParameter::default_instance_ = NULL;default_instance_17197,642627
ExpParameter* ExpParameter::New() const {New17199,642682
void ExpParameter::Clear() {Clear17203,642754
bool ExpParameter::MergePartialFromCodedStream(MergePartialFromCodedStream17213,642972
#define DO_(DO_17215,643075
#undef DO_DO_17279,645498
void ExpParameter::SerializeWithCachedSizes(SerializeWithCachedSizes17282,645512
::google::protobuf::uint8* ExpParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray17305,646242
int ExpParameter::ByteSize() const {ByteSize17329,647066
void ExpParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom17360,647783
void ExpParameter::MergeFrom(const ExpParameter& from) {MergeFrom17372,648148
void ExpParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom17388,648553
void ExpParameter::CopyFrom(const ExpParameter& from) {CopyFrom17394,648686
bool ExpParameter::IsInitialized() const {IsInitialized17400,648804
void ExpParameter::Swap(ExpParameter* other) {Swap17405,648866
::google::protobuf::Metadata ExpParameter::GetMetadata() const {GetMetadata17416,649212
const int FlattenParameter::kAxisFieldNumber;kAxisFieldNumber17428,649566
const int FlattenParameter::kEndAxisFieldNumber;kEndAxisFieldNumber17429,649612
FlattenParameter::FlattenParameter()FlattenParameter17432,649683
void FlattenParameter::InitAsDefaultInstance() {InitAsDefaultInstance17437,649775
FlattenParameter::FlattenParameter(const FlattenParameter& from)FlattenParameter17440,649827
void FlattenParameter::SharedCtor() {SharedCtor17446,649966
FlattenParameter::~FlattenParameter() {~FlattenParameter17453,650106
void FlattenParameter::SharedDtor() {SharedDtor17457,650165
void FlattenParameter::SetCachedSize(int size) const {SetCachedSize17462,650245
const ::google::protobuf::Descriptor* FlattenParameter::descriptor() {descriptor17467,650406
const FlattenParameter& FlattenParameter::default_instance() {default_instance17472,650555
FlattenParameter* FlattenParameter::default_instance_ = NULL;default_instance_17477,650717
FlattenParameter* FlattenParameter::New() const {New17479,650780
void FlattenParameter::Clear() {Clear17483,650864
bool FlattenParameter::MergePartialFromCodedStream(MergePartialFromCodedStream17492,651073
#define DO_(DO_17494,651180
#undef DO_DO_17542,653046
void FlattenParameter::SerializeWithCachedSizes(SerializeWithCachedSizes17545,653060
::google::protobuf::uint8* FlattenParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray17563,653644
int FlattenParameter::ByteSize() const {ByteSize17582,654306
void FlattenParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom17612,655107
void FlattenParameter::MergeFrom(const FlattenParameter& from) {MergeFrom17624,655484
void FlattenParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom17637,655841
void FlattenParameter::CopyFrom(const FlattenParameter& from) {CopyFrom17643,655978
bool FlattenParameter::IsInitialized() const {IsInitialized17649,656104
void FlattenParameter::Swap(FlattenParameter* other) {Swap17654,656170
::google::protobuf::Metadata FlattenParameter::GetMetadata() const {GetMetadata17664,656492
const int HDF5DataParameter::kSourceFieldNumber;kSourceFieldNumber17676,656858
const int HDF5DataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber17677,656907
const int HDF5DataParameter::kShuffleFieldNumber;kShuffleFieldNumber17678,656959
HDF5DataParameter::HDF5DataParameter()HDF5DataParameter17681,657031
void HDF5DataParameter::InitAsDefaultInstance() {InitAsDefaultInstance17686,657125
HDF5DataParameter::HDF5DataParameter(const HDF5DataParameter& from)HDF5DataParameter17689,657178
void HDF5DataParameter::SharedCtor() {SharedCtor17695,657320
HDF5DataParameter::~HDF5DataParameter() {~HDF5DataParameter17703,657556
void HDF5DataParameter::SharedDtor() {SharedDtor17707,657617
void HDF5DataParameter::SetCachedSize(int size) const {SetCachedSize17715,657786
const ::google::protobuf::Descriptor* HDF5DataParameter::descriptor() {descriptor17720,657948
const HDF5DataParameter& HDF5DataParameter::default_instance() {default_instance17725,658099
HDF5DataParameter* HDF5DataParameter::default_instance_ = NULL;default_instance_17730,658263
HDF5DataParameter* HDF5DataParameter::New() const {New17732,658328
void HDF5DataParameter::Clear() {Clear17736,658415
bool HDF5DataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream17750,658766
#define DO_(DO_17752,658874
#undef DO_DO_17817,661428
void HDF5DataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes17820,661442
::google::protobuf::uint8* HDF5DataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray17847,662366
int HDF5DataParameter::ByteSize() const {ByteSize17876,663392
void HDF5DataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom17911,664292
void HDF5DataParameter::MergeFrom(const HDF5DataParameter& from) {MergeFrom17923,664672
void HDF5DataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom17939,665114
void HDF5DataParameter::CopyFrom(const HDF5DataParameter& from) {CopyFrom17945,665252
bool HDF5DataParameter::IsInitialized() const {IsInitialized17951,665380
void HDF5DataParameter::Swap(HDF5DataParameter* other) {Swap17956,665447
::google::protobuf::Metadata HDF5DataParameter::GetMetadata() const {GetMetadata17967,665821
const int HDF5OutputParameter::kFileNameFieldNumber;kFileNameFieldNumber17979,666190
HDF5OutputParameter::HDF5OutputParameter()HDF5OutputParameter17982,666265
void HDF5OutputParameter::InitAsDefaultInstance() {InitAsDefaultInstance17987,666363
HDF5OutputParameter::HDF5OutputParameter(const HDF5OutputParameter& from)HDF5OutputParameter17990,666418
void HDF5OutputParameter::SharedCtor() {SharedCtor17996,666566
HDF5OutputParameter::~HDF5OutputParameter() {~HDF5OutputParameter18002,666767
void HDF5OutputParameter::SharedDtor() {SharedDtor18006,666832
void HDF5OutputParameter::SetCachedSize(int size) const {SetCachedSize18014,667009
const ::google::protobuf::Descriptor* HDF5OutputParameter::descriptor() {descriptor18019,667173
const HDF5OutputParameter& HDF5OutputParameter::default_instance() {default_instance18024,667328
HDF5OutputParameter* HDF5OutputParameter::default_instance_ = NULL;default_instance_18029,667496
HDF5OutputParameter* HDF5OutputParameter::New() const {New18031,667565
void HDF5OutputParameter::Clear() {Clear18035,667658
bool HDF5OutputParameter::MergePartialFromCodedStream(MergePartialFromCodedStream18047,667976
#define DO_(DO_18049,668086
#undef DO_DO_18082,669389
void HDF5OutputParameter::SerializeWithCachedSizes(SerializeWithCachedSizes18085,669403
::google::protobuf::uint8* HDF5OutputParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray18102,670015
int HDF5OutputParameter::ByteSize() const {ByteSize18121,670697
void HDF5OutputParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom18144,671302
void HDF5OutputParameter::MergeFrom(const HDF5OutputParameter& from) {MergeFrom18156,671688
void HDF5OutputParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom18166,671992
void HDF5OutputParameter::CopyFrom(const HDF5OutputParameter& from) {CopyFrom18172,672132
bool HDF5OutputParameter::IsInitialized() const {IsInitialized18178,672264
void HDF5OutputParameter::Swap(HDF5OutputParameter* other) {Swap18183,672333
::google::protobuf::Metadata HDF5OutputParameter::GetMetadata() const {GetMetadata18192,672627
const ::google::protobuf::EnumDescriptor* HingeLossParameter_Norm_descriptor() {HingeLossParameter_Norm_descriptor18203,672985
bool HingeLossParameter_Norm_IsValid(int value) {HingeLossParameter_Norm_IsValid18207,673150
const HingeLossParameter_Norm HingeLossParameter::L1;L118218,673318
const HingeLossParameter_Norm HingeLossParameter::L2;L218219,673372
const HingeLossParameter_Norm HingeLossParameter::Norm_MIN;Norm_MIN18220,673426
const HingeLossParameter_Norm HingeLossParameter::Norm_MAX;Norm_MAX18221,673486
const int HingeLossParameter::Norm_ARRAYSIZE;Norm_ARRAYSIZE18222,673546
const int HingeLossParameter::kNormFieldNumber;kNormFieldNumber18225,673629
HingeLossParameter::HingeLossParameter()HingeLossParameter18228,673699
void HingeLossParameter::InitAsDefaultInstance() {InitAsDefaultInstance18233,673795
HingeLossParameter::HingeLossParameter(const HingeLossParameter& from)HingeLossParameter18236,673849
void HingeLossParameter::SharedCtor() {SharedCtor18242,673994
HingeLossParameter::~HingeLossParameter() {~HingeLossParameter18248,674118
void HingeLossParameter::SharedDtor() {SharedDtor18252,674181
void HingeLossParameter::SetCachedSize(int size) const {SetCachedSize18257,674263
const ::google::protobuf::Descriptor* HingeLossParameter::descriptor() {descriptor18262,674426
const HingeLossParameter& HingeLossParameter::default_instance() {default_instance18267,674579
HingeLossParameter* HingeLossParameter::default_instance_ = NULL;default_instance_18272,674745
HingeLossParameter* HingeLossParameter::New() const {New18274,674812
void HingeLossParameter::Clear() {Clear18278,674902
bool HingeLossParameter::MergePartialFromCodedStream(MergePartialFromCodedStream18286,675093
#define DO_(DO_18288,675202
#undef DO_DO_18325,676654
void HingeLossParameter::SerializeWithCachedSizes(SerializeWithCachedSizes18328,676668
::google::protobuf::uint8* HingeLossParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray18342,677117
int HingeLossParameter::ByteSize() const {ByteSize18357,677628
void HingeLossParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom18379,678243
void HingeLossParameter::MergeFrom(const HingeLossParameter& from) {MergeFrom18391,678626
void HingeLossParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom18401,678913
void HingeLossParameter::CopyFrom(const HingeLossParameter& from) {CopyFrom18407,679052
bool HingeLossParameter::IsInitialized() const {IsInitialized18413,679182
void HingeLossParameter::Swap(HingeLossParameter* other) {Swap18418,679250
::google::protobuf::Metadata HingeLossParameter::GetMetadata() const {GetMetadata18427,679532
const int ImageDataParameter::kSourceFieldNumber;kSourceFieldNumber18439,679904
const int ImageDataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber18440,679954
const int ImageDataParameter::kRandSkipFieldNumber;kRandSkipFieldNumber18441,680007
const int ImageDataParameter::kShuffleFieldNumber;kShuffleFieldNumber18442,680059
const int ImageDataParameter::kNewHeightFieldNumber;kNewHeightFieldNumber18443,680110
const int ImageDataParameter::kNewWidthFieldNumber;kNewWidthFieldNumber18444,680163
const int ImageDataParameter::kIsColorFieldNumber;kIsColorFieldNumber18445,680215
const int ImageDataParameter::kScaleFieldNumber;kScaleFieldNumber18446,680266
const int ImageDataParameter::kMeanFileFieldNumber;kMeanFileFieldNumber18447,680315
const int ImageDataParameter::kCropSizeFieldNumber;kCropSizeFieldNumber18448,680367
const int ImageDataParameter::kMirrorFieldNumber;kMirrorFieldNumber18449,680419
const int ImageDataParameter::kRootFolderFieldNumber;kRootFolderFieldNumber18450,680469
ImageDataParameter::ImageDataParameter()ImageDataParameter18453,680545
void ImageDataParameter::InitAsDefaultInstance() {InitAsDefaultInstance18458,680641
ImageDataParameter::ImageDataParameter(const ImageDataParameter& from)ImageDataParameter18461,680695
void ImageDataParameter::SharedCtor() {SharedCtor18467,680840
ImageDataParameter::~ImageDataParameter() {~ImageDataParameter18484,681387
void ImageDataParameter::SharedDtor() {SharedDtor18488,681450
void ImageDataParameter::SetCachedSize(int size) const {SetCachedSize18502,681812
const ::google::protobuf::Descriptor* ImageDataParameter::descriptor() {descriptor18507,681975
const ImageDataParameter& ImageDataParameter::default_instance() {default_instance18512,682128
ImageDataParameter* ImageDataParameter::default_instance_ = NULL;default_instance_18517,682294
ImageDataParameter* ImageDataParameter::New() const {New18519,682361
void ImageDataParameter::Clear() {Clear18523,682451
bool ImageDataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream18556,683289
#define DO_(DO_18558,683398
#undef DO_DO_18769,691893
void ImageDataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes18772,691907
::google::protobuf::uint8* ImageDataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray18852,694764
int ImageDataParameter::ByteSize() const {ByteSize18936,697883
void ImageDataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom19030,700412
void ImageDataParameter::MergeFrom(const ImageDataParameter& from) {MergeFrom19042,700795
void ImageDataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom19087,701976
void ImageDataParameter::CopyFrom(const ImageDataParameter& from) {CopyFrom19093,702115
bool ImageDataParameter::IsInitialized() const {IsInitialized19099,702245
void ImageDataParameter::Swap(ImageDataParameter* other) {Swap19104,702313
::google::protobuf::Metadata ImageDataParameter::GetMetadata() const {GetMetadata19124,703093
const int InfogainLossParameter::kSourceFieldNumber;kSourceFieldNumber19136,703465
const int InfogainLossParameter::kAxisFieldNumber;kAxisFieldNumber19137,703518
InfogainLossParameter::InfogainLossParameter()InfogainLossParameter19140,703591
void InfogainLossParameter::InitAsDefaultInstance() {InitAsDefaultInstance19145,703693
InfogainLossParameter::InfogainLossParameter(const InfogainLossParameter& from)InfogainLossParameter19148,703750
void InfogainLossParameter::SharedCtor() {SharedCtor19154,703904
InfogainLossParameter::~InfogainLossParameter() {~InfogainLossParameter19161,704117
void InfogainLossParameter::SharedDtor() {SharedDtor19165,704186
void InfogainLossParameter::SetCachedSize(int size) const {SetCachedSize19173,704359
const ::google::protobuf::Descriptor* InfogainLossParameter::descriptor() {descriptor19178,704525
const InfogainLossParameter& InfogainLossParameter::default_instance() {default_instance19183,704684
InfogainLossParameter* InfogainLossParameter::default_instance_ = NULL;default_instance_19188,704856
InfogainLossParameter* InfogainLossParameter::New() const {New19190,704929
void InfogainLossParameter::Clear() {Clear19194,705028
bool InfogainLossParameter::MergePartialFromCodedStream(MergePartialFromCodedStream19207,705354
#define DO_(DO_19209,705466
#undef DO_DO_19258,707381
void InfogainLossParameter::SerializeWithCachedSizes(SerializeWithCachedSizes19261,707395
::google::protobuf::uint8* InfogainLossParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray19283,708150
int InfogainLossParameter::ByteSize() const {ByteSize19307,708991
void InfogainLossParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom19337,709778
void InfogainLossParameter::MergeFrom(const InfogainLossParameter& from) {MergeFrom19349,710170
void InfogainLossParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom19362,710531
void InfogainLossParameter::CopyFrom(const InfogainLossParameter& from) {CopyFrom19368,710673
bool InfogainLossParameter::IsInitialized() const {IsInitialized19374,710809
void InfogainLossParameter::Swap(InfogainLossParameter* other) {Swap19379,710880
::google::protobuf::Metadata InfogainLossParameter::GetMetadata() const {GetMetadata19389,711208
const int InnerProductParameter::kNumOutputFieldNumber;kNumOutputFieldNumber19401,711589
const int InnerProductParameter::kBiasTermFieldNumber;kBiasTermFieldNumber19402,711645
const int InnerProductParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber19403,711700
const int InnerProductParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber19404,711759
const int InnerProductParameter::kAxisFieldNumber;kAxisFieldNumber19405,711816
const int InnerProductParameter::kTransposeFieldNumber;kTransposeFieldNumber19406,711867
InnerProductParameter::InnerProductParameter()InnerProductParameter19409,711945
void InnerProductParameter::InitAsDefaultInstance() {InitAsDefaultInstance19414,712047
InnerProductParameter::InnerProductParameter(const InnerProductParameter& from)InnerProductParameter19419,712314
void InnerProductParameter::SharedCtor() {SharedCtor19425,712468
InnerProductParameter::~InnerProductParameter() {~InnerProductParameter19436,712706
void InnerProductParameter::SharedDtor() {SharedDtor19440,712775
void InnerProductParameter::SetCachedSize(int size) const {SetCachedSize19447,712912
const ::google::protobuf::Descriptor* InnerProductParameter::descriptor() {descriptor19452,713078
const InnerProductParameter& InnerProductParameter::default_instance() {default_instance19457,713237
InnerProductParameter* InnerProductParameter::default_instance_ = NULL;default_instance_19462,713409
InnerProductParameter* InnerProductParameter::New() const {New19464,713482
void InnerProductParameter::Clear() {Clear19468,713581
bool InnerProductParameter::MergePartialFromCodedStream(MergePartialFromCodedStream19485,714082
#define DO_(DO_19487,714194
#undef DO_DO_19595,718403
void InnerProductParameter::SerializeWithCachedSizes(SerializeWithCachedSizes19598,718417
::google::protobuf::uint8* InnerProductParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray19638,719752
int InnerProductParameter::ByteSize() const {ByteSize19681,721241
void InnerProductParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom19735,722723
void InnerProductParameter::MergeFrom(const InnerProductParameter& from) {MergeFrom19747,723115
void InnerProductParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom19772,723900
void InnerProductParameter::CopyFrom(const InnerProductParameter& from) {CopyFrom19778,724042
bool InnerProductParameter::IsInitialized() const {IsInitialized19784,724178
void InnerProductParameter::Swap(InnerProductParameter* other) {Swap19789,724249
::google::protobuf::Metadata InnerProductParameter::GetMetadata() const {GetMetadata19803,724781
const int InputParameter::kShapeFieldNumber;kShapeFieldNumber19815,725162
InputParameter::InputParameter()InputParameter19818,725229
void InputParameter::InitAsDefaultInstance() {InitAsDefaultInstance19823,725317
InputParameter::InputParameter(const InputParameter& from)InputParameter19826,725367
void InputParameter::SharedCtor() {SharedCtor19832,725500
InputParameter::~InputParameter() {~InputParameter19837,725607
void InputParameter::SharedDtor() {SharedDtor19841,725662
void InputParameter::SetCachedSize(int size) const {SetCachedSize19846,725740
const ::google::protobuf::Descriptor* InputParameter::descriptor() {descriptor19851,725899
const InputParameter& InputParameter::default_instance() {default_instance19856,726044
InputParameter* InputParameter::default_instance_ = NULL;default_instance_19861,726202
InputParameter* InputParameter::New() const {New19863,726261
void InputParameter::Clear() {Clear19867,726339
bool InputParameter::MergePartialFromCodedStream(MergePartialFromCodedStream19873,726475
#define DO_(DO_19875,726580
#undef DO_DO_19907,727761
void InputParameter::SerializeWithCachedSizes(SerializeWithCachedSizes19910,727775
::google::protobuf::uint8* InputParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray19924,728238
int InputParameter::ByteSize() const {ByteSize19940,728769
void InputParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom19962,729376
void InputParameter::MergeFrom(const InputParameter& from) {MergeFrom19974,729747
void InputParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom19980,729938
void InputParameter::CopyFrom(const InputParameter& from) {CopyFrom19986,730073
bool InputParameter::IsInitialized() const {IsInitialized19992,730195
void InputParameter::Swap(InputParameter* other) {Swap19997,730259
::google::protobuf::Metadata InputParameter::GetMetadata() const {GetMetadata20006,730530
const int LogParameter::kBaseFieldNumber;kBaseFieldNumber20018,730890
const int LogParameter::kScaleFieldNumber;kScaleFieldNumber20019,730932
const int LogParameter::kShiftFieldNumber;kShiftFieldNumber20020,730975
LogParameter::LogParameter()LogParameter20023,731040
void LogParameter::InitAsDefaultInstance() {InitAsDefaultInstance20028,731124
LogParameter::LogParameter(const LogParameter& from)LogParameter20031,731172
void LogParameter::SharedCtor() {SharedCtor20037,731299
LogParameter::~LogParameter() {~LogParameter20045,731446
void LogParameter::SharedDtor() {SharedDtor20049,731497
void LogParameter::SetCachedSize(int size) const {SetCachedSize20054,731573
const ::google::protobuf::Descriptor* LogParameter::descriptor() {descriptor20059,731730
const LogParameter& LogParameter::default_instance() {default_instance20064,731871
LogParameter* LogParameter::default_instance_ = NULL;default_instance_20069,732025
LogParameter* LogParameter::New() const {New20071,732080
void LogParameter::Clear() {Clear20075,732152
bool LogParameter::MergePartialFromCodedStream(MergePartialFromCodedStream20085,732370
#define DO_(DO_20087,732473
#undef DO_DO_20151,734896
void LogParameter::SerializeWithCachedSizes(SerializeWithCachedSizes20154,734910
::google::protobuf::uint8* LogParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray20177,735640
int LogParameter::ByteSize() const {ByteSize20201,736464
void LogParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom20232,737181
void LogParameter::MergeFrom(const LogParameter& from) {MergeFrom20244,737546
void LogParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom20260,737951
void LogParameter::CopyFrom(const LogParameter& from) {CopyFrom20266,738084
bool LogParameter::IsInitialized() const {IsInitialized20272,738202
void LogParameter::Swap(LogParameter* other) {Swap20277,738264
::google::protobuf::Metadata LogParameter::GetMetadata() const {GetMetadata20288,738610
const ::google::protobuf::EnumDescriptor* LRNParameter_NormRegion_descriptor() {LRNParameter_NormRegion_descriptor20299,738947
bool LRNParameter_NormRegion_IsValid(int value) {LRNParameter_NormRegion_IsValid20303,739112
const LRNParameter_NormRegion LRNParameter::ACROSS_CHANNELS;ACROSS_CHANNELS20314,739280
const LRNParameter_NormRegion LRNParameter::WITHIN_CHANNEL;WITHIN_CHANNEL20315,739341
const LRNParameter_NormRegion LRNParameter::NormRegion_MIN;NormRegion_MIN20316,739401
const LRNParameter_NormRegion LRNParameter::NormRegion_MAX;NormRegion_MAX20317,739461
const int LRNParameter::NormRegion_ARRAYSIZE;NormRegion_ARRAYSIZE20318,739521
const ::google::protobuf::EnumDescriptor* LRNParameter_Engine_descriptor() {LRNParameter_Engine_descriptor20320,739587
bool LRNParameter_Engine_IsValid(int value) {LRNParameter_Engine_IsValid20324,739744
const LRNParameter_Engine LRNParameter::DEFAULT;DEFAULT20336,739920
const LRNParameter_Engine LRNParameter::CAFFE;CAFFE20337,739969
const LRNParameter_Engine LRNParameter::CUDNN;CUDNN20338,740016
const LRNParameter_Engine LRNParameter::Engine_MIN;Engine_MIN20339,740063
const LRNParameter_Engine LRNParameter::Engine_MAX;Engine_MAX20340,740115
const int LRNParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE20341,740167
const int LRNParameter::kLocalSizeFieldNumber;kLocalSizeFieldNumber20344,740246
const int LRNParameter::kAlphaFieldNumber;kAlphaFieldNumber20345,740293
const int LRNParameter::kBetaFieldNumber;kBetaFieldNumber20346,740336
const int LRNParameter::kNormRegionFieldNumber;kNormRegionFieldNumber20347,740378
const int LRNParameter::kKFieldNumber;kKFieldNumber20348,740426
const int LRNParameter::kEngineFieldNumber;kEngineFieldNumber20349,740465
LRNParameter::LRNParameter()LRNParameter20352,740531
void LRNParameter::InitAsDefaultInstance() {InitAsDefaultInstance20357,740615
LRNParameter::LRNParameter(const LRNParameter& from)LRNParameter20360,740663
void LRNParameter::SharedCtor() {SharedCtor20366,740790
LRNParameter::~LRNParameter() {~LRNParameter20377,740991
void LRNParameter::SharedDtor() {SharedDtor20381,741042
void LRNParameter::SetCachedSize(int size) const {SetCachedSize20386,741118
const ::google::protobuf::Descriptor* LRNParameter::descriptor() {descriptor20391,741275
const LRNParameter& LRNParameter::default_instance() {default_instance20396,741416
LRNParameter* LRNParameter::default_instance_ = NULL;default_instance_20401,741570
LRNParameter* LRNParameter::New() const {New20403,741625
void LRNParameter::Clear() {Clear20407,741697
bool LRNParameter::MergePartialFromCodedStream(MergePartialFromCodedStream20420,741975
#define DO_(DO_20422,742078
#undef DO_DO_20544,746880
void LRNParameter::SerializeWithCachedSizes(SerializeWithCachedSizes20547,746894
::google::protobuf::uint8* LRNParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray20587,748207
int LRNParameter::ByteSize() const {ByteSize20628,749662
void LRNParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom20678,751029
void LRNParameter::MergeFrom(const LRNParameter& from) {MergeFrom20690,751394
void LRNParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom20715,752018
void LRNParameter::CopyFrom(const LRNParameter& from) {CopyFrom20721,752151
bool LRNParameter::IsInitialized() const {IsInitialized20727,752269
void LRNParameter::Swap(LRNParameter* other) {Swap20732,752331
::google::protobuf::Metadata LRNParameter::GetMetadata() const {GetMetadata20746,752807
const int MemoryDataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber20758,753161
const int MemoryDataParameter::kChannelsFieldNumber;kChannelsFieldNumber20759,753215
const int MemoryDataParameter::kHeightFieldNumber;kHeightFieldNumber20760,753268
const int MemoryDataParameter::kWidthFieldNumber;kWidthFieldNumber20761,753319
MemoryDataParameter::MemoryDataParameter()MemoryDataParameter20764,753391
void MemoryDataParameter::InitAsDefaultInstance() {InitAsDefaultInstance20769,753489
MemoryDataParameter::MemoryDataParameter(const MemoryDataParameter& from)MemoryDataParameter20772,753544
void MemoryDataParameter::SharedCtor() {SharedCtor20778,753692
MemoryDataParameter::~MemoryDataParameter() {~MemoryDataParameter20787,753873
void MemoryDataParameter::SharedDtor() {SharedDtor20791,753938
void MemoryDataParameter::SetCachedSize(int size) const {SetCachedSize20796,754021
const ::google::protobuf::Descriptor* MemoryDataParameter::descriptor() {descriptor20801,754185
const MemoryDataParameter& MemoryDataParameter::default_instance() {default_instance20806,754340
MemoryDataParameter* MemoryDataParameter::default_instance_ = NULL;default_instance_20811,754508
MemoryDataParameter* MemoryDataParameter::New() const {New20813,754577
void MemoryDataParameter::Clear() {Clear20817,754670
bool MemoryDataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream20828,754924
#define DO_(DO_20830,755034
#undef DO_DO_20910,758136
void MemoryDataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes20913,758150
::google::protobuf::uint8* MemoryDataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray20941,759027
int MemoryDataParameter::ByteSize() const {ByteSize20970,760014
void MemoryDataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom21014,761174
void MemoryDataParameter::MergeFrom(const MemoryDataParameter& from) {MergeFrom21026,761560
void MemoryDataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom21045,762074
void MemoryDataParameter::CopyFrom(const MemoryDataParameter& from) {CopyFrom21051,762214
bool MemoryDataParameter::IsInitialized() const {IsInitialized21057,762346
void MemoryDataParameter::Swap(MemoryDataParameter* other) {Swap21062,762415
::google::protobuf::Metadata MemoryDataParameter::GetMetadata() const {GetMetadata21074,762833
const int MVNParameter::kNormalizeVarianceFieldNumber;kNormalizeVarianceFieldNumber21086,763208
const int MVNParameter::kAcrossChannelsFieldNumber;kAcrossChannelsFieldNumber21087,763263
const int MVNParameter::kEpsFieldNumber;kEpsFieldNumber21088,763315
MVNParameter::MVNParameter()MVNParameter21091,763378
void MVNParameter::InitAsDefaultInstance() {InitAsDefaultInstance21096,763462
MVNParameter::MVNParameter(const MVNParameter& from)MVNParameter21099,763510
void MVNParameter::SharedCtor() {SharedCtor21105,763637
MVNParameter::~MVNParameter() {~MVNParameter21113,763817
void MVNParameter::SharedDtor() {SharedDtor21117,763868
void MVNParameter::SetCachedSize(int size) const {SetCachedSize21122,763944
const ::google::protobuf::Descriptor* MVNParameter::descriptor() {descriptor21127,764101
const MVNParameter& MVNParameter::default_instance() {default_instance21132,764242
MVNParameter* MVNParameter::default_instance_ = NULL;default_instance_21137,764396
MVNParameter* MVNParameter::New() const {New21139,764451
void MVNParameter::Clear() {Clear21143,764523
bool MVNParameter::MergePartialFromCodedStream(MergePartialFromCodedStream21153,764774
#define DO_(DO_21155,764877
#undef DO_DO_21219,767384
void MVNParameter::SerializeWithCachedSizes(SerializeWithCachedSizes21222,767398
::google::protobuf::uint8* MVNParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray21245,768200
int MVNParameter::ByteSize() const {ByteSize21269,769096
void MVNParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom21300,769865
void MVNParameter::MergeFrom(const MVNParameter& from) {MergeFrom21312,770230
void MVNParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom21328,770701
void MVNParameter::CopyFrom(const MVNParameter& from) {CopyFrom21334,770834
bool MVNParameter::IsInitialized() const {IsInitialized21340,770952
void MVNParameter::Swap(MVNParameter* other) {Swap21345,771014
::google::protobuf::Metadata MVNParameter::GetMetadata() const {GetMetadata21356,771404
const int ParameterParameter::kShapeFieldNumber;kShapeFieldNumber21368,771758
ParameterParameter::ParameterParameter()ParameterParameter21371,771829
void ParameterParameter::InitAsDefaultInstance() {InitAsDefaultInstance21376,771925
ParameterParameter::ParameterParameter(const ParameterParameter& from)ParameterParameter21380,772065
void ParameterParameter::SharedCtor() {SharedCtor21386,772210
ParameterParameter::~ParameterParameter() {~ParameterParameter21392,772338
void ParameterParameter::SharedDtor() {SharedDtor21396,772401
void ParameterParameter::SetCachedSize(int size) const {SetCachedSize21402,772502
const ::google::protobuf::Descriptor* ParameterParameter::descriptor() {descriptor21407,772665
const ParameterParameter& ParameterParameter::default_instance() {default_instance21412,772818
ParameterParameter* ParameterParameter::default_instance_ = NULL;default_instance_21417,772984
ParameterParameter* ParameterParameter::New() const {New21419,773051
void ParameterParameter::Clear() {Clear21423,773141
bool ParameterParameter::MergePartialFromCodedStream(MergePartialFromCodedStream21433,773409
#define DO_(DO_21435,773518
#undef DO_DO_21465,774628
void ParameterParameter::SerializeWithCachedSizes(SerializeWithCachedSizes21468,774642
::google::protobuf::uint8* ParameterParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray21482,775080
int ParameterParameter::ByteSize() const {ByteSize21498,775586
void ParameterParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom21521,776198
void ParameterParameter::MergeFrom(const ParameterParameter& from) {MergeFrom21533,776581
void ParameterParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom21543,776908
void ParameterParameter::CopyFrom(const ParameterParameter& from) {CopyFrom21549,777047
bool ParameterParameter::IsInitialized() const {IsInitialized21555,777177
void ParameterParameter::Swap(ParameterParameter* other) {Swap21560,777245
::google::protobuf::Metadata ParameterParameter::GetMetadata() const {GetMetadata21569,777529
const ::google::protobuf::EnumDescriptor* PoolingParameter_PoolMethod_descriptor() {PoolingParameter_PoolMethod_descriptor21580,777884
bool PoolingParameter_PoolMethod_IsValid(int value) {PoolingParameter_PoolMethod_IsValid21584,778057
const PoolingParameter_PoolMethod PoolingParameter::MAX;MAX21596,778241
const PoolingParameter_PoolMethod PoolingParameter::AVE;AVE21597,778298
const PoolingParameter_PoolMethod PoolingParameter::STOCHASTIC;STOCHASTIC21598,778355
const PoolingParameter_PoolMethod PoolingParameter::PoolMethod_MIN;PoolMethod_MIN21599,778419
const PoolingParameter_PoolMethod PoolingParameter::PoolMethod_MAX;PoolMethod_MAX21600,778487
const int PoolingParameter::PoolMethod_ARRAYSIZE;PoolMethod_ARRAYSIZE21601,778555
const ::google::protobuf::EnumDescriptor* PoolingParameter_Engine_descriptor() {PoolingParameter_Engine_descriptor21603,778625
bool PoolingParameter_Engine_IsValid(int value) {PoolingParameter_Engine_IsValid21607,778790
const PoolingParameter_Engine PoolingParameter::DEFAULT;DEFAULT21619,778970
const PoolingParameter_Engine PoolingParameter::CAFFE;CAFFE21620,779027
const PoolingParameter_Engine PoolingParameter::CUDNN;CUDNN21621,779082
const PoolingParameter_Engine PoolingParameter::Engine_MIN;Engine_MIN21622,779137
const PoolingParameter_Engine PoolingParameter::Engine_MAX;Engine_MAX21623,779197
const int PoolingParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE21624,779257
const int PoolingParameter::kPoolFieldNumber;kPoolFieldNumber21627,779340
const int PoolingParameter::kPadFieldNumber;kPadFieldNumber21628,779386
const int PoolingParameter::kPadHFieldNumber;kPadHFieldNumber21629,779431
const int PoolingParameter::kPadWFieldNumber;kPadWFieldNumber21630,779477
const int PoolingParameter::kKernelSizeFieldNumber;kKernelSizeFieldNumber21631,779523
const int PoolingParameter::kKernelHFieldNumber;kKernelHFieldNumber21632,779575
const int PoolingParameter::kKernelWFieldNumber;kKernelWFieldNumber21633,779624
const int PoolingParameter::kStrideFieldNumber;kStrideFieldNumber21634,779673
const int PoolingParameter::kStrideHFieldNumber;kStrideHFieldNumber21635,779721
const int PoolingParameter::kStrideWFieldNumber;kStrideWFieldNumber21636,779770
const int PoolingParameter::kEngineFieldNumber;kEngineFieldNumber21637,779819
const int PoolingParameter::kGlobalPoolingFieldNumber;kGlobalPoolingFieldNumber21638,779867
PoolingParameter::PoolingParameter()PoolingParameter21641,779944
void PoolingParameter::InitAsDefaultInstance() {InitAsDefaultInstance21646,780036
PoolingParameter::PoolingParameter(const PoolingParameter& from)PoolingParameter21649,780088
void PoolingParameter::SharedCtor() {SharedCtor21655,780227
PoolingParameter::~PoolingParameter() {~PoolingParameter21672,780543
void PoolingParameter::SharedDtor() {SharedDtor21676,780602
void PoolingParameter::SetCachedSize(int size) const {SetCachedSize21681,780682
const ::google::protobuf::Descriptor* PoolingParameter::descriptor() {descriptor21686,780843
const PoolingParameter& PoolingParameter::default_instance() {default_instance21691,780992
PoolingParameter* PoolingParameter::default_instance_ = NULL;default_instance_21696,781154
PoolingParameter* PoolingParameter::New() const {New21698,781217
void PoolingParameter::Clear() {Clear21702,781301
bool PoolingParameter::MergePartialFromCodedStream(MergePartialFromCodedStream21723,781760
#define DO_(DO_21725,781867
#undef DO_DO_21943,790565
void PoolingParameter::SerializeWithCachedSizes(SerializeWithCachedSizes21946,790579
::google::protobuf::uint8* PoolingParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray22016,792854
int PoolingParameter::ByteSize() const {ByteSize22087,795367
void PoolingParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom22185,798108
void PoolingParameter::MergeFrom(const PoolingParameter& from) {MergeFrom22197,798485
void PoolingParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom22242,799623
void PoolingParameter::CopyFrom(const PoolingParameter& from) {CopyFrom22248,799760
bool PoolingParameter::IsInitialized() const {IsInitialized22254,799886
void PoolingParameter::Swap(PoolingParameter* other) {Swap22259,799952
::google::protobuf::Metadata PoolingParameter::GetMetadata() const {GetMetadata22279,800702
const int PowerParameter::kPowerFieldNumber;kPowerFieldNumber22291,801068
const int PowerParameter::kScaleFieldNumber;kScaleFieldNumber22292,801113
const int PowerParameter::kShiftFieldNumber;kShiftFieldNumber22293,801158
PowerParameter::PowerParameter()PowerParameter22296,801225
void PowerParameter::InitAsDefaultInstance() {InitAsDefaultInstance22301,801313
PowerParameter::PowerParameter(const PowerParameter& from)PowerParameter22304,801363
void PowerParameter::SharedCtor() {SharedCtor22310,801496
PowerParameter::~PowerParameter() {~PowerParameter22318,801645
void PowerParameter::SharedDtor() {SharedDtor22322,801700
void PowerParameter::SetCachedSize(int size) const {SetCachedSize22327,801778
const ::google::protobuf::Descriptor* PowerParameter::descriptor() {descriptor22332,801937
const PowerParameter& PowerParameter::default_instance() {default_instance22337,802082
PowerParameter* PowerParameter::default_instance_ = NULL;default_instance_22342,802240
PowerParameter* PowerParameter::New() const {New22344,802299
void PowerParameter::Clear() {Clear22348,802377
bool PowerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream22358,802597
#define DO_(DO_22360,802702
#undef DO_DO_22424,805127
void PowerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes22427,805141
::google::protobuf::uint8* PowerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray22450,805875
int PowerParameter::ByteSize() const {ByteSize22474,806703
void PowerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom22505,807423
void PowerParameter::MergeFrom(const PowerParameter& from) {MergeFrom22517,807794
void PowerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom22533,808206
void PowerParameter::CopyFrom(const PowerParameter& from) {CopyFrom22539,808341
bool PowerParameter::IsInitialized() const {IsInitialized22545,808463
void PowerParameter::Swap(PowerParameter* other) {Swap22550,808527
::google::protobuf::Metadata PowerParameter::GetMetadata() const {GetMetadata22561,808879
const int PythonParameter::kModuleFieldNumber;kModuleFieldNumber22573,809239
const int PythonParameter::kLayerFieldNumber;kLayerFieldNumber22574,809286
const int PythonParameter::kParamStrFieldNumber;kParamStrFieldNumber22575,809332
const int PythonParameter::kShareInParallelFieldNumber;kShareInParallelFieldNumber22576,809381
PythonParameter::PythonParameter()PythonParameter22579,809459
void PythonParameter::InitAsDefaultInstance() {InitAsDefaultInstance22584,809549
PythonParameter::PythonParameter(const PythonParameter& from)PythonParameter22587,809600
void PythonParameter::SharedCtor() {SharedCtor22593,809736
PythonParameter::~PythonParameter() {~PythonParameter22602,810134
void PythonParameter::SharedDtor() {SharedDtor22606,810191
void PythonParameter::SetCachedSize(int size) const {SetCachedSize22620,810538
const ::google::protobuf::Descriptor* PythonParameter::descriptor() {descriptor22625,810698
const PythonParameter& PythonParameter::default_instance() {default_instance22630,810845
PythonParameter* PythonParameter::default_instance_ = NULL;default_instance_22635,811005
PythonParameter* PythonParameter::New() const {New22637,811066
void PythonParameter::Clear() {Clear22641,811147
bool PythonParameter::MergePartialFromCodedStream(MergePartialFromCodedStream22664,811754
#define DO_(DO_22666,811860
#undef DO_DO_22749,815244
void PythonParameter::SerializeWithCachedSizes(SerializeWithCachedSizes22752,815258
::google::protobuf::uint8* PythonParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray22792,816743
int PythonParameter::ByteSize() const {ByteSize22836,818362
void PythonParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom22878,819472
void PythonParameter::MergeFrom(const PythonParameter& from) {MergeFrom22890,819846
void PythonParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom22909,820376
void PythonParameter::CopyFrom(const PythonParameter& from) {CopyFrom22915,820512
bool PythonParameter::IsInitialized() const {IsInitialized22921,820636
void PythonParameter::Swap(PythonParameter* other) {Swap22926,820701
::google::protobuf::Metadata PythonParameter::GetMetadata() const {GetMetadata22938,821127
const int RecurrentParameter::kNumOutputFieldNumber;kNumOutputFieldNumber22950,821490
const int RecurrentParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber22951,821543
const int RecurrentParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber22952,821599
const int RecurrentParameter::kDebugInfoFieldNumber;kDebugInfoFieldNumber22953,821653
const int RecurrentParameter::kExposeHiddenFieldNumber;kExposeHiddenFieldNumber22954,821706
RecurrentParameter::RecurrentParameter()RecurrentParameter22957,821784
void RecurrentParameter::InitAsDefaultInstance() {InitAsDefaultInstance22962,821880
RecurrentParameter::RecurrentParameter(const RecurrentParameter& from)RecurrentParameter22967,822144
void RecurrentParameter::SharedCtor() {SharedCtor22973,822289
RecurrentParameter::~RecurrentParameter() {~RecurrentParameter22983,822517
void RecurrentParameter::SharedDtor() {SharedDtor22987,822580
void RecurrentParameter::SetCachedSize(int size) const {SetCachedSize22994,822714
const ::google::protobuf::Descriptor* RecurrentParameter::descriptor() {descriptor22999,822877
const RecurrentParameter& RecurrentParameter::default_instance() {default_instance23004,823030
RecurrentParameter* RecurrentParameter::default_instance_ = NULL;default_instance_23009,823196
RecurrentParameter* RecurrentParameter::New() const {New23011,823263
void RecurrentParameter::Clear() {Clear23015,823353
bool RecurrentParameter::MergePartialFromCodedStream(MergePartialFromCodedStream23031,823842
#define DO_(DO_23033,823951
#undef DO_DO_23125,827576
void RecurrentParameter::SerializeWithCachedSizes(SerializeWithCachedSizes23128,827590
::google::protobuf::uint8* RecurrentParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray23163,828796
int RecurrentParameter::ByteSize() const {ByteSize23201,830140
void RecurrentParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom23248,831455
void RecurrentParameter::MergeFrom(const RecurrentParameter& from) {MergeFrom23260,831838
void RecurrentParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom23282,832570
void RecurrentParameter::CopyFrom(const RecurrentParameter& from) {CopyFrom23288,832709
bool RecurrentParameter::IsInitialized() const {IsInitialized23294,832839
void RecurrentParameter::Swap(RecurrentParameter* other) {Swap23299,832907
::google::protobuf::Metadata RecurrentParameter::GetMetadata() const {GetMetadata23312,833407
const ::google::protobuf::EnumDescriptor* ReductionParameter_ReductionOp_descriptor() {ReductionParameter_ReductionOp_descriptor23323,833762
bool ReductionParameter_ReductionOp_IsValid(int value) {ReductionParameter_ReductionOp_IsValid23327,833941
const ReductionParameter_ReductionOp ReductionParameter::SUM;SUM23340,834140
const ReductionParameter_ReductionOp ReductionParameter::ASUM;ASUM23341,834202
const ReductionParameter_ReductionOp ReductionParameter::SUMSQ;SUMSQ23342,834265
const ReductionParameter_ReductionOp ReductionParameter::MEAN;MEAN23343,834329
const ReductionParameter_ReductionOp ReductionParameter::ReductionOp_MIN;ReductionOp_MIN23344,834392
const ReductionParameter_ReductionOp ReductionParameter::ReductionOp_MAX;ReductionOp_MAX23345,834466
const int ReductionParameter::ReductionOp_ARRAYSIZE;ReductionOp_ARRAYSIZE23346,834540
const int ReductionParameter::kOperationFieldNumber;kOperationFieldNumber23349,834630
const int ReductionParameter::kAxisFieldNumber;kAxisFieldNumber23350,834683
const int ReductionParameter::kCoeffFieldNumber;kCoeffFieldNumber23351,834731
ReductionParameter::ReductionParameter()ReductionParameter23354,834802
void ReductionParameter::InitAsDefaultInstance() {InitAsDefaultInstance23359,834898
ReductionParameter::ReductionParameter(const ReductionParameter& from)ReductionParameter23362,834952
void ReductionParameter::SharedCtor() {SharedCtor23368,835097
ReductionParameter::~ReductionParameter() {~ReductionParameter23376,835253
void ReductionParameter::SharedDtor() {SharedDtor23380,835316
void ReductionParameter::SetCachedSize(int size) const {SetCachedSize23385,835398
const ::google::protobuf::Descriptor* ReductionParameter::descriptor() {descriptor23390,835561
const ReductionParameter& ReductionParameter::default_instance() {default_instance23395,835714
ReductionParameter* ReductionParameter::default_instance_ = NULL;default_instance_23400,835880
ReductionParameter* ReductionParameter::New() const {New23402,835947
void ReductionParameter::Clear() {Clear23406,836037
bool ReductionParameter::MergePartialFromCodedStream(MergePartialFromCodedStream23416,836264
#define DO_(DO_23418,836373
#undef DO_DO_23487,839091
void ReductionParameter::SerializeWithCachedSizes(SerializeWithCachedSizes23490,839105
::google::protobuf::uint8* ReductionParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray23514,839892
int ReductionParameter::ByteSize() const {ByteSize23539,840773
void ReductionParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom23573,841704
void ReductionParameter::MergeFrom(const ReductionParameter& from) {MergeFrom23585,842087
void ReductionParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom23601,842516
void ReductionParameter::CopyFrom(const ReductionParameter& from) {CopyFrom23607,842655
bool ReductionParameter::IsInitialized() const {IsInitialized23613,842785
void ReductionParameter::Swap(ReductionParameter* other) {Swap23618,842853
::google::protobuf::Metadata ReductionParameter::GetMetadata() const {GetMetadata23629,843219
const ::google::protobuf::EnumDescriptor* ReLUParameter_Engine_descriptor() {ReLUParameter_Engine_descriptor23640,843574
bool ReLUParameter_Engine_IsValid(int value) {ReLUParameter_Engine_IsValid23644,843733
const ReLUParameter_Engine ReLUParameter::DEFAULT;DEFAULT23656,843910
const ReLUParameter_Engine ReLUParameter::CAFFE;CAFFE23657,843961
const ReLUParameter_Engine ReLUParameter::CUDNN;CUDNN23658,844010
const ReLUParameter_Engine ReLUParameter::Engine_MIN;Engine_MIN23659,844059
const ReLUParameter_Engine ReLUParameter::Engine_MAX;Engine_MAX23660,844113
const int ReLUParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE23661,844167
const int ReLUParameter::kNegativeSlopeFieldNumber;kNegativeSlopeFieldNumber23664,844247
const int ReLUParameter::kEngineFieldNumber;kEngineFieldNumber23665,844299
ReLUParameter::ReLUParameter()ReLUParameter23668,844366
void ReLUParameter::InitAsDefaultInstance() {InitAsDefaultInstance23673,844452
ReLUParameter::ReLUParameter(const ReLUParameter& from)ReLUParameter23676,844501
void ReLUParameter::SharedCtor() {SharedCtor23682,844631
ReLUParameter::~ReLUParameter() {~ReLUParameter23689,844775
void ReLUParameter::SharedDtor() {SharedDtor23693,844828
void ReLUParameter::SetCachedSize(int size) const {SetCachedSize23698,844905
const ::google::protobuf::Descriptor* ReLUParameter::descriptor() {descriptor23703,845063
const ReLUParameter& ReLUParameter::default_instance() {default_instance23708,845206
ReLUParameter* ReLUParameter::default_instance_ = NULL;default_instance_23713,845362
ReLUParameter* ReLUParameter::New() const {New23715,845419
void ReLUParameter::Clear() {Clear23719,845494
bool ReLUParameter::MergePartialFromCodedStream(MergePartialFromCodedStream23728,845707
#define DO_(DO_23730,845811
#undef DO_DO_23783,847902
void ReLUParameter::SerializeWithCachedSizes(SerializeWithCachedSizes23786,847916
::google::protobuf::uint8* ReLUParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray23805,848554
int ReLUParameter::ByteSize() const {ByteSize23825,849270
void ReLUParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom23852,850010
void ReLUParameter::MergeFrom(const ReLUParameter& from) {MergeFrom23864,850378
void ReLUParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom23877,850753
void ReLUParameter::CopyFrom(const ReLUParameter& from) {CopyFrom23883,850887
bool ReLUParameter::IsInitialized() const {IsInitialized23889,851007
void ReLUParameter::Swap(ReLUParameter* other) {Swap23894,851070
::google::protobuf::Metadata ReLUParameter::GetMetadata() const {GetMetadata23904,851402
const int ReshapeParameter::kShapeFieldNumber;kShapeFieldNumber23916,851759
const int ReshapeParameter::kAxisFieldNumber;kAxisFieldNumber23917,851806
const int ReshapeParameter::kNumAxesFieldNumber;kNumAxesFieldNumber23918,851852
ReshapeParameter::ReshapeParameter()ReshapeParameter23921,851923
void ReshapeParameter::InitAsDefaultInstance() {InitAsDefaultInstance23926,852015
ReshapeParameter::ReshapeParameter(const ReshapeParameter& from)ReshapeParameter23930,852153
void ReshapeParameter::SharedCtor() {SharedCtor23936,852292
ReshapeParameter::~ReshapeParameter() {~ReshapeParameter23944,852449
void ReshapeParameter::SharedDtor() {SharedDtor23948,852508
void ReshapeParameter::SetCachedSize(int size) const {SetCachedSize23954,852607
const ::google::protobuf::Descriptor* ReshapeParameter::descriptor() {descriptor23959,852768
const ReshapeParameter& ReshapeParameter::default_instance() {default_instance23964,852917
ReshapeParameter* ReshapeParameter::default_instance_ = NULL;default_instance_23969,853079
ReshapeParameter* ReshapeParameter::New() const {New23971,853142
void ReshapeParameter::Clear() {Clear23975,853226
bool ReshapeParameter::MergePartialFromCodedStream(MergePartialFromCodedStream23987,853527
#define DO_(DO_23989,853634
#undef DO_DO_24051,856013
void ReshapeParameter::SerializeWithCachedSizes(SerializeWithCachedSizes24054,856027
::google::protobuf::uint8* ReshapeParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray24078,856788
int ReshapeParameter::ByteSize() const {ByteSize24104,857649
void ReshapeParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom24141,858650
void ReshapeParameter::MergeFrom(const ReshapeParameter& from) {MergeFrom24153,859027
void ReshapeParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom24169,859486
void ReshapeParameter::CopyFrom(const ReshapeParameter& from) {CopyFrom24175,859623
bool ReshapeParameter::IsInitialized() const {IsInitialized24181,859749
void ReshapeParameter::Swap(ReshapeParameter* other) {Swap24186,859815
::google::protobuf::Metadata ReshapeParameter::GetMetadata() const {GetMetadata24197,860175
const int ScaleParameter::kAxisFieldNumber;kAxisFieldNumber24209,860541
const int ScaleParameter::kNumAxesFieldNumber;kNumAxesFieldNumber24210,860585
const int ScaleParameter::kFillerFieldNumber;kFillerFieldNumber24211,860632
const int ScaleParameter::kBiasTermFieldNumber;kBiasTermFieldNumber24212,860678
const int ScaleParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber24213,860726
ScaleParameter::ScaleParameter()ScaleParameter24216,860798
void ScaleParameter::InitAsDefaultInstance() {InitAsDefaultInstance24221,860886
ScaleParameter::ScaleParameter(const ScaleParameter& from)ScaleParameter24226,861139
void ScaleParameter::SharedCtor() {SharedCtor24232,861272
ScaleParameter::~ScaleParameter() {~ScaleParameter24242,861472
void ScaleParameter::SharedDtor() {SharedDtor24246,861527
void ScaleParameter::SetCachedSize(int size) const {SetCachedSize24253,861650
const ::google::protobuf::Descriptor* ScaleParameter::descriptor() {descriptor24258,861809
const ScaleParameter& ScaleParameter::default_instance() {default_instance24263,861954
ScaleParameter* ScaleParameter::default_instance_ = NULL;default_instance_24268,862112
ScaleParameter* ScaleParameter::New() const {New24270,862171
void ScaleParameter::Clear() {Clear24274,862249
bool ScaleParameter::MergePartialFromCodedStream(MergePartialFromCodedStream24290,862696
#define DO_(DO_24292,862801
#undef DO_DO_24384,866366
void ScaleParameter::SerializeWithCachedSizes(SerializeWithCachedSizes24387,866380
::google::protobuf::uint8* ScaleParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray24422,867521
int ScaleParameter::ByteSize() const {ByteSize24460,868800
void ScaleParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom24509,870146
void ScaleParameter::MergeFrom(const ScaleParameter& from) {MergeFrom24521,870517
void ScaleParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom24543,871184
void ScaleParameter::CopyFrom(const ScaleParameter& from) {CopyFrom24549,871319
bool ScaleParameter::IsInitialized() const {IsInitialized24555,871441
void ScaleParameter::Swap(ScaleParameter* other) {Swap24560,871505
::google::protobuf::Metadata ScaleParameter::GetMetadata() const {GetMetadata24573,871959
const ::google::protobuf::EnumDescriptor* SigmoidParameter_Engine_descriptor() {SigmoidParameter_Engine_descriptor24584,872302
bool SigmoidParameter_Engine_IsValid(int value) {SigmoidParameter_Engine_IsValid24588,872467
const SigmoidParameter_Engine SigmoidParameter::DEFAULT;DEFAULT24600,872647
const SigmoidParameter_Engine SigmoidParameter::CAFFE;CAFFE24601,872704
const SigmoidParameter_Engine SigmoidParameter::CUDNN;CUDNN24602,872759
const SigmoidParameter_Engine SigmoidParameter::Engine_MIN;Engine_MIN24603,872814
const SigmoidParameter_Engine SigmoidParameter::Engine_MAX;Engine_MAX24604,872874
const int SigmoidParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE24605,872934
const int SigmoidParameter::kEngineFieldNumber;kEngineFieldNumber24608,873017
SigmoidParameter::SigmoidParameter()SigmoidParameter24611,873087
void SigmoidParameter::InitAsDefaultInstance() {InitAsDefaultInstance24616,873179
SigmoidParameter::SigmoidParameter(const SigmoidParameter& from)SigmoidParameter24619,873231
void SigmoidParameter::SharedCtor() {SharedCtor24625,873370
SigmoidParameter::~SigmoidParameter() {~SigmoidParameter24631,873494
void SigmoidParameter::SharedDtor() {SharedDtor24635,873553
void SigmoidParameter::SetCachedSize(int size) const {SetCachedSize24640,873633
const ::google::protobuf::Descriptor* SigmoidParameter::descriptor() {descriptor24645,873794
const SigmoidParameter& SigmoidParameter::default_instance() {default_instance24650,873943
SigmoidParameter* SigmoidParameter::default_instance_ = NULL;default_instance_24655,874105
SigmoidParameter* SigmoidParameter::New() const {New24657,874168
void SigmoidParameter::Clear() {Clear24661,874252
bool SigmoidParameter::MergePartialFromCodedStream(MergePartialFromCodedStream24669,874443
#define DO_(DO_24671,874550
#undef DO_DO_24708,876011
void SigmoidParameter::SerializeWithCachedSizes(SerializeWithCachedSizes24711,876025
::google::protobuf::uint8* SigmoidParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray24725,876483
int SigmoidParameter::ByteSize() const {ByteSize24740,877003
void SigmoidParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom24762,877627
void SigmoidParameter::MergeFrom(const SigmoidParameter& from) {MergeFrom24774,878004
void SigmoidParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom24784,878293
void SigmoidParameter::CopyFrom(const SigmoidParameter& from) {CopyFrom24790,878430
bool SigmoidParameter::IsInitialized() const {IsInitialized24796,878556
void SigmoidParameter::Swap(SigmoidParameter* other) {Swap24801,878622
::google::protobuf::Metadata SigmoidParameter::GetMetadata() const {GetMetadata24810,878904
const int SliceParameter::kAxisFieldNumber;kAxisFieldNumber24822,879270
const int SliceParameter::kSlicePointFieldNumber;kSlicePointFieldNumber24823,879314
const int SliceParameter::kSliceDimFieldNumber;kSliceDimFieldNumber24824,879364
SliceParameter::SliceParameter()SliceParameter24827,879434
void SliceParameter::InitAsDefaultInstance() {InitAsDefaultInstance24832,879522
SliceParameter::SliceParameter(const SliceParameter& from)SliceParameter24835,879572
void SliceParameter::SharedCtor() {SharedCtor24841,879705
SliceParameter::~SliceParameter() {~SliceParameter24848,879844
void SliceParameter::SharedDtor() {SharedDtor24852,879899
void SliceParameter::SetCachedSize(int size) const {SetCachedSize24857,879977
const ::google::protobuf::Descriptor* SliceParameter::descriptor() {descriptor24862,880136
const SliceParameter& SliceParameter::default_instance() {default_instance24867,880281
SliceParameter* SliceParameter::default_instance_ = NULL;default_instance_24872,880439
SliceParameter* SliceParameter::New() const {New24874,880498
void SliceParameter::Clear() {Clear24878,880576
bool SliceParameter::MergePartialFromCodedStream(MergePartialFromCodedStream24888,880808
#define DO_(DO_24890,880913
#undef DO_DO_24960,883936
void SliceParameter::SerializeWithCachedSizes(SerializeWithCachedSizes24963,883950
::google::protobuf::uint8* SliceParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray24987,884737
int SliceParameter::ByteSize() const {ByteSize25012,885618
void SliceParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom25052,886722
void SliceParameter::MergeFrom(const SliceParameter& from) {MergeFrom25064,887093
void SliceParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom25078,887494
void SliceParameter::CopyFrom(const SliceParameter& from) {CopyFrom25084,887629
bool SliceParameter::IsInitialized() const {IsInitialized25090,887751
void SliceParameter::Swap(SliceParameter* other) {Swap25095,887815
::google::protobuf::Metadata SliceParameter::GetMetadata() const {GetMetadata25106,888180
const ::google::protobuf::EnumDescriptor* SoftmaxParameter_Engine_descriptor() {SoftmaxParameter_Engine_descriptor25117,888523
bool SoftmaxParameter_Engine_IsValid(int value) {SoftmaxParameter_Engine_IsValid25121,888688
const SoftmaxParameter_Engine SoftmaxParameter::DEFAULT;DEFAULT25133,888868
const SoftmaxParameter_Engine SoftmaxParameter::CAFFE;CAFFE25134,888925
const SoftmaxParameter_Engine SoftmaxParameter::CUDNN;CUDNN25135,888980
const SoftmaxParameter_Engine SoftmaxParameter::Engine_MIN;Engine_MIN25136,889035
const SoftmaxParameter_Engine SoftmaxParameter::Engine_MAX;Engine_MAX25137,889095
const int SoftmaxParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE25138,889155
const int SoftmaxParameter::kEngineFieldNumber;kEngineFieldNumber25141,889238
const int SoftmaxParameter::kAxisFieldNumber;kAxisFieldNumber25142,889286
SoftmaxParameter::SoftmaxParameter()SoftmaxParameter25145,889354
void SoftmaxParameter::InitAsDefaultInstance() {InitAsDefaultInstance25150,889446
SoftmaxParameter::SoftmaxParameter(const SoftmaxParameter& from)SoftmaxParameter25153,889498
void SoftmaxParameter::SharedCtor() {SharedCtor25159,889637
SoftmaxParameter::~SoftmaxParameter() {~SoftmaxParameter25166,889774
void SoftmaxParameter::SharedDtor() {SharedDtor25170,889833
void SoftmaxParameter::SetCachedSize(int size) const {SetCachedSize25175,889913
const ::google::protobuf::Descriptor* SoftmaxParameter::descriptor() {descriptor25180,890074
const SoftmaxParameter& SoftmaxParameter::default_instance() {default_instance25185,890223
SoftmaxParameter* SoftmaxParameter::default_instance_ = NULL;default_instance_25190,890385
SoftmaxParameter* SoftmaxParameter::New() const {New25192,890448
void SoftmaxParameter::Clear() {Clear25196,890532
bool SoftmaxParameter::MergePartialFromCodedStream(MergePartialFromCodedStream25205,890738
#define DO_(DO_25207,890845
#undef DO_DO_25260,892930
void SoftmaxParameter::SerializeWithCachedSizes(SerializeWithCachedSizes25263,892944
::google::protobuf::uint8* SoftmaxParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray25282,893558
int SoftmaxParameter::ByteSize() const {ByteSize25302,894250
void SoftmaxParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom25331,895063
void SoftmaxParameter::MergeFrom(const SoftmaxParameter& from) {MergeFrom25343,895440
void SoftmaxParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom25356,895791
void SoftmaxParameter::CopyFrom(const SoftmaxParameter& from) {CopyFrom25362,895928
bool SoftmaxParameter::IsInitialized() const {IsInitialized25368,896054
void SoftmaxParameter::Swap(SoftmaxParameter* other) {Swap25373,896120
::google::protobuf::Metadata SoftmaxParameter::GetMetadata() const {GetMetadata25383,896438
const ::google::protobuf::EnumDescriptor* TanHParameter_Engine_descriptor() {TanHParameter_Engine_descriptor25394,896787
bool TanHParameter_Engine_IsValid(int value) {TanHParameter_Engine_IsValid25398,896946
const TanHParameter_Engine TanHParameter::DEFAULT;DEFAULT25410,897123
const TanHParameter_Engine TanHParameter::CAFFE;CAFFE25411,897174
const TanHParameter_Engine TanHParameter::CUDNN;CUDNN25412,897223
const TanHParameter_Engine TanHParameter::Engine_MIN;Engine_MIN25413,897272
const TanHParameter_Engine TanHParameter::Engine_MAX;Engine_MAX25414,897326
const int TanHParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE25415,897380
const int TanHParameter::kEngineFieldNumber;kEngineFieldNumber25418,897460
TanHParameter::TanHParameter()TanHParameter25421,897527
void TanHParameter::InitAsDefaultInstance() {InitAsDefaultInstance25426,897613
TanHParameter::TanHParameter(const TanHParameter& from)TanHParameter25429,897662
void TanHParameter::SharedCtor() {SharedCtor25435,897792
TanHParameter::~TanHParameter() {~TanHParameter25441,897913
void TanHParameter::SharedDtor() {SharedDtor25445,897966
void TanHParameter::SetCachedSize(int size) const {SetCachedSize25450,898043
const ::google::protobuf::Descriptor* TanHParameter::descriptor() {descriptor25455,898201
const TanHParameter& TanHParameter::default_instance() {default_instance25460,898344
TanHParameter* TanHParameter::default_instance_ = NULL;default_instance_25465,898500
TanHParameter* TanHParameter::New() const {New25467,898557
void TanHParameter::Clear() {Clear25471,898632
bool TanHParameter::MergePartialFromCodedStream(MergePartialFromCodedStream25479,898820
#define DO_(DO_25481,898924
#undef DO_DO_25518,900376
void TanHParameter::SerializeWithCachedSizes(SerializeWithCachedSizes25521,900390
::google::protobuf::uint8* TanHParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray25535,900842
int TanHParameter::ByteSize() const {ByteSize25550,901356
void TanHParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom25572,901974
void TanHParameter::MergeFrom(const TanHParameter& from) {MergeFrom25584,902342
void TanHParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom25594,902625
void TanHParameter::CopyFrom(const TanHParameter& from) {CopyFrom25600,902759
bool TanHParameter::IsInitialized() const {IsInitialized25606,902879
void TanHParameter::Swap(TanHParameter* other) {Swap25611,902942
::google::protobuf::Metadata TanHParameter::GetMetadata() const {GetMetadata25620,903218
const int TileParameter::kAxisFieldNumber;kAxisFieldNumber25632,903575
const int TileParameter::kTilesFieldNumber;kTilesFieldNumber25633,903618
TileParameter::TileParameter()TileParameter25636,903684
void TileParameter::InitAsDefaultInstance() {InitAsDefaultInstance25641,903770
TileParameter::TileParameter(const TileParameter& from)TileParameter25644,903819
void TileParameter::SharedCtor() {SharedCtor25650,903949
TileParameter::~TileParameter() {~TileParameter25657,904082
void TileParameter::SharedDtor() {SharedDtor25661,904135
void TileParameter::SetCachedSize(int size) const {SetCachedSize25666,904212
const ::google::protobuf::Descriptor* TileParameter::descriptor() {descriptor25671,904370
const TileParameter& TileParameter::default_instance() {default_instance25676,904513
TileParameter* TileParameter::default_instance_ = NULL;default_instance_25681,904669
TileParameter* TileParameter::New() const {New25683,904726
void TileParameter::Clear() {Clear25687,904801
bool TileParameter::MergePartialFromCodedStream(MergePartialFromCodedStream25696,905003
#define DO_(DO_25698,905107
#undef DO_DO_25746,906943
void TileParameter::SerializeWithCachedSizes(SerializeWithCachedSizes25749,906957
::google::protobuf::uint8* TileParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray25767,907514
int TileParameter::ByteSize() const {ByteSize25786,908149
void TileParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom25816,908923
void TileParameter::MergeFrom(const TileParameter& from) {MergeFrom25828,909291
void TileParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom25841,909633
void TileParameter::CopyFrom(const TileParameter& from) {CopyFrom25847,909767
bool TileParameter::IsInitialized() const {IsInitialized25853,909887
void TileParameter::Swap(TileParameter* other) {Swap25858,909950
::google::protobuf::Metadata TileParameter::GetMetadata() const {GetMetadata25868,910260
const int ThresholdParameter::kThresholdFieldNumber;kThresholdFieldNumber25880,910617
ThresholdParameter::ThresholdParameter()ThresholdParameter25883,910692
void ThresholdParameter::InitAsDefaultInstance() {InitAsDefaultInstance25888,910788
ThresholdParameter::ThresholdParameter(const ThresholdParameter& from)ThresholdParameter25891,910842
void ThresholdParameter::SharedCtor() {SharedCtor25897,910987
ThresholdParameter::~ThresholdParameter() {~ThresholdParameter25903,911116
void ThresholdParameter::SharedDtor() {SharedDtor25907,911179
void ThresholdParameter::SetCachedSize(int size) const {SetCachedSize25912,911261
const ::google::protobuf::Descriptor* ThresholdParameter::descriptor() {descriptor25917,911424
const ThresholdParameter& ThresholdParameter::default_instance() {default_instance25922,911577
ThresholdParameter* ThresholdParameter::default_instance_ = NULL;default_instance_25927,911743
ThresholdParameter* ThresholdParameter::New() const {New25929,911810
void ThresholdParameter::Clear() {Clear25933,911900
bool ThresholdParameter::MergePartialFromCodedStream(MergePartialFromCodedStream25941,912096
#define DO_(DO_25943,912205
#undef DO_DO_25975,913422
void ThresholdParameter::SerializeWithCachedSizes(SerializeWithCachedSizes25978,913436
::google::protobuf::uint8* ThresholdParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray25991,913868
int ThresholdParameter::ByteSize() const {ByteSize26005,914362
void ThresholdParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom26026,914886
void ThresholdParameter::MergeFrom(const ThresholdParameter& from) {MergeFrom26038,915269
void ThresholdParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom26048,915571
void ThresholdParameter::CopyFrom(const ThresholdParameter& from) {CopyFrom26054,915710
bool ThresholdParameter::IsInitialized() const {IsInitialized26060,915840
void ThresholdParameter::Swap(ThresholdParameter* other) {Swap26065,915908
::google::protobuf::Metadata ThresholdParameter::GetMetadata() const {GetMetadata26074,916200
::std::string* WindowDataParameter::_default_crop_mode_ = NULL;_default_crop_mode_26085,916555
const int WindowDataParameter::kSourceFieldNumber;kSourceFieldNumber26087,916636
const int WindowDataParameter::kScaleFieldNumber;kScaleFieldNumber26088,916687
const int WindowDataParameter::kMeanFileFieldNumber;kMeanFileFieldNumber26089,916737
const int WindowDataParameter::kBatchSizeFieldNumber;kBatchSizeFieldNumber26090,916790
const int WindowDataParameter::kCropSizeFieldNumber;kCropSizeFieldNumber26091,916844
const int WindowDataParameter::kMirrorFieldNumber;kMirrorFieldNumber26092,916897
const int WindowDataParameter::kFgThresholdFieldNumber;kFgThresholdFieldNumber26093,916948
const int WindowDataParameter::kBgThresholdFieldNumber;kBgThresholdFieldNumber26094,917004
const int WindowDataParameter::kFgFractionFieldNumber;kFgFractionFieldNumber26095,917060
const int WindowDataParameter::kContextPadFieldNumber;kContextPadFieldNumber26096,917115
const int WindowDataParameter::kCropModeFieldNumber;kCropModeFieldNumber26097,917170
const int WindowDataParameter::kCacheImagesFieldNumber;kCacheImagesFieldNumber26098,917223
const int WindowDataParameter::kRootFolderFieldNumber;kRootFolderFieldNumber26099,917279
WindowDataParameter::WindowDataParameter()WindowDataParameter26102,917356
void WindowDataParameter::InitAsDefaultInstance() {InitAsDefaultInstance26107,917454
WindowDataParameter::WindowDataParameter(const WindowDataParameter& from)WindowDataParameter26110,917509
void WindowDataParameter::SharedCtor() {SharedCtor26116,917657
WindowDataParameter::~WindowDataParameter() {~WindowDataParameter26134,918290
void WindowDataParameter::SharedDtor() {SharedDtor26138,918355
void WindowDataParameter::SetCachedSize(int size) const {SetCachedSize26155,918788
const ::google::protobuf::Descriptor* WindowDataParameter::descriptor() {descriptor26160,918952
const WindowDataParameter& WindowDataParameter::default_instance() {default_instance26165,919107
WindowDataParameter* WindowDataParameter::default_instance_ = NULL;default_instance_26170,919275
WindowDataParameter* WindowDataParameter::New() const {New26172,919344
void WindowDataParameter::Clear() {Clear26176,919437
bool WindowDataParameter::MergePartialFromCodedStream(MergePartialFromCodedStream26214,920434
#define DO_(DO_26216,920544
#undef DO_DO_26444,929802
void WindowDataParameter::SerializeWithCachedSizes(SerializeWithCachedSizes26447,929816
::google::protobuf::uint8* WindowDataParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray26536,933078
int WindowDataParameter::ByteSize() const {ByteSize26630,936626
void WindowDataParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom26727,939202
void WindowDataParameter::MergeFrom(const WindowDataParameter& from) {MergeFrom26739,939588
void WindowDataParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom26787,940893
void WindowDataParameter::CopyFrom(const WindowDataParameter& from) {CopyFrom26793,941033
bool WindowDataParameter::IsInitialized() const {IsInitialized26799,941165
void WindowDataParameter::Swap(WindowDataParameter* other) {Swap26804,941234
::google::protobuf::Metadata WindowDataParameter::GetMetadata() const {GetMetadata26825,942092
const ::google::protobuf::EnumDescriptor* SPPParameter_PoolMethod_descriptor() {SPPParameter_PoolMethod_descriptor26836,942450
bool SPPParameter_PoolMethod_IsValid(int value) {SPPParameter_PoolMethod_IsValid26840,942615
const SPPParameter_PoolMethod SPPParameter::MAX;MAX26852,942795
const SPPParameter_PoolMethod SPPParameter::AVE;AVE26853,942844
const SPPParameter_PoolMethod SPPParameter::STOCHASTIC;STOCHASTIC26854,942893
const SPPParameter_PoolMethod SPPParameter::PoolMethod_MIN;PoolMethod_MIN26855,942949
const SPPParameter_PoolMethod SPPParameter::PoolMethod_MAX;PoolMethod_MAX26856,943009
const int SPPParameter::PoolMethod_ARRAYSIZE;PoolMethod_ARRAYSIZE26857,943069
const ::google::protobuf::EnumDescriptor* SPPParameter_Engine_descriptor() {SPPParameter_Engine_descriptor26859,943135
bool SPPParameter_Engine_IsValid(int value) {SPPParameter_Engine_IsValid26863,943292
const SPPParameter_Engine SPPParameter::DEFAULT;DEFAULT26875,943468
const SPPParameter_Engine SPPParameter::CAFFE;CAFFE26876,943517
const SPPParameter_Engine SPPParameter::CUDNN;CUDNN26877,943564
const SPPParameter_Engine SPPParameter::Engine_MIN;Engine_MIN26878,943611
const SPPParameter_Engine SPPParameter::Engine_MAX;Engine_MAX26879,943663
const int SPPParameter::Engine_ARRAYSIZE;Engine_ARRAYSIZE26880,943715
const int SPPParameter::kPyramidHeightFieldNumber;kPyramidHeightFieldNumber26883,943794
const int SPPParameter::kPoolFieldNumber;kPoolFieldNumber26884,943845
const int SPPParameter::kEngineFieldNumber;kEngineFieldNumber26885,943887
SPPParameter::SPPParameter()SPPParameter26888,943953
void SPPParameter::InitAsDefaultInstance() {InitAsDefaultInstance26893,944037
SPPParameter::SPPParameter(const SPPParameter& from)SPPParameter26896,944085
void SPPParameter::SharedCtor() {SharedCtor26902,944212
SPPParameter::~SPPParameter() {~SPPParameter26910,944369
void SPPParameter::SharedDtor() {SharedDtor26914,944420
void SPPParameter::SetCachedSize(int size) const {SetCachedSize26919,944496
const ::google::protobuf::Descriptor* SPPParameter::descriptor() {descriptor26924,944653
const SPPParameter& SPPParameter::default_instance() {default_instance26929,944794
SPPParameter* SPPParameter::default_instance_ = NULL;default_instance_26934,944948
SPPParameter* SPPParameter::New() const {New26936,945003
void SPPParameter::Clear() {Clear26940,945075
bool SPPParameter::MergePartialFromCodedStream(MergePartialFromCodedStream26950,945303
#define DO_(DO_26952,945406
#undef DO_DO_27026,948358
void SPPParameter::SerializeWithCachedSizes(SerializeWithCachedSizes27029,948372
::google::protobuf::uint8* SPPParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray27054,949185
int SPPParameter::ByteSize() const {ByteSize27080,950092
void SPPParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom27115,951119
void SPPParameter::MergeFrom(const SPPParameter& from) {MergeFrom27127,951484
void SPPParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom27143,951919
void SPPParameter::CopyFrom(const SPPParameter& from) {CopyFrom27149,952052
bool SPPParameter::IsInitialized() const {IsInitialized27155,952170
void SPPParameter::Swap(SPPParameter* other) {Swap27160,952232
::google::protobuf::Metadata SPPParameter::GetMetadata() const {GetMetadata27171,952598
const ::google::protobuf::EnumDescriptor* V1LayerParameter_LayerType_descriptor() {V1LayerParameter_LayerType_descriptor27182,952935
bool V1LayerParameter_LayerType_IsValid(int value) {V1LayerParameter_LayerType_IsValid27186,953106
const V1LayerParameter_LayerType V1LayerParameter::NONE;NONE27235,953763
const V1LayerParameter_LayerType V1LayerParameter::ABSVAL;ABSVAL27236,953820
const V1LayerParameter_LayerType V1LayerParameter::ACCURACY;ACCURACY27237,953879
const V1LayerParameter_LayerType V1LayerParameter::ARGMAX;ARGMAX27238,953940
const V1LayerParameter_LayerType V1LayerParameter::BNLL;BNLL27239,953999
const V1LayerParameter_LayerType V1LayerParameter::CONCAT;CONCAT27240,954056
const V1LayerParameter_LayerType V1LayerParameter::CONTRASTIVE_LOSS;CONTRASTIVE_LOSS27241,954115
const V1LayerParameter_LayerType V1LayerParameter::CONVOLUTION;CONVOLUTION27242,954184
const V1LayerParameter_LayerType V1LayerParameter::DATA;DATA27243,954248
const V1LayerParameter_LayerType V1LayerParameter::DECONVOLUTION;DECONVOLUTION27244,954305
const V1LayerParameter_LayerType V1LayerParameter::DROPOUT;DROPOUT27245,954371
const V1LayerParameter_LayerType V1LayerParameter::DUMMY_DATA;DUMMY_DATA27246,954431
const V1LayerParameter_LayerType V1LayerParameter::EUCLIDEAN_LOSS;EUCLIDEAN_LOSS27247,954494
const V1LayerParameter_LayerType V1LayerParameter::ELTWISE;ELTWISE27248,954561
const V1LayerParameter_LayerType V1LayerParameter::EXP;EXP27249,954621
const V1LayerParameter_LayerType V1LayerParameter::FLATTEN;FLATTEN27250,954677
const V1LayerParameter_LayerType V1LayerParameter::HDF5_DATA;HDF5_DATA27251,954737
const V1LayerParameter_LayerType V1LayerParameter::HDF5_OUTPUT;HDF5_OUTPUT27252,954799
const V1LayerParameter_LayerType V1LayerParameter::HINGE_LOSS;HINGE_LOSS27253,954863
const V1LayerParameter_LayerType V1LayerParameter::IM2COL;IM2COL27254,954926
const V1LayerParameter_LayerType V1LayerParameter::IMAGE_DATA;IMAGE_DATA27255,954985
const V1LayerParameter_LayerType V1LayerParameter::INFOGAIN_LOSS;INFOGAIN_LOSS27256,955048
const V1LayerParameter_LayerType V1LayerParameter::INNER_PRODUCT;INNER_PRODUCT27257,955114
const V1LayerParameter_LayerType V1LayerParameter::LRN;LRN27258,955180
const V1LayerParameter_LayerType V1LayerParameter::MEMORY_DATA;MEMORY_DATA27259,955236
const V1LayerParameter_LayerType V1LayerParameter::MULTINOMIAL_LOGISTIC_LOSS;MULTINOMIAL_LOGISTIC_LOSS27260,955300
const V1LayerParameter_LayerType V1LayerParameter::MVN;MVN27261,955378
const V1LayerParameter_LayerType V1LayerParameter::POOLING;POOLING27262,955434
const V1LayerParameter_LayerType V1LayerParameter::POWER;POWER27263,955494
const V1LayerParameter_LayerType V1LayerParameter::RELU;RELU27264,955552
const V1LayerParameter_LayerType V1LayerParameter::SIGMOID;SIGMOID27265,955609
const V1LayerParameter_LayerType V1LayerParameter::SIGMOID_CROSS_ENTROPY_LOSS;SIGMOID_CROSS_ENTROPY_LOSS27266,955669
const V1LayerParameter_LayerType V1LayerParameter::SILENCE;SILENCE27267,955748
const V1LayerParameter_LayerType V1LayerParameter::SOFTMAX;SOFTMAX27268,955808
const V1LayerParameter_LayerType V1LayerParameter::SOFTMAX_LOSS;SOFTMAX_LOSS27269,955868
const V1LayerParameter_LayerType V1LayerParameter::SPLIT;SPLIT27270,955933
const V1LayerParameter_LayerType V1LayerParameter::SLICE;SLICE27271,955991
const V1LayerParameter_LayerType V1LayerParameter::TANH;TANH27272,956049
const V1LayerParameter_LayerType V1LayerParameter::WINDOW_DATA;WINDOW_DATA27273,956106
const V1LayerParameter_LayerType V1LayerParameter::THRESHOLD;THRESHOLD27274,956170
const V1LayerParameter_LayerType V1LayerParameter::LayerType_MIN;LayerType_MIN27275,956232
const V1LayerParameter_LayerType V1LayerParameter::LayerType_MAX;LayerType_MAX27276,956298
const int V1LayerParameter::LayerType_ARRAYSIZE;LayerType_ARRAYSIZE27277,956364
const ::google::protobuf::EnumDescriptor* V1LayerParameter_DimCheckMode_descriptor() {V1LayerParameter_DimCheckMode_descriptor27279,956433
bool V1LayerParameter_DimCheckMode_IsValid(int value) {V1LayerParameter_DimCheckMode_IsValid27283,956610
const V1LayerParameter_DimCheckMode V1LayerParameter::STRICT;STRICT27294,956784
const V1LayerParameter_DimCheckMode V1LayerParameter::PERMISSIVE;PERMISSIVE27295,956846
const V1LayerParameter_DimCheckMode V1LayerParameter::DimCheckMode_MIN;DimCheckMode_MIN27296,956912
const V1LayerParameter_DimCheckMode V1LayerParameter::DimCheckMode_MAX;DimCheckMode_MAX27297,956984
const int V1LayerParameter::DimCheckMode_ARRAYSIZE;DimCheckMode_ARRAYSIZE27298,957056
const int V1LayerParameter::kBottomFieldNumber;kBottomFieldNumber27301,957145
const int V1LayerParameter::kTopFieldNumber;kTopFieldNumber27302,957193
const int V1LayerParameter::kNameFieldNumber;kNameFieldNumber27303,957238
const int V1LayerParameter::kIncludeFieldNumber;kIncludeFieldNumber27304,957284
const int V1LayerParameter::kExcludeFieldNumber;kExcludeFieldNumber27305,957333
const int V1LayerParameter::kTypeFieldNumber;kTypeFieldNumber27306,957382
const int V1LayerParameter::kBlobsFieldNumber;kBlobsFieldNumber27307,957428
const int V1LayerParameter::kParamFieldNumber;kParamFieldNumber27308,957475
const int V1LayerParameter::kBlobShareModeFieldNumber;kBlobShareModeFieldNumber27309,957522
const int V1LayerParameter::kBlobsLrFieldNumber;kBlobsLrFieldNumber27310,957577
const int V1LayerParameter::kWeightDecayFieldNumber;kWeightDecayFieldNumber27311,957626
const int V1LayerParameter::kLossWeightFieldNumber;kLossWeightFieldNumber27312,957679
const int V1LayerParameter::kAccuracyParamFieldNumber;kAccuracyParamFieldNumber27313,957731
const int V1LayerParameter::kArgmaxParamFieldNumber;kArgmaxParamFieldNumber27314,957786
const int V1LayerParameter::kConcatParamFieldNumber;kConcatParamFieldNumber27315,957839
const int V1LayerParameter::kContrastiveLossParamFieldNumber;kContrastiveLossParamFieldNumber27316,957892
const int V1LayerParameter::kConvolutionParamFieldNumber;kConvolutionParamFieldNumber27317,957954
const int V1LayerParameter::kDataParamFieldNumber;kDataParamFieldNumber27318,958012
const int V1LayerParameter::kDropoutParamFieldNumber;kDropoutParamFieldNumber27319,958063
const int V1LayerParameter::kDummyDataParamFieldNumber;kDummyDataParamFieldNumber27320,958117
const int V1LayerParameter::kEltwiseParamFieldNumber;kEltwiseParamFieldNumber27321,958173
const int V1LayerParameter::kExpParamFieldNumber;kExpParamFieldNumber27322,958227
const int V1LayerParameter::kHdf5DataParamFieldNumber;kHdf5DataParamFieldNumber27323,958277
const int V1LayerParameter::kHdf5OutputParamFieldNumber;kHdf5OutputParamFieldNumber27324,958332
const int V1LayerParameter::kHingeLossParamFieldNumber;kHingeLossParamFieldNumber27325,958389
const int V1LayerParameter::kImageDataParamFieldNumber;kImageDataParamFieldNumber27326,958445
const int V1LayerParameter::kInfogainLossParamFieldNumber;kInfogainLossParamFieldNumber27327,958501
const int V1LayerParameter::kInnerProductParamFieldNumber;kInnerProductParamFieldNumber27328,958560
const int V1LayerParameter::kLrnParamFieldNumber;kLrnParamFieldNumber27329,958619
const int V1LayerParameter::kMemoryDataParamFieldNumber;kMemoryDataParamFieldNumber27330,958669
const int V1LayerParameter::kMvnParamFieldNumber;kMvnParamFieldNumber27331,958726
const int V1LayerParameter::kPoolingParamFieldNumber;kPoolingParamFieldNumber27332,958776
const int V1LayerParameter::kPowerParamFieldNumber;kPowerParamFieldNumber27333,958830
const int V1LayerParameter::kReluParamFieldNumber;kReluParamFieldNumber27334,958882
const int V1LayerParameter::kSigmoidParamFieldNumber;kSigmoidParamFieldNumber27335,958933
const int V1LayerParameter::kSoftmaxParamFieldNumber;kSoftmaxParamFieldNumber27336,958987
const int V1LayerParameter::kSliceParamFieldNumber;kSliceParamFieldNumber27337,959041
const int V1LayerParameter::kTanhParamFieldNumber;kTanhParamFieldNumber27338,959093
const int V1LayerParameter::kThresholdParamFieldNumber;kThresholdParamFieldNumber27339,959144
const int V1LayerParameter::kWindowDataParamFieldNumber;kWindowDataParamFieldNumber27340,959200
const int V1LayerParameter::kTransformParamFieldNumber;kTransformParamFieldNumber27341,959257
const int V1LayerParameter::kLossParamFieldNumber;kLossParamFieldNumber27342,959313
const int V1LayerParameter::kLayerFieldNumber;kLayerFieldNumber27343,959364
V1LayerParameter::V1LayerParameter()V1LayerParameter27346,959433
void V1LayerParameter::InitAsDefaultInstance() {InitAsDefaultInstance27351,959525
V1LayerParameter::V1LayerParameter(const V1LayerParameter& from)V1LayerParameter27385,962976
void V1LayerParameter::SharedCtor() {SharedCtor27391,963115
V1LayerParameter::~V1LayerParameter() {~V1LayerParameter27429,964111
void V1LayerParameter::SharedDtor() {SharedDtor27433,964170
void V1LayerParameter::SetCachedSize(int size) const {SetCachedSize27472,965186
const ::google::protobuf::Descriptor* V1LayerParameter::descriptor() {descriptor27477,965347
const V1LayerParameter& V1LayerParameter::default_instance() {default_instance27482,965496
V1LayerParameter* V1LayerParameter::default_instance_ = NULL;default_instance_27487,965658
V1LayerParameter* V1LayerParameter::New() const {New27489,965721
void V1LayerParameter::Clear() {Clear27493,965805
bool V1LayerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream27619,970485
#define DO_(DO_27621,970592
#undef DO_DO_28306,998924
void V1LayerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes28309,998938
::google::protobuf::uint8* V1LayerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray28587,1008813
int V1LayerParameter::ByteSize() const {ByteSize28901,1019652
void V1LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom29233,1030288
void V1LayerParameter::MergeFrom(const V1LayerParameter& from) {MergeFrom29245,1030665
void V1LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom29371,1035889
void V1LayerParameter::CopyFrom(const V1LayerParameter& from) {CopyFrom29377,1036026
bool V1LayerParameter::IsInitialized() const {IsInitialized29383,1036152
void V1LayerParameter::Swap(V1LayerParameter* other) {Swap29388,1036218
::google::protobuf::Metadata V1LayerParameter::GetMetadata() const {GetMetadata29440,1038676
const ::google::protobuf::EnumDescriptor* V0LayerParameter_PoolMethod_descriptor() {V0LayerParameter_PoolMethod_descriptor29451,1039025
bool V0LayerParameter_PoolMethod_IsValid(int value) {V0LayerParameter_PoolMethod_IsValid29455,1039198
const V0LayerParameter_PoolMethod V0LayerParameter::MAX;MAX29467,1039382
const V0LayerParameter_PoolMethod V0LayerParameter::AVE;AVE29468,1039439
const V0LayerParameter_PoolMethod V0LayerParameter::STOCHASTIC;STOCHASTIC29469,1039496
const V0LayerParameter_PoolMethod V0LayerParameter::PoolMethod_MIN;PoolMethod_MIN29470,1039560
const V0LayerParameter_PoolMethod V0LayerParameter::PoolMethod_MAX;PoolMethod_MAX29471,1039628
const int V0LayerParameter::PoolMethod_ARRAYSIZE;PoolMethod_ARRAYSIZE29472,1039696
::std::string* V0LayerParameter::_default_det_crop_mode_ = NULL;_default_det_crop_mode_29474,1039766
const int V0LayerParameter::kNameFieldNumber;kNameFieldNumber29476,1039848
const int V0LayerParameter::kTypeFieldNumber;kTypeFieldNumber29477,1039894
const int V0LayerParameter::kNumOutputFieldNumber;kNumOutputFieldNumber29478,1039940
const int V0LayerParameter::kBiastermFieldNumber;kBiastermFieldNumber29479,1039991
const int V0LayerParameter::kWeightFillerFieldNumber;kWeightFillerFieldNumber29480,1040041
const int V0LayerParameter::kBiasFillerFieldNumber;kBiasFillerFieldNumber29481,1040095
const int V0LayerParameter::kPadFieldNumber;kPadFieldNumber29482,1040147
const int V0LayerParameter::kKernelsizeFieldNumber;kKernelsizeFieldNumber29483,1040192
const int V0LayerParameter::kGroupFieldNumber;kGroupFieldNumber29484,1040244
const int V0LayerParameter::kStrideFieldNumber;kStrideFieldNumber29485,1040291
const int V0LayerParameter::kPoolFieldNumber;kPoolFieldNumber29486,1040339
const int V0LayerParameter::kDropoutRatioFieldNumber;kDropoutRatioFieldNumber29487,1040385
const int V0LayerParameter::kLocalSizeFieldNumber;kLocalSizeFieldNumber29488,1040439
const int V0LayerParameter::kAlphaFieldNumber;kAlphaFieldNumber29489,1040490
const int V0LayerParameter::kBetaFieldNumber;kBetaFieldNumber29490,1040537
const int V0LayerParameter::kKFieldNumber;kKFieldNumber29491,1040583
const int V0LayerParameter::kSourceFieldNumber;kSourceFieldNumber29492,1040626
const int V0LayerParameter::kScaleFieldNumber;kScaleFieldNumber29493,1040674
const int V0LayerParameter::kMeanfileFieldNumber;kMeanfileFieldNumber29494,1040721
const int V0LayerParameter::kBatchsizeFieldNumber;kBatchsizeFieldNumber29495,1040771
const int V0LayerParameter::kCropsizeFieldNumber;kCropsizeFieldNumber29496,1040822
const int V0LayerParameter::kMirrorFieldNumber;kMirrorFieldNumber29497,1040872
const int V0LayerParameter::kBlobsFieldNumber;kBlobsFieldNumber29498,1040920
const int V0LayerParameter::kBlobsLrFieldNumber;kBlobsLrFieldNumber29499,1040967
const int V0LayerParameter::kWeightDecayFieldNumber;kWeightDecayFieldNumber29500,1041016
const int V0LayerParameter::kRandSkipFieldNumber;kRandSkipFieldNumber29501,1041069
const int V0LayerParameter::kDetFgThresholdFieldNumber;kDetFgThresholdFieldNumber29502,1041119
const int V0LayerParameter::kDetBgThresholdFieldNumber;kDetBgThresholdFieldNumber29503,1041175
const int V0LayerParameter::kDetFgFractionFieldNumber;kDetFgFractionFieldNumber29504,1041231
const int V0LayerParameter::kDetContextPadFieldNumber;kDetContextPadFieldNumber29505,1041286
const int V0LayerParameter::kDetCropModeFieldNumber;kDetCropModeFieldNumber29506,1041341
const int V0LayerParameter::kNewNumFieldNumber;kNewNumFieldNumber29507,1041394
const int V0LayerParameter::kNewChannelsFieldNumber;kNewChannelsFieldNumber29508,1041442
const int V0LayerParameter::kNewHeightFieldNumber;kNewHeightFieldNumber29509,1041495
const int V0LayerParameter::kNewWidthFieldNumber;kNewWidthFieldNumber29510,1041546
const int V0LayerParameter::kShuffleImagesFieldNumber;kShuffleImagesFieldNumber29511,1041596
const int V0LayerParameter::kConcatDimFieldNumber;kConcatDimFieldNumber29512,1041651
const int V0LayerParameter::kHdf5OutputParamFieldNumber;kHdf5OutputParamFieldNumber29513,1041702
V0LayerParameter::V0LayerParameter()V0LayerParameter29516,1041781
void V0LayerParameter::InitAsDefaultInstance() {InitAsDefaultInstance29521,1041873
V0LayerParameter::V0LayerParameter(const V0LayerParameter& from)V0LayerParameter29527,1042253
void V0LayerParameter::SharedCtor() {SharedCtor29533,1042392
V0LayerParameter::~V0LayerParameter() {~V0LayerParameter29573,1043515
void V0LayerParameter::SharedDtor() {SharedDtor29577,1043574
void V0LayerParameter::SetCachedSize(int size) const {SetCachedSize29600,1044167
const ::google::protobuf::Descriptor* V0LayerParameter::descriptor() {descriptor29605,1044328
const V0LayerParameter& V0LayerParameter::default_instance() {default_instance29610,1044477
V0LayerParameter* V0LayerParameter::default_instance_ = NULL;default_instance_29615,1044639
V0LayerParameter* V0LayerParameter::New() const {New29617,1044702
void V0LayerParameter::Clear() {Clear29621,1044786
bool V0LayerParameter::MergePartialFromCodedStream(MergePartialFromCodedStream29700,1046878
#define DO_(DO_29702,1046985
#undef DO_DO_30341,1073217
void V0LayerParameter::SerializeWithCachedSizes(SerializeWithCachedSizes30344,1073231
::google::protobuf::uint8* V0LayerParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray30569,1081142
int V0LayerParameter::ByteSize() const {ByteSize30804,1089771
void V0LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom31072,1097182
void V0LayerParameter::MergeFrom(const V0LayerParameter& from) {MergeFrom31084,1097559
void V0LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom31207,1100972
void V0LayerParameter::CopyFrom(const V0LayerParameter& from) {CopyFrom31213,1101109
bool V0LayerParameter::IsInitialized() const {IsInitialized31219,1101235
void V0LayerParameter::Swap(V0LayerParameter* other) {Swap31224,1101301
::google::protobuf::Metadata V0LayerParameter::GetMetadata() const {GetMetadata31271,1103326
const int PReLUParameter::kFillerFieldNumber;kFillerFieldNumber31283,1103692
const int PReLUParameter::kChannelSharedFieldNumber;kChannelSharedFieldNumber31284,1103738
PReLUParameter::PReLUParameter()PReLUParameter31287,1103813
void PReLUParameter::InitAsDefaultInstance() {InitAsDefaultInstance31292,1103901
PReLUParameter::PReLUParameter(const PReLUParameter& from)PReLUParameter31296,1104050
void PReLUParameter::SharedCtor() {SharedCtor31302,1104183
PReLUParameter::~PReLUParameter() {~PReLUParameter31309,1104335
void PReLUParameter::SharedDtor() {SharedDtor31313,1104390
void PReLUParameter::SetCachedSize(int size) const {SetCachedSize31319,1104488
const ::google::protobuf::Descriptor* PReLUParameter::descriptor() {descriptor31324,1104647
const PReLUParameter& PReLUParameter::default_instance() {default_instance31329,1104792
PReLUParameter* PReLUParameter::default_instance_ = NULL;default_instance_31334,1104950
PReLUParameter* PReLUParameter::New() const {New31336,1105009
void PReLUParameter::Clear() {Clear31340,1105087
bool PReLUParameter::MergePartialFromCodedStream(MergePartialFromCodedStream31351,1105389
#define DO_(DO_31353,1105494
#undef DO_DO_31399,1107267
void PReLUParameter::SerializeWithCachedSizes(SerializeWithCachedSizes31402,1107281
::google::protobuf::uint8* PReLUParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray31421,1107912
int PReLUParameter::ByteSize() const {ByteSize31442,1108627
void PReLUParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom31470,1109369
void PReLUParameter::MergeFrom(const PReLUParameter& from) {MergeFrom31482,1109740
void PReLUParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom31495,1110160
void PReLUParameter::CopyFrom(const PReLUParameter& from) {CopyFrom31501,1110295
bool PReLUParameter::IsInitialized() const {IsInitialized31507,1110417
void PReLUParameter::Swap(PReLUParameter* other) {Swap31512,1110481
::google::protobuf::Metadata PReLUParameter::GetMetadata() const {GetMetadata31522,1110815
const ::google::protobuf::EnumDescriptor* QuantizationParameter_RoundMethod_descriptor() {QuantizationParameter_RoundMethod_descriptor31533,1111158
bool QuantizationParameter_RoundMethod_IsValid(int value) {QuantizationParameter_RoundMethod_IsValid31537,1111343
const QuantizationParameter_RoundMethod QuantizationParameter::ROUND;ROUND31550,1111545
const QuantizationParameter_RoundMethod QuantizationParameter::FLOOR;FLOOR31551,1111615
const QuantizationParameter_RoundMethod QuantizationParameter::CEIL;CEIL31552,1111685
const QuantizationParameter_RoundMethod QuantizationParameter::TRUNC;TRUNC31553,1111754
const QuantizationParameter_RoundMethod QuantizationParameter::RoundMethod_MIN;RoundMethod_MIN31554,1111824
const QuantizationParameter_RoundMethod QuantizationParameter::RoundMethod_MAX;RoundMethod_MAX31555,1111904
const int QuantizationParameter::RoundMethod_ARRAYSIZE;RoundMethod_ARRAYSIZE31556,1111984
const ::google::protobuf::EnumDescriptor* QuantizationParameter_RoundStrategy_descriptor() {QuantizationParameter_RoundStrategy_descriptor31558,1112060
bool QuantizationParameter_RoundStrategy_IsValid(int value) {QuantizationParameter_RoundStrategy_IsValid31562,1112249
const QuantizationParameter_RoundStrategy QuantizationParameter::CONSERVATIVE;CONSERVATIVE31574,1112441
const QuantizationParameter_RoundStrategy QuantizationParameter::NEUTRAL;NEUTRAL31575,1112520
const QuantizationParameter_RoundStrategy QuantizationParameter::AGGRESSIVE;AGGRESSIVE31576,1112594
const QuantizationParameter_RoundStrategy QuantizationParameter::RoundStrategy_MIN;RoundStrategy_MIN31577,1112671
const QuantizationParameter_RoundStrategy QuantizationParameter::RoundStrategy_MAX;RoundStrategy_MAX31578,1112755
const int QuantizationParameter::RoundStrategy_ARRAYSIZE;RoundStrategy_ARRAYSIZE31579,1112839
const int QuantizationParameter::kRoundMethodFieldNumber;kRoundMethodFieldNumber31582,1112934
const int QuantizationParameter::kRoundStrategyFieldNumber;kRoundStrategyFieldNumber31583,1112992
const int QuantizationParameter::kBitWidthFieldNumber;kBitWidthFieldNumber31584,1113052
const int QuantizationParameter::kRangeFieldNumber;kRangeFieldNumber31585,1113107
QuantizationParameter::QuantizationParameter()QuantizationParameter31588,1113181
void QuantizationParameter::InitAsDefaultInstance() {InitAsDefaultInstance31593,1113283
QuantizationParameter::QuantizationParameter(const QuantizationParameter& from)QuantizationParameter31596,1113340
void QuantizationParameter::SharedCtor() {SharedCtor31602,1113494
QuantizationParameter::~QuantizationParameter() {~QuantizationParameter31610,1113670
void QuantizationParameter::SharedDtor() {SharedDtor31614,1113739
void QuantizationParameter::SetCachedSize(int size) const {SetCachedSize31619,1113824
const ::google::protobuf::Descriptor* QuantizationParameter::descriptor() {descriptor31624,1113990
const QuantizationParameter& QuantizationParameter::default_instance() {default_instance31629,1114149
QuantizationParameter* QuantizationParameter::default_instance_ = NULL;default_instance_31634,1114321
QuantizationParameter* QuantizationParameter::New() const {New31636,1114394
void QuantizationParameter::Clear() {Clear31640,1114493
bool QuantizationParameter::MergePartialFromCodedStream(MergePartialFromCodedStream31651,1114758
#define DO_(DO_31653,1114870
#undef DO_DO_31748,1119005
void QuantizationParameter::SerializeWithCachedSizes(SerializeWithCachedSizes31751,1119019
::google::protobuf::uint8* QuantizationParameter::SerializeWithCachedSizesToArray(SerializeWithCachedSizesToArray31786,1120351
int QuantizationParameter::ByteSize() const {ByteSize31826,1121894
void QuantizationParameter::MergeFrom(const ::google::protobuf::Message& from) {MergeFrom31875,1123413
void QuantizationParameter::MergeFrom(const QuantizationParameter& from) {MergeFrom31887,1123805
void QuantizationParameter::CopyFrom(const ::google::protobuf::Message& from) {CopyFrom31904,1124324
void QuantizationParameter::CopyFrom(const QuantizationParameter& from) {CopyFrom31910,1124466
bool QuantizationParameter::IsInitialized() const {IsInitialized31916,1124602
void QuantizationParameter::Swap(QuantizationParameter* other) {Swap31921,1124673
::google::protobuf::Metadata QuantizationParameter::GetMetadata() const {GetMetadata31933,1125112

build/src/caffe/proto/caffe.pb.h,436758
#define PROTOBUF_caffe_2eproto__INCLUDEDPROTOBUF_caffe_2eproto__INCLUDED5,125
namespace caffe {caffe30,1001
enum FillerParameter_VarianceNorm {FillerParameter_VarianceNorm100,2635
  FillerParameter_VarianceNorm_FAN_IN = 0,FillerParameter_VarianceNorm_FAN_IN101,2671
  FillerParameter_VarianceNorm_FAN_OUT = 1,FillerParameter_VarianceNorm_FAN_OUT102,2714
  FillerParameter_VarianceNorm_AVERAGE = 2FillerParameter_VarianceNorm_AVERAGE103,2758
const FillerParameter_VarianceNorm FillerParameter_VarianceNorm_VarianceNorm_MIN = FillerParameter_VarianceNorm_FAN_IN;FillerParameter_VarianceNorm_VarianceNorm_MIN106,2858
const FillerParameter_VarianceNorm FillerParameter_VarianceNorm_VarianceNorm_MAX = FillerParameter_VarianceNorm_AVERAGE;FillerParameter_VarianceNorm_VarianceNorm_MAX107,2978
const int FillerParameter_VarianceNorm_VarianceNorm_ARRAYSIZE = FillerParameter_VarianceNorm_VarianceNorm_MAX + 1;FillerParameter_VarianceNorm_VarianceNorm_ARRAYSIZE108,3099
inline const ::std::string& FillerParameter_VarianceNorm_Name(FillerParameter_VarianceNorm value) {FillerParameter_VarianceNorm_Name111,3300
inline bool FillerParameter_VarianceNorm_Parse(FillerParameter_VarianceNorm_Parse115,3508
enum SolverParameter_SnapshotFormat {SolverParameter_SnapshotFormat120,3774
  SolverParameter_SnapshotFormat_HDF5 = 0,SolverParameter_SnapshotFormat_HDF5121,3812
  SolverParameter_SnapshotFormat_BINARYPROTO = 1SolverParameter_SnapshotFormat_BINARYPROTO122,3855
const SolverParameter_SnapshotFormat SolverParameter_SnapshotFormat_SnapshotFormat_MIN = SolverParameter_SnapshotFormat_HDF5;SolverParameter_SnapshotFormat_SnapshotFormat_MIN125,3963
const SolverParameter_SnapshotFormat SolverParameter_SnapshotFormat_SnapshotFormat_MAX = SolverParameter_SnapshotFormat_BINARYPROTO;SolverParameter_SnapshotFormat_SnapshotFormat_MAX126,4089
const int SolverParameter_SnapshotFormat_SnapshotFormat_ARRAYSIZE = SolverParameter_SnapshotFormat_SnapshotFormat_MAX + 1;SolverParameter_SnapshotFormat_SnapshotFormat_ARRAYSIZE127,4222
inline const ::std::string& SolverParameter_SnapshotFormat_Name(SolverParameter_SnapshotFormat value) {SolverParameter_SnapshotFormat_Name130,4433
inline bool SolverParameter_SnapshotFormat_Parse(SolverParameter_SnapshotFormat_Parse134,4647
enum SolverParameter_SolverMode {SolverParameter_SolverMode139,4921
  SolverParameter_SolverMode_CPU = 0,SolverParameter_SolverMode_CPU140,4955
  SolverParameter_SolverMode_GPU = 1SolverParameter_SolverMode_GPU141,4993
const SolverParameter_SolverMode SolverParameter_SolverMode_SolverMode_MIN = SolverParameter_SolverMode_CPU;SolverParameter_SolverMode_SolverMode_MIN144,5085
const SolverParameter_SolverMode SolverParameter_SolverMode_SolverMode_MAX = SolverParameter_SolverMode_GPU;SolverParameter_SolverMode_SolverMode_MAX145,5194
const int SolverParameter_SolverMode_SolverMode_ARRAYSIZE = SolverParameter_SolverMode_SolverMode_MAX + 1;SolverParameter_SolverMode_SolverMode_ARRAYSIZE146,5303
inline const ::std::string& SolverParameter_SolverMode_Name(SolverParameter_SolverMode value) {SolverParameter_SolverMode_Name149,5494
inline bool SolverParameter_SolverMode_Parse(SolverParameter_SolverMode_Parse153,5696
enum SolverParameter_SolverType {SolverParameter_SolverType158,5954
  SolverParameter_SolverType_SGD = 0,SolverParameter_SolverType_SGD159,5988
  SolverParameter_SolverType_NESTEROV = 1,SolverParameter_SolverType_NESTEROV160,6026
  SolverParameter_SolverType_ADAGRAD = 2,SolverParameter_SolverType_ADAGRAD161,6069
  SolverParameter_SolverType_RMSPROP = 3,SolverParameter_SolverType_RMSPROP162,6111
  SolverParameter_SolverType_ADADELTA = 4,SolverParameter_SolverType_ADADELTA163,6153
  SolverParameter_SolverType_ADAM = 5SolverParameter_SolverType_ADAM164,6196
const SolverParameter_SolverType SolverParameter_SolverType_SolverType_MIN = SolverParameter_SolverType_SGD;SolverParameter_SolverType_SolverType_MIN167,6289
const SolverParameter_SolverType SolverParameter_SolverType_SolverType_MAX = SolverParameter_SolverType_ADAM;SolverParameter_SolverType_SolverType_MAX168,6398
const int SolverParameter_SolverType_SolverType_ARRAYSIZE = SolverParameter_SolverType_SolverType_MAX + 1;SolverParameter_SolverType_SolverType_ARRAYSIZE169,6508
inline const ::std::string& SolverParameter_SolverType_Name(SolverParameter_SolverType value) {SolverParameter_SolverType_Name172,6699
inline bool SolverParameter_SolverType_Parse(SolverParameter_SolverType_Parse176,6901
enum ParamSpec_DimCheckMode {ParamSpec_DimCheckMode181,7159
  ParamSpec_DimCheckMode_STRICT = 0,ParamSpec_DimCheckMode_STRICT182,7189
  ParamSpec_DimCheckMode_PERMISSIVE = 1ParamSpec_DimCheckMode_PERMISSIVE183,7226
const ParamSpec_DimCheckMode ParamSpec_DimCheckMode_DimCheckMode_MIN = ParamSpec_DimCheckMode_STRICT;ParamSpec_DimCheckMode_DimCheckMode_MIN186,7317
const ParamSpec_DimCheckMode ParamSpec_DimCheckMode_DimCheckMode_MAX = ParamSpec_DimCheckMode_PERMISSIVE;ParamSpec_DimCheckMode_DimCheckMode_MAX187,7419
const int ParamSpec_DimCheckMode_DimCheckMode_ARRAYSIZE = ParamSpec_DimCheckMode_DimCheckMode_MAX + 1;ParamSpec_DimCheckMode_DimCheckMode_ARRAYSIZE188,7525
inline const ::std::string& ParamSpec_DimCheckMode_Name(ParamSpec_DimCheckMode value) {ParamSpec_DimCheckMode_Name191,7708
inline bool ParamSpec_DimCheckMode_Parse(ParamSpec_DimCheckMode_Parse195,7898
enum LossParameter_NormalizationMode {LossParameter_NormalizationMode200,8140
  LossParameter_NormalizationMode_FULL = 0,LossParameter_NormalizationMode_FULL201,8179
  LossParameter_NormalizationMode_VALID = 1,LossParameter_NormalizationMode_VALID202,8223
  LossParameter_NormalizationMode_BATCH_SIZE = 2,LossParameter_NormalizationMode_BATCH_SIZE203,8268
  LossParameter_NormalizationMode_NONE = 3LossParameter_NormalizationMode_NONE204,8318
const LossParameter_NormalizationMode LossParameter_NormalizationMode_NormalizationMode_MIN = LossParameter_NormalizationMode_FULL;LossParameter_NormalizationMode_NormalizationMode_MIN207,8421
const LossParameter_NormalizationMode LossParameter_NormalizationMode_NormalizationMode_MAX = LossParameter_NormalizationMode_NONE;LossParameter_NormalizationMode_NormalizationMode_MAX208,8553
const int LossParameter_NormalizationMode_NormalizationMode_ARRAYSIZE = LossParameter_NormalizationMode_NormalizationMode_MAX + 1;LossParameter_NormalizationMode_NormalizationMode_ARRAYSIZE209,8685
inline const ::std::string& LossParameter_NormalizationMode_Name(LossParameter_NormalizationMode value) {LossParameter_NormalizationMode_Name212,8905
inline bool LossParameter_NormalizationMode_Parse(LossParameter_NormalizationMode_Parse216,9122
enum ConvolutionParameter_Engine {ConvolutionParameter_Engine221,9400
  ConvolutionParameter_Engine_DEFAULT = 0,ConvolutionParameter_Engine_DEFAULT222,9435
  ConvolutionParameter_Engine_CAFFE = 1,ConvolutionParameter_Engine_CAFFE223,9478
  ConvolutionParameter_Engine_CUDNN = 2ConvolutionParameter_Engine_CUDNN224,9519
const ConvolutionParameter_Engine ConvolutionParameter_Engine_Engine_MIN = ConvolutionParameter_Engine_DEFAULT;ConvolutionParameter_Engine_Engine_MIN227,9615
const ConvolutionParameter_Engine ConvolutionParameter_Engine_Engine_MAX = ConvolutionParameter_Engine_CUDNN;ConvolutionParameter_Engine_Engine_MAX228,9727
const int ConvolutionParameter_Engine_Engine_ARRAYSIZE = ConvolutionParameter_Engine_Engine_MAX + 1;ConvolutionParameter_Engine_Engine_ARRAYSIZE229,9837
inline const ::std::string& ConvolutionParameter_Engine_Name(ConvolutionParameter_Engine value) {ConvolutionParameter_Engine_Name232,10023
inline bool ConvolutionParameter_Engine_Parse(ConvolutionParameter_Engine_Parse236,10228
enum DataParameter_DB {DataParameter_DB241,10490
  DataParameter_DB_LEVELDB = 0,DataParameter_DB_LEVELDB242,10514
  DataParameter_DB_LMDB = 1DataParameter_DB_LMDB243,10546
const DataParameter_DB DataParameter_DB_DB_MIN = DataParameter_DB_LEVELDB;DataParameter_DB_DB_MIN246,10619
const DataParameter_DB DataParameter_DB_DB_MAX = DataParameter_DB_LMDB;DataParameter_DB_DB_MAX247,10694
const int DataParameter_DB_DB_ARRAYSIZE = DataParameter_DB_DB_MAX + 1;DataParameter_DB_DB_ARRAYSIZE248,10766
inline const ::std::string& DataParameter_DB_Name(DataParameter_DB value) {DataParameter_DB_Name251,10911
inline bool DataParameter_DB_Parse(DataParameter_DB_Parse255,11083
enum EltwiseParameter_EltwiseOp {EltwiseParameter_EltwiseOp260,11301
  EltwiseParameter_EltwiseOp_PROD = 0,EltwiseParameter_EltwiseOp_PROD261,11335
  EltwiseParameter_EltwiseOp_SUM = 1,EltwiseParameter_EltwiseOp_SUM262,11374
  EltwiseParameter_EltwiseOp_MAX = 2EltwiseParameter_EltwiseOp_MAX263,11412
const EltwiseParameter_EltwiseOp EltwiseParameter_EltwiseOp_EltwiseOp_MIN = EltwiseParameter_EltwiseOp_PROD;EltwiseParameter_EltwiseOp_EltwiseOp_MIN266,11504
const EltwiseParameter_EltwiseOp EltwiseParameter_EltwiseOp_EltwiseOp_MAX = EltwiseParameter_EltwiseOp_MAX;EltwiseParameter_EltwiseOp_EltwiseOp_MAX267,11613
const int EltwiseParameter_EltwiseOp_EltwiseOp_ARRAYSIZE = EltwiseParameter_EltwiseOp_EltwiseOp_MAX + 1;EltwiseParameter_EltwiseOp_EltwiseOp_ARRAYSIZE268,11721
inline const ::std::string& EltwiseParameter_EltwiseOp_Name(EltwiseParameter_EltwiseOp value) {EltwiseParameter_EltwiseOp_Name271,11910
inline bool EltwiseParameter_EltwiseOp_Parse(EltwiseParameter_EltwiseOp_Parse275,12112
enum HingeLossParameter_Norm {HingeLossParameter_Norm280,12370
  HingeLossParameter_Norm_L1 = 1,HingeLossParameter_Norm_L1281,12401
  HingeLossParameter_Norm_L2 = 2HingeLossParameter_Norm_L2282,12435
const HingeLossParameter_Norm HingeLossParameter_Norm_Norm_MIN = HingeLossParameter_Norm_L1;HingeLossParameter_Norm_Norm_MIN285,12520
const HingeLossParameter_Norm HingeLossParameter_Norm_Norm_MAX = HingeLossParameter_Norm_L2;HingeLossParameter_Norm_Norm_MAX286,12613
const int HingeLossParameter_Norm_Norm_ARRAYSIZE = HingeLossParameter_Norm_Norm_MAX + 1;HingeLossParameter_Norm_Norm_ARRAYSIZE287,12706
inline const ::std::string& HingeLossParameter_Norm_Name(HingeLossParameter_Norm value) {HingeLossParameter_Norm_Name290,12876
inline bool HingeLossParameter_Norm_Parse(HingeLossParameter_Norm_Parse294,13069
enum LRNParameter_NormRegion {LRNParameter_NormRegion299,13315
  LRNParameter_NormRegion_ACROSS_CHANNELS = 0,LRNParameter_NormRegion_ACROSS_CHANNELS300,13346
  LRNParameter_NormRegion_WITHIN_CHANNEL = 1LRNParameter_NormRegion_WITHIN_CHANNEL301,13393
const LRNParameter_NormRegion LRNParameter_NormRegion_NormRegion_MIN = LRNParameter_NormRegion_ACROSS_CHANNELS;LRNParameter_NormRegion_NormRegion_MIN304,13490
const LRNParameter_NormRegion LRNParameter_NormRegion_NormRegion_MAX = LRNParameter_NormRegion_WITHIN_CHANNEL;LRNParameter_NormRegion_NormRegion_MAX305,13602
const int LRNParameter_NormRegion_NormRegion_ARRAYSIZE = LRNParameter_NormRegion_NormRegion_MAX + 1;LRNParameter_NormRegion_NormRegion_ARRAYSIZE306,13713
inline const ::std::string& LRNParameter_NormRegion_Name(LRNParameter_NormRegion value) {LRNParameter_NormRegion_Name309,13895
inline bool LRNParameter_NormRegion_Parse(LRNParameter_NormRegion_Parse313,14088
enum LRNParameter_Engine {LRNParameter_Engine318,14334
  LRNParameter_Engine_DEFAULT = 0,LRNParameter_Engine_DEFAULT319,14361
  LRNParameter_Engine_CAFFE = 1,LRNParameter_Engine_CAFFE320,14396
  LRNParameter_Engine_CUDNN = 2LRNParameter_Engine_CUDNN321,14429
const LRNParameter_Engine LRNParameter_Engine_Engine_MIN = LRNParameter_Engine_DEFAULT;LRNParameter_Engine_Engine_MIN324,14509
const LRNParameter_Engine LRNParameter_Engine_Engine_MAX = LRNParameter_Engine_CUDNN;LRNParameter_Engine_Engine_MAX325,14597
const int LRNParameter_Engine_Engine_ARRAYSIZE = LRNParameter_Engine_Engine_MAX + 1;LRNParameter_Engine_Engine_ARRAYSIZE326,14683
inline const ::std::string& LRNParameter_Engine_Name(LRNParameter_Engine value) {LRNParameter_Engine_Name329,14845
inline bool LRNParameter_Engine_Parse(LRNParameter_Engine_Parse333,15026
enum PoolingParameter_PoolMethod {PoolingParameter_PoolMethod338,15256
  PoolingParameter_PoolMethod_MAX = 0,PoolingParameter_PoolMethod_MAX339,15291
  PoolingParameter_PoolMethod_AVE = 1,PoolingParameter_PoolMethod_AVE340,15330
  PoolingParameter_PoolMethod_STOCHASTIC = 2PoolingParameter_PoolMethod_STOCHASTIC341,15369
const PoolingParameter_PoolMethod PoolingParameter_PoolMethod_PoolMethod_MIN = PoolingParameter_PoolMethod_MAX;PoolingParameter_PoolMethod_PoolMethod_MIN344,15470
const PoolingParameter_PoolMethod PoolingParameter_PoolMethod_PoolMethod_MAX = PoolingParameter_PoolMethod_STOCHASTIC;PoolingParameter_PoolMethod_PoolMethod_MAX345,15582
const int PoolingParameter_PoolMethod_PoolMethod_ARRAYSIZE = PoolingParameter_PoolMethod_PoolMethod_MAX + 1;PoolingParameter_PoolMethod_PoolMethod_ARRAYSIZE346,15701
inline const ::std::string& PoolingParameter_PoolMethod_Name(PoolingParameter_PoolMethod value) {PoolingParameter_PoolMethod_Name349,15895
inline bool PoolingParameter_PoolMethod_Parse(PoolingParameter_PoolMethod_Parse353,16100
enum PoolingParameter_Engine {PoolingParameter_Engine358,16362
  PoolingParameter_Engine_DEFAULT = 0,PoolingParameter_Engine_DEFAULT359,16393
  PoolingParameter_Engine_CAFFE = 1,PoolingParameter_Engine_CAFFE360,16432
  PoolingParameter_Engine_CUDNN = 2PoolingParameter_Engine_CUDNN361,16469
const PoolingParameter_Engine PoolingParameter_Engine_Engine_MIN = PoolingParameter_Engine_DEFAULT;PoolingParameter_Engine_Engine_MIN364,16557
const PoolingParameter_Engine PoolingParameter_Engine_Engine_MAX = PoolingParameter_Engine_CUDNN;PoolingParameter_Engine_Engine_MAX365,16657
const int PoolingParameter_Engine_Engine_ARRAYSIZE = PoolingParameter_Engine_Engine_MAX + 1;PoolingParameter_Engine_Engine_ARRAYSIZE366,16755
inline const ::std::string& PoolingParameter_Engine_Name(PoolingParameter_Engine value) {PoolingParameter_Engine_Name369,16929
inline bool PoolingParameter_Engine_Parse(PoolingParameter_Engine_Parse373,17122
enum ReductionParameter_ReductionOp {ReductionParameter_ReductionOp378,17368
  ReductionParameter_ReductionOp_SUM = 1,ReductionParameter_ReductionOp_SUM379,17406
  ReductionParameter_ReductionOp_ASUM = 2,ReductionParameter_ReductionOp_ASUM380,17448
  ReductionParameter_ReductionOp_SUMSQ = 3,ReductionParameter_ReductionOp_SUMSQ381,17491
  ReductionParameter_ReductionOp_MEAN = 4ReductionParameter_ReductionOp_MEAN382,17535
const ReductionParameter_ReductionOp ReductionParameter_ReductionOp_ReductionOp_MIN = ReductionParameter_ReductionOp_SUM;ReductionParameter_ReductionOp_ReductionOp_MIN385,17636
const ReductionParameter_ReductionOp ReductionParameter_ReductionOp_ReductionOp_MAX = ReductionParameter_ReductionOp_MEAN;ReductionParameter_ReductionOp_ReductionOp_MAX386,17758
const int ReductionParameter_ReductionOp_ReductionOp_ARRAYSIZE = ReductionParameter_ReductionOp_ReductionOp_MAX + 1;ReductionParameter_ReductionOp_ReductionOp_ARRAYSIZE387,17881
inline const ::std::string& ReductionParameter_ReductionOp_Name(ReductionParameter_ReductionOp value) {ReductionParameter_ReductionOp_Name390,18086
inline bool ReductionParameter_ReductionOp_Parse(ReductionParameter_ReductionOp_Parse394,18300
enum ReLUParameter_Engine {ReLUParameter_Engine399,18574
  ReLUParameter_Engine_DEFAULT = 0,ReLUParameter_Engine_DEFAULT400,18602
  ReLUParameter_Engine_CAFFE = 1,ReLUParameter_Engine_CAFFE401,18638
  ReLUParameter_Engine_CUDNN = 2ReLUParameter_Engine_CUDNN402,18672
const ReLUParameter_Engine ReLUParameter_Engine_Engine_MIN = ReLUParameter_Engine_DEFAULT;ReLUParameter_Engine_Engine_MIN405,18754
const ReLUParameter_Engine ReLUParameter_Engine_Engine_MAX = ReLUParameter_Engine_CUDNN;ReLUParameter_Engine_Engine_MAX406,18845
const int ReLUParameter_Engine_Engine_ARRAYSIZE = ReLUParameter_Engine_Engine_MAX + 1;ReLUParameter_Engine_Engine_ARRAYSIZE407,18934
inline const ::std::string& ReLUParameter_Engine_Name(ReLUParameter_Engine value) {ReLUParameter_Engine_Name410,19099
inline bool ReLUParameter_Engine_Parse(ReLUParameter_Engine_Parse414,19283
enum SigmoidParameter_Engine {SigmoidParameter_Engine419,19517
  SigmoidParameter_Engine_DEFAULT = 0,SigmoidParameter_Engine_DEFAULT420,19548
  SigmoidParameter_Engine_CAFFE = 1,SigmoidParameter_Engine_CAFFE421,19587
  SigmoidParameter_Engine_CUDNN = 2SigmoidParameter_Engine_CUDNN422,19624
const SigmoidParameter_Engine SigmoidParameter_Engine_Engine_MIN = SigmoidParameter_Engine_DEFAULT;SigmoidParameter_Engine_Engine_MIN425,19712
const SigmoidParameter_Engine SigmoidParameter_Engine_Engine_MAX = SigmoidParameter_Engine_CUDNN;SigmoidParameter_Engine_Engine_MAX426,19812
const int SigmoidParameter_Engine_Engine_ARRAYSIZE = SigmoidParameter_Engine_Engine_MAX + 1;SigmoidParameter_Engine_Engine_ARRAYSIZE427,19910
inline const ::std::string& SigmoidParameter_Engine_Name(SigmoidParameter_Engine value) {SigmoidParameter_Engine_Name430,20084
inline bool SigmoidParameter_Engine_Parse(SigmoidParameter_Engine_Parse434,20277
enum SoftmaxParameter_Engine {SoftmaxParameter_Engine439,20523
  SoftmaxParameter_Engine_DEFAULT = 0,SoftmaxParameter_Engine_DEFAULT440,20554
  SoftmaxParameter_Engine_CAFFE = 1,SoftmaxParameter_Engine_CAFFE441,20593
  SoftmaxParameter_Engine_CUDNN = 2SoftmaxParameter_Engine_CUDNN442,20630
const SoftmaxParameter_Engine SoftmaxParameter_Engine_Engine_MIN = SoftmaxParameter_Engine_DEFAULT;SoftmaxParameter_Engine_Engine_MIN445,20718
const SoftmaxParameter_Engine SoftmaxParameter_Engine_Engine_MAX = SoftmaxParameter_Engine_CUDNN;SoftmaxParameter_Engine_Engine_MAX446,20818
const int SoftmaxParameter_Engine_Engine_ARRAYSIZE = SoftmaxParameter_Engine_Engine_MAX + 1;SoftmaxParameter_Engine_Engine_ARRAYSIZE447,20916
inline const ::std::string& SoftmaxParameter_Engine_Name(SoftmaxParameter_Engine value) {SoftmaxParameter_Engine_Name450,21090
inline bool SoftmaxParameter_Engine_Parse(SoftmaxParameter_Engine_Parse454,21283
enum TanHParameter_Engine {TanHParameter_Engine459,21529
  TanHParameter_Engine_DEFAULT = 0,TanHParameter_Engine_DEFAULT460,21557
  TanHParameter_Engine_CAFFE = 1,TanHParameter_Engine_CAFFE461,21593
  TanHParameter_Engine_CUDNN = 2TanHParameter_Engine_CUDNN462,21627
const TanHParameter_Engine TanHParameter_Engine_Engine_MIN = TanHParameter_Engine_DEFAULT;TanHParameter_Engine_Engine_MIN465,21709
const TanHParameter_Engine TanHParameter_Engine_Engine_MAX = TanHParameter_Engine_CUDNN;TanHParameter_Engine_Engine_MAX466,21800
const int TanHParameter_Engine_Engine_ARRAYSIZE = TanHParameter_Engine_Engine_MAX + 1;TanHParameter_Engine_Engine_ARRAYSIZE467,21889
inline const ::std::string& TanHParameter_Engine_Name(TanHParameter_Engine value) {TanHParameter_Engine_Name470,22054
inline bool TanHParameter_Engine_Parse(TanHParameter_Engine_Parse474,22238
enum SPPParameter_PoolMethod {SPPParameter_PoolMethod479,22472
  SPPParameter_PoolMethod_MAX = 0,SPPParameter_PoolMethod_MAX480,22503
  SPPParameter_PoolMethod_AVE = 1,SPPParameter_PoolMethod_AVE481,22538
  SPPParameter_PoolMethod_STOCHASTIC = 2SPPParameter_PoolMethod_STOCHASTIC482,22573
const SPPParameter_PoolMethod SPPParameter_PoolMethod_PoolMethod_MIN = SPPParameter_PoolMethod_MAX;SPPParameter_PoolMethod_PoolMethod_MIN485,22666
const SPPParameter_PoolMethod SPPParameter_PoolMethod_PoolMethod_MAX = SPPParameter_PoolMethod_STOCHASTIC;SPPParameter_PoolMethod_PoolMethod_MAX486,22766
const int SPPParameter_PoolMethod_PoolMethod_ARRAYSIZE = SPPParameter_PoolMethod_PoolMethod_MAX + 1;SPPParameter_PoolMethod_PoolMethod_ARRAYSIZE487,22873
inline const ::std::string& SPPParameter_PoolMethod_Name(SPPParameter_PoolMethod value) {SPPParameter_PoolMethod_Name490,23055
inline bool SPPParameter_PoolMethod_Parse(SPPParameter_PoolMethod_Parse494,23248
enum SPPParameter_Engine {SPPParameter_Engine499,23494
  SPPParameter_Engine_DEFAULT = 0,SPPParameter_Engine_DEFAULT500,23521
  SPPParameter_Engine_CAFFE = 1,SPPParameter_Engine_CAFFE501,23556
  SPPParameter_Engine_CUDNN = 2SPPParameter_Engine_CUDNN502,23589
const SPPParameter_Engine SPPParameter_Engine_Engine_MIN = SPPParameter_Engine_DEFAULT;SPPParameter_Engine_Engine_MIN505,23669
const SPPParameter_Engine SPPParameter_Engine_Engine_MAX = SPPParameter_Engine_CUDNN;SPPParameter_Engine_Engine_MAX506,23757
const int SPPParameter_Engine_Engine_ARRAYSIZE = SPPParameter_Engine_Engine_MAX + 1;SPPParameter_Engine_Engine_ARRAYSIZE507,23843
inline const ::std::string& SPPParameter_Engine_Name(SPPParameter_Engine value) {SPPParameter_Engine_Name510,24005
inline bool SPPParameter_Engine_Parse(SPPParameter_Engine_Parse514,24186
enum V1LayerParameter_LayerType {V1LayerParameter_LayerType519,24416
  V1LayerParameter_LayerType_NONE = 0,V1LayerParameter_LayerType_NONE520,24450
  V1LayerParameter_LayerType_ABSVAL = 35,V1LayerParameter_LayerType_ABSVAL521,24489
  V1LayerParameter_LayerType_ACCURACY = 1,V1LayerParameter_LayerType_ACCURACY522,24531
  V1LayerParameter_LayerType_ARGMAX = 30,V1LayerParameter_LayerType_ARGMAX523,24574
  V1LayerParameter_LayerType_BNLL = 2,V1LayerParameter_LayerType_BNLL524,24616
  V1LayerParameter_LayerType_CONCAT = 3,V1LayerParameter_LayerType_CONCAT525,24655
  V1LayerParameter_LayerType_CONTRASTIVE_LOSS = 37,V1LayerParameter_LayerType_CONTRASTIVE_LOSS526,24696
  V1LayerParameter_LayerType_CONVOLUTION = 4,V1LayerParameter_LayerType_CONVOLUTION527,24748
  V1LayerParameter_LayerType_DATA = 5,V1LayerParameter_LayerType_DATA528,24794
  V1LayerParameter_LayerType_DECONVOLUTION = 39,V1LayerParameter_LayerType_DECONVOLUTION529,24833
  V1LayerParameter_LayerType_DROPOUT = 6,V1LayerParameter_LayerType_DROPOUT530,24882
  V1LayerParameter_LayerType_DUMMY_DATA = 32,V1LayerParameter_LayerType_DUMMY_DATA531,24924
  V1LayerParameter_LayerType_EUCLIDEAN_LOSS = 7,V1LayerParameter_LayerType_EUCLIDEAN_LOSS532,24970
  V1LayerParameter_LayerType_ELTWISE = 25,V1LayerParameter_LayerType_ELTWISE533,25019
  V1LayerParameter_LayerType_EXP = 38,V1LayerParameter_LayerType_EXP534,25062
  V1LayerParameter_LayerType_FLATTEN = 8,V1LayerParameter_LayerType_FLATTEN535,25101
  V1LayerParameter_LayerType_HDF5_DATA = 9,V1LayerParameter_LayerType_HDF5_DATA536,25143
  V1LayerParameter_LayerType_HDF5_OUTPUT = 10,V1LayerParameter_LayerType_HDF5_OUTPUT537,25187
  V1LayerParameter_LayerType_HINGE_LOSS = 28,V1LayerParameter_LayerType_HINGE_LOSS538,25234
  V1LayerParameter_LayerType_IM2COL = 11,V1LayerParameter_LayerType_IM2COL539,25280
  V1LayerParameter_LayerType_IMAGE_DATA = 12,V1LayerParameter_LayerType_IMAGE_DATA540,25322
  V1LayerParameter_LayerType_INFOGAIN_LOSS = 13,V1LayerParameter_LayerType_INFOGAIN_LOSS541,25368
  V1LayerParameter_LayerType_INNER_PRODUCT = 14,V1LayerParameter_LayerType_INNER_PRODUCT542,25417
  V1LayerParameter_LayerType_LRN = 15,V1LayerParameter_LayerType_LRN543,25466
  V1LayerParameter_LayerType_MEMORY_DATA = 29,V1LayerParameter_LayerType_MEMORY_DATA544,25505
  V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS = 16,V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS545,25552
  V1LayerParameter_LayerType_MVN = 34,V1LayerParameter_LayerType_MVN546,25613
  V1LayerParameter_LayerType_POOLING = 17,V1LayerParameter_LayerType_POOLING547,25652
  V1LayerParameter_LayerType_POWER = 26,V1LayerParameter_LayerType_POWER548,25695
  V1LayerParameter_LayerType_RELU = 18,V1LayerParameter_LayerType_RELU549,25736
  V1LayerParameter_LayerType_SIGMOID = 19,V1LayerParameter_LayerType_SIGMOID550,25776
  V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS = 27,V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS551,25819
  V1LayerParameter_LayerType_SILENCE = 36,V1LayerParameter_LayerType_SILENCE552,25881
  V1LayerParameter_LayerType_SOFTMAX = 20,V1LayerParameter_LayerType_SOFTMAX553,25924
  V1LayerParameter_LayerType_SOFTMAX_LOSS = 21,V1LayerParameter_LayerType_SOFTMAX_LOSS554,25967
  V1LayerParameter_LayerType_SPLIT = 22,V1LayerParameter_LayerType_SPLIT555,26015
  V1LayerParameter_LayerType_SLICE = 33,V1LayerParameter_LayerType_SLICE556,26056
  V1LayerParameter_LayerType_TANH = 23,V1LayerParameter_LayerType_TANH557,26097
  V1LayerParameter_LayerType_WINDOW_DATA = 24,V1LayerParameter_LayerType_WINDOW_DATA558,26137
  V1LayerParameter_LayerType_THRESHOLD = 31V1LayerParameter_LayerType_THRESHOLD559,26184
const V1LayerParameter_LayerType V1LayerParameter_LayerType_LayerType_MIN = V1LayerParameter_LayerType_NONE;V1LayerParameter_LayerType_LayerType_MIN562,26283
const V1LayerParameter_LayerType V1LayerParameter_LayerType_LayerType_MAX = V1LayerParameter_LayerType_DECONVOLUTION;V1LayerParameter_LayerType_LayerType_MAX563,26392
const int V1LayerParameter_LayerType_LayerType_ARRAYSIZE = V1LayerParameter_LayerType_LayerType_MAX + 1;V1LayerParameter_LayerType_LayerType_ARRAYSIZE564,26510
inline const ::std::string& V1LayerParameter_LayerType_Name(V1LayerParameter_LayerType value) {V1LayerParameter_LayerType_Name567,26699
inline bool V1LayerParameter_LayerType_Parse(V1LayerParameter_LayerType_Parse571,26901
enum V1LayerParameter_DimCheckMode {V1LayerParameter_DimCheckMode576,27159
  V1LayerParameter_DimCheckMode_STRICT = 0,V1LayerParameter_DimCheckMode_STRICT577,27196
  V1LayerParameter_DimCheckMode_PERMISSIVE = 1V1LayerParameter_DimCheckMode_PERMISSIVE578,27240
const V1LayerParameter_DimCheckMode V1LayerParameter_DimCheckMode_DimCheckMode_MIN = V1LayerParameter_DimCheckMode_STRICT;V1LayerParameter_DimCheckMode_DimCheckMode_MIN581,27345
const V1LayerParameter_DimCheckMode V1LayerParameter_DimCheckMode_DimCheckMode_MAX = V1LayerParameter_DimCheckMode_PERMISSIVE;V1LayerParameter_DimCheckMode_DimCheckMode_MAX582,27468
const int V1LayerParameter_DimCheckMode_DimCheckMode_ARRAYSIZE = V1LayerParameter_DimCheckMode_DimCheckMode_MAX + 1;V1LayerParameter_DimCheckMode_DimCheckMode_ARRAYSIZE583,27595
inline const ::std::string& V1LayerParameter_DimCheckMode_Name(V1LayerParameter_DimCheckMode value) {V1LayerParameter_DimCheckMode_Name586,27799
inline bool V1LayerParameter_DimCheckMode_Parse(V1LayerParameter_DimCheckMode_Parse590,28010
enum V0LayerParameter_PoolMethod {V0LayerParameter_PoolMethod595,28280
  V0LayerParameter_PoolMethod_MAX = 0,V0LayerParameter_PoolMethod_MAX596,28315
  V0LayerParameter_PoolMethod_AVE = 1,V0LayerParameter_PoolMethod_AVE597,28354
  V0LayerParameter_PoolMethod_STOCHASTIC = 2V0LayerParameter_PoolMethod_STOCHASTIC598,28393
const V0LayerParameter_PoolMethod V0LayerParameter_PoolMethod_PoolMethod_MIN = V0LayerParameter_PoolMethod_MAX;V0LayerParameter_PoolMethod_PoolMethod_MIN601,28494
const V0LayerParameter_PoolMethod V0LayerParameter_PoolMethod_PoolMethod_MAX = V0LayerParameter_PoolMethod_STOCHASTIC;V0LayerParameter_PoolMethod_PoolMethod_MAX602,28606
const int V0LayerParameter_PoolMethod_PoolMethod_ARRAYSIZE = V0LayerParameter_PoolMethod_PoolMethod_MAX + 1;V0LayerParameter_PoolMethod_PoolMethod_ARRAYSIZE603,28725
inline const ::std::string& V0LayerParameter_PoolMethod_Name(V0LayerParameter_PoolMethod value) {V0LayerParameter_PoolMethod_Name606,28919
inline bool V0LayerParameter_PoolMethod_Parse(V0LayerParameter_PoolMethod_Parse610,29124
enum QuantizationParameter_RoundMethod {QuantizationParameter_RoundMethod615,29386
  QuantizationParameter_RoundMethod_ROUND = 0,QuantizationParameter_RoundMethod_ROUND616,29427
  QuantizationParameter_RoundMethod_FLOOR = 1,QuantizationParameter_RoundMethod_FLOOR617,29474
  QuantizationParameter_RoundMethod_CEIL = 2,QuantizationParameter_RoundMethod_CEIL618,29521
  QuantizationParameter_RoundMethod_TRUNC = 3QuantizationParameter_RoundMethod_TRUNC619,29567
const QuantizationParameter_RoundMethod QuantizationParameter_RoundMethod_RoundMethod_MIN = QuantizationParameter_RoundMethod_ROUND;QuantizationParameter_RoundMethod_RoundMethod_MIN622,29675
const QuantizationParameter_RoundMethod QuantizationParameter_RoundMethod_RoundMethod_MAX = QuantizationParameter_RoundMethod_TRUNC;QuantizationParameter_RoundMethod_RoundMethod_MAX623,29808
const int QuantizationParameter_RoundMethod_RoundMethod_ARRAYSIZE = QuantizationParameter_RoundMethod_RoundMethod_MAX + 1;QuantizationParameter_RoundMethod_RoundMethod_ARRAYSIZE624,29941
inline const ::std::string& QuantizationParameter_RoundMethod_Name(QuantizationParameter_RoundMethod value) {QuantizationParameter_RoundMethod_Name627,30155
inline bool QuantizationParameter_RoundMethod_Parse(QuantizationParameter_RoundMethod_Parse631,30378
enum QuantizationParameter_RoundStrategy {QuantizationParameter_RoundStrategy636,30664
  QuantizationParameter_RoundStrategy_CONSERVATIVE = 0,QuantizationParameter_RoundStrategy_CONSERVATIVE637,30707
  QuantizationParameter_RoundStrategy_NEUTRAL = 1,QuantizationParameter_RoundStrategy_NEUTRAL638,30763
  QuantizationParameter_RoundStrategy_AGGRESSIVE = 2QuantizationParameter_RoundStrategy_AGGRESSIVE639,30814
const QuantizationParameter_RoundStrategy QuantizationParameter_RoundStrategy_RoundStrategy_MIN = QuantizationParameter_RoundStrategy_CONSERVATIVE;QuantizationParameter_RoundStrategy_RoundStrategy_MIN642,30931
const QuantizationParameter_RoundStrategy QuantizationParameter_RoundStrategy_RoundStrategy_MAX = QuantizationParameter_RoundStrategy_AGGRESSIVE;QuantizationParameter_RoundStrategy_RoundStrategy_MAX643,31079
const int QuantizationParameter_RoundStrategy_RoundStrategy_ARRAYSIZE = QuantizationParameter_RoundStrategy_RoundStrategy_MAX + 1;QuantizationParameter_RoundStrategy_RoundStrategy_ARRAYSIZE644,31225
inline const ::std::string& QuantizationParameter_RoundStrategy_Name(QuantizationParameter_RoundStrategy value) {QuantizationParameter_RoundStrategy_Name647,31449
inline bool QuantizationParameter_RoundStrategy_Parse(QuantizationParameter_RoundStrategy_Parse651,31678
enum Phase {Phase656,31972
  TRAIN = 0,TRAIN657,31985
  TEST = 1TEST658,31998
const Phase Phase_MIN = TRAIN;Phase_MIN661,32043
const Phase Phase_MAX = TEST;Phase_MAX662,32074
const int Phase_ARRAYSIZE = Phase_MAX + 1;Phase_ARRAYSIZE663,32104
inline const ::std::string& Phase_Name(Phase value) {Phase_Name666,32210
inline bool Phase_Parse(Phase_Parse670,32349
class BlobShape : public ::google::protobuf::Message {BlobShape677,32595
  inline BlobShape& operator=(const BlobShape& from) {operator =684,32736
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields689,32834
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields693,32945
  int GetCachedSize() const { return _cached_size_; }GetCachedSize718,33852
  static const int kDimFieldNumber = 1;kDimFieldNumber734,34308
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_746,34791
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dim_;dim_748,34848
  mutable int _dim_cached_byte_size_;_dim_cached_byte_size_749,34919
  mutable int _cached_size_;_cached_size_751,34958
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_752,34987
  static BlobShape* default_instance_;default_instance_759,35230
class BlobProto : public ::google::protobuf::Message {BlobProto763,35344
  inline BlobProto& operator=(const BlobProto& from) {operator =770,35485
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields775,35583
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields779,35694
  int GetCachedSize() const { return _cached_size_; }GetCachedSize804,36601
  static const int kShapeFieldNumber = 7;kShapeFieldNumber820,37058
  static const int kDataFieldNumber = 5;kDataFieldNumber829,37411
  static const int kDiffFieldNumber = 6;kDiffFieldNumber841,37836
  static const int kDoubleDataFieldNumber = 8;kDoubleDataFieldNumber853,38283
  static const int kDoubleDiffFieldNumber = 9;kDoubleDiffFieldNumber865,38776
  static const int kNumFieldNumber = 1;kNumFieldNumber877,39242
  static const int kChannelsFieldNumber = 2;kChannelsFieldNumber884,39503
  static const int kHeightFieldNumber = 3;kHeightFieldNumber891,39773
  static const int kWidthFieldNumber = 4;kWidthFieldNumber898,40034
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_915,40579
  ::caffe::BlobShape* shape_;shape_917,40636
  ::google::protobuf::RepeatedField< float > data_;data_918,40666
  mutable int _data_cached_byte_size_;_data_cached_byte_size_919,40718
  ::google::protobuf::RepeatedField< float > diff_;diff_920,40757
  mutable int _diff_cached_byte_size_;_diff_cached_byte_size_921,40809
  ::google::protobuf::RepeatedField< double > double_data_;double_data_922,40848
  mutable int _double_data_cached_byte_size_;_double_data_cached_byte_size_923,40908
  ::google::protobuf::RepeatedField< double > double_diff_;double_diff_924,40954
  mutable int _double_diff_cached_byte_size_;_double_diff_cached_byte_size_925,41014
  ::google::protobuf::int32 num_;num_926,41060
  ::google::protobuf::int32 channels_;channels_927,41094
  ::google::protobuf::int32 height_;height_928,41133
  ::google::protobuf::int32 width_;width_929,41170
  mutable int _cached_size_;_cached_size_931,41207
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];_has_bits_932,41236
  static BlobProto* default_instance_;default_instance_939,41479
class BlobProtoVector : public ::google::protobuf::Message {BlobProtoVector943,41593
  inline BlobProtoVector& operator=(const BlobProtoVector& from) {operator =950,41764
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields955,41874
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields959,41985
  int GetCachedSize() const { return _cached_size_; }GetCachedSize984,42922
  static const int kBlobsFieldNumber = 1;kBlobsFieldNumber1000,43379
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_1012,43842
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > blobs_;blobs_1014,43899
  mutable int _cached_size_;_cached_size_1016,43969
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_1017,43998
  static BlobProtoVector* default_instance_;default_instance_1024,44241
class Datum : public ::google::protobuf::Message {Datum1028,44361
  inline Datum& operator=(const Datum& from) {operator =1035,44482
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields1040,44572
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields1044,44683
  int GetCachedSize() const { return _cached_size_; }GetCachedSize1069,45570
  static const int kChannelsFieldNumber = 1;kChannelsFieldNumber1085,46025
  static const int kHeightFieldNumber = 2;kHeightFieldNumber1092,46281
  static const int kWidthFieldNumber = 3;kWidthFieldNumber1099,46528
  static const int kDataFieldNumber = 4;kDataFieldNumber1106,46769
  static const int kLabelFieldNumber = 5;kLabelFieldNumber1118,47234
  static const int kFloatDataFieldNumber = 6;kFloatDataFieldNumber1125,47493
  static const int kEncodedFieldNumber = 7;kEncodedFieldNumber1137,47963
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_1156,48538
  ::google::protobuf::int32 channels_;channels_1158,48595
  ::google::protobuf::int32 height_;height_1159,48634
  ::std::string* data_;data_1160,48671
  ::google::protobuf::int32 width_;width_1161,48695
  ::google::protobuf::int32 label_;label_1162,48731
  ::google::protobuf::RepeatedField< float > float_data_;float_data_1163,48767
  bool encoded_;encoded_1164,48825
  mutable int _cached_size_;_cached_size_1166,48843
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];_has_bits_1167,48872
  static Datum* default_instance_;default_instance_1174,49115
class FillerParameter : public ::google::protobuf::Message {FillerParameter1178,49225
  inline FillerParameter& operator=(const FillerParameter& from) {operator =1185,49396
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields1190,49506
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields1194,49617
  int GetCachedSize() const { return _cached_size_; }GetCachedSize1219,50554
  typedef FillerParameter_VarianceNorm VarianceNorm;VarianceNorm1230,50835
  static const VarianceNorm FAN_IN = FillerParameter_VarianceNorm_FAN_IN;FAN_IN1231,50888
  static const VarianceNorm FAN_OUT = FillerParameter_VarianceNorm_FAN_OUT;FAN_OUT1232,50962
  static const VarianceNorm AVERAGE = FillerParameter_VarianceNorm_AVERAGE;AVERAGE1233,51038
  static inline bool VarianceNorm_IsValid(int value) {VarianceNorm_IsValid1234,51114
  static const VarianceNorm VarianceNorm_MIN =VarianceNorm_MIN1237,51229
  static const VarianceNorm VarianceNorm_MAX =VarianceNorm_MAX1239,51327
  static const int VarianceNorm_ARRAYSIZE =VarianceNorm_ARRAYSIZE1241,51425
  VarianceNorm_descriptor() {VarianceNorm_descriptor1244,51584
  static inline const ::std::string& VarianceNorm_Name(VarianceNorm value) {VarianceNorm_Name1247,51672
  static inline bool VarianceNorm_Parse(const ::std::string& name,VarianceNorm_Parse1250,51806
  static const int kTypeFieldNumber = 1;kTypeFieldNumber1260,52153
  static const int kValueFieldNumber = 2;kValueFieldNumber1272,52632
  static const int kMinFieldNumber = 3;kMinFieldNumber1279,52844
  static const int kMaxFieldNumber = 4;kMaxFieldNumber1286,53050
  static const int kMeanFieldNumber = 5;kMeanFieldNumber1293,53259
  static const int kStdFieldNumber = 6;kStdFieldNumber1300,53468
  static const int kSparseFieldNumber = 7;kSparseFieldNumber1307,53684
  static const int kVarianceNormFieldNumber = 8;kVarianceNormFieldNumber1314,54004
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_1337,54792
  ::std::string* type_;type_1339,54849
  static ::std::string* _default_type_;_default_type_1340,54873
  float value_;value_1341,54913
  float min_;min_1342,54929
  float max_;max_1343,54943
  float mean_;mean_1344,54957
  float std_;std_1345,54972
  ::google::protobuf::int32 sparse_;sparse_1346,54986
  int variance_norm_;variance_norm_1347,55023
  mutable int _cached_size_;_cached_size_1349,55046
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];_has_bits_1350,55075
  static FillerParameter* default_instance_;default_instance_1357,55318
class NetParameter : public ::google::protobuf::Message {NetParameter1361,55438
  inline NetParameter& operator=(const NetParameter& from) {operator =1368,55594
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields1373,55698
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields1377,55809
  int GetCachedSize() const { return _cached_size_; }GetCachedSize1402,56731
  static const int kNameFieldNumber = 1;kNameFieldNumber1418,57175
  static const int kInputFieldNumber = 3;kInputFieldNumber1430,57641
  static const int kInputShapeFieldNumber = 8;kInputShapeFieldNumber1446,58452
  static const int kInputDimFieldNumber = 4;kInputDimFieldNumber1458,58979
  static const int kForceBackwardFieldNumber = 5;kForceBackwardFieldNumber1470,59564
  static const int kStateFieldNumber = 6;kStateFieldNumber1477,59802
  static const int kDebugInfoFieldNumber = 7;kDebugInfoFieldNumber1486,60170
  static const int kLayerFieldNumber = 100;kLayerFieldNumber1493,60404
  static const int kLayersFieldNumber = 2;kLayersFieldNumber1505,60932
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_1525,61715
  ::std::string* name_;name_1527,61772
  ::google::protobuf::RepeatedPtrField< ::std::string> input_;input_1528,61796
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobShape > input_shape_;input_shape_1529,61859
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > input_dim_;input_dim_1530,61934
  ::caffe::NetState* state_;state_1531,62011
  ::google::protobuf::RepeatedPtrField< ::caffe::LayerParameter > layer_;layer_1532,62040
  ::google::protobuf::RepeatedPtrField< ::caffe::V1LayerParameter > layers_;layers_1533,62114
  bool force_backward_;force_backward_1534,62191
  bool debug_info_;debug_info_1535,62215
  mutable int _cached_size_;_cached_size_1537,62236
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];_has_bits_1538,62265
  static NetParameter* default_instance_;default_instance_1545,62508
class SolverParameter : public ::google::protobuf::Message {SolverParameter1549,62625
  inline SolverParameter& operator=(const SolverParameter& from) {operator =1556,62796
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields1561,62906
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields1565,63017
  int GetCachedSize() const { return _cached_size_; }GetCachedSize1590,63954
  typedef SolverParameter_SnapshotFormat SnapshotFormat;SnapshotFormat1601,64235
  static const SnapshotFormat HDF5 = SolverParameter_SnapshotFormat_HDF5;HDF51602,64292
  static const SnapshotFormat BINARYPROTO = SolverParameter_SnapshotFormat_BINARYPROTO;BINARYPROTO1603,64366
  static inline bool SnapshotFormat_IsValid(int value) {SnapshotFormat_IsValid1604,64454
  static const SnapshotFormat SnapshotFormat_MIN =SnapshotFormat_MIN1607,64573
  static const SnapshotFormat SnapshotFormat_MAX =SnapshotFormat_MAX1609,64679
  static const int SnapshotFormat_ARRAYSIZE =SnapshotFormat_ARRAYSIZE1611,64785
  SnapshotFormat_descriptor() {SnapshotFormat_descriptor1614,64950
  static inline const ::std::string& SnapshotFormat_Name(SnapshotFormat value) {SnapshotFormat_Name1617,65042
  static inline bool SnapshotFormat_Parse(const ::std::string& name,SnapshotFormat_Parse1620,65182
  typedef SolverParameter_SolverMode SolverMode;SolverMode1625,65349
  static const SolverMode CPU = SolverParameter_SolverMode_CPU;CPU1626,65398
  static const SolverMode GPU = SolverParameter_SolverMode_GPU;GPU1627,65462
  static inline bool SolverMode_IsValid(int value) {SolverMode_IsValid1628,65526
  static const SolverMode SolverMode_MIN =SolverMode_MIN1631,65637
  static const SolverMode SolverMode_MAX =SolverMode_MAX1633,65727
  static const int SolverMode_ARRAYSIZE =SolverMode_ARRAYSIZE1635,65817
  SolverMode_descriptor() {SolverMode_descriptor1638,65970
  static inline const ::std::string& SolverMode_Name(SolverMode value) {SolverMode_Name1641,66054
  static inline bool SolverMode_Parse(const ::std::string& name,SolverMode_Parse1644,66182
  typedef SolverParameter_SolverType SolverType;SolverType1649,66337
  static const SolverType SGD = SolverParameter_SolverType_SGD;SGD1650,66386
  static const SolverType NESTEROV = SolverParameter_SolverType_NESTEROV;NESTEROV1651,66450
  static const SolverType ADAGRAD = SolverParameter_SolverType_ADAGRAD;ADAGRAD1652,66524
  static const SolverType RMSPROP = SolverParameter_SolverType_RMSPROP;RMSPROP1653,66596
  static const SolverType ADADELTA = SolverParameter_SolverType_ADADELTA;ADADELTA1654,66668
  static const SolverType ADAM = SolverParameter_SolverType_ADAM;ADAM1655,66742
  static inline bool SolverType_IsValid(int value) {SolverType_IsValid1656,66808
  static const SolverType SolverType_MIN =SolverType_MIN1659,66919
  static const SolverType SolverType_MAX =SolverType_MAX1661,67009
  static const int SolverType_ARRAYSIZE =SolverType_ARRAYSIZE1663,67099
  SolverType_descriptor() {SolverType_descriptor1666,67252
  static inline const ::std::string& SolverType_Name(SolverType value) {SolverType_Name1669,67336
  static inline bool SolverType_Parse(const ::std::string& name,SolverType_Parse1672,67464
  static const int kNetFieldNumber = 24;kNetFieldNumber1682,67780
  static const int kNetParamFieldNumber = 25;kNetParamFieldNumber1694,68264
  static const int kTrainNetFieldNumber = 1;kTrainNetFieldNumber1703,68653
  static const int kTestNetFieldNumber = 2;kTestNetFieldNumber1715,69172
  static const int kTrainNetParamFieldNumber = 21;kTrainNetParamFieldNumber1731,70034
  static const int kTestNetParamFieldNumber = 22;kTestNetParamFieldNumber1740,70487
  static const int kTrainStateFieldNumber = 26;kTrainStateFieldNumber1752,71064
  static const int kTestStateFieldNumber = 27;kTestStateFieldNumber1761,71462
  static const int kTestIterFieldNumber = 3;kTestIterFieldNumber1773,71979
  static const int kTestIntervalFieldNumber = 4;kTestIntervalFieldNumber1785,72558
  static const int kTestComputeLossFieldNumber = 19;kTestComputeLossFieldNumber1792,72879
  static const int kTestInitializationFieldNumber = 32;kTestInitializationFieldNumber1799,73175
  static const int kBaseLrFieldNumber = 5;kBaseLrFieldNumber1806,73425
  static const int kDisplayFieldNumber = 6;kDisplayFieldNumber1813,73640
  static const int kAverageLossFieldNumber = 33;kAverageLossFieldNumber1820,73926
  static const int kMaxIterFieldNumber = 7;kMaxIterFieldNumber1827,74200
  static const int kIterSizeFieldNumber = 36;kIterSizeFieldNumber1834,74479
  static const int kLrPolicyFieldNumber = 8;kLrPolicyFieldNumber1841,74748
  static const int kGammaFieldNumber = 9;kGammaFieldNumber1853,75257
  static const int kPowerFieldNumber = 10;kPowerFieldNumber1860,75462
  static const int kMomentumFieldNumber = 11;kMomentumFieldNumber1867,75677
  static const int kWeightDecayFieldNumber = 12;kWeightDecayFieldNumber1874,75913
  static const int kRegularizationTypeFieldNumber = 29;kRegularizationTypeFieldNumber1881,76199
  static const int kStepsizeFieldNumber = 13;kStepsizeFieldNumber1893,76809
  static const int kStepvalueFieldNumber = 34;kStepvalueFieldNumber1900,77076
  static const int kClipGradientsFieldNumber = 35;kClipGradientsFieldNumber1912,77662
  static const int kSnapshotFieldNumber = 14;kSnapshotFieldNumber1919,77917
  static const int kSnapshotPrefixFieldNumber = 15;kSnapshotPrefixFieldNumber1926,78203
  static const int kSnapshotDiffFieldNumber = 16;kSnapshotDiffFieldNumber1938,78809
  static const int kSnapshotFormatFieldNumber = 37;kSnapshotFormatFieldNumber1945,79122
  static const int kSolverModeFieldNumber = 17;kSolverModeFieldNumber1952,79487
  static const int kDeviceIdFieldNumber = 18;kDeviceIdFieldNumber1959,79796
  static const int kRandomSeedFieldNumber = 20;kRandomSeedFieldNumber1966,80086
  static const int kTypeFieldNumber = 40;kTypeFieldNumber1973,80365
  static const int kDeltaFieldNumber = 31;kDeltaFieldNumber1985,80850
  static const int kMomentum2FieldNumber = 39;kMomentum2FieldNumber1992,81086
  static const int kRmsDecayFieldNumber = 38;kRmsDecayFieldNumber1999,81333
  static const int kDebugInfoFieldNumber = 23;kDebugInfoFieldNumber2006,81582
  static const int kSnapshotAfterTrainFieldNumber = 28;kSnapshotAfterTrainFieldNumber2013,81861
  static const int kSolverTypeFieldNumber = 30;kSolverTypeFieldNumber2020,82170
  static const int kLayerWiseReduceFieldNumber = 41;kLayerWiseReduceFieldNumber2027,82505
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2106,85441
  ::std::string* net_;net_2108,85498
  ::caffe::NetParameter* net_param_;net_param_2109,85521
  ::std::string* train_net_;train_net_2110,85558
  ::google::protobuf::RepeatedPtrField< ::std::string> test_net_;test_net_2111,85587
  ::caffe::NetParameter* train_net_param_;train_net_param_2112,85653
  ::google::protobuf::RepeatedPtrField< ::caffe::NetParameter > test_net_param_;test_net_param_2113,85696
  ::caffe::NetState* train_state_;train_state_2114,85777
  ::google::protobuf::RepeatedPtrField< ::caffe::NetState > test_state_;test_state_2115,85812
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > test_iter_;test_iter_2116,85885
  ::google::protobuf::int32 test_interval_;test_interval_2117,85962
  float base_lr_;base_lr_2118,86006
  ::google::protobuf::int32 display_;display_2119,86024
  ::google::protobuf::int32 average_loss_;average_loss_2120,86062
  ::google::protobuf::int32 max_iter_;max_iter_2121,86105
  ::google::protobuf::int32 iter_size_;iter_size_2122,86144
  ::std::string* lr_policy_;lr_policy_2123,86184
  float gamma_;gamma_2124,86213
  float power_;power_2125,86229
  float momentum_;momentum_2126,86245
  float weight_decay_;weight_decay_2127,86264
  bool test_compute_loss_;test_compute_loss_2128,86287
  bool test_initialization_;test_initialization_2129,86314
  bool snapshot_diff_;snapshot_diff_2130,86343
  bool debug_info_;debug_info_2131,86366
  ::google::protobuf::int32 stepsize_;stepsize_2132,86386
  ::std::string* regularization_type_;regularization_type_2133,86425
  static ::std::string* _default_regularization_type_;_default_regularization_type_2134,86464
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stepvalue_;stepvalue_2135,86519
  float clip_gradients_;clip_gradients_2136,86596
  ::google::protobuf::int32 snapshot_;snapshot_2137,86621
  ::std::string* snapshot_prefix_;snapshot_prefix_2138,86660
  int snapshot_format_;snapshot_format_2139,86695
  int solver_mode_;solver_mode_2140,86719
  ::google::protobuf::int64 random_seed_;random_seed_2141,86739
  ::google::protobuf::int32 device_id_;device_id_2142,86781
  float delta_;delta_2143,86821
  ::std::string* type_;type_2144,86837
  static ::std::string* _default_type_;_default_type_2145,86861
  float momentum2_;momentum2_2146,86901
  float rms_decay_;rms_decay_2147,86921
  int solver_type_;solver_type_2148,86941
  bool snapshot_after_train_;snapshot_after_train_2149,86961
  bool layer_wise_reduce_;layer_wise_reduce_2150,86991
  mutable int _cached_size_;_cached_size_2152,87019
  ::google::protobuf::uint32 _has_bits_[(41 + 31) / 32];_has_bits_2153,87048
  static SolverParameter* default_instance_;default_instance_2160,87292
class SolverState : public ::google::protobuf::Message {SolverState2164,87412
  inline SolverState& operator=(const SolverState& from) {operator =2171,87563
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2176,87665
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2180,87776
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2205,88693
  static const int kIterFieldNumber = 1;kIterFieldNumber2221,89136
  static const int kLearnedNetFieldNumber = 2;kLearnedNetFieldNumber2228,89396
  static const int kHistoryFieldNumber = 3;kHistoryFieldNumber2240,89940
  static const int kCurrentStepFieldNumber = 4;kCurrentStepFieldNumber2252,90467
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2265,90926
  ::std::string* learned_net_;learned_net_2267,90983
  ::google::protobuf::int32 iter_;iter_2268,91014
  ::google::protobuf::int32 current_step_;current_step_2269,91049
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > history_;history_2270,91092
  mutable int _cached_size_;_cached_size_2272,91164
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_2273,91193
  static SolverState* default_instance_;default_instance_2280,91436
class NetState : public ::google::protobuf::Message {NetState2284,91552
  inline NetState& operator=(const NetState& from) {operator =2291,91688
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2296,91784
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2300,91895
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2325,92797
  static const int kPhaseFieldNumber = 1;kPhaseFieldNumber2341,93267
  static const int kLevelFieldNumber = 2;kLevelFieldNumber2348,93503
  static const int kStageFieldNumber = 3;kStageFieldNumber2355,93748
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2375,94634
  int phase_;phase_2377,94691
  ::google::protobuf::int32 level_;level_2378,94705
  ::google::protobuf::RepeatedPtrField< ::std::string> stage_;stage_2379,94741
  mutable int _cached_size_;_cached_size_2381,94805
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_2382,94834
  static NetState* default_instance_;default_instance_2389,95077
class NetStateRule : public ::google::protobuf::Message {NetStateRule2393,95190
  inline NetStateRule& operator=(const NetStateRule& from) {operator =2400,95346
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2405,95450
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2409,95561
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2434,96483
  static const int kPhaseFieldNumber = 1;kPhaseFieldNumber2450,96936
  static const int kMinLevelFieldNumber = 2;kMinLevelFieldNumber2457,97170
  static const int kMaxLevelFieldNumber = 3;kMaxLevelFieldNumber2464,97437
  static const int kStageFieldNumber = 4;kStageFieldNumber2471,97693
  static const int kNotStageFieldNumber = 5;kNotStageFieldNumber2487,98488
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2509,99505
  int phase_;phase_2511,99562
  ::google::protobuf::int32 min_level_;min_level_2512,99576
  ::google::protobuf::RepeatedPtrField< ::std::string> stage_;stage_2513,99616
  ::google::protobuf::RepeatedPtrField< ::std::string> not_stage_;not_stage_2514,99679
  ::google::protobuf::int32 max_level_;max_level_2515,99746
  mutable int _cached_size_;_cached_size_2517,99787
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];_has_bits_2518,99816
  static NetStateRule* default_instance_;default_instance_2525,100059
class ParamSpec : public ::google::protobuf::Message {ParamSpec2529,100176
  inline ParamSpec& operator=(const ParamSpec& from) {operator =2536,100317
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2541,100415
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2545,100526
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2570,101433
  typedef ParamSpec_DimCheckMode DimCheckMode;DimCheckMode2581,101714
  static const DimCheckMode STRICT = ParamSpec_DimCheckMode_STRICT;STRICT2582,101761
  static const DimCheckMode PERMISSIVE = ParamSpec_DimCheckMode_PERMISSIVE;PERMISSIVE2583,101829
  static inline bool DimCheckMode_IsValid(int value) {DimCheckMode_IsValid2584,101905
  static const DimCheckMode DimCheckMode_MIN =DimCheckMode_MIN2587,102014
  static const DimCheckMode DimCheckMode_MAX =DimCheckMode_MAX2589,102106
  static const int DimCheckMode_ARRAYSIZE =DimCheckMode_ARRAYSIZE2591,102198
  DimCheckMode_descriptor() {DimCheckMode_descriptor2594,102351
  static inline const ::std::string& DimCheckMode_Name(DimCheckMode value) {DimCheckMode_Name2597,102433
  static inline bool DimCheckMode_Parse(const ::std::string& name,DimCheckMode_Parse2600,102561
  static const int kNameFieldNumber = 1;kNameFieldNumber2610,102879
  static const int kShareModeFieldNumber = 2;kShareModeFieldNumber2622,103383
  static const int kLrMultFieldNumber = 3;kLrMultFieldNumber2629,103673
  static const int kDecayMultFieldNumber = 4;kDecayMultFieldNumber2636,103911
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_2651,104384
  ::std::string* name_;name_2653,104441
  int share_mode_;share_mode_2654,104465
  float lr_mult_;lr_mult_2655,104484
  float decay_mult_;decay_mult_2656,104502
  mutable int _cached_size_;_cached_size_2658,104524
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_2659,104553
  static ParamSpec* default_instance_;default_instance_2666,104796
class LayerParameter : public ::google::protobuf::Message {LayerParameter2670,104910
  inline LayerParameter& operator=(const LayerParameter& from) {operator =2677,105076
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields2682,105184
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields2686,105295
  int GetCachedSize() const { return _cached_size_; }GetCachedSize2711,106227
  static const int kNameFieldNumber = 1;kNameFieldNumber2727,106671
  static const int kTypeFieldNumber = 2;kTypeFieldNumber2739,107134
  static const int kBottomFieldNumber = 3;kBottomFieldNumber2751,107603
  static const int kTopFieldNumber = 4;kTopFieldNumber2767,108392
  static const int kPhaseFieldNumber = 10;kPhaseFieldNumber2783,109158
  static const int kLossWeightFieldNumber = 5;kLossWeightFieldNumber2790,109399
  static const int kParamFieldNumber = 6;kParamFieldNumber2802,109863
  static const int kBlobsFieldNumber = 7;kBlobsFieldNumber2814,110354
  static const int kPropagateDownFieldNumber = 11;kPropagateDownFieldNumber2826,110861
  static const int kIncludeFieldNumber = 8;kIncludeFieldNumber2838,111348
  static const int kExcludeFieldNumber = 9;kExcludeFieldNumber2850,111875
  static const int kTransformParamFieldNumber = 100;kTransformParamFieldNumber2862,112439
  static const int kLossParamFieldNumber = 101;kLossParamFieldNumber2871,112928
  static const int kAccuracyParamFieldNumber = 102;kAccuracyParamFieldNumber2880,113363
  static const int kArgmaxParamFieldNumber = 103;kArgmaxParamFieldNumber2889,113830
  static const int kBatchNormParamFieldNumber = 139;kBatchNormParamFieldNumber2898,114292
  static const int kBiasParamFieldNumber = 141;kBiasParamFieldNumber2907,114766
  static const int kConcatParamFieldNumber = 104;kConcatParamFieldNumber2916,115193
  static const int kContrastiveLossParamFieldNumber = 105;kContrastiveLossParamFieldNumber2925,115679
  static const int kConvolutionParamFieldNumber = 106;kConvolutionParamFieldNumber2934,116241
  static const int kCropParamFieldNumber = 144;kCropParamFieldNumber2943,116730
  static const int kDataParamFieldNumber = 107;kDataParamFieldNumber2952,117149
  static const int kDropoutParamFieldNumber = 108;kDropoutParamFieldNumber2961,117580
  static const int kDummyDataParamFieldNumber = 109;kDummyDataParamFieldNumber2970,118052
  static const int kEltwiseParamFieldNumber = 110;kEltwiseParamFieldNumber2979,118538
  static const int kEluParamFieldNumber = 140;kEluParamFieldNumber2988,118983
  static const int kEmbedParamFieldNumber = 137;kEmbedParamFieldNumber2997,119396
  static const int kExpParamFieldNumber = 111;kExpParamFieldNumber3006,119821
  static const int kFlattenParamFieldNumber = 135;kFlattenParamFieldNumber3015,120242
  static const int kHdf5DataParamFieldNumber = 112;kHdf5DataParamFieldNumber3024,120710
  static const int kHdf5OutputParamFieldNumber = 113;kHdf5OutputParamFieldNumber3033,121201
  static const int kHingeLossParamFieldNumber = 114;kHingeLossParamFieldNumber3042,121708
  static const int kImageDataParamFieldNumber = 115;kImageDataParamFieldNumber3051,122205
  static const int kInfogainLossParamFieldNumber = 116;kInfogainLossParamFieldNumber3060,122714
  static const int kInnerProductParamFieldNumber = 117;kInnerProductParamFieldNumber3069,123253
  static const int kInputParamFieldNumber = 143;kInputParamFieldNumber3078,123761
  static const int kLogParamFieldNumber = 134;kLogParamFieldNumber3087,124186
  static const int kLrnParamFieldNumber = 118;kLrnParamFieldNumber3096,124591
  static const int kMemoryDataParamFieldNumber = 119;kMemoryDataParamFieldNumber3105,125027
  static const int kMvnParamFieldNumber = 120;kMvnParamFieldNumber3114,125507
  static const int kParameterParamFieldNumber = 145;kParameterParamFieldNumber3123,125936
  static const int kPoolingParamFieldNumber = 121;kPoolingParamFieldNumber3132,126417
  static const int kPowerParamFieldNumber = 122;kPowerParamFieldNumber3141,126870
  static const int kPreluParamFieldNumber = 131;kPreluParamFieldNumber3150,127303
  static const int kPythonParamFieldNumber = 130;kPythonParamFieldNumber3159,127740
  static const int kRecurrentParamFieldNumber = 146;kRecurrentParamFieldNumber3168,128199
  static const int kReductionParamFieldNumber = 136;kReductionParamFieldNumber3177,128688
  static const int kReluParamFieldNumber = 123;kReluParamFieldNumber3186,129157
  static const int kReshapeParamFieldNumber = 133;kReshapeParamFieldNumber3195,129588
  static const int kScaleParamFieldNumber = 142;kScaleParamFieldNumber3204,130041
  static const int kSigmoidParamFieldNumber = 124;kSigmoidParamFieldNumber3213,130482
  static const int kSoftmaxParamFieldNumber = 125;kSoftmaxParamFieldNumber3222,130943
  static const int kSppParamFieldNumber = 132;kSppParamFieldNumber3231,131388
  static const int kSliceParamFieldNumber = 126;kSliceParamFieldNumber3240,131801
  static const int kTanhParamFieldNumber = 127;kTanhParamFieldNumber3249,132230
  static const int kThresholdParamFieldNumber = 128;kThresholdParamFieldNumber3258,132669
  static const int kTileParamFieldNumber = 138;kTileParamFieldNumber3267,133138
  static const int kWindowDataParamFieldNumber = 129;kWindowDataParamFieldNumber3276,133584
  static const int kQuantizationParamFieldNumber = 180;kQuantizationParamFieldNumber3285,134100
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3396,138591
  ::std::string* name_;name_3398,138648
  ::std::string* type_;type_3399,138672
  ::google::protobuf::RepeatedPtrField< ::std::string> bottom_;bottom_3400,138696
  ::google::protobuf::RepeatedPtrField< ::std::string> top_;top_3401,138760
  ::google::protobuf::RepeatedField< float > loss_weight_;loss_weight_3402,138821
  ::google::protobuf::RepeatedPtrField< ::caffe::ParamSpec > param_;param_3403,138880
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > blobs_;blobs_3404,138949
  ::google::protobuf::RepeatedField< bool > propagate_down_;propagate_down_3405,139018
  ::google::protobuf::RepeatedPtrField< ::caffe::NetStateRule > include_;include_3406,139079
  ::google::protobuf::RepeatedPtrField< ::caffe::NetStateRule > exclude_;exclude_3407,139153
  ::caffe::TransformationParameter* transform_param_;transform_param_3408,139227
  ::caffe::LossParameter* loss_param_;loss_param_3409,139281
  ::caffe::AccuracyParameter* accuracy_param_;accuracy_param_3410,139320
  ::caffe::ArgMaxParameter* argmax_param_;argmax_param_3411,139367
  ::caffe::BatchNormParameter* batch_norm_param_;batch_norm_param_3412,139410
  ::caffe::BiasParameter* bias_param_;bias_param_3413,139460
  ::caffe::ConcatParameter* concat_param_;concat_param_3414,139499
  ::caffe::ContrastiveLossParameter* contrastive_loss_param_;contrastive_loss_param_3415,139542
  ::caffe::ConvolutionParameter* convolution_param_;convolution_param_3416,139604
  ::caffe::CropParameter* crop_param_;crop_param_3417,139657
  ::caffe::DataParameter* data_param_;data_param_3418,139696
  ::caffe::DropoutParameter* dropout_param_;dropout_param_3419,139735
  ::caffe::DummyDataParameter* dummy_data_param_;dummy_data_param_3420,139780
  ::caffe::EltwiseParameter* eltwise_param_;eltwise_param_3421,139830
  ::caffe::ELUParameter* elu_param_;elu_param_3422,139875
  ::caffe::EmbedParameter* embed_param_;embed_param_3423,139912
  ::caffe::ExpParameter* exp_param_;exp_param_3424,139953
  ::caffe::FlattenParameter* flatten_param_;flatten_param_3425,139990
  ::caffe::HDF5DataParameter* hdf5_data_param_;hdf5_data_param_3426,140035
  ::caffe::HDF5OutputParameter* hdf5_output_param_;hdf5_output_param_3427,140083
  ::caffe::HingeLossParameter* hinge_loss_param_;hinge_loss_param_3428,140135
  ::caffe::ImageDataParameter* image_data_param_;image_data_param_3429,140185
  ::caffe::InfogainLossParameter* infogain_loss_param_;infogain_loss_param_3430,140235
  ::caffe::InnerProductParameter* inner_product_param_;inner_product_param_3431,140291
  ::caffe::InputParameter* input_param_;input_param_3432,140347
  ::caffe::LogParameter* log_param_;log_param_3433,140388
  ::caffe::LRNParameter* lrn_param_;lrn_param_3434,140425
  ::caffe::MemoryDataParameter* memory_data_param_;memory_data_param_3435,140462
  ::caffe::MVNParameter* mvn_param_;mvn_param_3436,140514
  ::caffe::ParameterParameter* parameter_param_;parameter_param_3437,140551
  ::caffe::PoolingParameter* pooling_param_;pooling_param_3438,140600
  ::caffe::PowerParameter* power_param_;power_param_3439,140645
  ::caffe::PReLUParameter* prelu_param_;prelu_param_3440,140686
  ::caffe::PythonParameter* python_param_;python_param_3441,140727
  ::caffe::RecurrentParameter* recurrent_param_;recurrent_param_3442,140770
  ::caffe::ReductionParameter* reduction_param_;reduction_param_3443,140819
  ::caffe::ReLUParameter* relu_param_;relu_param_3444,140868
  ::caffe::ReshapeParameter* reshape_param_;reshape_param_3445,140907
  ::caffe::ScaleParameter* scale_param_;scale_param_3446,140952
  ::caffe::SigmoidParameter* sigmoid_param_;sigmoid_param_3447,140993
  ::caffe::SoftmaxParameter* softmax_param_;softmax_param_3448,141038
  ::caffe::SPPParameter* spp_param_;spp_param_3449,141083
  ::caffe::SliceParameter* slice_param_;slice_param_3450,141120
  ::caffe::TanHParameter* tanh_param_;tanh_param_3451,141161
  ::caffe::ThresholdParameter* threshold_param_;threshold_param_3452,141200
  ::caffe::TileParameter* tile_param_;tile_param_3453,141249
  ::caffe::WindowDataParameter* window_data_param_;window_data_param_3454,141288
  ::caffe::QuantizationParameter* quantization_param_;quantization_param_3455,141340
  int phase_;phase_3456,141395
  mutable int _cached_size_;_cached_size_3458,141410
  ::google::protobuf::uint32 _has_bits_[(59 + 31) / 32];_has_bits_3459,141439
  static LayerParameter* default_instance_;default_instance_3466,141683
class TransformationParameter : public ::google::protobuf::Message {TransformationParameter3470,141802
  inline TransformationParameter& operator=(const TransformationParameter& from) {operator =3477,142013
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3482,142139
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3486,142250
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3511,143227
  static const int kScaleFieldNumber = 1;kScaleFieldNumber3527,143687
  static const int kMirrorFieldNumber = 2;kMirrorFieldNumber3534,143911
  static const int kCropSizeFieldNumber = 3;kCropSizeFieldNumber3541,144143
  static const int kMeanFileFieldNumber = 4;kMeanFileFieldNumber3548,144413
  static const int kMeanValueFieldNumber = 5;kMeanValueFieldNumber3560,144937
  static const int kForceColorFieldNumber = 6;kForceColorFieldNumber3572,145419
  static const int kForceGrayFieldNumber = 7;kForceGrayFieldNumber3579,145670
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3598,146301
  float scale_;scale_3600,146358
  ::google::protobuf::uint32 crop_size_;crop_size_3601,146374
  ::std::string* mean_file_;mean_file_3602,146415
  ::google::protobuf::RepeatedField< float > mean_value_;mean_value_3603,146444
  bool mirror_;mirror_3604,146502
  bool force_color_;force_color_3605,146518
  bool force_gray_;force_gray_3606,146539
  mutable int _cached_size_;_cached_size_3608,146560
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];_has_bits_3609,146589
  static TransformationParameter* default_instance_;default_instance_3616,146832
class LossParameter : public ::google::protobuf::Message {LossParameter3620,146960
  inline LossParameter& operator=(const LossParameter& from) {operator =3627,147121
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3632,147227
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3636,147338
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3661,148265
  typedef LossParameter_NormalizationMode NormalizationMode;NormalizationMode3672,148546
  static const NormalizationMode FULL = LossParameter_NormalizationMode_FULL;FULL3673,148607
  static const NormalizationMode VALID = LossParameter_NormalizationMode_VALID;VALID3674,148685
  static const NormalizationMode BATCH_SIZE = LossParameter_NormalizationMode_BATCH_SIZE;BATCH_SIZE3675,148765
  static const NormalizationMode NONE = LossParameter_NormalizationMode_NONE;NONE3676,148855
  static inline bool NormalizationMode_IsValid(int value) {NormalizationMode_IsValid3677,148933
  static const NormalizationMode NormalizationMode_MIN =NormalizationMode_MIN3680,149056
  static const NormalizationMode NormalizationMode_MAX =NormalizationMode_MAX3682,149172
  static const int NormalizationMode_ARRAYSIZE =NormalizationMode_ARRAYSIZE3684,149288
  NormalizationMode_descriptor() {NormalizationMode_descriptor3687,149460
  static inline const ::std::string& NormalizationMode_Name(NormalizationMode value) {NormalizationMode_Name3690,149556
  static inline bool NormalizationMode_Parse(const ::std::string& name,NormalizationMode_Parse3693,149703
  static const int kIgnoreLabelFieldNumber = 1;kIgnoreLabelFieldNumber3703,150063
  static const int kNormalizationFieldNumber = 3;kNormalizationFieldNumber3710,150402
  static const int kNormalizeFieldNumber = 2;kNormalizeFieldNumber3717,150711
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3730,151136
  ::google::protobuf::int32 ignore_label_;ignore_label_3732,151193
  int normalization_;normalization_3733,151236
  bool normalize_;normalize_3734,151258
  mutable int _cached_size_;_cached_size_3736,151278
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_3737,151307
  static LossParameter* default_instance_;default_instance_3744,151550
class AccuracyParameter : public ::google::protobuf::Message {AccuracyParameter3748,151668
  inline AccuracyParameter& operator=(const AccuracyParameter& from) {operator =3755,151849
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3760,151963
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3764,152074
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3789,153021
  static const int kTopKFieldNumber = 1;kTopKFieldNumber3805,153482
  static const int kAxisFieldNumber = 2;kAxisFieldNumber3812,153738
  static const int kIgnoreLabelFieldNumber = 3;kIgnoreLabelFieldNumber3819,154000
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3832,154453
  ::google::protobuf::uint32 top_k_;top_k_3834,154510
  ::google::protobuf::int32 axis_;axis_3835,154547
  ::google::protobuf::int32 ignore_label_;ignore_label_3836,154582
  mutable int _cached_size_;_cached_size_3838,154626
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_3839,154655
  static AccuracyParameter* default_instance_;default_instance_3846,154898
class ArgMaxParameter : public ::google::protobuf::Message {ArgMaxParameter3850,155020
  inline ArgMaxParameter& operator=(const ArgMaxParameter& from) {operator =3857,155191
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3862,155301
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3866,155412
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3891,156349
  static const int kOutMaxValFieldNumber = 1;kOutMaxValFieldNumber3907,156830
  static const int kTopKFieldNumber = 2;kTopKFieldNumber3914,157063
  static const int kAxisFieldNumber = 3;kAxisFieldNumber3921,157305
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_3934,157731
  bool out_max_val_;out_max_val_3936,157788
  ::google::protobuf::uint32 top_k_;top_k_3937,157809
  ::google::protobuf::int32 axis_;axis_3938,157846
  mutable int _cached_size_;_cached_size_3940,157882
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_3941,157911
  static ArgMaxParameter* default_instance_;default_instance_3948,158154
class ConcatParameter : public ::google::protobuf::Message {ConcatParameter3952,158274
  inline ConcatParameter& operator=(const ConcatParameter& from) {operator =3959,158445
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields3964,158555
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields3968,158666
  int GetCachedSize() const { return _cached_size_; }GetCachedSize3993,159603
  static const int kAxisFieldNumber = 2;kAxisFieldNumber4009,160060
  static const int kConcatDimFieldNumber = 1;kConcatDimFieldNumber4016,160331
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4027,160710
  ::google::protobuf::int32 axis_;axis_4029,160767
  ::google::protobuf::uint32 concat_dim_;concat_dim_4030,160802
  mutable int _cached_size_;_cached_size_4032,160845
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_4033,160874
  static ConcatParameter* default_instance_;default_instance_4040,161117
class BatchNormParameter : public ::google::protobuf::Message {BatchNormParameter4044,161237
  inline BatchNormParameter& operator=(const BatchNormParameter& from) {operator =4051,161423
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4056,161539
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4060,161650
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4085,162602
  static const int kUseGlobalStatsFieldNumber = 1;kUseGlobalStatsFieldNumber4101,163080
  static const int kMovingAverageFractionFieldNumber = 2;kMovingAverageFractionFieldNumber4108,163385
  static const int kEpsFieldNumber = 3;kEpsFieldNumber4115,163653
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4128,164083
  bool use_global_stats_;use_global_stats_4130,164140
  float moving_average_fraction_;moving_average_fraction_4131,164166
  float eps_;eps_4132,164200
  mutable int _cached_size_;_cached_size_4134,164215
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_4135,164244
  static BatchNormParameter* default_instance_;default_instance_4142,164487
class BiasParameter : public ::google::protobuf::Message {BiasParameter4146,164610
  inline BiasParameter& operator=(const BiasParameter& from) {operator =4153,164771
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4158,164877
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4162,164988
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4187,165915
  static const int kAxisFieldNumber = 1;kAxisFieldNumber4203,166372
  static const int kNumAxesFieldNumber = 2;kNumAxesFieldNumber4210,166636
  static const int kFillerFieldNumber = 3;kFillerFieldNumber4217,166908
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4232,167457
  ::google::protobuf::int32 axis_;axis_4234,167514
  ::google::protobuf::int32 num_axes_;num_axes_4235,167549
  ::caffe::FillerParameter* filler_;filler_4236,167588
  mutable int _cached_size_;_cached_size_4238,167626
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_4239,167655
  static BiasParameter* default_instance_;default_instance_4246,167898
class ContrastiveLossParameter : public ::google::protobuf::Message {ContrastiveLossParameter4250,168016
  inline ContrastiveLossParameter& operator=(const ContrastiveLossParameter& from) {operator =4257,168232
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4262,168360
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4266,168471
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4291,169453
  static const int kMarginFieldNumber = 1;kMarginFieldNumber4307,169916
  static const int kLegacyVersionFieldNumber = 2;kLegacyVersionFieldNumber4314,170167
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4325,170535
  float margin_;margin_4327,170592
  bool legacy_version_;legacy_version_4328,170609
  mutable int _cached_size_;_cached_size_4330,170634
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_4331,170663
  static ContrastiveLossParameter* default_instance_;default_instance_4338,170906
class ConvolutionParameter : public ::google::protobuf::Message {ConvolutionParameter4342,171035
  inline ConvolutionParameter& operator=(const ConvolutionParameter& from) {operator =4349,171231
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4354,171351
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4358,171462
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4383,172424
  typedef ConvolutionParameter_Engine Engine;Engine4394,172705
  static const Engine DEFAULT = ConvolutionParameter_Engine_DEFAULT;DEFAULT4395,172751
  static const Engine CAFFE = ConvolutionParameter_Engine_CAFFE;CAFFE4396,172820
  static const Engine CUDNN = ConvolutionParameter_Engine_CUDNN;CUDNN4397,172885
  static inline bool Engine_IsValid(int value) {Engine_IsValid4398,172950
  static const Engine Engine_MIN =Engine_MIN4401,173058
  static const Engine Engine_MAX =Engine_MAX4403,173137
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE4405,173216
  Engine_descriptor() {Engine_descriptor4408,173362
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name4411,173443
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse4414,173564
  static const int kNumOutputFieldNumber = 1;kNumOutputFieldNumber4424,173893
  static const int kBiasTermFieldNumber = 2;kBiasTermFieldNumber4431,174181
  static const int kPadFieldNumber = 3;kPadFieldNumber4438,174389
  static const int kKernelSizeFieldNumber = 4;kKernelSizeFieldNumber4450,174919
  static const int kStrideFieldNumber = 6;kStrideFieldNumber4462,175481
  static const int kDilationFieldNumber = 18;kDilationFieldNumber4474,176021
  static const int kPadHFieldNumber = 9;kPadHFieldNumber4486,176578
  static const int kPadWFieldNumber = 10;kPadWFieldNumber4493,176839
  static const int kKernelHFieldNumber = 11;kKernelHFieldNumber4500,177096
  static const int kKernelWFieldNumber = 12;kKernelWFieldNumber4507,177362
  static const int kStrideHFieldNumber = 13;kStrideHFieldNumber4514,177628
  static const int kStrideWFieldNumber = 14;kStrideWFieldNumber4521,177894
  static const int kGroupFieldNumber = 5;kGroupFieldNumber4528,178164
  static const int kWeightFillerFieldNumber = 7;kWeightFillerFieldNumber4535,178451
  static const int kBiasFillerFieldNumber = 8;kBiasFillerFieldNumber4544,178897
  static const int kEngineFieldNumber = 15;kEngineFieldNumber4553,179349
  static const int kAxisFieldNumber = 16;kAxisFieldNumber4560,179631
  static const int kForceNdIm2ColFieldNumber = 17;kForceNdIm2ColFieldNumber4567,179921
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4602,181126
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pad_;pad_4604,181183
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > kernel_size_;kernel_size_4605,181255
  ::google::protobuf::uint32 num_output_;num_output_4606,181335
  ::google::protobuf::uint32 pad_h_;pad_h_4607,181377
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stride_;stride_4608,181414
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dilation_;dilation_4609,181489
  ::google::protobuf::uint32 pad_w_;pad_w_4610,181566
  ::google::protobuf::uint32 kernel_h_;kernel_h_4611,181603
  ::google::protobuf::uint32 kernel_w_;kernel_w_4612,181643
  bool bias_term_;bias_term_4613,181683
  bool force_nd_im2col_;force_nd_im2col_4614,181702
  ::google::protobuf::uint32 stride_h_;stride_h_4615,181727
  ::google::protobuf::uint32 stride_w_;stride_w_4616,181767
  ::caffe::FillerParameter* weight_filler_;weight_filler_4617,181807
  ::google::protobuf::uint32 group_;group_4618,181851
  int engine_;engine_4619,181888
  ::caffe::FillerParameter* bias_filler_;bias_filler_4620,181903
  ::google::protobuf::int32 axis_;axis_4621,181945
  mutable int _cached_size_;_cached_size_4623,181981
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];_has_bits_4624,182010
  static ConvolutionParameter* default_instance_;default_instance_4631,182254
class CropParameter : public ::google::protobuf::Message {CropParameter4635,182379
  inline CropParameter& operator=(const CropParameter& from) {operator =4642,182540
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4647,182646
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4651,182757
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4676,183684
  static const int kAxisFieldNumber = 1;kAxisFieldNumber4692,184141
  static const int kOffsetFieldNumber = 2;kOffsetFieldNumber4699,184386
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4713,184958
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > offset_;offset_4715,185015
  ::google::protobuf::int32 axis_;axis_4716,185090
  mutable int _cached_size_;_cached_size_4718,185126
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_4719,185155
  static CropParameter* default_instance_;default_instance_4726,185398
class DataParameter : public ::google::protobuf::Message {DataParameter4730,185516
  inline DataParameter& operator=(const DataParameter& from) {operator =4737,185677
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4742,185783
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4746,185894
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4771,186821
  typedef DataParameter_DB DB;DB4782,187102
  static const DB LEVELDB = DataParameter_DB_LEVELDB;LEVELDB4783,187133
  static const DB LMDB = DataParameter_DB_LMDB;LMDB4784,187187
  static inline bool DB_IsValid(int value) {DB_IsValid4785,187235
  static const DB DB_MIN =DB_MIN4788,187328
  static const DB DB_MAX =DB_MAX4790,187384
  static const int DB_ARRAYSIZE =DB_ARRAYSIZE4792,187440
  DB_descriptor() {DB_descriptor4795,187567
  static inline const ::std::string& DB_Name(DB value) {DB_Name4798,187633
  static inline bool DB_Parse(const ::std::string& name,DB_Parse4801,187735
  static const int kSourceFieldNumber = 1;kSourceFieldNumber4811,188033
  static const int kBatchSizeFieldNumber = 4;kBatchSizeFieldNumber4823,188532
  static const int kRandSkipFieldNumber = 7;kRandSkipFieldNumber4830,188819
  static const int kBackendFieldNumber = 8;kBackendFieldNumber4837,189120
  static const int kScaleFieldNumber = 2;kScaleFieldNumber4844,189384
  static const int kMeanFileFieldNumber = 3;kMeanFileFieldNumber4851,189601
  static const int kCropSizeFieldNumber = 5;kCropSizeFieldNumber4863,190137
  static const int kMirrorFieldNumber = 6;kMirrorFieldNumber4870,190414
  static const int kForceEncodedColorFieldNumber = 9;kForceEncodedColorFieldNumber4877,190678
  static const int kPrefetchFieldNumber = 10;kPrefetchFieldNumber4884,190945
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_4911,191898
  ::std::string* source_;source_4913,191955
  ::google::protobuf::uint32 batch_size_;batch_size_4914,191981
  ::google::protobuf::uint32 rand_skip_;rand_skip_4915,192023
  int backend_;backend_4916,192064
  float scale_;scale_4917,192080
  ::std::string* mean_file_;mean_file_4918,192096
  ::google::protobuf::uint32 crop_size_;crop_size_4919,192125
  bool mirror_;mirror_4920,192166
  bool force_encoded_color_;force_encoded_color_4921,192182
  ::google::protobuf::uint32 prefetch_;prefetch_4922,192211
  mutable int _cached_size_;_cached_size_4924,192252
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];_has_bits_4925,192281
  static DataParameter* default_instance_;default_instance_4932,192525
class DropoutParameter : public ::google::protobuf::Message {DropoutParameter4936,192643
  inline DropoutParameter& operator=(const DropoutParameter& from) {operator =4943,192819
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields4948,192931
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields4952,193042
  int GetCachedSize() const { return _cached_size_; }GetCachedSize4977,193984
  static const int kDropoutRatioFieldNumber = 1;kDropoutRatioFieldNumber4993,194470
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5002,194761
  float dropout_ratio_;dropout_ratio_5004,194818
  mutable int _cached_size_;_cached_size_5006,194843
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_5007,194872
  static DropoutParameter* default_instance_;default_instance_5014,195115
class DummyDataParameter : public ::google::protobuf::Message {DummyDataParameter5018,195236
  inline DummyDataParameter& operator=(const DummyDataParameter& from) {operator =5025,195422
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5030,195538
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5034,195649
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5059,196601
  static const int kDataFillerFieldNumber = 1;kDataFillerFieldNumber5075,197082
  static const int kShapeFieldNumber = 6;kShapeFieldNumber5087,197638
  static const int kNumFieldNumber = 2;kNumFieldNumber5099,198113
  static const int kChannelsFieldNumber = 3;kChannelsFieldNumber5111,198634
  static const int kHeightFieldNumber = 4;kHeightFieldNumber5123,199179
  static const int kWidthFieldNumber = 5;kWidthFieldNumber5135,199709
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5147,200218
  ::google::protobuf::RepeatedPtrField< ::caffe::FillerParameter > data_filler_;data_filler_5149,200275
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobShape > shape_;shape_5150,200356
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > num_;num_5151,200425
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > channels_;channels_5152,200497
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > height_;height_5153,200574
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > width_;width_5154,200649
  mutable int _cached_size_;_cached_size_5156,200724
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];_has_bits_5157,200753
  static DummyDataParameter* default_instance_;default_instance_5164,200996
class EltwiseParameter : public ::google::protobuf::Message {EltwiseParameter5168,201119
  inline EltwiseParameter& operator=(const EltwiseParameter& from) {operator =5175,201295
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5180,201407
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5184,201518
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5209,202460
  typedef EltwiseParameter_EltwiseOp EltwiseOp;EltwiseOp5220,202741
  static const EltwiseOp PROD = EltwiseParameter_EltwiseOp_PROD;PROD5221,202789
  static const EltwiseOp SUM = EltwiseParameter_EltwiseOp_SUM;SUM5222,202854
  static const EltwiseOp MAX = EltwiseParameter_EltwiseOp_MAX;MAX5223,202917
  static inline bool EltwiseOp_IsValid(int value) {EltwiseOp_IsValid5224,202980
  static const EltwiseOp EltwiseOp_MIN =EltwiseOp_MIN5227,203090
  static const EltwiseOp EltwiseOp_MAX =EltwiseOp_MAX5229,203177
  static const int EltwiseOp_ARRAYSIZE =EltwiseOp_ARRAYSIZE5231,203264
  EltwiseOp_descriptor() {EltwiseOp_descriptor5234,203415
  static inline const ::std::string& EltwiseOp_Name(EltwiseOp value) {EltwiseOp_Name5237,203498
  static inline bool EltwiseOp_Parse(const ::std::string& name,EltwiseOp_Parse5240,203624
  static const int kOperationFieldNumber = 1;kOperationFieldNumber5250,203998
  static const int kCoeffFieldNumber = 2;kCoeffFieldNumber5257,204274
  static const int kStableProdGradFieldNumber = 3;kStableProdGradFieldNumber5269,204741
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5280,205116
  ::google::protobuf::RepeatedField< float > coeff_;coeff_5282,205173
  int operation_;operation_5283,205226
  bool stable_prod_grad_;stable_prod_grad_5284,205244
  mutable int _cached_size_;_cached_size_5286,205271
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_5287,205300
  static EltwiseParameter* default_instance_;default_instance_5294,205543
class ELUParameter : public ::google::protobuf::Message {ELUParameter5298,205664
  inline ELUParameter& operator=(const ELUParameter& from) {operator =5305,205820
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5310,205924
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5314,206035
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5339,206957
  static const int kAlphaFieldNumber = 1;kAlphaFieldNumber5355,207417
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5364,207665
  float alpha_;alpha_5366,207722
  mutable int _cached_size_;_cached_size_5368,207739
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_5369,207768
  static ELUParameter* default_instance_;default_instance_5376,208011
class EmbedParameter : public ::google::protobuf::Message {EmbedParameter5380,208128
  inline EmbedParameter& operator=(const EmbedParameter& from) {operator =5387,208294
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5392,208402
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5396,208513
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5421,209445
  static const int kNumOutputFieldNumber = 1;kNumOutputFieldNumber5437,209907
  static const int kInputDimFieldNumber = 2;kInputDimFieldNumber5444,210180
  static const int kBiasTermFieldNumber = 3;kBiasTermFieldNumber5451,210465
  static const int kWeightFillerFieldNumber = 4;kWeightFillerFieldNumber5458,210719
  static const int kBiasFillerFieldNumber = 5;kBiasFillerFieldNumber5467,211165
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5486,211920
  ::google::protobuf::uint32 num_output_;num_output_5488,211977
  ::google::protobuf::uint32 input_dim_;input_dim_5489,212019
  ::caffe::FillerParameter* weight_filler_;weight_filler_5490,212060
  ::caffe::FillerParameter* bias_filler_;bias_filler_5491,212104
  bool bias_term_;bias_term_5492,212146
  mutable int _cached_size_;_cached_size_5494,212166
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];_has_bits_5495,212195
  static EmbedParameter* default_instance_;default_instance_5502,212438
class ExpParameter : public ::google::protobuf::Message {ExpParameter5506,212557
  inline ExpParameter& operator=(const ExpParameter& from) {operator =5513,212713
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5518,212817
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5522,212928
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5547,213850
  static const int kBaseFieldNumber = 1;kBaseFieldNumber5563,214308
  static const int kScaleFieldNumber = 2;kScaleFieldNumber5570,214523
  static const int kShiftFieldNumber = 3;kShiftFieldNumber5577,214741
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5590,215115
  float base_;base_5592,215172
  float scale_;scale_5593,215187
  float shift_;shift_5594,215203
  mutable int _cached_size_;_cached_size_5596,215220
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_5597,215249
  static ExpParameter* default_instance_;default_instance_5604,215492
class FlattenParameter : public ::google::protobuf::Message {FlattenParameter5608,215609
  inline FlattenParameter& operator=(const FlattenParameter& from) {operator =5615,215785
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5620,215897
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5624,216008
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5649,216950
  static const int kAxisFieldNumber = 1;kAxisFieldNumber5665,217407
  static const int kEndAxisFieldNumber = 2;kEndAxisFieldNumber5672,217672
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5683,218040
  ::google::protobuf::int32 axis_;axis_5685,218097
  ::google::protobuf::int32 end_axis_;end_axis_5686,218132
  mutable int _cached_size_;_cached_size_5688,218172
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_5689,218201
  static FlattenParameter* default_instance_;default_instance_5696,218444
class HDF5DataParameter : public ::google::protobuf::Message {HDF5DataParameter5700,218565
  inline HDF5DataParameter& operator=(const HDF5DataParameter& from) {operator =5707,218746
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5712,218860
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5716,218971
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5741,219918
  static const int kSourceFieldNumber = 1;kSourceFieldNumber5757,220368
  static const int kBatchSizeFieldNumber = 2;kBatchSizeFieldNumber5769,220867
  static const int kShuffleFieldNumber = 3;kShuffleFieldNumber5776,221150
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5789,221551
  ::std::string* source_;source_5791,221608
  ::google::protobuf::uint32 batch_size_;batch_size_5792,221634
  bool shuffle_;shuffle_5793,221676
  mutable int _cached_size_;_cached_size_5795,221694
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_5796,221723
  static HDF5DataParameter* default_instance_;default_instance_5803,221966
class HDF5OutputParameter : public ::google::protobuf::Message {HDF5OutputParameter5807,222088
  inline HDF5OutputParameter& operator=(const HDF5OutputParameter& from) {operator =5814,222279
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5819,222397
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5823,222508
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5848,223465
  static const int kFileNameFieldNumber = 1;kFileNameFieldNumber5864,223924
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5878,224492
  ::std::string* file_name_;file_name_5880,224549
  mutable int _cached_size_;_cached_size_5882,224579
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_5883,224608
  static HDF5OutputParameter* default_instance_;default_instance_5890,224851
class HingeLossParameter : public ::google::protobuf::Message {HingeLossParameter5894,224975
  inline HingeLossParameter& operator=(const HingeLossParameter& from) {operator =5901,225161
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields5906,225277
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields5910,225388
  int GetCachedSize() const { return _cached_size_; }GetCachedSize5935,226340
  typedef HingeLossParameter_Norm Norm;Norm5946,226621
  static const Norm L1 = HingeLossParameter_Norm_L1;L15947,226661
  static const Norm L2 = HingeLossParameter_Norm_L2;L25948,226714
  static inline bool Norm_IsValid(int value) {Norm_IsValid5949,226767
  static const Norm Norm_MIN =Norm_MIN5952,226869
  static const Norm Norm_MAX =Norm_MAX5954,226938
  static const int Norm_ARRAYSIZE =Norm_ARRAYSIZE5956,227007
  Norm_descriptor() {Norm_descriptor5959,227145
  static inline const ::std::string& Norm_Name(Norm value) {Norm_Name5962,227220
  static inline bool Norm_Parse(const ::std::string& name,Norm_Parse5965,227333
  static const int kNormFieldNumber = 1;kNormFieldNumber5975,227675
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_5984,227978
  int norm_;norm_5986,228035
  mutable int _cached_size_;_cached_size_5988,228049
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_5989,228078
  static HingeLossParameter* default_instance_;default_instance_5996,228321
class ImageDataParameter : public ::google::protobuf::Message {ImageDataParameter6000,228444
  inline ImageDataParameter& operator=(const ImageDataParameter& from) {operator =6007,228630
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6012,228746
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6016,228857
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6041,229809
  static const int kSourceFieldNumber = 1;kSourceFieldNumber6057,230259
  static const int kBatchSizeFieldNumber = 4;kBatchSizeFieldNumber6069,230772
  static const int kRandSkipFieldNumber = 7;kRandSkipFieldNumber6076,231059
  static const int kShuffleFieldNumber = 8;kShuffleFieldNumber6083,231339
  static const int kNewHeightFieldNumber = 9;kNewHeightFieldNumber6090,231577
  static const int kNewWidthFieldNumber = 10;kNewWidthFieldNumber6097,231865
  static const int kIsColorFieldNumber = 11;kIsColorFieldNumber6104,232149
  static const int kScaleFieldNumber = 2;kScaleFieldNumber6111,232374
  static const int kMeanFileFieldNumber = 3;kMeanFileFieldNumber6118,232591
  static const int kCropSizeFieldNumber = 5;kCropSizeFieldNumber6130,233127
  static const int kMirrorFieldNumber = 6;kMirrorFieldNumber6137,233404
  static const int kRootFolderFieldNumber = 12;kRootFolderFieldNumber6144,233644
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6180,235004
  ::std::string* source_;source_6182,235061
  ::google::protobuf::uint32 batch_size_;batch_size_6183,235087
  ::google::protobuf::uint32 rand_skip_;rand_skip_6184,235129
  ::google::protobuf::uint32 new_height_;new_height_6185,235170
  ::google::protobuf::uint32 new_width_;new_width_6186,235212
  bool shuffle_;shuffle_6187,235253
  bool is_color_;is_color_6188,235270
  bool mirror_;mirror_6189,235288
  float scale_;scale_6190,235304
  ::std::string* mean_file_;mean_file_6191,235320
  ::std::string* root_folder_;root_folder_6192,235349
  ::google::protobuf::uint32 crop_size_;crop_size_6193,235380
  mutable int _cached_size_;_cached_size_6195,235422
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];_has_bits_6196,235451
  static ImageDataParameter* default_instance_;default_instance_6203,235695
class InfogainLossParameter : public ::google::protobuf::Message {InfogainLossParameter6207,235818
  inline InfogainLossParameter& operator=(const InfogainLossParameter& from) {operator =6214,236019
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6219,236141
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6223,236252
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6248,237219
  static const int kSourceFieldNumber = 1;kSourceFieldNumber6264,237669
  static const int kAxisFieldNumber = 2;kAxisFieldNumber6276,238163
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6287,238521
  ::std::string* source_;source_6289,238578
  ::google::protobuf::int32 axis_;axis_6290,238604
  mutable int _cached_size_;_cached_size_6292,238640
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_6293,238669
  static InfogainLossParameter* default_instance_;default_instance_6300,238912
class InnerProductParameter : public ::google::protobuf::Message {InnerProductParameter6304,239038
  inline InnerProductParameter& operator=(const InnerProductParameter& from) {operator =6311,239239
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6316,239361
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6320,239472
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6345,240439
  static const int kNumOutputFieldNumber = 1;kNumOutputFieldNumber6361,240901
  static const int kBiasTermFieldNumber = 2;kBiasTermFieldNumber6368,241189
  static const int kWeightFillerFieldNumber = 3;kWeightFillerFieldNumber6375,241443
  static const int kBiasFillerFieldNumber = 4;kBiasFillerFieldNumber6384,241889
  static const int kAxisFieldNumber = 5;kAxisFieldNumber6393,242299
  static const int kTransposeFieldNumber = 6;kTransposeFieldNumber6400,242569
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6419,243208
  ::caffe::FillerParameter* weight_filler_;weight_filler_6421,243265
  ::google::protobuf::uint32 num_output_;num_output_6422,243309
  bool bias_term_;bias_term_6423,243351
  bool transpose_;transpose_6424,243370
  ::caffe::FillerParameter* bias_filler_;bias_filler_6425,243389
  ::google::protobuf::int32 axis_;axis_6426,243431
  mutable int _cached_size_;_cached_size_6428,243467
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];_has_bits_6429,243496
  static InnerProductParameter* default_instance_;default_instance_6436,243739
class InputParameter : public ::google::protobuf::Message {InputParameter6440,243865
  inline InputParameter& operator=(const InputParameter& from) {operator =6447,244031
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6452,244139
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6456,244250
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6481,245182
  static const int kShapeFieldNumber = 1;kShapeFieldNumber6497,245639
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6509,246101
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobShape > shape_;shape_6511,246158
  mutable int _cached_size_;_cached_size_6513,246228
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_6514,246257
  static InputParameter* default_instance_;default_instance_6521,246500
class LogParameter : public ::google::protobuf::Message {LogParameter6525,246619
  inline LogParameter& operator=(const LogParameter& from) {operator =6532,246775
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6537,246879
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6541,246990
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6566,247912
  static const int kBaseFieldNumber = 1;kBaseFieldNumber6582,248370
  static const int kScaleFieldNumber = 2;kScaleFieldNumber6589,248585
  static const int kShiftFieldNumber = 3;kShiftFieldNumber6596,248803
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6609,249177
  float base_;base_6611,249234
  float scale_;scale_6612,249249
  float shift_;shift_6613,249265
  mutable int _cached_size_;_cached_size_6615,249282
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_6616,249311
  static LogParameter* default_instance_;default_instance_6623,249554
class LRNParameter : public ::google::protobuf::Message {LRNParameter6627,249671
  inline LRNParameter& operator=(const LRNParameter& from) {operator =6634,249827
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6639,249931
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6643,250042
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6668,250964
  typedef LRNParameter_NormRegion NormRegion;NormRegion6679,251245
  static const NormRegion ACROSS_CHANNELS = LRNParameter_NormRegion_ACROSS_CHANNELS;ACROSS_CHANNELS6680,251291
  static const NormRegion WITHIN_CHANNEL = LRNParameter_NormRegion_WITHIN_CHANNEL;WITHIN_CHANNEL6681,251376
  static inline bool NormRegion_IsValid(int value) {NormRegion_IsValid6682,251459
  static const NormRegion NormRegion_MIN =NormRegion_MIN6685,251567
  static const NormRegion NormRegion_MAX =NormRegion_MAX6687,251654
  static const int NormRegion_ARRAYSIZE =NormRegion_ARRAYSIZE6689,251741
  NormRegion_descriptor() {NormRegion_descriptor6692,251891
  static inline const ::std::string& NormRegion_Name(NormRegion value) {NormRegion_Name6695,251972
  static inline bool NormRegion_Parse(const ::std::string& name,NormRegion_Parse6698,252097
  typedef LRNParameter_Engine Engine;Engine6703,252249
  static const Engine DEFAULT = LRNParameter_Engine_DEFAULT;DEFAULT6704,252287
  static const Engine CAFFE = LRNParameter_Engine_CAFFE;CAFFE6705,252348
  static const Engine CUDNN = LRNParameter_Engine_CUDNN;CUDNN6706,252405
  static inline bool Engine_IsValid(int value) {Engine_IsValid6707,252462
  static const Engine Engine_MIN =Engine_MIN6710,252562
  static const Engine Engine_MAX =Engine_MAX6712,252633
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE6714,252704
  Engine_descriptor() {Engine_descriptor6717,252842
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name6720,252915
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse6723,253028
  static const int kLocalSizeFieldNumber = 1;kLocalSizeFieldNumber6733,253363
  static const int kAlphaFieldNumber = 2;kAlphaFieldNumber6740,253637
  static const int kBetaFieldNumber = 3;kBetaFieldNumber6747,253855
  static const int kNormRegionFieldNumber = 4;kNormRegionFieldNumber6754,254127
  static const int kKFieldNumber = 5;kKFieldNumber6761,254404
  static const int kEngineFieldNumber = 6;kEngineFieldNumber6768,254640
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6787,255271
  ::google::protobuf::uint32 local_size_;local_size_6789,255328
  float alpha_;alpha_6790,255370
  float beta_;beta_6791,255386
  int norm_region_;norm_region_6792,255401
  float k_;k_6793,255421
  int engine_;engine_6794,255433
  mutable int _cached_size_;_cached_size_6796,255449
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];_has_bits_6797,255478
  static LRNParameter* default_instance_;default_instance_6804,255721
class MemoryDataParameter : public ::google::protobuf::Message {MemoryDataParameter6808,255838
  inline MemoryDataParameter& operator=(const MemoryDataParameter& from) {operator =6815,256029
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6820,256147
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6824,256258
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6849,257215
  static const int kBatchSizeFieldNumber = 1;kBatchSizeFieldNumber6865,257677
  static const int kChannelsFieldNumber = 2;kChannelsFieldNumber6872,257947
  static const int kHeightFieldNumber = 3;kHeightFieldNumber6879,258206
  static const int kWidthFieldNumber = 4;kWidthFieldNumber6886,258456
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_6901,258963
  ::google::protobuf::uint32 batch_size_;batch_size_6903,259020
  ::google::protobuf::uint32 channels_;channels_6904,259062
  ::google::protobuf::uint32 height_;height_6905,259102
  ::google::protobuf::uint32 width_;width_6906,259140
  mutable int _cached_size_;_cached_size_6908,259178
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_6909,259207
  static MemoryDataParameter* default_instance_;default_instance_6916,259450
class MVNParameter : public ::google::protobuf::Message {MVNParameter6920,259574
  inline MVNParameter& operator=(const MVNParameter& from) {operator =6927,259730
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields6932,259834
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields6936,259945
  int GetCachedSize() const { return _cached_size_; }GetCachedSize6961,260867
  static const int kNormalizeVarianceFieldNumber = 1;kNormalizeVarianceFieldNumber6977,261368
  static const int kAcrossChannelsFieldNumber = 2;kAcrossChannelsFieldNumber6984,261655
  static const int kEpsFieldNumber = 3;kEpsFieldNumber6991,261898
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7004,262310
  bool normalize_variance_;normalize_variance_7006,262367
  bool across_channels_;across_channels_7007,262395
  float eps_;eps_7008,262420
  mutable int _cached_size_;_cached_size_7010,262435
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_7011,262464
  static MVNParameter* default_instance_;default_instance_7018,262707
class ParameterParameter : public ::google::protobuf::Message {ParameterParameter7022,262824
  inline ParameterParameter& operator=(const ParameterParameter& from) {operator =7029,263010
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7034,263126
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7038,263237
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7063,264189
  static const int kShapeFieldNumber = 1;kShapeFieldNumber7079,264646
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7090,265036
  ::caffe::BlobShape* shape_;shape_7092,265093
  mutable int _cached_size_;_cached_size_7094,265124
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_7095,265153
  static ParameterParameter* default_instance_;default_instance_7102,265396
class PoolingParameter : public ::google::protobuf::Message {PoolingParameter7106,265519
  inline PoolingParameter& operator=(const PoolingParameter& from) {operator =7113,265695
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7118,265807
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7122,265918
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7147,266860
  typedef PoolingParameter_PoolMethod PoolMethod;PoolMethod7158,267141
  static const PoolMethod MAX = PoolingParameter_PoolMethod_MAX;MAX7159,267191
  static const PoolMethod AVE = PoolingParameter_PoolMethod_AVE;AVE7160,267256
  static const PoolMethod STOCHASTIC = PoolingParameter_PoolMethod_STOCHASTIC;STOCHASTIC7161,267321
  static inline bool PoolMethod_IsValid(int value) {PoolMethod_IsValid7162,267400
  static const PoolMethod PoolMethod_MIN =PoolMethod_MIN7165,267512
  static const PoolMethod PoolMethod_MAX =PoolMethod_MAX7167,267603
  static const int PoolMethod_ARRAYSIZE =PoolMethod_ARRAYSIZE7169,267694
  PoolMethod_descriptor() {PoolMethod_descriptor7172,267848
  static inline const ::std::string& PoolMethod_Name(PoolMethod value) {PoolMethod_Name7175,267933
  static inline bool PoolMethod_Parse(const ::std::string& name,PoolMethod_Parse7178,268062
  typedef PoolingParameter_Engine Engine;Engine7183,268218
  static const Engine DEFAULT = PoolingParameter_Engine_DEFAULT;DEFAULT7184,268260
  static const Engine CAFFE = PoolingParameter_Engine_CAFFE;CAFFE7185,268325
  static const Engine CUDNN = PoolingParameter_Engine_CUDNN;CUDNN7186,268386
  static inline bool Engine_IsValid(int value) {Engine_IsValid7187,268447
  static const Engine Engine_MIN =Engine_MIN7190,268551
  static const Engine Engine_MAX =Engine_MAX7192,268626
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE7194,268701
  Engine_descriptor() {Engine_descriptor7197,268843
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name7200,268920
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse7203,269037
  static const int kPoolFieldNumber = 1;kPoolFieldNumber7213,269388
  static const int kPadFieldNumber = 4;kPadFieldNumber7220,269660
  static const int kPadHFieldNumber = 9;kPadHFieldNumber7227,269915
  static const int kPadWFieldNumber = 10;kPadWFieldNumber7234,270176
  static const int kKernelSizeFieldNumber = 2;kKernelSizeFieldNumber7241,270441
  static const int kKernelHFieldNumber = 5;kKernelHFieldNumber7248,270714
  static const int kKernelWFieldNumber = 6;kKernelWFieldNumber7255,270978
  static const int kStrideFieldNumber = 3;kStrideFieldNumber7262,271250
  static const int kStrideHFieldNumber = 7;kStrideHFieldNumber7269,271509
  static const int kStrideWFieldNumber = 8;kStrideWFieldNumber7276,271773
  static const int kEngineFieldNumber = 11;kEngineFieldNumber7283,272076
  static const int kGlobalPoolingFieldNumber = 12;kGlobalPoolingFieldNumber7290,272383
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7321,273416
  int pool_;pool_7323,273473
  ::google::protobuf::uint32 pad_;pad_7324,273486
  ::google::protobuf::uint32 pad_h_;pad_h_7325,273521
  ::google::protobuf::uint32 pad_w_;pad_w_7326,273558
  ::google::protobuf::uint32 kernel_size_;kernel_size_7327,273595
  ::google::protobuf::uint32 kernel_h_;kernel_h_7328,273638
  ::google::protobuf::uint32 kernel_w_;kernel_w_7329,273678
  ::google::protobuf::uint32 stride_;stride_7330,273718
  ::google::protobuf::uint32 stride_h_;stride_h_7331,273756
  ::google::protobuf::uint32 stride_w_;stride_w_7332,273796
  int engine_;engine_7333,273836
  bool global_pooling_;global_pooling_7334,273851
  mutable int _cached_size_;_cached_size_7336,273876
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];_has_bits_7337,273905
  static PoolingParameter* default_instance_;default_instance_7344,274149
class PowerParameter : public ::google::protobuf::Message {PowerParameter7348,274270
  inline PowerParameter& operator=(const PowerParameter& from) {operator =7355,274436
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7360,274544
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7364,274655
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7389,275587
  static const int kPowerFieldNumber = 1;kPowerFieldNumber7405,276047
  static const int kScaleFieldNumber = 2;kScaleFieldNumber7412,276265
  static const int kShiftFieldNumber = 3;kShiftFieldNumber7419,276483
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7432,276861
  float power_;power_7434,276918
  float scale_;scale_7435,276934
  float shift_;shift_7436,276950
  mutable int _cached_size_;_cached_size_7438,276967
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_7439,276996
  static PowerParameter* default_instance_;default_instance_7446,277239
class PythonParameter : public ::google::protobuf::Message {PythonParameter7450,277358
  inline PythonParameter& operator=(const PythonParameter& from) {operator =7457,277529
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7462,277639
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7466,277750
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7491,278687
  static const int kModuleFieldNumber = 1;kModuleFieldNumber7507,279137
  static const int kLayerFieldNumber = 2;kLayerFieldNumber7519,279621
  static const int kParamStrFieldNumber = 3;kParamStrFieldNumber7531,280123
  static const int kShareInParallelFieldNumber = 4;kShareInParallelFieldNumber7543,280685
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7558,281194
  ::std::string* module_;module_7560,281251
  ::std::string* layer_;layer_7561,281277
  ::std::string* param_str_;param_str_7562,281302
  bool share_in_parallel_;share_in_parallel_7563,281331
  mutable int _cached_size_;_cached_size_7565,281359
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_7566,281388
  static PythonParameter* default_instance_;default_instance_7573,281631
class RecurrentParameter : public ::google::protobuf::Message {RecurrentParameter7577,281751
  inline RecurrentParameter& operator=(const RecurrentParameter& from) {operator =7584,281937
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7589,282053
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7593,282164
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7618,283116
  static const int kNumOutputFieldNumber = 1;kNumOutputFieldNumber7634,283592
  static const int kWeightFillerFieldNumber = 2;kWeightFillerFieldNumber7641,283893
  static const int kBiasFillerFieldNumber = 3;kBiasFillerFieldNumber7650,284339
  static const int kDebugInfoFieldNumber = 4;kDebugInfoFieldNumber7659,284770
  static const int kExposeHiddenFieldNumber = 5;kExposeHiddenFieldNumber7666,285027
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7683,285622
  ::caffe::FillerParameter* weight_filler_;weight_filler_7685,285679
  ::caffe::FillerParameter* bias_filler_;bias_filler_7686,285723
  ::google::protobuf::uint32 num_output_;num_output_7687,285765
  bool debug_info_;debug_info_7688,285807
  bool expose_hidden_;expose_hidden_7689,285827
  mutable int _cached_size_;_cached_size_7691,285851
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];_has_bits_7692,285880
  static RecurrentParameter* default_instance_;default_instance_7699,286123
class ReductionParameter : public ::google::protobuf::Message {ReductionParameter7703,286246
  inline ReductionParameter& operator=(const ReductionParameter& from) {operator =7710,286432
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7715,286548
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7719,286659
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7744,287611
  typedef ReductionParameter_ReductionOp ReductionOp;ReductionOp7755,287892
  static const ReductionOp SUM = ReductionParameter_ReductionOp_SUM;SUM7756,287946
  static const ReductionOp ASUM = ReductionParameter_ReductionOp_ASUM;ASUM7757,288015
  static const ReductionOp SUMSQ = ReductionParameter_ReductionOp_SUMSQ;SUMSQ7758,288086
  static const ReductionOp MEAN = ReductionParameter_ReductionOp_MEAN;MEAN7759,288159
  static inline bool ReductionOp_IsValid(int value) {ReductionOp_IsValid7760,288230
  static const ReductionOp ReductionOp_MIN =ReductionOp_MIN7763,288346
  static const ReductionOp ReductionOp_MAX =ReductionOp_MAX7765,288443
  static const int ReductionOp_ARRAYSIZE =ReductionOp_ARRAYSIZE7767,288540
  ReductionOp_descriptor() {ReductionOp_descriptor7770,288699
  static inline const ::std::string& ReductionOp_Name(ReductionOp value) {ReductionOp_Name7773,288788
  static inline bool ReductionOp_Parse(const ::std::string& name,ReductionOp_Parse7776,288922
  static const int kOperationFieldNumber = 1;kOperationFieldNumber7786,289308
  static const int kAxisFieldNumber = 2;kAxisFieldNumber7793,289603
  static const int kCoeffFieldNumber = 3;kCoeffFieldNumber7800,289858
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7813,290246
  int operation_;operation_7815,290303
  ::google::protobuf::int32 axis_;axis_7816,290321
  float coeff_;coeff_7817,290356
  mutable int _cached_size_;_cached_size_7819,290373
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_7820,290402
  static ReductionParameter* default_instance_;default_instance_7827,290645
class ReLUParameter : public ::google::protobuf::Message {ReLUParameter7831,290768
  inline ReLUParameter& operator=(const ReLUParameter& from) {operator =7838,290929
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7843,291035
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7847,291146
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7872,292073
  typedef ReLUParameter_Engine Engine;Engine7883,292354
  static const Engine DEFAULT = ReLUParameter_Engine_DEFAULT;DEFAULT7884,292393
  static const Engine CAFFE = ReLUParameter_Engine_CAFFE;CAFFE7885,292455
  static const Engine CUDNN = ReLUParameter_Engine_CUDNN;CUDNN7886,292513
  static inline bool Engine_IsValid(int value) {Engine_IsValid7887,292571
  static const Engine Engine_MIN =Engine_MIN7890,292672
  static const Engine Engine_MAX =Engine_MAX7892,292744
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE7894,292816
  Engine_descriptor() {Engine_descriptor7897,292955
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name7900,293029
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse7903,293143
  static const int kNegativeSlopeFieldNumber = 1;kNegativeSlopeFieldNumber7913,293490
  static const int kEngineFieldNumber = 2;kEngineFieldNumber7920,293765
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_7931,294149
  float negative_slope_;negative_slope_7933,294206
  int engine_;engine_7934,294231
  mutable int _cached_size_;_cached_size_7936,294247
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_7937,294276
  static ReLUParameter* default_instance_;default_instance_7944,294519
class ReshapeParameter : public ::google::protobuf::Message {ReshapeParameter7948,294637
  inline ReshapeParameter& operator=(const ReshapeParameter& from) {operator =7955,294813
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields7960,294925
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields7964,295036
  int GetCachedSize() const { return _cached_size_; }GetCachedSize7989,295978
  static const int kShapeFieldNumber = 1;kShapeFieldNumber8005,296435
  static const int kAxisFieldNumber = 2;kAxisFieldNumber8014,296786
  static const int kNumAxesFieldNumber = 3;kNumAxesFieldNumber8021,297051
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8034,297483
  ::caffe::BlobShape* shape_;shape_8036,297540
  ::google::protobuf::int32 axis_;axis_8037,297570
  ::google::protobuf::int32 num_axes_;num_axes_8038,297605
  mutable int _cached_size_;_cached_size_8040,297645
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_8041,297674
  static ReshapeParameter* default_instance_;default_instance_8048,297917
class ScaleParameter : public ::google::protobuf::Message {ScaleParameter8052,298038
  inline ScaleParameter& operator=(const ScaleParameter& from) {operator =8059,298204
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8064,298312
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8068,298423
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8093,299355
  static const int kAxisFieldNumber = 1;kAxisFieldNumber8109,299812
  static const int kNumAxesFieldNumber = 2;kNumAxesFieldNumber8116,300076
  static const int kFillerFieldNumber = 3;kFillerFieldNumber8123,300348
  static const int kBiasTermFieldNumber = 4;kBiasTermFieldNumber8132,300747
  static const int kBiasFillerFieldNumber = 5;kBiasFillerFieldNumber8139,300995
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8158,301722
  ::google::protobuf::int32 axis_;axis_8160,301779
  ::google::protobuf::int32 num_axes_;num_axes_8161,301814
  ::caffe::FillerParameter* filler_;filler_8162,301853
  ::caffe::FillerParameter* bias_filler_;bias_filler_8163,301890
  bool bias_term_;bias_term_8164,301932
  mutable int _cached_size_;_cached_size_8166,301952
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];_has_bits_8167,301981
  static ScaleParameter* default_instance_;default_instance_8174,302224
class SigmoidParameter : public ::google::protobuf::Message {SigmoidParameter8178,302343
  inline SigmoidParameter& operator=(const SigmoidParameter& from) {operator =8185,302519
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8190,302631
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8194,302742
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8219,303684
  typedef SigmoidParameter_Engine Engine;Engine8230,303965
  static const Engine DEFAULT = SigmoidParameter_Engine_DEFAULT;DEFAULT8231,304007
  static const Engine CAFFE = SigmoidParameter_Engine_CAFFE;CAFFE8232,304072
  static const Engine CUDNN = SigmoidParameter_Engine_CUDNN;CUDNN8233,304133
  static inline bool Engine_IsValid(int value) {Engine_IsValid8234,304194
  static const Engine Engine_MIN =Engine_MIN8237,304298
  static const Engine Engine_MAX =Engine_MAX8239,304373
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE8241,304448
  Engine_descriptor() {Engine_descriptor8244,304590
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name8247,304667
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse8250,304784
  static const int kEngineFieldNumber = 1;kEngineFieldNumber8260,305141
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8269,305452
  int engine_;engine_8271,305509
  mutable int _cached_size_;_cached_size_8273,305525
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_8274,305554
  static SigmoidParameter* default_instance_;default_instance_8281,305797
class SliceParameter : public ::google::protobuf::Message {SliceParameter8285,305918
  inline SliceParameter& operator=(const SliceParameter& from) {operator =8292,306084
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8297,306192
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8301,306303
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8326,307235
  static const int kAxisFieldNumber = 3;kAxisFieldNumber8342,307692
  static const int kSlicePointFieldNumber = 2;kSlicePointFieldNumber8349,307952
  static const int kSliceDimFieldNumber = 1;kSliceDimFieldNumber8361,308537
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8372,308910
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slice_point_;slice_point_8374,308967
  ::google::protobuf::int32 axis_;axis_8375,309047
  ::google::protobuf::uint32 slice_dim_;slice_dim_8376,309082
  mutable int _cached_size_;_cached_size_8378,309124
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_8379,309153
  static SliceParameter* default_instance_;default_instance_8386,309396
class SoftmaxParameter : public ::google::protobuf::Message {SoftmaxParameter8390,309515
  inline SoftmaxParameter& operator=(const SoftmaxParameter& from) {operator =8397,309691
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8402,309803
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8406,309914
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8431,310856
  typedef SoftmaxParameter_Engine Engine;Engine8442,311137
  static const Engine DEFAULT = SoftmaxParameter_Engine_DEFAULT;DEFAULT8443,311179
  static const Engine CAFFE = SoftmaxParameter_Engine_CAFFE;CAFFE8444,311244
  static const Engine CUDNN = SoftmaxParameter_Engine_CUDNN;CUDNN8445,311305
  static inline bool Engine_IsValid(int value) {Engine_IsValid8446,311366
  static const Engine Engine_MIN =Engine_MIN8449,311470
  static const Engine Engine_MAX =Engine_MAX8451,311545
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE8453,311620
  Engine_descriptor() {Engine_descriptor8456,311762
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name8459,311839
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse8462,311956
  static const int kEngineFieldNumber = 1;kEngineFieldNumber8472,312313
  static const int kAxisFieldNumber = 2;kAxisFieldNumber8479,312585
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8490,312938
  int engine_;engine_8492,312995
  ::google::protobuf::int32 axis_;axis_8493,313010
  mutable int _cached_size_;_cached_size_8495,313046
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_8496,313075
  static SoftmaxParameter* default_instance_;default_instance_8503,313318
class TanHParameter : public ::google::protobuf::Message {TanHParameter8507,313439
  inline TanHParameter& operator=(const TanHParameter& from) {operator =8514,313600
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8519,313706
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8523,313817
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8548,314744
  typedef TanHParameter_Engine Engine;Engine8559,315025
  static const Engine DEFAULT = TanHParameter_Engine_DEFAULT;DEFAULT8560,315064
  static const Engine CAFFE = TanHParameter_Engine_CAFFE;CAFFE8561,315126
  static const Engine CUDNN = TanHParameter_Engine_CUDNN;CUDNN8562,315184
  static inline bool Engine_IsValid(int value) {Engine_IsValid8563,315242
  static const Engine Engine_MIN =Engine_MIN8566,315343
  static const Engine Engine_MAX =Engine_MAX8568,315415
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE8570,315487
  Engine_descriptor() {Engine_descriptor8573,315626
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name8576,315700
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse8579,315814
  static const int kEngineFieldNumber = 1;kEngineFieldNumber8589,316165
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8598,316467
  int engine_;engine_8600,316524
  mutable int _cached_size_;_cached_size_8602,316540
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_8603,316569
  static TanHParameter* default_instance_;default_instance_8610,316812
class TileParameter : public ::google::protobuf::Message {TileParameter8614,316930
  inline TileParameter& operator=(const TileParameter& from) {operator =8621,317091
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8626,317197
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8630,317308
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8655,318235
  static const int kAxisFieldNumber = 1;kAxisFieldNumber8671,318692
  static const int kTilesFieldNumber = 2;kTilesFieldNumber8678,318933
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8689,319284
  ::google::protobuf::int32 axis_;axis_8691,319341
  ::google::protobuf::int32 tiles_;tiles_8692,319376
  mutable int _cached_size_;_cached_size_8694,319413
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_8695,319442
  static TileParameter* default_instance_;default_instance_8702,319685
class ThresholdParameter : public ::google::protobuf::Message {ThresholdParameter8706,319803
  inline ThresholdParameter& operator=(const ThresholdParameter& from) {operator =8713,319989
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8718,320105
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8722,320216
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8747,321168
  static const int kThresholdFieldNumber = 1;kThresholdFieldNumber8763,321640
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8772,321914
  float threshold_;threshold_8774,321971
  mutable int _cached_size_;_cached_size_8776,321992
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];_has_bits_8777,322021
  static ThresholdParameter* default_instance_;default_instance_8784,322264
class WindowDataParameter : public ::google::protobuf::Message {WindowDataParameter8788,322387
  inline WindowDataParameter& operator=(const WindowDataParameter& from) {operator =8795,322578
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields8800,322696
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields8804,322807
  int GetCachedSize() const { return _cached_size_; }GetCachedSize8829,323764
  static const int kSourceFieldNumber = 1;kSourceFieldNumber8845,324214
  static const int kScaleFieldNumber = 2;kScaleFieldNumber8857,324711
  static const int kMeanFileFieldNumber = 3;kMeanFileFieldNumber8864,324928
  static const int kBatchSizeFieldNumber = 4;kBatchSizeFieldNumber8876,325453
  static const int kCropSizeFieldNumber = 5;kCropSizeFieldNumber8883,325740
  static const int kMirrorFieldNumber = 6;kMirrorFieldNumber8890,326017
  static const int kFgThresholdFieldNumber = 7;kFgThresholdFieldNumber8897,326259
  static const int kBgThresholdFieldNumber = 8;kBgThresholdFieldNumber8904,326520
  static const int kFgFractionFieldNumber = 9;kFgFractionFieldNumber8911,326779
  static const int kContextPadFieldNumber = 10;kContextPadFieldNumber8918,327034
  static const int kCropModeFieldNumber = 11;kCropModeFieldNumber8925,327331
  static const int kCacheImagesFieldNumber = 12;kCacheImagesFieldNumber8937,327880
  static const int kRootFolderFieldNumber = 13;kRootFolderFieldNumber8944,328138
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_8982,329601
  ::std::string* source_;source_8984,329658
  ::std::string* mean_file_;mean_file_8985,329684
  float scale_;scale_8986,329713
  ::google::protobuf::uint32 batch_size_;batch_size_8987,329729
  ::google::protobuf::uint32 crop_size_;crop_size_8988,329771
  float fg_threshold_;fg_threshold_8989,329812
  float bg_threshold_;bg_threshold_8990,329835
  float fg_fraction_;fg_fraction_8991,329858
  bool mirror_;mirror_8992,329880
  bool cache_images_;cache_images_8993,329896
  ::google::protobuf::uint32 context_pad_;context_pad_8994,329918
  ::std::string* crop_mode_;crop_mode_8995,329961
  static ::std::string* _default_crop_mode_;_default_crop_mode_8996,329990
  ::std::string* root_folder_;root_folder_8997,330035
  mutable int _cached_size_;_cached_size_8999,330067
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];_has_bits_9000,330096
  static WindowDataParameter* default_instance_;default_instance_9007,330340
class SPPParameter : public ::google::protobuf::Message {SPPParameter9011,330464
  inline SPPParameter& operator=(const SPPParameter& from) {operator =9018,330620
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields9023,330724
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields9027,330835
  int GetCachedSize() const { return _cached_size_; }GetCachedSize9052,331757
  typedef SPPParameter_PoolMethod PoolMethod;PoolMethod9063,332038
  static const PoolMethod MAX = SPPParameter_PoolMethod_MAX;MAX9064,332084
  static const PoolMethod AVE = SPPParameter_PoolMethod_AVE;AVE9065,332145
  static const PoolMethod STOCHASTIC = SPPParameter_PoolMethod_STOCHASTIC;STOCHASTIC9066,332206
  static inline bool PoolMethod_IsValid(int value) {PoolMethod_IsValid9067,332281
  static const PoolMethod PoolMethod_MIN =PoolMethod_MIN9070,332389
  static const PoolMethod PoolMethod_MAX =PoolMethod_MAX9072,332476
  static const int PoolMethod_ARRAYSIZE =PoolMethod_ARRAYSIZE9074,332563
  PoolMethod_descriptor() {PoolMethod_descriptor9077,332713
  static inline const ::std::string& PoolMethod_Name(PoolMethod value) {PoolMethod_Name9080,332794
  static inline bool PoolMethod_Parse(const ::std::string& name,PoolMethod_Parse9083,332919
  typedef SPPParameter_Engine Engine;Engine9088,333071
  static const Engine DEFAULT = SPPParameter_Engine_DEFAULT;DEFAULT9089,333109
  static const Engine CAFFE = SPPParameter_Engine_CAFFE;CAFFE9090,333170
  static const Engine CUDNN = SPPParameter_Engine_CUDNN;CUDNN9091,333227
  static inline bool Engine_IsValid(int value) {Engine_IsValid9092,333284
  static const Engine Engine_MIN =Engine_MIN9095,333384
  static const Engine Engine_MAX =Engine_MAX9097,333455
  static const int Engine_ARRAYSIZE =Engine_ARRAYSIZE9099,333526
  Engine_descriptor() {Engine_descriptor9102,333664
  static inline const ::std::string& Engine_Name(Engine value) {Engine_Name9105,333737
  static inline bool Engine_Parse(const ::std::string& name,Engine_Parse9108,333850
  static const int kPyramidHeightFieldNumber = 1;kPyramidHeightFieldNumber9118,334183
  static const int kPoolFieldNumber = 2;kPoolFieldNumber9125,334493
  static const int kEngineFieldNumber = 6;kEngineFieldNumber9132,334792
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_9145,335235
  ::google::protobuf::uint32 pyramid_height_;pyramid_height_9147,335292
  int pool_;pool_9148,335338
  int engine_;engine_9149,335351
  mutable int _cached_size_;_cached_size_9151,335367
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];_has_bits_9152,335396
  static SPPParameter* default_instance_;default_instance_9159,335639
class V1LayerParameter : public ::google::protobuf::Message {V1LayerParameter9163,335756
  inline V1LayerParameter& operator=(const V1LayerParameter& from) {operator =9170,335932
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields9175,336044
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields9179,336155
  int GetCachedSize() const { return _cached_size_; }GetCachedSize9204,337097
  typedef V1LayerParameter_LayerType LayerType;LayerType9215,337378
  static const LayerType NONE = V1LayerParameter_LayerType_NONE;NONE9216,337426
  static const LayerType ABSVAL = V1LayerParameter_LayerType_ABSVAL;ABSVAL9217,337491
  static const LayerType ACCURACY = V1LayerParameter_LayerType_ACCURACY;ACCURACY9218,337560
  static const LayerType ARGMAX = V1LayerParameter_LayerType_ARGMAX;ARGMAX9219,337633
  static const LayerType BNLL = V1LayerParameter_LayerType_BNLL;BNLL9220,337702
  static const LayerType CONCAT = V1LayerParameter_LayerType_CONCAT;CONCAT9221,337767
  static const LayerType CONTRASTIVE_LOSS = V1LayerParameter_LayerType_CONTRASTIVE_LOSS;CONTRASTIVE_LOSS9222,337836
  static const LayerType CONVOLUTION = V1LayerParameter_LayerType_CONVOLUTION;CONVOLUTION9223,337925
  static const LayerType DATA = V1LayerParameter_LayerType_DATA;DATA9224,338004
  static const LayerType DECONVOLUTION = V1LayerParameter_LayerType_DECONVOLUTION;DECONVOLUTION9225,338069
  static const LayerType DROPOUT = V1LayerParameter_LayerType_DROPOUT;DROPOUT9226,338152
  static const LayerType DUMMY_DATA = V1LayerParameter_LayerType_DUMMY_DATA;DUMMY_DATA9227,338223
  static const LayerType EUCLIDEAN_LOSS = V1LayerParameter_LayerType_EUCLIDEAN_LOSS;EUCLIDEAN_LOSS9228,338300
  static const LayerType ELTWISE = V1LayerParameter_LayerType_ELTWISE;ELTWISE9229,338385
  static const LayerType EXP = V1LayerParameter_LayerType_EXP;EXP9230,338456
  static const LayerType FLATTEN = V1LayerParameter_LayerType_FLATTEN;FLATTEN9231,338519
  static const LayerType HDF5_DATA = V1LayerParameter_LayerType_HDF5_DATA;HDF5_DATA9232,338590
  static const LayerType HDF5_OUTPUT = V1LayerParameter_LayerType_HDF5_OUTPUT;HDF5_OUTPUT9233,338665
  static const LayerType HINGE_LOSS = V1LayerParameter_LayerType_HINGE_LOSS;HINGE_LOSS9234,338744
  static const LayerType IM2COL = V1LayerParameter_LayerType_IM2COL;IM2COL9235,338821
  static const LayerType IMAGE_DATA = V1LayerParameter_LayerType_IMAGE_DATA;IMAGE_DATA9236,338890
  static const LayerType INFOGAIN_LOSS = V1LayerParameter_LayerType_INFOGAIN_LOSS;INFOGAIN_LOSS9237,338967
  static const LayerType INNER_PRODUCT = V1LayerParameter_LayerType_INNER_PRODUCT;INNER_PRODUCT9238,339050
  static const LayerType LRN = V1LayerParameter_LayerType_LRN;LRN9239,339133
  static const LayerType MEMORY_DATA = V1LayerParameter_LayerType_MEMORY_DATA;MEMORY_DATA9240,339196
  static const LayerType MULTINOMIAL_LOGISTIC_LOSS = V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS;MULTINOMIAL_LOGISTIC_LOSS9241,339275
  static const LayerType MVN = V1LayerParameter_LayerType_MVN;MVN9242,339382
  static const LayerType POOLING = V1LayerParameter_LayerType_POOLING;POOLING9243,339445
  static const LayerType POWER = V1LayerParameter_LayerType_POWER;POWER9244,339516
  static const LayerType RELU = V1LayerParameter_LayerType_RELU;RELU9245,339583
  static const LayerType SIGMOID = V1LayerParameter_LayerType_SIGMOID;SIGMOID9246,339648
  static const LayerType SIGMOID_CROSS_ENTROPY_LOSS = V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS;SIGMOID_CROSS_ENTROPY_LOSS9247,339719
  static const LayerType SILENCE = V1LayerParameter_LayerType_SILENCE;SILENCE9248,339828
  static const LayerType SOFTMAX = V1LayerParameter_LayerType_SOFTMAX;SOFTMAX9249,339899
  static const LayerType SOFTMAX_LOSS = V1LayerParameter_LayerType_SOFTMAX_LOSS;SOFTMAX_LOSS9250,339970
  static const LayerType SPLIT = V1LayerParameter_LayerType_SPLIT;SPLIT9251,340051
  static const LayerType SLICE = V1LayerParameter_LayerType_SLICE;SLICE9252,340118
  static const LayerType TANH = V1LayerParameter_LayerType_TANH;TANH9253,340185
  static const LayerType WINDOW_DATA = V1LayerParameter_LayerType_WINDOW_DATA;WINDOW_DATA9254,340250
  static const LayerType THRESHOLD = V1LayerParameter_LayerType_THRESHOLD;THRESHOLD9255,340329
  static inline bool LayerType_IsValid(int value) {LayerType_IsValid9256,340404
  static const LayerType LayerType_MIN =LayerType_MIN9259,340514
  static const LayerType LayerType_MAX =LayerType_MAX9261,340601
  static const int LayerType_ARRAYSIZE =LayerType_ARRAYSIZE9263,340688
  LayerType_descriptor() {LayerType_descriptor9266,340839
  static inline const ::std::string& LayerType_Name(LayerType value) {LayerType_Name9269,340922
  static inline bool LayerType_Parse(const ::std::string& name,LayerType_Parse9272,341048
  typedef V1LayerParameter_DimCheckMode DimCheckMode;DimCheckMode9277,341201
  static const DimCheckMode STRICT = V1LayerParameter_DimCheckMode_STRICT;STRICT9278,341255
  static const DimCheckMode PERMISSIVE = V1LayerParameter_DimCheckMode_PERMISSIVE;PERMISSIVE9279,341330
  static inline bool DimCheckMode_IsValid(int value) {DimCheckMode_IsValid9280,341413
  static const DimCheckMode DimCheckMode_MIN =DimCheckMode_MIN9283,341529
  static const DimCheckMode DimCheckMode_MAX =DimCheckMode_MAX9285,341628
  static const int DimCheckMode_ARRAYSIZE =DimCheckMode_ARRAYSIZE9287,341727
  DimCheckMode_descriptor() {DimCheckMode_descriptor9290,341887
  static inline const ::std::string& DimCheckMode_Name(DimCheckMode value) {DimCheckMode_Name9293,341976
  static inline bool DimCheckMode_Parse(const ::std::string& name,DimCheckMode_Parse9296,342111
  static const int kBottomFieldNumber = 2;kBottomFieldNumber9306,342442
  static const int kTopFieldNumber = 3;kTopFieldNumber9322,343231
  static const int kNameFieldNumber = 4;kNameFieldNumber9338,343987
  static const int kIncludeFieldNumber = 32;kIncludeFieldNumber9350,344473
  static const int kExcludeFieldNumber = 33;kExcludeFieldNumber9362,345002
  static const int kTypeFieldNumber = 5;kTypeFieldNumber9374,345535
  static const int kBlobsFieldNumber = 6;kBlobsFieldNumber9381,345807
  static const int kParamFieldNumber = 1001;kParamFieldNumber9393,346291
  static const int kBlobShareModeFieldNumber = 1002;kBlobShareModeFieldNumber9409,347140
  static const int kBlobsLrFieldNumber = 7;kBlobsLrFieldNumber9419,347707
  static const int kWeightDecayFieldNumber = 8;kWeightDecayFieldNumber9431,348163
  static const int kLossWeightFieldNumber = 35;kLossWeightFieldNumber9443,348641
  static const int kAccuracyParamFieldNumber = 27;kAccuracyParamFieldNumber9455,349142
  static const int kArgmaxParamFieldNumber = 23;kArgmaxParamFieldNumber9464,349607
  static const int kConcatParamFieldNumber = 9;kConcatParamFieldNumber9473,350051
  static const int kContrastiveLossParamFieldNumber = 40;kContrastiveLossParamFieldNumber9482,350534
  static const int kConvolutionParamFieldNumber = 10;kConvolutionParamFieldNumber9491,351094
  static const int kDataParamFieldNumber = 11;kDataParamFieldNumber9500,351581
  static const int kDropoutParamFieldNumber = 12;kDropoutParamFieldNumber9509,352010
  static const int kDummyDataParamFieldNumber = 26;kDummyDataParamFieldNumber9518,352480
  static const int kEltwiseParamFieldNumber = 24;kEltwiseParamFieldNumber9527,352964
  static const int kExpParamFieldNumber = 41;kExpParamFieldNumber9536,353407
  static const int kHdf5DataParamFieldNumber = 13;kHdf5DataParamFieldNumber9545,353833
  static const int kHdf5OutputParamFieldNumber = 14;kHdf5OutputParamFieldNumber9554,354322
  static const int kHingeLossParamFieldNumber = 29;kHingeLossParamFieldNumber9563,354827
  static const int kImageDataParamFieldNumber = 15;kImageDataParamFieldNumber9572,355322
  static const int kInfogainLossParamFieldNumber = 16;kInfogainLossParamFieldNumber9581,355829
  static const int kInnerProductParamFieldNumber = 17;kInnerProductParamFieldNumber9590,356366
  static const int kLrnParamFieldNumber = 18;kLrnParamFieldNumber9599,356864
  static const int kMemoryDataParamFieldNumber = 22;kMemoryDataParamFieldNumber9608,357298
  static const int kMvnParamFieldNumber = 34;kMvnParamFieldNumber9617,357776
  static const int kPoolingParamFieldNumber = 19;kPoolingParamFieldNumber9626,358195
  static const int kPowerParamFieldNumber = 21;kPowerParamFieldNumber9635,358646
  static const int kReluParamFieldNumber = 30;kReluParamFieldNumber9644,359073
  static const int kSigmoidParamFieldNumber = 38;kSigmoidParamFieldNumber9653,359502
  static const int kSoftmaxParamFieldNumber = 39;kSoftmaxParamFieldNumber9662,359961
  static const int kSliceParamFieldNumber = 31;kSliceParamFieldNumber9671,360412
  static const int kTanhParamFieldNumber = 37;kTanhParamFieldNumber9680,360839
  static const int kThresholdParamFieldNumber = 25;kThresholdParamFieldNumber9689,361276
  static const int kWindowDataParamFieldNumber = 20;kWindowDataParamFieldNumber9698,361770
  static const int kTransformParamFieldNumber = 36;kTransformParamFieldNumber9707,362277
  static const int kLossParamFieldNumber = 42;kLossParamFieldNumber9716,362764
  static const int kLayerFieldNumber = 1;kLayerFieldNumber9725,363168
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_9800,366154
  ::google::protobuf::RepeatedPtrField< ::std::string> bottom_;bottom_9802,366211
  ::google::protobuf::RepeatedPtrField< ::std::string> top_;top_9803,366275
  ::std::string* name_;name_9804,366336
  ::google::protobuf::RepeatedPtrField< ::caffe::NetStateRule > include_;include_9805,366360
  ::google::protobuf::RepeatedPtrField< ::caffe::NetStateRule > exclude_;exclude_9806,366434
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > blobs_;blobs_9807,366508
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;param_9808,366577
  ::google::protobuf::RepeatedField<int> blob_share_mode_;blob_share_mode_9809,366640
  ::google::protobuf::RepeatedField< float > blobs_lr_;blobs_lr_9810,366699
  ::google::protobuf::RepeatedField< float > weight_decay_;weight_decay_9811,366755
  ::google::protobuf::RepeatedField< float > loss_weight_;loss_weight_9812,366815
  ::caffe::AccuracyParameter* accuracy_param_;accuracy_param_9813,366874
  ::caffe::ArgMaxParameter* argmax_param_;argmax_param_9814,366921
  ::caffe::ConcatParameter* concat_param_;concat_param_9815,366964
  ::caffe::ContrastiveLossParameter* contrastive_loss_param_;contrastive_loss_param_9816,367007
  ::caffe::ConvolutionParameter* convolution_param_;convolution_param_9817,367069
  ::caffe::DataParameter* data_param_;data_param_9818,367122
  ::caffe::DropoutParameter* dropout_param_;dropout_param_9819,367161
  ::caffe::DummyDataParameter* dummy_data_param_;dummy_data_param_9820,367206
  ::caffe::EltwiseParameter* eltwise_param_;eltwise_param_9821,367256
  ::caffe::ExpParameter* exp_param_;exp_param_9822,367301
  ::caffe::HDF5DataParameter* hdf5_data_param_;hdf5_data_param_9823,367338
  ::caffe::HDF5OutputParameter* hdf5_output_param_;hdf5_output_param_9824,367386
  ::caffe::HingeLossParameter* hinge_loss_param_;hinge_loss_param_9825,367438
  ::caffe::ImageDataParameter* image_data_param_;image_data_param_9826,367488
  ::caffe::InfogainLossParameter* infogain_loss_param_;infogain_loss_param_9827,367538
  ::caffe::InnerProductParameter* inner_product_param_;inner_product_param_9828,367594
  ::caffe::LRNParameter* lrn_param_;lrn_param_9829,367650
  ::caffe::MemoryDataParameter* memory_data_param_;memory_data_param_9830,367687
  ::caffe::MVNParameter* mvn_param_;mvn_param_9831,367739
  ::caffe::PoolingParameter* pooling_param_;pooling_param_9832,367776
  ::caffe::PowerParameter* power_param_;power_param_9833,367821
  ::caffe::ReLUParameter* relu_param_;relu_param_9834,367862
  ::caffe::SigmoidParameter* sigmoid_param_;sigmoid_param_9835,367901
  ::caffe::SoftmaxParameter* softmax_param_;softmax_param_9836,367946
  ::caffe::SliceParameter* slice_param_;slice_param_9837,367991
  ::caffe::TanHParameter* tanh_param_;tanh_param_9838,368032
  ::caffe::ThresholdParameter* threshold_param_;threshold_param_9839,368071
  ::caffe::WindowDataParameter* window_data_param_;window_data_param_9840,368120
  ::caffe::TransformationParameter* transform_param_;transform_param_9841,368172
  ::caffe::LossParameter* loss_param_;loss_param_9842,368226
  ::caffe::V0LayerParameter* layer_;layer_9843,368265
  int type_;type_9844,368302
  mutable int _cached_size_;_cached_size_9846,368316
  ::google::protobuf::uint32 _has_bits_[(43 + 31) / 32];_has_bits_9847,368345
  static V1LayerParameter* default_instance_;default_instance_9854,368589
class V0LayerParameter : public ::google::protobuf::Message {V0LayerParameter9858,368710
  inline V0LayerParameter& operator=(const V0LayerParameter& from) {operator =9865,368886
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields9870,368998
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields9874,369109
  int GetCachedSize() const { return _cached_size_; }GetCachedSize9899,370051
  typedef V0LayerParameter_PoolMethod PoolMethod;PoolMethod9910,370332
  static const PoolMethod MAX = V0LayerParameter_PoolMethod_MAX;MAX9911,370382
  static const PoolMethod AVE = V0LayerParameter_PoolMethod_AVE;AVE9912,370447
  static const PoolMethod STOCHASTIC = V0LayerParameter_PoolMethod_STOCHASTIC;STOCHASTIC9913,370512
  static inline bool PoolMethod_IsValid(int value) {PoolMethod_IsValid9914,370591
  static const PoolMethod PoolMethod_MIN =PoolMethod_MIN9917,370703
  static const PoolMethod PoolMethod_MAX =PoolMethod_MAX9919,370794
  static const int PoolMethod_ARRAYSIZE =PoolMethod_ARRAYSIZE9921,370885
  PoolMethod_descriptor() {PoolMethod_descriptor9924,371039
  static inline const ::std::string& PoolMethod_Name(PoolMethod value) {PoolMethod_Name9927,371124
  static inline bool PoolMethod_Parse(const ::std::string& name,PoolMethod_Parse9930,371253
  static const int kNameFieldNumber = 1;kNameFieldNumber9940,371572
  static const int kTypeFieldNumber = 2;kTypeFieldNumber9952,372035
  static const int kNumOutputFieldNumber = 3;kNumOutputFieldNumber9964,372516
  static const int kBiastermFieldNumber = 4;kBiastermFieldNumber9971,372801
  static const int kWeightFillerFieldNumber = 5;kWeightFillerFieldNumber9978,373053
  static const int kBiasFillerFieldNumber = 6;kBiasFillerFieldNumber9987,373499
  static const int kPadFieldNumber = 7;kPadFieldNumber9996,373907
  static const int kKernelsizeFieldNumber = 8;kKernelsizeFieldNumber10003,374163
  static const int kGroupFieldNumber = 9;kGroupFieldNumber10010,374439
  static const int kStrideFieldNumber = 10;kStrideFieldNumber10017,374704
  static const int kPoolFieldNumber = 11;kPoolFieldNumber10024,374997
  static const int kDropoutRatioFieldNumber = 12;kDropoutRatioFieldNumber10031,375302
  static const int kLocalSizeFieldNumber = 13;kLocalSizeFieldNumber10038,375561
  static const int kAlphaFieldNumber = 14;kAlphaFieldNumber10045,375837
  static const int kBetaFieldNumber = 15;kBetaFieldNumber10052,376057
  static const int kKFieldNumber = 22;kKFieldNumber10059,376262
  static const int kSourceFieldNumber = 16;kSourceFieldNumber10066,376460
  static const int kScaleFieldNumber = 17;kScaleFieldNumber10078,376959
  static const int kMeanfileFieldNumber = 18;kMeanfileFieldNumber10085,377175
  static const int kBatchsizeFieldNumber = 19;kBatchsizeFieldNumber10097,377691
  static const int kCropsizeFieldNumber = 20;kCropsizeFieldNumber10104,377975
  static const int kMirrorFieldNumber = 21;kMirrorFieldNumber10111,378252
  static const int kBlobsFieldNumber = 50;kBlobsFieldNumber10118,378470
  static const int kBlobsLrFieldNumber = 51;kBlobsLrFieldNumber10130,378961
  static const int kWeightDecayFieldNumber = 52;kWeightDecayFieldNumber10142,379419
  static const int kRandSkipFieldNumber = 53;kRandSkipFieldNumber10154,379907
  static const int kDetFgThresholdFieldNumber = 54;kDetFgThresholdFieldNumber10161,380215
  static const int kDetBgThresholdFieldNumber = 55;kDetBgThresholdFieldNumber10168,380501
  static const int kDetFgFractionFieldNumber = 56;kDetFgFractionFieldNumber10175,380785
  static const int kDetContextPadFieldNumber = 58;kDetContextPadFieldNumber10182,381064
  static const int kDetCropModeFieldNumber = 59;kDetCropModeFieldNumber10189,381384
  static const int kNewNumFieldNumber = 60;kNewNumFieldNumber10201,381950
  static const int kNewChannelsFieldNumber = 61;kNewChannelsFieldNumber10208,382236
  static const int kNewHeightFieldNumber = 62;kNewHeightFieldNumber10215,382531
  static const int kNewWidthFieldNumber = 63;kNewWidthFieldNumber10222,382817
  static const int kShuffleImagesFieldNumber = 64;kShuffleImagesFieldNumber10229,383118
  static const int kConcatDimFieldNumber = 65;kConcatDimFieldNumber10236,383378
  static const int kHdf5OutputParamFieldNumber = 1001;kHdf5OutputParamFieldNumber10243,383699
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_10322,386658
  ::std::string* name_;name_10324,386715
  ::std::string* type_;type_10325,386739
  ::caffe::FillerParameter* weight_filler_;weight_filler_10326,386763
  ::google::protobuf::uint32 num_output_;num_output_10327,386807
  ::google::protobuf::uint32 pad_;pad_10328,386849
  ::caffe::FillerParameter* bias_filler_;bias_filler_10329,386884
  ::google::protobuf::uint32 kernelsize_;kernelsize_10330,386926
  ::google::protobuf::uint32 group_;group_10331,386968
  ::google::protobuf::uint32 stride_;stride_10332,387005
  int pool_;pool_10333,387043
  float dropout_ratio_;dropout_ratio_10334,387056
  ::google::protobuf::uint32 local_size_;local_size_10335,387080
  float alpha_;alpha_10336,387122
  float beta_;beta_10337,387138
  float k_;k_10338,387153
  float scale_;scale_10339,387165
  ::std::string* source_;source_10340,387181
  ::std::string* meanfile_;meanfile_10341,387207
  ::google::protobuf::uint32 batchsize_;batchsize_10342,387235
  bool biasterm_;biasterm_10343,387276
  bool mirror_;mirror_10344,387294
  bool shuffle_images_;shuffle_images_10345,387310
  ::google::protobuf::RepeatedPtrField< ::caffe::BlobProto > blobs_;blobs_10346,387334
  ::google::protobuf::uint32 cropsize_;cropsize_10347,387403
  ::google::protobuf::uint32 rand_skip_;rand_skip_10348,387443
  ::google::protobuf::RepeatedField< float > blobs_lr_;blobs_lr_10349,387484
  ::google::protobuf::RepeatedField< float > weight_decay_;weight_decay_10350,387540
  float det_fg_threshold_;det_fg_threshold_10351,387600
  float det_bg_threshold_;det_bg_threshold_10352,387627
  float det_fg_fraction_;det_fg_fraction_10353,387654
  ::google::protobuf::uint32 det_context_pad_;det_context_pad_10354,387680
  ::std::string* det_crop_mode_;det_crop_mode_10355,387727
  static ::std::string* _default_det_crop_mode_;_default_det_crop_mode_10356,387760
  ::google::protobuf::int32 new_num_;new_num_10357,387809
  ::google::protobuf::int32 new_channels_;new_channels_10358,387847
  ::google::protobuf::int32 new_height_;new_height_10359,387890
  ::google::protobuf::int32 new_width_;new_width_10360,387931
  ::caffe::HDF5OutputParameter* hdf5_output_param_;hdf5_output_param_10361,387971
  ::google::protobuf::uint32 concat_dim_;concat_dim_10362,388023
  mutable int _cached_size_;_cached_size_10364,388066
  ::google::protobuf::uint32 _has_bits_[(38 + 31) / 32];_has_bits_10365,388095
  static V0LayerParameter* default_instance_;default_instance_10372,388339
class PReLUParameter : public ::google::protobuf::Message {PReLUParameter10376,388460
  inline PReLUParameter& operator=(const PReLUParameter& from) {operator =10383,388626
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields10388,388734
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields10392,388845
  int GetCachedSize() const { return _cached_size_; }GetCachedSize10417,389777
  static const int kFillerFieldNumber = 1;kFillerFieldNumber10433,390243
  static const int kChannelSharedFieldNumber = 2;kChannelSharedFieldNumber10442,390657
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_10453,391015
  ::caffe::FillerParameter* filler_;filler_10455,391072
  bool channel_shared_;channel_shared_10456,391109
  mutable int _cached_size_;_cached_size_10458,391134
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];_has_bits_10459,391163
  static PReLUParameter* default_instance_;default_instance_10466,391406
class QuantizationParameter : public ::google::protobuf::Message {QuantizationParameter10470,391525
  inline QuantizationParameter& operator=(const QuantizationParameter& from) {operator =10477,391726
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {unknown_fields10482,391848
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {mutable_unknown_fields10486,391959
  int GetCachedSize() const { return _cached_size_; }GetCachedSize10511,392926
  typedef QuantizationParameter_RoundMethod RoundMethod;RoundMethod10522,393207
  static const RoundMethod ROUND = QuantizationParameter_RoundMethod_ROUND;ROUND10523,393264
  static const RoundMethod FLOOR = QuantizationParameter_RoundMethod_FLOOR;FLOOR10524,393340
  static const RoundMethod CEIL = QuantizationParameter_RoundMethod_CEIL;CEIL10525,393416
  static const RoundMethod TRUNC = QuantizationParameter_RoundMethod_TRUNC;TRUNC10526,393490
  static inline bool RoundMethod_IsValid(int value) {RoundMethod_IsValid10527,393566
  static const RoundMethod RoundMethod_MIN =RoundMethod_MIN10530,393685
  static const RoundMethod RoundMethod_MAX =RoundMethod_MAX10532,393785
  static const int RoundMethod_ARRAYSIZE =RoundMethod_ARRAYSIZE10534,393885
  RoundMethod_descriptor() {RoundMethod_descriptor10537,394047
  static inline const ::std::string& RoundMethod_Name(RoundMethod value) {RoundMethod_Name10540,394139
  static inline bool RoundMethod_Parse(const ::std::string& name,RoundMethod_Parse10543,394276
  typedef QuantizationParameter_RoundStrategy RoundStrategy;RoundStrategy10548,394440
  static const RoundStrategy CONSERVATIVE = QuantizationParameter_RoundStrategy_CONSERVATIVE;CONSERVATIVE10549,394501
  static const RoundStrategy NEUTRAL = QuantizationParameter_RoundStrategy_NEUTRAL;NEUTRAL10550,394595
  static const RoundStrategy AGGRESSIVE = QuantizationParameter_RoundStrategy_AGGRESSIVE;AGGRESSIVE10551,394679
  static inline bool RoundStrategy_IsValid(int value) {RoundStrategy_IsValid10552,394769
  static const RoundStrategy RoundStrategy_MIN =RoundStrategy_MIN10555,394892
  static const RoundStrategy RoundStrategy_MAX =RoundStrategy_MAX10557,395000
  static const int RoundStrategy_ARRAYSIZE =RoundStrategy_ARRAYSIZE10559,395108
  RoundStrategy_descriptor() {RoundStrategy_descriptor10562,395276
  static inline const ::std::string& RoundStrategy_Name(RoundStrategy value) {RoundStrategy_Name10565,395372
  static inline bool RoundStrategy_Parse(const ::std::string& name,RoundStrategy_Parse10568,395515
  static const int kRoundMethodFieldNumber = 1;kRoundMethodFieldNumber10578,395924
  static const int kRoundStrategyFieldNumber = 2;kRoundStrategyFieldNumber10585,396311
  static const int kBitWidthFieldNumber = 3;kBitWidthFieldNumber10592,396645
  static const int kRangeFieldNumber = 4;kRangeFieldNumber10599,396916
  ::google::protobuf::UnknownFieldSet _unknown_fields_;_unknown_fields_10617,397555
  int round_method_;round_method_10619,397612
  int round_strategy_;round_strategy_10620,397633
  ::google::protobuf::RepeatedField< float > range_;range_10621,397656
  mutable int _range_cached_byte_size_;_range_cached_byte_size_10622,397709
  ::google::protobuf::int32 bit_width_;bit_width_10623,397749
  mutable int _cached_size_;_cached_size_10625,397790
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];_has_bits_10626,397819
  static QuantizationParameter* default_instance_;default_instance_10633,398062
inline int BlobShape::dim_size() const {dim_size10643,398318
inline void BlobShape::clear_dim() {clear_dim10646,398383
inline ::google::protobuf::int64 BlobShape::dim(int index) const {dim10649,398438
inline void BlobShape::set_dim(int index, ::google::protobuf::int64 value) {set_dim10652,398533
inline void BlobShape::add_dim(::google::protobuf::int64 value) {add_dim10655,398638
BlobShape::dim() const {dim10659,398802
BlobShape::mutable_dim() {mutable_dim10663,398915
inline bool BlobProto::has_shape() const {has_shape10672,399087
inline void BlobProto::set_has_shape() {set_has_shape10675,399177
inline void BlobProto::clear_has_shape() {clear_has_shape10678,399252
inline void BlobProto::clear_shape() {clear_shape10681,399330
inline const ::caffe::BlobShape& BlobProto::shape() const {shape10685,399451
inline ::caffe::BlobShape* BlobProto::mutable_shape() {mutable_shape10688,399577
inline ::caffe::BlobShape* BlobProto::release_shape() {release_shape10693,399726
inline void BlobProto::set_allocated_shape(::caffe::BlobShape* shape) {set_allocated_shape10699,399874
inline int BlobProto::data_size() const {data_size10710,400102
inline void BlobProto::clear_data() {clear_data10713,400169
inline float BlobProto::data(int index) const {data10716,400226
inline void BlobProto::set_data(int index, float value) {set_data10719,400303
inline void BlobProto::add_data(float value) {add_data10722,400390
BlobProto::data() const {data10726,400516
BlobProto::mutable_data() {mutable_data10730,400611
inline int BlobProto::diff_size() const {diff_size10735,400703
inline void BlobProto::clear_diff() {clear_diff10738,400770
inline float BlobProto::diff(int index) const {diff10741,400827
inline void BlobProto::set_diff(int index, float value) {set_diff10744,400904
inline void BlobProto::add_diff(float value) {add_diff10747,400991
BlobProto::diff() const {diff10751,401117
BlobProto::mutable_diff() {mutable_diff10755,401212
inline int BlobProto::double_data_size() const {double_data_size10760,401312
inline void BlobProto::clear_double_data() {clear_double_data10763,401393
inline double BlobProto::double_data(int index) const {double_data10766,401464
inline void BlobProto::set_double_data(int index, double value) {set_double_data10769,401556
inline void BlobProto::add_double_data(double value) {add_double_data10772,401658
BlobProto::double_data() const {double_data10776,401800
BlobProto::mutable_double_data() {mutable_double_data10780,401910
inline int BlobProto::double_diff_size() const {double_diff_size10785,402024
inline void BlobProto::clear_double_diff() {clear_double_diff10788,402105
inline double BlobProto::double_diff(int index) const {double_diff10791,402176
inline void BlobProto::set_double_diff(int index, double value) {set_double_diff10794,402268
inline void BlobProto::add_double_diff(double value) {add_double_diff10797,402370
BlobProto::double_diff() const {double_diff10801,402512
BlobProto::mutable_double_diff() {mutable_double_diff10805,402622
inline bool BlobProto::has_num() const {has_num10810,402725
inline void BlobProto::set_has_num() {set_has_num10813,402813
inline void BlobProto::clear_has_num() {clear_has_num10816,402886
inline void BlobProto::clear_num() {clear_num10819,402962
inline ::google::protobuf::int32 BlobProto::num() const {num10823,403032
inline void BlobProto::set_num(::google::protobuf::int32 value) {set_num10826,403107
inline bool BlobProto::has_channels() const {has_channels10832,403255
inline void BlobProto::set_has_channels() {set_has_channels10835,403348
inline void BlobProto::clear_has_channels() {clear_has_channels10838,403426
inline void BlobProto::clear_channels() {clear_channels10841,403507
inline ::google::protobuf::int32 BlobProto::channels() const {channels10845,403592
inline void BlobProto::set_channels(::google::protobuf::int32 value) {set_channels10848,403677
inline bool BlobProto::has_height() const {has_height10854,403838
inline void BlobProto::set_has_height() {set_has_height10857,403929
inline void BlobProto::clear_has_height() {clear_has_height10860,404005
inline void BlobProto::clear_height() {clear_height10863,404084
inline ::google::protobuf::int32 BlobProto::height() const {height10867,404163
inline void BlobProto::set_height(::google::protobuf::int32 value) {set_height10870,404244
inline bool BlobProto::has_width() const {has_width10876,404398
inline void BlobProto::set_has_width() {set_has_width10879,404488
inline void BlobProto::clear_has_width() {clear_has_width10882,404563
inline void BlobProto::clear_width() {clear_width10885,404641
inline ::google::protobuf::int32 BlobProto::width() const {width10889,404717
inline void BlobProto::set_width(::google::protobuf::int32 value) {set_width10892,404796
inline int BlobProtoVector::blobs_size() const {blobs_size10902,405036
inline void BlobProtoVector::clear_blobs() {clear_blobs10905,405111
inline const ::caffe::BlobProto& BlobProtoVector::blobs(int index) const {blobs10908,405176
inline ::caffe::BlobProto* BlobProtoVector::mutable_blobs(int index) {mutable_blobs10911,405281
inline ::caffe::BlobProto* BlobProtoVector::add_blobs() {add_blobs10914,405386
BlobProtoVector::blobs() const {blobs10918,405542
BlobProtoVector::mutable_blobs() {mutable_blobs10922,405661
inline bool Datum::has_channels() const {has_channels10931,405831
inline void Datum::set_has_channels() {set_has_channels10934,405920
inline void Datum::clear_has_channels() {clear_has_channels10937,405994
inline void Datum::clear_channels() {clear_channels10940,406071
inline ::google::protobuf::int32 Datum::channels() const {channels10944,406152
inline void Datum::set_channels(::google::protobuf::int32 value) {set_channels10947,406233
inline bool Datum::has_height() const {has_height10953,406376
inline void Datum::set_has_height() {set_has_height10956,406463
inline void Datum::clear_has_height() {clear_has_height10959,406535
inline void Datum::clear_height() {clear_height10962,406610
inline ::google::protobuf::int32 Datum::height() const {height10966,406685
inline void Datum::set_height(::google::protobuf::int32 value) {set_height10969,406762
inline bool Datum::has_width() const {has_width10975,406898
inline void Datum::set_has_width() {set_has_width10978,406984
inline void Datum::clear_has_width() {clear_has_width10981,407055
inline void Datum::clear_width() {clear_width10984,407129
inline ::google::protobuf::int32 Datum::width() const {width10988,407201
inline void Datum::set_width(::google::protobuf::int32 value) {set_width10991,407276
inline bool Datum::has_data() const {has_data10997,407408
inline void Datum::set_has_data() {set_has_data11000,407493
inline void Datum::clear_has_data() {clear_has_data11003,407563
inline void Datum::clear_data() {clear_data11006,407636
inline const ::std::string& Datum::data() const {data11012,407778
inline void Datum::set_data(const ::std::string& value) {set_data11015,407847
inline void Datum::set_data(const char* value) {set_data11022,408046
inline void Datum::set_data(const void* value, size_t size) {set_data11029,408236
inline ::std::string* Datum::mutable_data() {mutable_data11036,408476
inline ::std::string* Datum::release_data() {release_data11043,408655
inline void Datum::set_allocated_data(::std::string* data) {set_allocated_data11053,408953
inline bool Datum::has_label() const {has_label11067,409305
inline void Datum::set_has_label() {set_has_label11070,409391
inline void Datum::clear_has_label() {clear_has_label11073,409462
inline void Datum::clear_label() {clear_label11076,409536
inline ::google::protobuf::int32 Datum::label() const {label11080,409608
inline void Datum::set_label(::google::protobuf::int32 value) {set_label11083,409683
inline int Datum::float_data_size() const {float_data_size11089,409821
inline void Datum::clear_float_data() {clear_float_data11092,409896
inline float Datum::float_data(int index) const {float_data11095,409961
inline void Datum::set_float_data(int index, float value) {set_float_data11098,410046
inline void Datum::add_float_data(float value) {add_float_data11101,410141
Datum::float_data() const {float_data11105,410275
Datum::mutable_float_data() {mutable_float_data11109,410378
inline bool Datum::has_encoded() const {has_encoded11114,410482
inline void Datum::set_has_encoded() {set_has_encoded11117,410570
inline void Datum::clear_has_encoded() {clear_has_encoded11120,410643
inline void Datum::clear_encoded() {clear_encoded11123,410719
inline bool Datum::encoded() const {encoded11127,410801
inline void Datum::set_encoded(bool value) {set_encoded11130,410859
inline bool FillerParameter::has_type() const {has_type11140,411092
inline void FillerParameter::set_has_type() {set_has_type11143,411187
inline void FillerParameter::clear_has_type() {clear_has_type11146,411267
inline void FillerParameter::clear_type() {clear_type11149,411350
inline const ::std::string& FillerParameter::type() const {type11155,411489
inline void FillerParameter::set_type(const ::std::string& value) {set_type11158,411568
inline void FillerParameter::set_type(const char* value) {set_type11165,411748
inline void FillerParameter::set_type(const char* value, size_t size) {set_type11172,411919
inline ::std::string* FillerParameter::mutable_type() {mutable_type11179,412140
inline ::std::string* FillerParameter::release_type() {release_type11186,412317
inline void FillerParameter::set_allocated_type(::std::string* type) {set_allocated_type11196,412567
inline bool FillerParameter::has_value() const {has_value11210,412885
inline void FillerParameter::set_has_value() {set_has_value11213,412981
inline void FillerParameter::clear_has_value() {clear_has_value11216,413062
inline void FillerParameter::clear_value() {clear_value11219,413146
inline float FillerParameter::value() const {value11223,413228
inline void FillerParameter::set_value(float value) {set_value11226,413293
inline bool FillerParameter::has_min() const {has_min11232,413428
inline void FillerParameter::set_has_min() {set_has_min11235,413522
inline void FillerParameter::clear_has_min() {clear_has_min11238,413601
inline void FillerParameter::clear_min() {clear_min11241,413683
inline float FillerParameter::min() const {min11245,413759
inline void FillerParameter::set_min(float value) {set_min11248,413820
inline bool FillerParameter::has_max() const {has_max11254,413949
inline void FillerParameter::set_has_max() {set_has_max11257,414043
inline void FillerParameter::clear_has_max() {clear_has_max11260,414122
inline void FillerParameter::clear_max() {clear_max11263,414204
inline float FillerParameter::max() const {max11267,414280
inline void FillerParameter::set_max(float value) {set_max11270,414341
inline bool FillerParameter::has_mean() const {has_mean11276,414471
inline void FillerParameter::set_has_mean() {set_has_mean11279,414566
inline void FillerParameter::clear_has_mean() {clear_has_mean11282,414646
inline void FillerParameter::clear_mean() {clear_mean11285,414729
inline float FillerParameter::mean() const {mean11289,414808
inline void FillerParameter::set_mean(float value) {set_mean11292,414871
inline bool FillerParameter::has_std() const {has_std11298,415003
inline void FillerParameter::set_has_std() {set_has_std11301,415097
inline void FillerParameter::clear_has_std() {clear_has_std11304,415176
inline void FillerParameter::clear_std() {clear_std11307,415258
inline float FillerParameter::std() const {std11311,415334
inline void FillerParameter::set_std(float value) {set_std11314,415395
inline bool FillerParameter::has_sparse() const {has_sparse11320,415528
inline void FillerParameter::set_has_sparse() {set_has_sparse11323,415625
inline void FillerParameter::clear_has_sparse() {clear_has_sparse11326,415707
inline void FillerParameter::clear_sparse() {clear_sparse11329,415792
inline ::google::protobuf::int32 FillerParameter::sparse() const {sparse11333,415878
inline void FillerParameter::set_sparse(::google::protobuf::int32 value) {set_sparse11336,415965
inline bool FillerParameter::has_variance_norm() const {has_variance_norm11342,416168
inline void FillerParameter::set_has_variance_norm() {set_has_variance_norm11345,416272
inline void FillerParameter::clear_has_variance_norm() {clear_has_variance_norm11348,416361
inline void FillerParameter::clear_variance_norm() {clear_variance_norm11351,416453
inline ::caffe::FillerParameter_VarianceNorm FillerParameter::variance_norm() const {variance_norm11355,416559
inline void FillerParameter::set_variance_norm(::caffe::FillerParameter_VarianceNorm value) {set_variance_norm11358,416726
inline bool NetParameter::has_name() const {has_name11369,417058
inline void NetParameter::set_has_name() {set_has_name11372,417150
inline void NetParameter::clear_has_name() {clear_has_name11375,417227
inline void NetParameter::clear_name() {clear_name11378,417307
inline const ::std::string& NetParameter::name() const {name11384,417456
inline void NetParameter::set_name(const ::std::string& value) {set_name11387,417532
inline void NetParameter::set_name(const char* value) {set_name11394,417738
inline void NetParameter::set_name(const char* value, size_t size) {set_name11401,417935
inline ::std::string* NetParameter::mutable_name() {mutable_name11408,418182
inline ::std::string* NetParameter::release_name() {release_name11415,418368
inline void NetParameter::set_allocated_name(::std::string* name) {set_allocated_name11425,418673
inline int NetParameter::input_size() const {input_size11439,419033
inline void NetParameter::clear_input() {clear_input11442,419105
inline const ::std::string& NetParameter::input(int index) const {input11445,419167
inline ::std::string* NetParameter::mutable_input(int index) {mutable_input11448,419264
inline void NetParameter::set_input(int index, const ::std::string& value) {set_input11451,419361
inline void NetParameter::set_input(int index, const char* value) {set_input11454,419480
inline void NetParameter::set_input(int index, const char* value, size_t size) {set_input11457,419590
inline ::std::string* NetParameter::add_input() {add_input11461,419755
inline void NetParameter::add_input(const ::std::string& value) {add_input11464,419830
inline void NetParameter::add_input(const char* value) {add_input11467,419929
inline void NetParameter::add_input(const char* value, size_t size) {add_input11470,420019
NetParameter::input() const {input11474,420226
NetParameter::mutable_input() {mutable_input11478,420336
inline int NetParameter::input_shape_size() const {input_shape_size11483,420435
inline void NetParameter::clear_input_shape() {clear_input_shape11486,420519
inline const ::caffe::BlobShape& NetParameter::input_shape(int index) const {input_shape11489,420593
inline ::caffe::BlobShape* NetParameter::mutable_input_shape(int index) {mutable_input_shape11492,420707
inline ::caffe::BlobShape* NetParameter::add_input_shape() {add_input_shape11495,420821
NetParameter::input_shape() const {input_shape11499,420986
NetParameter::mutable_input_shape() {mutable_input_shape11503,421114
inline int NetParameter::input_dim_size() const {input_dim_size11508,421212
inline void NetParameter::clear_input_dim() {clear_input_dim11511,421292
inline ::google::protobuf::int32 NetParameter::input_dim(int index) const {input_dim11514,421362
inline void NetParameter::set_input_dim(int index, ::google::protobuf::int32 value) {set_input_dim11517,421472
inline void NetParameter::add_input_dim(::google::protobuf::int32 value) {add_input_dim11520,421592
NetParameter::input_dim() const {input_dim11524,421771
NetParameter::mutable_input_dim() {mutable_input_dim11528,421899
inline bool NetParameter::has_force_backward() const {has_force_backward11533,422015
inline void NetParameter::set_has_force_backward() {set_has_force_backward11536,422117
inline void NetParameter::clear_has_force_backward() {clear_has_force_backward11539,422204
inline void NetParameter::clear_force_backward() {clear_force_backward11542,422294
inline bool NetParameter::force_backward() const {force_backward11546,422404
inline void NetParameter::set_force_backward(bool value) {set_force_backward11549,422483
inline bool NetParameter::has_state() const {has_state11555,422639
inline void NetParameter::set_has_state() {set_has_state11558,422732
inline void NetParameter::clear_has_state() {clear_has_state11561,422810
inline void NetParameter::clear_state() {clear_state11564,422891
inline const ::caffe::NetState& NetParameter::state() const {state11568,423014
inline ::caffe::NetState* NetParameter::mutable_state() {mutable_state11571,423142
inline ::caffe::NetState* NetParameter::release_state() {release_state11576,423292
inline void NetParameter::set_allocated_state(::caffe::NetState* state) {set_allocated_state11582,423441
inline bool NetParameter::has_debug_info() const {has_debug_info11593,423678
inline void NetParameter::set_has_debug_info() {set_has_debug_info11596,423776
inline void NetParameter::clear_has_debug_info() {clear_has_debug_info11599,423859
inline void NetParameter::clear_debug_info() {clear_debug_info11602,423945
inline bool NetParameter::debug_info() const {debug_info11606,424043
inline void NetParameter::set_debug_info(bool value) {set_debug_info11609,424114
inline int NetParameter::layer_size() const {layer_size11615,424266
inline void NetParameter::clear_layer() {clear_layer11618,424338
inline const ::caffe::LayerParameter& NetParameter::layer(int index) const {layer11621,424400
inline ::caffe::LayerParameter* NetParameter::mutable_layer(int index) {mutable_layer11624,424507
inline ::caffe::LayerParameter* NetParameter::add_layer() {add_layer11627,424614
NetParameter::layer() const {layer11631,424777
NetParameter::mutable_layer() {mutable_layer11635,424898
inline int NetParameter::layers_size() const {layers_size11640,424999
inline void NetParameter::clear_layers() {clear_layers11643,425073
inline const ::caffe::V1LayerParameter& NetParameter::layers(int index) const {layers11646,425137
inline ::caffe::V1LayerParameter* NetParameter::mutable_layers(int index) {mutable_layers11649,425248
inline ::caffe::V1LayerParameter* NetParameter::add_layers() {add_layers11652,425359
NetParameter::layers() const {layers11656,425528
NetParameter::mutable_layers() {mutable_layers11660,425653
inline bool SolverParameter::has_net() const {has_net11669,425829
inline void SolverParameter::set_has_net() {set_has_net11672,425923
inline void SolverParameter::clear_has_net() {clear_has_net11675,426002
inline void SolverParameter::clear_net() {clear_net11678,426084
inline const ::std::string& SolverParameter::net() const {net11684,426232
inline void SolverParameter::set_net(const ::std::string& value) {set_net11687,426309
inline void SolverParameter::set_net(const char* value) {set_net11694,426513
inline void SolverParameter::set_net(const char* value, size_t size) {set_net11701,426708
inline ::std::string* SolverParameter::mutable_net() {mutable_net11708,426953
inline ::std::string* SolverParameter::release_net() {release_net11715,427137
inline void SolverParameter::set_allocated_net(::std::string* net) {set_allocated_net11725,427440
inline bool SolverParameter::has_net_param() const {has_net_param11739,427811
inline void SolverParameter::set_has_net_param() {set_has_net_param11742,427911
inline void SolverParameter::clear_has_net_param() {clear_has_net_param11745,427996
inline void SolverParameter::clear_net_param() {clear_net_param11748,428084
inline const ::caffe::NetParameter& SolverParameter::net_param() const {net_param11752,428230
inline ::caffe::NetParameter* SolverParameter::mutable_net_param() {mutable_net_param11755,428381
inline ::caffe::NetParameter* SolverParameter::release_net_param() {release_net_param11760,428562
inline void SolverParameter::set_allocated_net_param(::caffe::NetParameter* net_param) {set_allocated_net_param11766,428738
inline bool SolverParameter::has_train_net() const {has_train_net11777,428997
inline void SolverParameter::set_has_train_net() {set_has_train_net11780,429097
inline void SolverParameter::clear_has_train_net() {clear_has_train_net11783,429182
inline void SolverParameter::clear_train_net() {clear_train_net11786,429270
inline const ::std::string& SolverParameter::train_net() const {train_net11792,429442
inline void SolverParameter::set_train_net(const ::std::string& value) {set_train_net11795,429531
inline void SolverParameter::set_train_net(const char* value) {set_train_net11802,429765
inline void SolverParameter::set_train_net(const char* value, size_t size) {set_train_net11809,429990
inline ::std::string* SolverParameter::mutable_train_net() {mutable_train_net11816,430265
inline ::std::string* SolverParameter::release_train_net() {release_train_net11823,430479
inline void SolverParameter::set_allocated_train_net(::std::string* train_net) {set_allocated_train_net11833,430812
inline int SolverParameter::test_net_size() const {test_net_size11847,431228
inline void SolverParameter::clear_test_net() {clear_test_net11850,431309
inline const ::std::string& SolverParameter::test_net(int index) const {test_net11853,431380
inline ::std::string* SolverParameter::mutable_test_net(int index) {mutable_test_net11856,431486
inline void SolverParameter::set_test_net(int index, const ::std::string& value) {set_test_net11859,431592
inline void SolverParameter::set_test_net(int index, const char* value) {set_test_net11862,431720
inline void SolverParameter::set_test_net(int index, const char* value, size_t size) {set_test_net11865,431839
inline ::std::string* SolverParameter::add_test_net() {add_test_net11869,432013
inline void SolverParameter::add_test_net(const ::std::string& value) {add_test_net11872,432097
inline void SolverParameter::add_test_net(const char* value) {add_test_net11875,432205
inline void SolverParameter::add_test_net(const char* value, size_t size) {add_test_net11878,432304
SolverParameter::test_net() const {test_net11882,432520
SolverParameter::mutable_test_net() {mutable_test_net11886,432639
inline bool SolverParameter::has_train_net_param() const {has_train_net_param11891,432755
inline void SolverParameter::set_has_train_net_param() {set_has_train_net_param11894,432861
inline void SolverParameter::clear_has_train_net_param() {clear_has_train_net_param11897,432952
inline void SolverParameter::clear_train_net_param() {clear_train_net_param11900,433046
inline const ::caffe::NetParameter& SolverParameter::train_net_param() const {train_net_param11904,433216
inline ::caffe::NetParameter* SolverParameter::mutable_train_net_param() {mutable_train_net_param11907,433391
inline ::caffe::NetParameter* SolverParameter::release_train_net_param() {release_train_net_param11912,433602
inline void SolverParameter::set_allocated_train_net_param(::caffe::NetParameter* train_net_param) {set_allocated_train_net_param11918,433802
inline int SolverParameter::test_net_param_size() const {test_net_param_size11929,434128
inline void SolverParameter::clear_test_net_param() {clear_test_net_param11932,434221
inline const ::caffe::NetParameter& SolverParameter::test_net_param(int index) const {test_net_param11935,434304
inline ::caffe::NetParameter* SolverParameter::mutable_test_net_param(int index) {mutable_test_net_param11938,434430
inline ::caffe::NetParameter* SolverParameter::add_test_net_param() {add_test_net_param11941,434556
SolverParameter::test_net_param() const {test_net_param11945,434736
SolverParameter::mutable_test_net_param() {mutable_test_net_param11949,434876
inline bool SolverParameter::has_train_state() const {has_train_state11954,434996
inline void SolverParameter::set_has_train_state() {set_has_train_state11957,435098
inline void SolverParameter::clear_has_train_state() {clear_has_train_state11960,435185
inline void SolverParameter::clear_train_state() {clear_train_state11963,435275
inline const ::caffe::NetState& SolverParameter::train_state() const {train_state11967,435425
inline ::caffe::NetState* SolverParameter::mutable_train_state() {mutable_train_state11970,435580
inline ::caffe::NetState* SolverParameter::release_train_state() {release_train_state11975,435763
inline void SolverParameter::set_allocated_train_state(::caffe::NetState* train_state) {set_allocated_train_state11981,435939
inline int SolverParameter::test_state_size() const {test_state_size11992,436221
inline void SolverParameter::clear_test_state() {clear_test_state11995,436306
inline const ::caffe::NetState& SolverParameter::test_state(int index) const {test_state11998,436381
inline ::caffe::NetState* SolverParameter::mutable_test_state(int index) {mutable_test_state12001,436495
inline ::caffe::NetState* SolverParameter::add_test_state() {add_test_state12004,436609
SolverParameter::test_state() const {test_state12008,436773
SolverParameter::mutable_test_state() {mutable_test_state12012,436901
inline int SolverParameter::test_iter_size() const {test_iter_size12017,437000
inline void SolverParameter::clear_test_iter() {clear_test_iter12020,437083
inline ::google::protobuf::int32 SolverParameter::test_iter(int index) const {test_iter12023,437156
inline void SolverParameter::set_test_iter(int index, ::google::protobuf::int32 value) {set_test_iter12026,437269
inline void SolverParameter::add_test_iter(::google::protobuf::int32 value) {add_test_iter12029,437392
SolverParameter::test_iter() const {test_iter12033,437574
SolverParameter::mutable_test_iter() {mutable_test_iter12037,437705
inline bool SolverParameter::has_test_interval() const {has_test_interval12042,437820
inline void SolverParameter::set_has_test_interval() {set_has_test_interval12045,437924
inline void SolverParameter::clear_has_test_interval() {clear_has_test_interval12048,438013
inline void SolverParameter::clear_test_interval() {clear_test_interval12051,438105
inline ::google::protobuf::int32 SolverParameter::test_interval() const {test_interval12055,438211
inline void SolverParameter::set_test_interval(::google::protobuf::int32 value) {set_test_interval12058,438312
inline bool SolverParameter::has_test_compute_loss() const {has_test_compute_loss12064,438509
inline void SolverParameter::set_has_test_compute_loss() {set_has_test_compute_loss12067,438617
inline void SolverParameter::clear_has_test_compute_loss() {clear_has_test_compute_loss12070,438710
inline void SolverParameter::clear_test_compute_loss() {clear_test_compute_loss12073,438806
inline bool SolverParameter::test_compute_loss() const {test_compute_loss12077,438928
inline void SolverParameter::set_test_compute_loss(bool value) {set_test_compute_loss12080,439016
inline bool SolverParameter::has_test_initialization() const {has_test_initialization12086,439205
inline void SolverParameter::set_has_test_initialization() {set_has_test_initialization12089,439315
inline void SolverParameter::clear_has_test_initialization() {clear_has_test_initialization12092,439410
inline void SolverParameter::clear_test_initialization() {clear_test_initialization12095,439508
inline bool SolverParameter::test_initialization() const {test_initialization12099,439635
inline void SolverParameter::set_test_initialization(bool value) {set_test_initialization12102,439727
inline bool SolverParameter::has_base_lr() const {has_base_lr12108,439893
inline void SolverParameter::set_has_base_lr() {set_has_base_lr12111,439991
inline void SolverParameter::clear_has_base_lr() {clear_has_base_lr12114,440074
inline void SolverParameter::clear_base_lr() {clear_base_lr12117,440160
inline float SolverParameter::base_lr() const {base_lr12121,440248
inline void SolverParameter::set_base_lr(float value) {set_base_lr12124,440317
inline bool SolverParameter::has_display() const {has_display12130,440448
inline void SolverParameter::set_has_display() {set_has_display12133,440546
inline void SolverParameter::clear_has_display() {clear_has_display12136,440629
inline void SolverParameter::clear_display() {clear_display12139,440715
inline ::google::protobuf::int32 SolverParameter::display() const {display12143,440803
inline void SolverParameter::set_display(::google::protobuf::int32 value) {set_display12146,440892
inline bool SolverParameter::has_average_loss() const {has_average_loss12152,441063
inline void SolverParameter::set_has_average_loss() {set_has_average_loss12155,441166
inline void SolverParameter::clear_has_average_loss() {clear_has_average_loss12158,441254
inline void SolverParameter::clear_average_loss() {clear_average_loss12161,441345
inline ::google::protobuf::int32 SolverParameter::average_loss() const {average_loss12165,441448
inline void SolverParameter::set_average_loss(::google::protobuf::int32 value) {set_average_loss12168,441547
inline bool SolverParameter::has_max_iter() const {has_max_iter12174,441714
inline void SolverParameter::set_has_max_iter() {set_has_max_iter12177,441813
inline void SolverParameter::clear_has_max_iter() {clear_has_max_iter12180,441897
inline void SolverParameter::clear_max_iter() {clear_max_iter12183,441984
inline ::google::protobuf::int32 SolverParameter::max_iter() const {max_iter12187,442075
inline void SolverParameter::set_max_iter(::google::protobuf::int32 value) {set_max_iter12190,442166
inline bool SolverParameter::has_iter_size() const {has_iter_size12196,442337
inline void SolverParameter::set_has_iter_size() {set_has_iter_size12199,442437
inline void SolverParameter::clear_has_iter_size() {clear_has_iter_size12202,442522
inline void SolverParameter::clear_iter_size() {clear_iter_size12205,442610
inline ::google::protobuf::int32 SolverParameter::iter_size() const {iter_size12209,442704
inline void SolverParameter::set_iter_size(::google::protobuf::int32 value) {set_iter_size12212,442797
inline bool SolverParameter::has_lr_policy() const {has_lr_policy12218,442957
inline void SolverParameter::set_has_lr_policy() {set_has_lr_policy12221,443057
inline void SolverParameter::clear_has_lr_policy() {clear_has_lr_policy12224,443142
inline void SolverParameter::clear_lr_policy() {clear_lr_policy12227,443230
inline const ::std::string& SolverParameter::lr_policy() const {lr_policy12233,443402
inline void SolverParameter::set_lr_policy(const ::std::string& value) {set_lr_policy12236,443491
inline void SolverParameter::set_lr_policy(const char* value) {set_lr_policy12243,443725
inline void SolverParameter::set_lr_policy(const char* value, size_t size) {set_lr_policy12250,443950
inline ::std::string* SolverParameter::mutable_lr_policy() {mutable_lr_policy12257,444225
inline ::std::string* SolverParameter::release_lr_policy() {release_lr_policy12264,444439
inline void SolverParameter::set_allocated_lr_policy(::std::string* lr_policy) {set_allocated_lr_policy12274,444772
inline bool SolverParameter::has_gamma() const {has_gamma12288,445184
inline void SolverParameter::set_has_gamma() {set_has_gamma12291,445280
inline void SolverParameter::clear_has_gamma() {clear_has_gamma12294,445361
inline void SolverParameter::clear_gamma() {clear_gamma12297,445445
inline float SolverParameter::gamma() const {gamma12301,445527
inline void SolverParameter::set_gamma(float value) {set_gamma12304,445592
inline bool SolverParameter::has_power() const {has_power12310,445716
inline void SolverParameter::set_has_power() {set_has_power12313,445812
inline void SolverParameter::clear_has_power() {clear_has_power12316,445893
inline void SolverParameter::clear_power() {clear_power12319,445977
inline float SolverParameter::power() const {power12323,446059
inline void SolverParameter::set_power(float value) {set_power12326,446124
inline bool SolverParameter::has_momentum() const {has_momentum12332,446251
inline void SolverParameter::set_has_momentum() {set_has_momentum12335,446350
inline void SolverParameter::clear_has_momentum() {clear_has_momentum12338,446434
inline void SolverParameter::clear_momentum() {clear_momentum12341,446521
inline float SolverParameter::momentum() const {momentum12345,446612
inline void SolverParameter::set_momentum(float value) {set_momentum12348,446683
inline bool SolverParameter::has_weight_decay() const {has_weight_decay12354,446823
inline void SolverParameter::set_has_weight_decay() {set_has_weight_decay12357,446926
inline void SolverParameter::clear_has_weight_decay() {clear_has_weight_decay12360,447014
inline void SolverParameter::clear_weight_decay() {clear_weight_decay12363,447105
inline float SolverParameter::weight_decay() const {weight_decay12367,447208
inline void SolverParameter::set_weight_decay(float value) {set_weight_decay12370,447287
inline bool SolverParameter::has_regularization_type() const {has_regularization_type12376,447464
inline void SolverParameter::set_has_regularization_type() {set_has_regularization_type12379,447574
inline void SolverParameter::clear_has_regularization_type() {clear_has_regularization_type12382,447669
inline void SolverParameter::clear_regularization_type() {clear_regularization_type12385,447767
inline const ::std::string& SolverParameter::regularization_type() const {regularization_type12391,447996
inline void SolverParameter::set_regularization_type(const ::std::string& value) {set_regularization_type12394,448105
inline void SolverParameter::set_regularization_type(const char* value) {set_regularization_type12401,448375
inline void SolverParameter::set_regularization_type(const char* value, size_t size) {set_regularization_type12408,448636
inline ::std::string* SolverParameter::mutable_regularization_type() {mutable_regularization_type12415,448947
inline ::std::string* SolverParameter::release_regularization_type() {release_regularization_type12422,449229
inline void SolverParameter::set_allocated_regularization_type(::std::string* regularization_type) {set_allocated_regularization_type12432,449584
inline bool SolverParameter::has_stepsize() const {has_stepsize12446,450072
inline void SolverParameter::set_has_stepsize() {set_has_stepsize12449,450171
inline void SolverParameter::clear_has_stepsize() {clear_has_stepsize12452,450255
inline void SolverParameter::clear_stepsize() {clear_stepsize12455,450342
inline ::google::protobuf::int32 SolverParameter::stepsize() const {stepsize12459,450433
inline void SolverParameter::set_stepsize(::google::protobuf::int32 value) {set_stepsize12462,450524
inline int SolverParameter::stepvalue_size() const {stepvalue_size12468,450681
inline void SolverParameter::clear_stepvalue() {clear_stepvalue12471,450764
inline ::google::protobuf::int32 SolverParameter::stepvalue(int index) const {stepvalue12474,450837
inline void SolverParameter::set_stepvalue(int index, ::google::protobuf::int32 value) {set_stepvalue12477,450950
inline void SolverParameter::add_stepvalue(::google::protobuf::int32 value) {add_stepvalue12480,451073
SolverParameter::stepvalue() const {stepvalue12484,451255
SolverParameter::mutable_stepvalue() {mutable_stepvalue12488,451386
inline bool SolverParameter::has_clip_gradients() const {has_clip_gradients12493,451504
inline void SolverParameter::set_has_clip_gradients() {set_has_clip_gradients12496,451609
inline void SolverParameter::clear_has_clip_gradients() {clear_has_clip_gradients12499,451699
inline void SolverParameter::clear_clip_gradients() {clear_clip_gradients12502,451792
inline float SolverParameter::clip_gradients() const {clip_gradients12506,451902
inline void SolverParameter::set_clip_gradients(float value) {set_clip_gradients12509,451985
inline bool SolverParameter::has_snapshot() const {has_snapshot12515,452153
inline void SolverParameter::set_has_snapshot() {set_has_snapshot12518,452252
inline void SolverParameter::clear_has_snapshot() {clear_has_snapshot12521,452336
inline void SolverParameter::clear_snapshot() {clear_snapshot12524,452423
inline ::google::protobuf::int32 SolverParameter::snapshot() const {snapshot12528,452514
inline void SolverParameter::set_snapshot(::google::protobuf::int32 value) {set_snapshot12531,452605
inline bool SolverParameter::has_snapshot_prefix() const {has_snapshot_prefix12537,452769
inline void SolverParameter::set_has_snapshot_prefix() {set_has_snapshot_prefix12540,452875
inline void SolverParameter::clear_has_snapshot_prefix() {clear_has_snapshot_prefix12543,452966
inline void SolverParameter::clear_snapshot_prefix() {clear_snapshot_prefix12546,453060
inline const ::std::string& SolverParameter::snapshot_prefix() const {snapshot_prefix12552,453256
inline void SolverParameter::set_snapshot_prefix(const ::std::string& value) {set_snapshot_prefix12555,453357
inline void SolverParameter::set_snapshot_prefix(const char* value) {set_snapshot_prefix12562,453621
inline void SolverParameter::set_snapshot_prefix(const char* value, size_t size) {set_snapshot_prefix12569,453876
inline ::std::string* SolverParameter::mutable_snapshot_prefix() {mutable_snapshot_prefix12576,454181
inline ::std::string* SolverParameter::release_snapshot_prefix() {release_snapshot_prefix12583,454425
inline void SolverParameter::set_allocated_snapshot_prefix(::std::string* snapshot_prefix) {set_allocated_snapshot_prefix12593,454788
inline bool SolverParameter::has_snapshot_diff() const {has_snapshot_diff12607,455286
inline void SolverParameter::set_has_snapshot_diff() {set_has_snapshot_diff12610,455390
inline void SolverParameter::clear_has_snapshot_diff() {clear_has_snapshot_diff12613,455479
inline void SolverParameter::clear_snapshot_diff() {clear_snapshot_diff12616,455571
inline bool SolverParameter::snapshot_diff() const {snapshot_diff12620,455681
inline void SolverParameter::set_snapshot_diff(bool value) {set_snapshot_diff12623,455761
inline bool SolverParameter::has_snapshot_format() const {has_snapshot_format12629,455974
inline void SolverParameter::set_has_snapshot_format() {set_has_snapshot_format12632,456080
inline void SolverParameter::clear_has_snapshot_format() {clear_has_snapshot_format12635,456171
inline void SolverParameter::clear_snapshot_format() {clear_snapshot_format12638,456265
inline ::caffe::SolverParameter_SnapshotFormat SolverParameter::snapshot_format() const {snapshot_format12642,456377
inline void SolverParameter::set_snapshot_format(::caffe::SolverParameter_SnapshotFormat value) {set_snapshot_format12645,456552
inline bool SolverParameter::has_solver_mode() const {has_solver_mode12652,456856
inline void SolverParameter::set_has_solver_mode() {set_has_solver_mode12655,456958
inline void SolverParameter::clear_has_solver_mode() {clear_has_solver_mode12658,457045
inline void SolverParameter::clear_solver_mode() {clear_solver_mode12661,457135
inline ::caffe::SolverParameter_SolverMode SolverParameter::solver_mode() const {solver_mode12665,457235
inline void SolverParameter::set_solver_mode(::caffe::SolverParameter_SolverMode value) {set_solver_mode12668,457394
inline bool SolverParameter::has_device_id() const {has_device_id12675,457646
inline void SolverParameter::set_has_device_id() {set_has_device_id12678,457746
inline void SolverParameter::clear_has_device_id() {clear_has_device_id12681,457831
inline void SolverParameter::clear_device_id() {clear_device_id12684,457919
inline ::google::protobuf::int32 SolverParameter::device_id() const {device_id12688,458013
inline void SolverParameter::set_device_id(::google::protobuf::int32 value) {set_device_id12691,458106
inline bool SolverParameter::has_random_seed() const {has_random_seed12697,458283
inline void SolverParameter::set_has_random_seed() {set_has_random_seed12700,458385
inline void SolverParameter::clear_has_random_seed() {clear_has_random_seed12703,458472
inline void SolverParameter::clear_random_seed() {clear_random_seed12706,458562
inline ::google::protobuf::int64 SolverParameter::random_seed() const {random_seed12710,458680
inline void SolverParameter::set_random_seed(::google::protobuf::int64 value) {set_random_seed12713,458777
inline bool SolverParameter::has_type() const {has_type12719,458957
inline void SolverParameter::set_has_type() {set_has_type12722,459052
inline void SolverParameter::clear_has_type() {clear_has_type12725,459132
inline void SolverParameter::clear_type() {clear_type12728,459215
inline const ::std::string& SolverParameter::type() const {type12734,459354
inline void SolverParameter::set_type(const ::std::string& value) {set_type12737,459433
inline void SolverParameter::set_type(const char* value) {set_type12744,459613
inline void SolverParameter::set_type(const char* value, size_t size) {set_type12751,459784
inline ::std::string* SolverParameter::mutable_type() {mutable_type12758,460005
inline ::std::string* SolverParameter::release_type() {release_type12765,460182
inline void SolverParameter::set_allocated_type(::std::string* type) {set_allocated_type12775,460432
inline bool SolverParameter::has_delta() const {has_delta12789,460755
inline void SolverParameter::set_has_delta() {set_has_delta12792,460851
inline void SolverParameter::clear_has_delta() {clear_has_delta12795,460932
inline void SolverParameter::clear_delta() {clear_delta12798,461016
inline float SolverParameter::delta() const {delta12802,461103
inline void SolverParameter::set_delta(float value) {set_delta12805,461168
inline bool SolverParameter::has_momentum2() const {has_momentum212811,461314
inline void SolverParameter::set_has_momentum2() {set_has_momentum212814,461414
inline void SolverParameter::clear_has_momentum2() {clear_has_momentum212817,461499
inline void SolverParameter::clear_momentum2() {clear_momentum212820,461587
inline float SolverParameter::momentum2() const {momentum212824,461686
inline void SolverParameter::set_momentum2(float value) {set_momentum212827,461759
inline bool SolverParameter::has_rms_decay() const {has_rms_decay12833,461916
inline void SolverParameter::set_has_rms_decay() {set_has_rms_decay12836,462016
inline void SolverParameter::clear_has_rms_decay() {clear_has_rms_decay12839,462101
inline void SolverParameter::clear_rms_decay() {clear_rms_decay12842,462189
inline float SolverParameter::rms_decay() const {rms_decay12846,462287
inline void SolverParameter::set_rms_decay(float value) {set_rms_decay12849,462360
inline bool SolverParameter::has_debug_info() const {has_debug_info12855,462518
inline void SolverParameter::set_has_debug_info() {set_has_debug_info12858,462619
inline void SolverParameter::clear_has_debug_info() {clear_has_debug_info12861,462705
inline void SolverParameter::clear_debug_info() {clear_debug_info12864,462794
inline bool SolverParameter::debug_info() const {debug_info12868,462895
inline void SolverParameter::set_debug_info(bool value) {set_debug_info12871,462969
inline bool SolverParameter::has_snapshot_after_train() const {has_snapshot_after_train12877,463138
inline void SolverParameter::set_has_snapshot_after_train() {set_has_snapshot_after_train12880,463249
inline void SolverParameter::clear_has_snapshot_after_train() {clear_has_snapshot_after_train12883,463345
inline void SolverParameter::clear_snapshot_after_train() {clear_snapshot_after_train12886,463444
inline bool SolverParameter::snapshot_after_train() const {snapshot_after_train12890,463574
inline void SolverParameter::set_snapshot_after_train(bool value) {set_snapshot_after_train12893,463668
inline bool SolverParameter::has_solver_type() const {has_solver_type12899,463886
inline void SolverParameter::set_has_solver_type() {set_has_solver_type12902,463988
inline void SolverParameter::clear_has_solver_type() {clear_has_solver_type12905,464075
inline void SolverParameter::clear_solver_type() {clear_solver_type12908,464165
inline ::caffe::SolverParameter_SolverType SolverParameter::solver_type() const {solver_type12912,464265
inline void SolverParameter::set_solver_type(::caffe::SolverParameter_SolverType value) {set_solver_type12915,464424
inline bool SolverParameter::has_layer_wise_reduce() const {has_layer_wise_reduce12922,464686
inline void SolverParameter::set_has_layer_wise_reduce() {set_has_layer_wise_reduce12925,464794
inline void SolverParameter::clear_has_layer_wise_reduce() {clear_has_layer_wise_reduce12928,464887
inline void SolverParameter::clear_layer_wise_reduce() {clear_layer_wise_reduce12931,464983
inline bool SolverParameter::layer_wise_reduce() const {layer_wise_reduce12935,465104
inline void SolverParameter::set_layer_wise_reduce(bool value) {set_layer_wise_reduce12938,465192
inline bool SolverState::has_iter() const {has_iter12948,465437
inline void SolverState::set_has_iter() {set_has_iter12951,465528
inline void SolverState::clear_has_iter() {clear_has_iter12954,465604
inline void SolverState::clear_iter() {clear_iter12957,465683
inline ::google::protobuf::int32 SolverState::iter() const {iter12961,465758
inline void SolverState::set_iter(::google::protobuf::int32 value) {set_iter12964,465837
inline bool SolverState::has_learned_net() const {has_learned_net12970,465980
inline void SolverState::set_has_learned_net() {set_has_learned_net12973,466078
inline void SolverState::clear_has_learned_net() {clear_has_learned_net12976,466161
inline void SolverState::clear_learned_net() {clear_learned_net12979,466247
inline const ::std::string& SolverState::learned_net() const {learned_net12985,466423
inline void SolverState::set_learned_net(const ::std::string& value) {set_learned_net12988,466512
inline void SolverState::set_learned_net(const char* value) {set_learned_net12995,466752
inline void SolverState::set_learned_net(const char* value, size_t size) {set_learned_net13002,466983
inline ::std::string* SolverState::mutable_learned_net() {mutable_learned_net13009,467264
inline ::std::string* SolverState::release_learned_net() {release_learned_net13016,467484
inline void SolverState::set_allocated_learned_net(::std::string* learned_net) {set_allocated_learned_net13026,467823
inline int SolverState::history_size() const {history_size13040,468264
inline void SolverState::clear_history() {clear_history13043,468339
inline const ::caffe::BlobProto& SolverState::history(int index) const {history13046,468404
inline ::caffe::BlobProto* SolverState::mutable_history(int index) {mutable_history13049,468509
inline ::caffe::BlobProto* SolverState::add_history() {add_history13052,468614
SolverState::history() const {history13056,468770
SolverState::mutable_history() {mutable_history13060,468889
inline bool SolverState::has_current_step() const {has_current_step13065,468995
inline void SolverState::set_has_current_step() {set_has_current_step13068,469094
inline void SolverState::clear_has_current_step() {clear_has_current_step13071,469178
inline void SolverState::clear_current_step() {clear_current_step13074,469265
inline ::google::protobuf::int32 SolverState::current_step() const {current_step13078,469364
inline void SolverState::set_current_step(::google::protobuf::int32 value) {set_current_step13081,469459
inline bool NetState::has_phase() const {has_phase13091,469728
inline void NetState::set_has_phase() {set_has_phase13094,469817
inline void NetState::clear_has_phase() {clear_has_phase13097,469891
inline void NetState::clear_phase() {clear_phase13100,469968
inline ::caffe::Phase NetState::phase() const {phase13104,470043
inline void NetState::set_phase(::caffe::Phase value) {set_phase13107,470141
inline bool NetState::has_level() const {has_level13114,470321
inline void NetState::set_has_level() {set_has_level13117,470410
inline void NetState::clear_has_level() {clear_has_level13120,470484
inline void NetState::clear_level() {clear_level13123,470561
inline ::google::protobuf::int32 NetState::level() const {level13127,470636
inline void NetState::set_level(::google::protobuf::int32 value) {set_level13130,470714
inline int NetState::stage_size() const {stage_size13136,470851
inline void NetState::clear_stage() {clear_stage13139,470919
inline const ::std::string& NetState::stage(int index) const {stage13142,470977
inline ::std::string* NetState::mutable_stage(int index) {mutable_stage13145,471070
inline void NetState::set_stage(int index, const ::std::string& value) {set_stage13148,471163
inline void NetState::set_stage(int index, const char* value) {set_stage13151,471278
inline void NetState::set_stage(int index, const char* value, size_t size) {set_stage13154,471384
inline ::std::string* NetState::add_stage() {add_stage13158,471545
inline void NetState::add_stage(const ::std::string& value) {add_stage13161,471616
inline void NetState::add_stage(const char* value) {add_stage13164,471711
inline void NetState::add_stage(const char* value, size_t size) {add_stage13167,471797
NetState::stage() const {stage13171,472000
NetState::mutable_stage() {mutable_stage13175,472106
inline bool NetStateRule::has_phase() const {has_phase13184,472280
inline void NetStateRule::set_has_phase() {set_has_phase13187,472373
inline void NetStateRule::clear_has_phase() {clear_has_phase13190,472451
inline void NetStateRule::clear_phase() {clear_phase13193,472532
inline ::caffe::Phase NetStateRule::phase() const {phase13197,472611
inline void NetStateRule::set_phase(::caffe::Phase value) {set_phase13200,472713
inline bool NetStateRule::has_min_level() const {has_min_level13207,472887
inline void NetStateRule::set_has_min_level() {set_has_min_level13210,472984
inline void NetStateRule::clear_has_min_level() {clear_has_min_level13213,473066
inline void NetStateRule::clear_min_level() {clear_min_level13216,473151
inline ::google::protobuf::int32 NetStateRule::min_level() const {min_level13220,473242
inline void NetStateRule::set_min_level(::google::protobuf::int32 value) {set_min_level13223,473332
inline bool NetStateRule::has_max_level() const {has_max_level13229,473488
inline void NetStateRule::set_has_max_level() {set_has_max_level13232,473585
inline void NetStateRule::clear_has_max_level() {clear_has_max_level13235,473667
inline void NetStateRule::clear_max_level() {clear_max_level13238,473752
inline ::google::protobuf::int32 NetStateRule::max_level() const {max_level13242,473843
inline void NetStateRule::set_max_level(::google::protobuf::int32 value) {set_max_level13245,473933
inline int NetStateRule::stage_size() const {stage_size13251,474086
inline void NetStateRule::clear_stage() {clear_stage13254,474158
inline const ::std::string& NetStateRule::stage(int index) const {stage13257,474220
inline ::std::string* NetStateRule::mutable_stage(int index) {mutable_stage13260,474317
inline void NetStateRule::set_stage(int index, const ::std::string& value) {set_stage13263,474414
inline void NetStateRule::set_stage(int index, const char* value) {set_stage13266,474533
inline void NetStateRule::set_stage(int index, const char* value, size_t size) {set_stage13269,474643
inline ::std::string* NetStateRule::add_stage() {add_stage13273,474808
inline void NetStateRule::add_stage(const ::std::string& value) {add_stage13276,474883
inline void NetStateRule::add_stage(const char* value) {add_stage13279,474982
inline void NetStateRule::add_stage(const char* value, size_t size) {add_stage13282,475072
NetStateRule::stage() const {stage13286,475279
NetStateRule::mutable_stage() {mutable_stage13290,475389
inline int NetStateRule::not_stage_size() const {not_stage_size13295,475476
inline void NetStateRule::clear_not_stage() {clear_not_stage13298,475556
inline const ::std::string& NetStateRule::not_stage(int index) const {not_stage13301,475626
inline ::std::string* NetStateRule::mutable_not_stage(int index) {mutable_not_stage13304,475731
inline void NetStateRule::set_not_stage(int index, const ::std::string& value) {set_not_stage13307,475836
inline void NetStateRule::set_not_stage(int index, const char* value) {set_not_stage13310,475963
inline void NetStateRule::set_not_stage(int index, const char* value, size_t size) {set_not_stage13313,476081
inline ::std::string* NetStateRule::add_not_stage() {add_not_stage13317,476254
inline void NetStateRule::add_not_stage(const ::std::string& value) {add_not_stage13320,476337
inline void NetStateRule::add_not_stage(const char* value) {add_not_stage13323,476444
inline void NetStateRule::add_not_stage(const char* value, size_t size) {add_not_stage13326,476542
NetStateRule::not_stage() const {not_stage13330,476757
NetStateRule::mutable_not_stage() {mutable_not_stage13334,476875
inline bool ParamSpec::has_name() const {has_name13343,477051
inline void ParamSpec::set_has_name() {set_has_name13346,477140
inline void ParamSpec::clear_has_name() {clear_has_name13349,477214
inline void ParamSpec::clear_name() {clear_name13352,477291
inline const ::std::string& ParamSpec::name() const {name13358,477437
inline void ParamSpec::set_name(const ::std::string& value) {set_name13361,477510
inline void ParamSpec::set_name(const char* value) {set_name13368,477713
inline void ParamSpec::set_name(const char* value, size_t size) {set_name13375,477907
inline ::std::string* ParamSpec::mutable_name() {mutable_name13382,478151
inline ::std::string* ParamSpec::release_name() {release_name13389,478334
inline void ParamSpec::set_allocated_name(::std::string* name) {set_allocated_name13399,478636
inline bool ParamSpec::has_share_mode() const {has_share_mode13413,479021
inline void ParamSpec::set_has_share_mode() {set_has_share_mode13416,479116
inline void ParamSpec::clear_has_share_mode() {clear_has_share_mode13419,479196
inline void ParamSpec::clear_share_mode() {clear_share_mode13422,479279
inline ::caffe::ParamSpec_DimCheckMode ParamSpec::share_mode() const {share_mode13426,479370
inline void ParamSpec::set_share_mode(::caffe::ParamSpec_DimCheckMode value) {set_share_mode13429,479513
inline bool ParamSpec::has_lr_mult() const {has_lr_mult13436,479745
inline void ParamSpec::set_has_lr_mult() {set_has_lr_mult13439,479837
inline void ParamSpec::clear_has_lr_mult() {clear_has_lr_mult13442,479914
inline void ParamSpec::clear_lr_mult() {clear_lr_mult13445,479994
inline float ParamSpec::lr_mult() const {lr_mult13449,480076
inline void ParamSpec::set_lr_mult(float value) {set_lr_mult13452,480139
inline bool ParamSpec::has_decay_mult() const {has_decay_mult13458,480281
inline void ParamSpec::set_has_decay_mult() {set_has_decay_mult13461,480376
inline void ParamSpec::clear_has_decay_mult() {clear_has_decay_mult13464,480456
inline void ParamSpec::clear_decay_mult() {clear_decay_mult13467,480539
inline float ParamSpec::decay_mult() const {decay_mult13471,480630
inline void ParamSpec::set_decay_mult(float value) {set_decay_mult13474,480699
inline bool LayerParameter::has_name() const {has_name13484,480922
inline void LayerParameter::set_has_name() {set_has_name13487,481016
inline void LayerParameter::clear_has_name() {clear_has_name13490,481095
inline void LayerParameter::clear_name() {clear_name13493,481177
inline const ::std::string& LayerParameter::name() const {name13499,481328
inline void LayerParameter::set_name(const ::std::string& value) {set_name13502,481406
inline void LayerParameter::set_name(const char* value) {set_name13509,481614
inline void LayerParameter::set_name(const char* value, size_t size) {set_name13516,481813
inline ::std::string* LayerParameter::mutable_name() {mutable_name13523,482062
inline ::std::string* LayerParameter::release_name() {release_name13530,482250
inline void LayerParameter::set_allocated_name(::std::string* name) {set_allocated_name13540,482557
inline bool LayerParameter::has_type() const {has_type13554,482918
inline void LayerParameter::set_has_type() {set_has_type13557,483012
inline void LayerParameter::clear_has_type() {clear_has_type13560,483091
inline void LayerParameter::clear_type() {clear_type13563,483173
inline const ::std::string& LayerParameter::type() const {type13569,483324
inline void LayerParameter::set_type(const ::std::string& value) {set_type13572,483402
inline void LayerParameter::set_type(const char* value) {set_type13579,483610
inline void LayerParameter::set_type(const char* value, size_t size) {set_type13586,483809
inline ::std::string* LayerParameter::mutable_type() {mutable_type13593,484058
inline ::std::string* LayerParameter::release_type() {release_type13600,484246
inline void LayerParameter::set_allocated_type(::std::string* type) {set_allocated_type13610,484553
inline int LayerParameter::bottom_size() const {bottom_size13624,484916
inline void LayerParameter::clear_bottom() {clear_bottom13627,484992
inline const ::std::string& LayerParameter::bottom(int index) const {bottom13630,485058
inline ::std::string* LayerParameter::mutable_bottom(int index) {mutable_bottom13633,485159
inline void LayerParameter::set_bottom(int index, const ::std::string& value) {set_bottom13636,485260
inline void LayerParameter::set_bottom(int index, const char* value) {set_bottom13639,485383
inline void LayerParameter::set_bottom(int index, const char* value, size_t size) {set_bottom13642,485497
inline ::std::string* LayerParameter::add_bottom() {add_bottom13646,485666
inline void LayerParameter::add_bottom(const ::std::string& value) {add_bottom13649,485745
inline void LayerParameter::add_bottom(const char* value) {add_bottom13652,485848
inline void LayerParameter::add_bottom(const char* value, size_t size) {add_bottom13655,485942
LayerParameter::bottom() const {bottom13659,486153
LayerParameter::mutable_bottom() {mutable_bottom13663,486267
inline int LayerParameter::top_size() const {top_size13668,486352
inline void LayerParameter::clear_top() {clear_top13671,486422
inline const ::std::string& LayerParameter::top(int index) const {top13674,486482
inline ::std::string* LayerParameter::mutable_top(int index) {mutable_top13677,486577
inline void LayerParameter::set_top(int index, const ::std::string& value) {set_top13680,486672
inline void LayerParameter::set_top(int index, const char* value) {set_top13683,486789
inline void LayerParameter::set_top(int index, const char* value, size_t size) {set_top13686,486897
inline ::std::string* LayerParameter::add_top() {add_top13690,487060
inline void LayerParameter::add_top(const ::std::string& value) {add_top13693,487133
inline void LayerParameter::add_top(const char* value) {add_top13696,487230
inline void LayerParameter::add_top(const char* value, size_t size) {add_top13699,487318
LayerParameter::top() const {top13703,487523
LayerParameter::mutable_top() {mutable_top13707,487631
inline bool LayerParameter::has_phase() const {has_phase13712,487719
inline void LayerParameter::set_has_phase() {set_has_phase13715,487814
inline void LayerParameter::clear_has_phase() {clear_has_phase13718,487894
inline void LayerParameter::clear_phase() {clear_phase13721,487977
inline ::caffe::Phase LayerParameter::phase() const {phase13725,488058
inline void LayerParameter::set_phase(::caffe::Phase value) {set_phase13728,488162
inline int LayerParameter::loss_weight_size() const {loss_weight_size13735,488340
inline void LayerParameter::clear_loss_weight() {clear_loss_weight13738,488426
inline float LayerParameter::loss_weight(int index) const {loss_weight13741,488502
inline void LayerParameter::set_loss_weight(int index, float value) {set_loss_weight13744,488598
inline void LayerParameter::add_loss_weight(float value) {add_loss_weight13747,488704
LayerParameter::loss_weight() const {loss_weight13751,488849
LayerParameter::mutable_loss_weight() {mutable_loss_weight13755,488963
inline int LayerParameter::param_size() const {param_size13760,489070
inline void LayerParameter::clear_param() {clear_param13763,489144
inline const ::caffe::ParamSpec& LayerParameter::param(int index) const {param13766,489208
inline ::caffe::ParamSpec* LayerParameter::mutable_param(int index) {mutable_param13769,489312
inline ::caffe::ParamSpec* LayerParameter::add_param() {add_param13772,489416
LayerParameter::param() const {param13776,489571
LayerParameter::mutable_param() {mutable_param13780,489689
inline int LayerParameter::blobs_size() const {blobs_size13785,489784
inline void LayerParameter::clear_blobs() {clear_blobs13788,489858
inline const ::caffe::BlobProto& LayerParameter::blobs(int index) const {blobs13791,489922
inline ::caffe::BlobProto* LayerParameter::mutable_blobs(int index) {mutable_blobs13794,490026
inline ::caffe::BlobProto* LayerParameter::add_blobs() {add_blobs13797,490130
LayerParameter::blobs() const {blobs13801,490285
LayerParameter::mutable_blobs() {mutable_blobs13805,490403
inline int LayerParameter::propagate_down_size() const {propagate_down_size13810,490496
inline void LayerParameter::clear_propagate_down() {clear_propagate_down13813,490588
inline bool LayerParameter::propagate_down(int index) const {propagate_down13816,490670
inline void LayerParameter::set_propagate_down(int index, bool value) {set_propagate_down13819,490771
inline void LayerParameter::add_propagate_down(bool value) {add_propagate_down13822,490882
LayerParameter::propagate_down() const {propagate_down13826,491031
LayerParameter::mutable_propagate_down() {mutable_propagate_down13830,491150
inline int LayerParameter::include_size() const {include_size13835,491268
inline void LayerParameter::clear_include() {clear_include13838,491346
inline const ::caffe::NetStateRule& LayerParameter::include(int index) const {include13841,491414
inline ::caffe::NetStateRule* LayerParameter::mutable_include(int index) {mutable_include13844,491525
inline ::caffe::NetStateRule* LayerParameter::add_include() {add_include13847,491636
LayerParameter::include() const {include13851,491801
LayerParameter::mutable_include() {mutable_include13855,491926
inline int LayerParameter::exclude_size() const {exclude_size13860,492030
inline void LayerParameter::clear_exclude() {clear_exclude13863,492108
inline const ::caffe::NetStateRule& LayerParameter::exclude(int index) const {exclude13866,492176
inline ::caffe::NetStateRule* LayerParameter::mutable_exclude(int index) {mutable_exclude13869,492287
inline ::caffe::NetStateRule* LayerParameter::add_exclude() {add_exclude13872,492398
LayerParameter::exclude() const {exclude13876,492563
LayerParameter::mutable_exclude() {mutable_exclude13880,492688
inline bool LayerParameter::has_transform_param() const {has_transform_param13885,492813
inline void LayerParameter::set_has_transform_param() {set_has_transform_param13888,492918
inline void LayerParameter::clear_has_transform_param() {clear_has_transform_param13891,493008
inline void LayerParameter::clear_transform_param() {clear_transform_param13894,493101
inline const ::caffe::TransformationParameter& LayerParameter::transform_param() const {transform_param13898,493281
inline ::caffe::TransformationParameter* LayerParameter::mutable_transform_param() {mutable_transform_param13901,493466
inline ::caffe::TransformationParameter* LayerParameter::release_transform_param() {release_transform_param13906,493698
inline void LayerParameter::set_allocated_transform_param(::caffe::TransformationParameter* transform_param) {set_allocated_transform_param13912,493919
inline bool LayerParameter::has_loss_param() const {has_loss_param13923,494253
inline void LayerParameter::set_has_loss_param() {set_has_loss_param13926,494353
inline void LayerParameter::clear_has_loss_param() {clear_has_loss_param13929,494438
inline void LayerParameter::clear_loss_param() {clear_loss_param13932,494526
inline const ::caffe::LossParameter& LayerParameter::loss_param() const {loss_param13936,494676
inline ::caffe::LossParameter* LayerParameter::mutable_loss_param() {mutable_loss_param13939,494831
inline ::caffe::LossParameter* LayerParameter::release_loss_param() {release_loss_param13944,495018
inline void LayerParameter::set_allocated_loss_param(::caffe::LossParameter* loss_param) {set_allocated_loss_param13950,495199
inline bool LayerParameter::has_accuracy_param() const {has_accuracy_param13961,495491
inline void LayerParameter::set_has_accuracy_param() {set_has_accuracy_param13964,495595
inline void LayerParameter::clear_has_accuracy_param() {clear_has_accuracy_param13967,495684
inline void LayerParameter::clear_accuracy_param() {clear_accuracy_param13970,495776
inline const ::caffe::AccuracyParameter& LayerParameter::accuracy_param() const {accuracy_param13974,495946
inline ::caffe::AccuracyParameter* LayerParameter::mutable_accuracy_param() {mutable_accuracy_param13977,496121
inline ::caffe::AccuracyParameter* LayerParameter::release_accuracy_param() {release_accuracy_param13982,496336
inline void LayerParameter::set_allocated_accuracy_param(::caffe::AccuracyParameter* accuracy_param) {set_allocated_accuracy_param13988,496541
inline bool LayerParameter::has_argmax_param() const {has_argmax_param13999,496865
inline void LayerParameter::set_has_argmax_param() {set_has_argmax_param14002,496967
inline void LayerParameter::clear_has_argmax_param() {clear_has_argmax_param14005,497054
inline void LayerParameter::clear_argmax_param() {clear_argmax_param14008,497144
inline const ::caffe::ArgMaxParameter& LayerParameter::argmax_param() const {argmax_param14012,497304
inline ::caffe::ArgMaxParameter* LayerParameter::mutable_argmax_param() {mutable_argmax_param14015,497469
inline ::caffe::ArgMaxParameter* LayerParameter::release_argmax_param() {release_argmax_param14020,497670
inline void LayerParameter::set_allocated_argmax_param(::caffe::ArgMaxParameter* argmax_param) {set_allocated_argmax_param14026,497863
inline bool LayerParameter::has_batch_norm_param() const {has_batch_norm_param14037,498176
inline void LayerParameter::set_has_batch_norm_param() {set_has_batch_norm_param14040,498282
inline void LayerParameter::clear_has_batch_norm_param() {clear_has_batch_norm_param14043,498373
inline void LayerParameter::clear_batch_norm_param() {clear_batch_norm_param14046,498467
inline const ::caffe::BatchNormParameter& LayerParameter::batch_norm_param() const {batch_norm_param14050,498646
inline ::caffe::BatchNormParameter* LayerParameter::mutable_batch_norm_param() {mutable_batch_norm_param14053,498830
inline ::caffe::BatchNormParameter* LayerParameter::release_batch_norm_param() {release_batch_norm_param14058,499057
inline void LayerParameter::set_allocated_batch_norm_param(::caffe::BatchNormParameter* batch_norm_param) {set_allocated_batch_norm_param14064,499272
inline bool LayerParameter::has_bias_param() const {has_bias_param14075,499609
inline void LayerParameter::set_has_bias_param() {set_has_bias_param14078,499709
inline void LayerParameter::clear_has_bias_param() {clear_has_bias_param14081,499794
inline void LayerParameter::clear_bias_param() {clear_bias_param14084,499882
inline const ::caffe::BiasParameter& LayerParameter::bias_param() const {bias_param14088,500032
inline ::caffe::BiasParameter* LayerParameter::mutable_bias_param() {mutable_bias_param14091,500187
inline ::caffe::BiasParameter* LayerParameter::release_bias_param() {release_bias_param14096,500374
inline void LayerParameter::set_allocated_bias_param(::caffe::BiasParameter* bias_param) {set_allocated_bias_param14102,500555
inline bool LayerParameter::has_concat_param() const {has_concat_param14113,500843
inline void LayerParameter::set_has_concat_param() {set_has_concat_param14116,500945
inline void LayerParameter::clear_has_concat_param() {clear_has_concat_param14119,501032
inline void LayerParameter::clear_concat_param() {clear_concat_param14122,501122
inline const ::caffe::ConcatParameter& LayerParameter::concat_param() const {concat_param14126,501282
inline ::caffe::ConcatParameter* LayerParameter::mutable_concat_param() {mutable_concat_param14129,501447
inline ::caffe::ConcatParameter* LayerParameter::release_concat_param() {release_concat_param14134,501648
inline void LayerParameter::set_allocated_concat_param(::caffe::ConcatParameter* concat_param) {set_allocated_concat_param14140,501841
inline bool LayerParameter::has_contrastive_loss_param() const {has_contrastive_loss_param14151,502166
inline void LayerParameter::set_has_contrastive_loss_param() {set_has_contrastive_loss_param14154,502278
inline void LayerParameter::clear_has_contrastive_loss_param() {clear_has_contrastive_loss_param14157,502375
inline void LayerParameter::clear_contrastive_loss_param() {clear_contrastive_loss_param14160,502475
inline const ::caffe::ContrastiveLossParameter& LayerParameter::contrastive_loss_param() const {contrastive_loss_param14164,502684
inline ::caffe::ContrastiveLossParameter* LayerParameter::mutable_contrastive_loss_param() {mutable_contrastive_loss_param14167,502898
inline ::caffe::ContrastiveLossParameter* LayerParameter::release_contrastive_loss_param() {release_contrastive_loss_param14172,503167
inline void LayerParameter::set_allocated_contrastive_loss_param(::caffe::ContrastiveLossParameter* contrastive_loss_param) {set_allocated_contrastive_loss_param14178,503418
inline bool LayerParameter::has_convolution_param() const {has_convolution_param14189,503823
inline void LayerParameter::set_has_convolution_param() {set_has_convolution_param14192,503930
inline void LayerParameter::clear_has_convolution_param() {clear_has_convolution_param14195,504022
inline void LayerParameter::clear_convolution_param() {clear_convolution_param14198,504117
inline const ::caffe::ConvolutionParameter& LayerParameter::convolution_param() const {convolution_param14202,504302
inline ::caffe::ConvolutionParameter* LayerParameter::mutable_convolution_param() {mutable_convolution_param14205,504492
inline ::caffe::ConvolutionParameter* LayerParameter::release_convolution_param() {release_convolution_param14210,504728
inline void LayerParameter::set_allocated_convolution_param(::caffe::ConvolutionParameter* convolution_param) {set_allocated_convolution_param14216,504951
inline bool LayerParameter::has_crop_param() const {has_crop_param14227,505298
inline void LayerParameter::set_has_crop_param() {set_has_crop_param14230,505398
inline void LayerParameter::clear_has_crop_param() {clear_has_crop_param14233,505483
inline void LayerParameter::clear_crop_param() {clear_crop_param14236,505571
inline const ::caffe::CropParameter& LayerParameter::crop_param() const {crop_param14240,505721
inline ::caffe::CropParameter* LayerParameter::mutable_crop_param() {mutable_crop_param14243,505876
inline ::caffe::CropParameter* LayerParameter::release_crop_param() {release_crop_param14248,506063
inline void LayerParameter::set_allocated_crop_param(::caffe::CropParameter* crop_param) {set_allocated_crop_param14254,506244
inline bool LayerParameter::has_data_param() const {has_data_param14265,506528
inline void LayerParameter::set_has_data_param() {set_has_data_param14268,506628
inline void LayerParameter::clear_has_data_param() {clear_has_data_param14271,506713
inline void LayerParameter::clear_data_param() {clear_data_param14274,506801
inline const ::caffe::DataParameter& LayerParameter::data_param() const {data_param14278,506951
inline ::caffe::DataParameter* LayerParameter::mutable_data_param() {mutable_data_param14281,507106
inline ::caffe::DataParameter* LayerParameter::release_data_param() {release_data_param14286,507293
inline void LayerParameter::set_allocated_data_param(::caffe::DataParameter* data_param) {set_allocated_data_param14292,507474
inline bool LayerParameter::has_dropout_param() const {has_dropout_param14303,507764
inline void LayerParameter::set_has_dropout_param() {set_has_dropout_param14306,507867
inline void LayerParameter::clear_has_dropout_param() {clear_has_dropout_param14309,507955
inline void LayerParameter::clear_dropout_param() {clear_dropout_param14312,508046
inline const ::caffe::DropoutParameter& LayerParameter::dropout_param() const {dropout_param14316,508211
inline ::caffe::DropoutParameter* LayerParameter::mutable_dropout_param() {mutable_dropout_param14319,508381
inline ::caffe::DropoutParameter* LayerParameter::release_dropout_param() {release_dropout_param14324,508589
inline void LayerParameter::set_allocated_dropout_param(::caffe::DropoutParameter* dropout_param) {set_allocated_dropout_param14330,508788
inline bool LayerParameter::has_dummy_data_param() const {has_dummy_data_param14341,509110
inline void LayerParameter::set_has_dummy_data_param() {set_has_dummy_data_param14344,509216
inline void LayerParameter::clear_has_dummy_data_param() {clear_has_dummy_data_param14347,509307
inline void LayerParameter::clear_dummy_data_param() {clear_dummy_data_param14350,509401
inline const ::caffe::DummyDataParameter& LayerParameter::dummy_data_param() const {dummy_data_param14354,509580
inline ::caffe::DummyDataParameter* LayerParameter::mutable_dummy_data_param() {mutable_dummy_data_param14357,509764
inline ::caffe::DummyDataParameter* LayerParameter::release_dummy_data_param() {release_dummy_data_param14362,509991
inline void LayerParameter::set_allocated_dummy_data_param(::caffe::DummyDataParameter* dummy_data_param) {set_allocated_dummy_data_param14368,510206
inline bool LayerParameter::has_eltwise_param() const {has_eltwise_param14379,510549
inline void LayerParameter::set_has_eltwise_param() {set_has_eltwise_param14382,510652
inline void LayerParameter::clear_has_eltwise_param() {clear_has_eltwise_param14385,510740
inline void LayerParameter::clear_eltwise_param() {clear_eltwise_param14388,510831
inline const ::caffe::EltwiseParameter& LayerParameter::eltwise_param() const {eltwise_param14392,510996
inline ::caffe::EltwiseParameter* LayerParameter::mutable_eltwise_param() {mutable_eltwise_param14395,511166
inline ::caffe::EltwiseParameter* LayerParameter::release_eltwise_param() {release_eltwise_param14400,511374
inline void LayerParameter::set_allocated_eltwise_param(::caffe::EltwiseParameter* eltwise_param) {set_allocated_eltwise_param14406,511573
inline bool LayerParameter::has_elu_param() const {has_elu_param14417,511882
inline void LayerParameter::set_has_elu_param() {set_has_elu_param14420,511981
inline void LayerParameter::clear_has_elu_param() {clear_has_elu_param14423,512065
inline void LayerParameter::clear_elu_param() {clear_elu_param14426,512152
inline const ::caffe::ELUParameter& LayerParameter::elu_param() const {elu_param14430,512297
inline ::caffe::ELUParameter* LayerParameter::mutable_elu_param() {mutable_elu_param14433,512447
inline ::caffe::ELUParameter* LayerParameter::release_elu_param() {release_elu_param14438,512627
inline void LayerParameter::set_allocated_elu_param(::caffe::ELUParameter* elu_param) {set_allocated_elu_param14444,512802
inline bool LayerParameter::has_embed_param() const {has_embed_param14455,513079
inline void LayerParameter::set_has_embed_param() {set_has_embed_param14458,513180
inline void LayerParameter::clear_has_embed_param() {clear_has_embed_param14461,513266
inline void LayerParameter::clear_embed_param() {clear_embed_param14464,513355
inline const ::caffe::EmbedParameter& LayerParameter::embed_param() const {embed_param14468,513510
inline ::caffe::EmbedParameter* LayerParameter::mutable_embed_param() {mutable_embed_param14471,513670
inline ::caffe::EmbedParameter* LayerParameter::release_embed_param() {release_embed_param14476,513864
inline void LayerParameter::set_allocated_embed_param(::caffe::EmbedParameter* embed_param) {set_allocated_embed_param14482,514051
inline bool LayerParameter::has_exp_param() const {has_exp_param14493,514342
inline void LayerParameter::set_has_exp_param() {set_has_exp_param14496,514441
inline void LayerParameter::clear_has_exp_param() {clear_has_exp_param14499,514525
inline void LayerParameter::clear_exp_param() {clear_exp_param14502,514612
inline const ::caffe::ExpParameter& LayerParameter::exp_param() const {exp_param14506,514757
inline ::caffe::ExpParameter* LayerParameter::mutable_exp_param() {mutable_exp_param14509,514907
inline ::caffe::ExpParameter* LayerParameter::release_exp_param() {release_exp_param14514,515087
inline void LayerParameter::set_allocated_exp_param(::caffe::ExpParameter* exp_param) {set_allocated_exp_param14520,515262
inline bool LayerParameter::has_flatten_param() const {has_flatten_param14531,515543
inline void LayerParameter::set_has_flatten_param() {set_has_flatten_param14534,515646
inline void LayerParameter::clear_has_flatten_param() {clear_has_flatten_param14537,515734
inline void LayerParameter::clear_flatten_param() {clear_flatten_param14540,515825
inline const ::caffe::FlattenParameter& LayerParameter::flatten_param() const {flatten_param14544,515990
inline ::caffe::FlattenParameter* LayerParameter::mutable_flatten_param() {mutable_flatten_param14547,516160
inline ::caffe::FlattenParameter* LayerParameter::release_flatten_param() {release_flatten_param14552,516368
inline void LayerParameter::set_allocated_flatten_param(::caffe::FlattenParameter* flatten_param) {set_allocated_flatten_param14558,516567
inline bool LayerParameter::has_hdf5_data_param() const {has_hdf5_data_param14569,516887
inline void LayerParameter::set_has_hdf5_data_param() {set_has_hdf5_data_param14572,516992
inline void LayerParameter::clear_has_hdf5_data_param() {clear_has_hdf5_data_param14575,517082
inline void LayerParameter::clear_hdf5_data_param() {clear_hdf5_data_param14578,517175
inline const ::caffe::HDF5DataParameter& LayerParameter::hdf5_data_param() const {hdf5_data_param14582,517349
inline ::caffe::HDF5DataParameter* LayerParameter::mutable_hdf5_data_param() {mutable_hdf5_data_param14585,517528
inline ::caffe::HDF5DataParameter* LayerParameter::release_hdf5_data_param() {release_hdf5_data_param14590,517748
inline void LayerParameter::set_allocated_hdf5_data_param(::caffe::HDF5DataParameter* hdf5_data_param) {set_allocated_hdf5_data_param14596,517957
inline bool LayerParameter::has_hdf5_output_param() const {has_hdf5_output_param14607,518298
inline void LayerParameter::set_has_hdf5_output_param() {set_has_hdf5_output_param14610,518405
inline void LayerParameter::clear_has_hdf5_output_param() {clear_has_hdf5_output_param14613,518497
inline void LayerParameter::clear_hdf5_output_param() {clear_hdf5_output_param14616,518592
inline const ::caffe::HDF5OutputParameter& LayerParameter::hdf5_output_param() const {hdf5_output_param14620,518776
inline ::caffe::HDF5OutputParameter* LayerParameter::mutable_hdf5_output_param() {mutable_hdf5_output_param14623,518965
inline ::caffe::HDF5OutputParameter* LayerParameter::release_hdf5_output_param() {release_hdf5_output_param14628,519199
inline void LayerParameter::set_allocated_hdf5_output_param(::caffe::HDF5OutputParameter* hdf5_output_param) {set_allocated_hdf5_output_param14634,519420
inline bool LayerParameter::has_hinge_loss_param() const {has_hinge_loss_param14645,519777
inline void LayerParameter::set_has_hinge_loss_param() {set_has_hinge_loss_param14648,519883
inline void LayerParameter::clear_has_hinge_loss_param() {clear_has_hinge_loss_param14651,519974
inline void LayerParameter::clear_hinge_loss_param() {clear_hinge_loss_param14654,520068
inline const ::caffe::HingeLossParameter& LayerParameter::hinge_loss_param() const {hinge_loss_param14658,520247
inline ::caffe::HingeLossParameter* LayerParameter::mutable_hinge_loss_param() {mutable_hinge_loss_param14661,520431
inline ::caffe::HingeLossParameter* LayerParameter::release_hinge_loss_param() {release_hinge_loss_param14666,520658
inline void LayerParameter::set_allocated_hinge_loss_param(::caffe::HingeLossParameter* hinge_loss_param) {set_allocated_hinge_loss_param14672,520873
inline bool LayerParameter::has_image_data_param() const {has_image_data_param14683,521221
inline void LayerParameter::set_has_image_data_param() {set_has_image_data_param14686,521327
inline void LayerParameter::clear_has_image_data_param() {clear_has_image_data_param14689,521418
inline void LayerParameter::clear_image_data_param() {clear_image_data_param14692,521512
inline const ::caffe::ImageDataParameter& LayerParameter::image_data_param() const {image_data_param14696,521691
inline ::caffe::ImageDataParameter* LayerParameter::mutable_image_data_param() {mutable_image_data_param14699,521875
inline ::caffe::ImageDataParameter* LayerParameter::release_image_data_param() {release_image_data_param14704,522102
inline void LayerParameter::set_allocated_image_data_param(::caffe::ImageDataParameter* image_data_param) {set_allocated_image_data_param14710,522317
inline bool LayerParameter::has_infogain_loss_param() const {has_infogain_loss_param14721,522671
inline void LayerParameter::set_has_infogain_loss_param() {set_has_infogain_loss_param14724,522780
inline void LayerParameter::clear_has_infogain_loss_param() {clear_has_infogain_loss_param14727,522874
inline void LayerParameter::clear_infogain_loss_param() {clear_infogain_loss_param14730,522971
inline const ::caffe::InfogainLossParameter& LayerParameter::infogain_loss_param() const {infogain_loss_param14734,523165
inline ::caffe::InfogainLossParameter* LayerParameter::mutable_infogain_loss_param() {mutable_infogain_loss_param14737,523364
inline ::caffe::InfogainLossParameter* LayerParameter::release_infogain_loss_param() {release_infogain_loss_param14742,523612
inline void LayerParameter::set_allocated_infogain_loss_param(::caffe::InfogainLossParameter* infogain_loss_param) {set_allocated_infogain_loss_param14748,523845
inline bool LayerParameter::has_inner_product_param() const {has_inner_product_param14759,524226
inline void LayerParameter::set_has_inner_product_param() {set_has_inner_product_param14762,524335
inline void LayerParameter::clear_has_inner_product_param() {clear_has_inner_product_param14765,524429
inline void LayerParameter::clear_inner_product_param() {clear_inner_product_param14768,524526
inline const ::caffe::InnerProductParameter& LayerParameter::inner_product_param() const {inner_product_param14772,524720
inline ::caffe::InnerProductParameter* LayerParameter::mutable_inner_product_param() {mutable_inner_product_param14775,524919
inline ::caffe::InnerProductParameter* LayerParameter::release_inner_product_param() {release_inner_product_param14780,525167
inline void LayerParameter::set_allocated_inner_product_param(::caffe::InnerProductParameter* inner_product_param) {set_allocated_inner_product_param14786,525400
inline bool LayerParameter::has_input_param() const {has_input_param14797,525766
inline void LayerParameter::set_has_input_param() {set_has_input_param14800,525867
inline void LayerParameter::clear_has_input_param() {clear_has_input_param14803,525953
inline void LayerParameter::clear_input_param() {clear_input_param14806,526042
inline const ::caffe::InputParameter& LayerParameter::input_param() const {input_param14810,526197
inline ::caffe::InputParameter* LayerParameter::mutable_input_param() {mutable_input_param14813,526357
inline ::caffe::InputParameter* LayerParameter::release_input_param() {release_input_param14818,526551
inline void LayerParameter::set_allocated_input_param(::caffe::InputParameter* input_param) {set_allocated_input_param14824,526738
inline bool LayerParameter::has_log_param() const {has_log_param14835,527029
inline void LayerParameter::set_has_log_param() {set_has_log_param14838,527128
inline void LayerParameter::clear_has_log_param() {clear_has_log_param14841,527212
inline void LayerParameter::clear_log_param() {clear_log_param14844,527299
inline const ::caffe::LogParameter& LayerParameter::log_param() const {log_param14848,527444
inline ::caffe::LogParameter* LayerParameter::mutable_log_param() {mutable_log_param14851,527594
inline ::caffe::LogParameter* LayerParameter::release_log_param() {release_log_param14856,527774
inline void LayerParameter::set_allocated_log_param(::caffe::LogParameter* log_param) {set_allocated_log_param14862,527949
inline bool LayerParameter::has_lrn_param() const {has_lrn_param14873,528222
inline void LayerParameter::set_has_lrn_param() {set_has_lrn_param14876,528321
inline void LayerParameter::clear_has_lrn_param() {clear_has_lrn_param14879,528405
inline void LayerParameter::clear_lrn_param() {clear_lrn_param14882,528492
inline const ::caffe::LRNParameter& LayerParameter::lrn_param() const {lrn_param14886,528637
inline ::caffe::LRNParameter* LayerParameter::mutable_lrn_param() {mutable_lrn_param14889,528787
inline ::caffe::LRNParameter* LayerParameter::release_lrn_param() {release_lrn_param14894,528967
inline void LayerParameter::set_allocated_lrn_param(::caffe::LRNParameter* lrn_param) {set_allocated_lrn_param14900,529142
inline bool LayerParameter::has_memory_data_param() const {has_memory_data_param14911,529430
inline void LayerParameter::set_has_memory_data_param() {set_has_memory_data_param14914,529537
inline void LayerParameter::clear_has_memory_data_param() {clear_has_memory_data_param14917,529629
inline void LayerParameter::clear_memory_data_param() {clear_memory_data_param14920,529724
inline const ::caffe::MemoryDataParameter& LayerParameter::memory_data_param() const {memory_data_param14924,529908
inline ::caffe::MemoryDataParameter* LayerParameter::mutable_memory_data_param() {mutable_memory_data_param14927,530097
inline ::caffe::MemoryDataParameter* LayerParameter::release_memory_data_param() {release_memory_data_param14932,530331
inline void LayerParameter::set_allocated_memory_data_param(::caffe::MemoryDataParameter* memory_data_param) {set_allocated_memory_data_param14938,530552
inline bool LayerParameter::has_mvn_param() const {has_mvn_param14949,530896
inline void LayerParameter::set_has_mvn_param() {set_has_mvn_param14952,530995
inline void LayerParameter::clear_has_mvn_param() {clear_has_mvn_param14955,531079
inline void LayerParameter::clear_mvn_param() {clear_mvn_param14958,531166
inline const ::caffe::MVNParameter& LayerParameter::mvn_param() const {mvn_param14962,531311
inline ::caffe::MVNParameter* LayerParameter::mutable_mvn_param() {mutable_mvn_param14965,531461
inline ::caffe::MVNParameter* LayerParameter::release_mvn_param() {release_mvn_param14970,531641
inline void LayerParameter::set_allocated_mvn_param(::caffe::MVNParameter* mvn_param) {set_allocated_mvn_param14976,531816
inline bool LayerParameter::has_parameter_param() const {has_parameter_param14987,532101
inline void LayerParameter::set_has_parameter_param() {set_has_parameter_param14990,532206
inline void LayerParameter::clear_has_parameter_param() {clear_has_parameter_param14993,532296
inline void LayerParameter::clear_parameter_param() {clear_parameter_param14996,532389
inline const ::caffe::ParameterParameter& LayerParameter::parameter_param() const {parameter_param15000,532564
inline ::caffe::ParameterParameter* LayerParameter::mutable_parameter_param() {mutable_parameter_param15003,532744
inline ::caffe::ParameterParameter* LayerParameter::release_parameter_param() {release_parameter_param15008,532966
inline void LayerParameter::set_allocated_parameter_param(::caffe::ParameterParameter* parameter_param) {set_allocated_parameter_param15014,533177
inline bool LayerParameter::has_pooling_param() const {has_pooling_param15025,533512
inline void LayerParameter::set_has_pooling_param() {set_has_pooling_param15028,533615
inline void LayerParameter::clear_has_pooling_param() {clear_has_pooling_param15031,533703
inline void LayerParameter::clear_pooling_param() {clear_pooling_param15034,533794
inline const ::caffe::PoolingParameter& LayerParameter::pooling_param() const {pooling_param15038,533959
inline ::caffe::PoolingParameter* LayerParameter::mutable_pooling_param() {mutable_pooling_param15041,534129
inline ::caffe::PoolingParameter* LayerParameter::release_pooling_param() {release_pooling_param15046,534337
inline void LayerParameter::set_allocated_pooling_param(::caffe::PoolingParameter* pooling_param) {set_allocated_pooling_param15052,534536
inline bool LayerParameter::has_power_param() const {has_power_param15063,534849
inline void LayerParameter::set_has_power_param() {set_has_power_param15066,534950
inline void LayerParameter::clear_has_power_param() {clear_has_power_param15069,535036
inline void LayerParameter::clear_power_param() {clear_power_param15072,535125
inline const ::caffe::PowerParameter& LayerParameter::power_param() const {power_param15076,535280
inline ::caffe::PowerParameter* LayerParameter::mutable_power_param() {mutable_power_param15079,535440
inline ::caffe::PowerParameter* LayerParameter::release_power_param() {release_power_param15084,535634
inline void LayerParameter::set_allocated_power_param(::caffe::PowerParameter* power_param) {set_allocated_power_param15090,535821
inline bool LayerParameter::has_prelu_param() const {has_prelu_param15101,536116
inline void LayerParameter::set_has_prelu_param() {set_has_prelu_param15104,536217
inline void LayerParameter::clear_has_prelu_param() {clear_has_prelu_param15107,536303
inline void LayerParameter::clear_prelu_param() {clear_prelu_param15110,536392
inline const ::caffe::PReLUParameter& LayerParameter::prelu_param() const {prelu_param15114,536547
inline ::caffe::PReLUParameter* LayerParameter::mutable_prelu_param() {mutable_prelu_param15117,536707
inline ::caffe::PReLUParameter* LayerParameter::release_prelu_param() {release_prelu_param15122,536901
inline void LayerParameter::set_allocated_prelu_param(::caffe::PReLUParameter* prelu_param) {set_allocated_prelu_param15128,537088
inline bool LayerParameter::has_python_param() const {has_python_param15139,537385
inline void LayerParameter::set_has_python_param() {set_has_python_param15142,537487
inline void LayerParameter::clear_has_python_param() {clear_has_python_param15145,537574
inline void LayerParameter::clear_python_param() {clear_python_param15148,537664
inline const ::caffe::PythonParameter& LayerParameter::python_param() const {python_param15152,537824
inline ::caffe::PythonParameter* LayerParameter::mutable_python_param() {mutable_python_param15155,537989
inline ::caffe::PythonParameter* LayerParameter::release_python_param() {release_python_param15160,538190
inline void LayerParameter::set_allocated_python_param(::caffe::PythonParameter* python_param) {set_allocated_python_param15166,538383
inline bool LayerParameter::has_recurrent_param() const {has_recurrent_param15177,538695
inline void LayerParameter::set_has_recurrent_param() {set_has_recurrent_param15180,538800
inline void LayerParameter::clear_has_recurrent_param() {clear_has_recurrent_param15183,538890
inline void LayerParameter::clear_recurrent_param() {clear_recurrent_param15186,538983
inline const ::caffe::RecurrentParameter& LayerParameter::recurrent_param() const {recurrent_param15190,539158
inline ::caffe::RecurrentParameter* LayerParameter::mutable_recurrent_param() {mutable_recurrent_param15193,539338
inline ::caffe::RecurrentParameter* LayerParameter::release_recurrent_param() {release_recurrent_param15198,539560
inline void LayerParameter::set_allocated_recurrent_param(::caffe::RecurrentParameter* recurrent_param) {set_allocated_recurrent_param15204,539771
inline bool LayerParameter::has_reduction_param() const {has_reduction_param15215,540110
inline void LayerParameter::set_has_reduction_param() {set_has_reduction_param15218,540215
inline void LayerParameter::clear_has_reduction_param() {clear_has_reduction_param15221,540305
inline void LayerParameter::clear_reduction_param() {clear_reduction_param15224,540398
inline const ::caffe::ReductionParameter& LayerParameter::reduction_param() const {reduction_param15228,540573
inline ::caffe::ReductionParameter* LayerParameter::mutable_reduction_param() {mutable_reduction_param15231,540753
inline ::caffe::ReductionParameter* LayerParameter::release_reduction_param() {release_reduction_param15236,540975
inline void LayerParameter::set_allocated_reduction_param(::caffe::ReductionParameter* reduction_param) {set_allocated_reduction_param15242,541186
inline bool LayerParameter::has_relu_param() const {has_relu_param15253,541515
inline void LayerParameter::set_has_relu_param() {set_has_relu_param15256,541615
inline void LayerParameter::clear_has_relu_param() {clear_has_relu_param15259,541700
inline void LayerParameter::clear_relu_param() {clear_relu_param15262,541788
inline const ::caffe::ReLUParameter& LayerParameter::relu_param() const {relu_param15266,541938
inline ::caffe::ReLUParameter* LayerParameter::mutable_relu_param() {mutable_relu_param15269,542093
inline ::caffe::ReLUParameter* LayerParameter::release_relu_param() {release_relu_param15274,542280
inline void LayerParameter::set_allocated_relu_param(::caffe::ReLUParameter* relu_param) {set_allocated_relu_param15280,542461
inline bool LayerParameter::has_reshape_param() const {has_reshape_param15291,542751
inline void LayerParameter::set_has_reshape_param() {set_has_reshape_param15294,542854
inline void LayerParameter::clear_has_reshape_param() {clear_has_reshape_param15297,542942
inline void LayerParameter::clear_reshape_param() {clear_reshape_param15300,543033
inline const ::caffe::ReshapeParameter& LayerParameter::reshape_param() const {reshape_param15304,543198
inline ::caffe::ReshapeParameter* LayerParameter::mutable_reshape_param() {mutable_reshape_param15307,543368
inline ::caffe::ReshapeParameter* LayerParameter::release_reshape_param() {release_reshape_param15312,543576
inline void LayerParameter::set_allocated_reshape_param(::caffe::ReshapeParameter* reshape_param) {set_allocated_reshape_param15318,543775
inline bool LayerParameter::has_scale_param() const {has_scale_param15329,544088
inline void LayerParameter::set_has_scale_param() {set_has_scale_param15332,544189
inline void LayerParameter::clear_has_scale_param() {clear_has_scale_param15335,544275
inline void LayerParameter::clear_scale_param() {clear_scale_param15338,544364
inline const ::caffe::ScaleParameter& LayerParameter::scale_param() const {scale_param15342,544519
inline ::caffe::ScaleParameter* LayerParameter::mutable_scale_param() {mutable_scale_param15345,544679
inline ::caffe::ScaleParameter* LayerParameter::release_scale_param() {release_scale_param15350,544873
inline void LayerParameter::set_allocated_scale_param(::caffe::ScaleParameter* scale_param) {set_allocated_scale_param15356,545060
inline bool LayerParameter::has_sigmoid_param() const {has_sigmoid_param15367,545359
inline void LayerParameter::set_has_sigmoid_param() {set_has_sigmoid_param15370,545462
inline void LayerParameter::clear_has_sigmoid_param() {clear_has_sigmoid_param15373,545550
inline void LayerParameter::clear_sigmoid_param() {clear_sigmoid_param15376,545641
inline const ::caffe::SigmoidParameter& LayerParameter::sigmoid_param() const {sigmoid_param15380,545806
inline ::caffe::SigmoidParameter* LayerParameter::mutable_sigmoid_param() {mutable_sigmoid_param15383,545976
inline ::caffe::SigmoidParameter* LayerParameter::release_sigmoid_param() {release_sigmoid_param15388,546184
inline void LayerParameter::set_allocated_sigmoid_param(::caffe::SigmoidParameter* sigmoid_param) {set_allocated_sigmoid_param15394,546383
inline bool LayerParameter::has_softmax_param() const {has_softmax_param15405,546700
inline void LayerParameter::set_has_softmax_param() {set_has_softmax_param15408,546803
inline void LayerParameter::clear_has_softmax_param() {clear_has_softmax_param15411,546891
inline void LayerParameter::clear_softmax_param() {clear_softmax_param15414,546982
inline const ::caffe::SoftmaxParameter& LayerParameter::softmax_param() const {softmax_param15418,547147
inline ::caffe::SoftmaxParameter* LayerParameter::mutable_softmax_param() {mutable_softmax_param15421,547317
inline ::caffe::SoftmaxParameter* LayerParameter::release_softmax_param() {release_softmax_param15426,547525
inline void LayerParameter::set_allocated_softmax_param(::caffe::SoftmaxParameter* softmax_param) {set_allocated_softmax_param15432,547724
inline bool LayerParameter::has_spp_param() const {has_spp_param15443,548033
inline void LayerParameter::set_has_spp_param() {set_has_spp_param15446,548132
inline void LayerParameter::clear_has_spp_param() {clear_has_spp_param15449,548216
inline void LayerParameter::clear_spp_param() {clear_spp_param15452,548303
inline const ::caffe::SPPParameter& LayerParameter::spp_param() const {spp_param15456,548448
inline ::caffe::SPPParameter* LayerParameter::mutable_spp_param() {mutable_spp_param15459,548598
inline ::caffe::SPPParameter* LayerParameter::release_spp_param() {release_spp_param15464,548778
inline void LayerParameter::set_allocated_spp_param(::caffe::SPPParameter* spp_param) {set_allocated_spp_param15470,548953
inline bool LayerParameter::has_slice_param() const {has_slice_param15481,549230
inline void LayerParameter::set_has_slice_param() {set_has_slice_param15484,549331
inline void LayerParameter::clear_has_slice_param() {clear_has_slice_param15487,549417
inline void LayerParameter::clear_slice_param() {clear_slice_param15490,549506
inline const ::caffe::SliceParameter& LayerParameter::slice_param() const {slice_param15494,549661
inline ::caffe::SliceParameter* LayerParameter::mutable_slice_param() {mutable_slice_param15497,549821
inline ::caffe::SliceParameter* LayerParameter::release_slice_param() {release_slice_param15502,550015
inline void LayerParameter::set_allocated_slice_param(::caffe::SliceParameter* slice_param) {set_allocated_slice_param15508,550202
inline bool LayerParameter::has_tanh_param() const {has_tanh_param15519,550495
inline void LayerParameter::set_has_tanh_param() {set_has_tanh_param15522,550595
inline void LayerParameter::clear_has_tanh_param() {clear_has_tanh_param15525,550680
inline void LayerParameter::clear_tanh_param() {clear_tanh_param15528,550768
inline const ::caffe::TanHParameter& LayerParameter::tanh_param() const {tanh_param15532,550918
inline ::caffe::TanHParameter* LayerParameter::mutable_tanh_param() {mutable_tanh_param15535,551073
inline ::caffe::TanHParameter* LayerParameter::release_tanh_param() {release_tanh_param15540,551260
inline void LayerParameter::set_allocated_tanh_param(::caffe::TanHParameter* tanh_param) {set_allocated_tanh_param15546,551441
inline bool LayerParameter::has_threshold_param() const {has_threshold_param15557,551735
inline void LayerParameter::set_has_threshold_param() {set_has_threshold_param15560,551840
inline void LayerParameter::clear_has_threshold_param() {clear_has_threshold_param15563,551930
inline void LayerParameter::clear_threshold_param() {clear_threshold_param15566,552023
inline const ::caffe::ThresholdParameter& LayerParameter::threshold_param() const {threshold_param15570,552198
inline ::caffe::ThresholdParameter* LayerParameter::mutable_threshold_param() {mutable_threshold_param15573,552378
inline ::caffe::ThresholdParameter* LayerParameter::release_threshold_param() {release_threshold_param15578,552600
inline void LayerParameter::set_allocated_threshold_param(::caffe::ThresholdParameter* threshold_param) {set_allocated_threshold_param15584,552811
inline bool LayerParameter::has_tile_param() const {has_tile_param15595,553140
inline void LayerParameter::set_has_tile_param() {set_has_tile_param15598,553240
inline void LayerParameter::clear_has_tile_param() {clear_has_tile_param15601,553325
inline void LayerParameter::clear_tile_param() {clear_tile_param15604,553413
inline const ::caffe::TileParameter& LayerParameter::tile_param() const {tile_param15608,553563
inline ::caffe::TileParameter* LayerParameter::mutable_tile_param() {mutable_tile_param15611,553718
inline ::caffe::TileParameter* LayerParameter::release_tile_param() {release_tile_param15616,553905
inline void LayerParameter::set_allocated_tile_param(::caffe::TileParameter* tile_param) {set_allocated_tile_param15622,554086
inline bool LayerParameter::has_window_data_param() const {has_window_data_param15633,554383
inline void LayerParameter::set_has_window_data_param() {set_has_window_data_param15636,554490
inline void LayerParameter::clear_has_window_data_param() {clear_has_window_data_param15639,554582
inline void LayerParameter::clear_window_data_param() {clear_window_data_param15642,554677
inline const ::caffe::WindowDataParameter& LayerParameter::window_data_param() const {window_data_param15646,554861
inline ::caffe::WindowDataParameter* LayerParameter::mutable_window_data_param() {mutable_window_data_param15649,555050
inline ::caffe::WindowDataParameter* LayerParameter::release_window_data_param() {release_window_data_param15654,555284
inline void LayerParameter::set_allocated_window_data_param(::caffe::WindowDataParameter* window_data_param) {set_allocated_window_data_param15660,555505
inline bool LayerParameter::has_quantization_param() const {has_quantization_param15671,555867
inline void LayerParameter::set_has_quantization_param() {set_has_quantization_param15674,555975
inline void LayerParameter::clear_has_quantization_param() {clear_has_quantization_param15677,556068
inline void LayerParameter::clear_quantization_param() {clear_quantization_param15680,556164
inline const ::caffe::QuantizationParameter& LayerParameter::quantization_param() const {quantization_param15684,556354
inline ::caffe::QuantizationParameter* LayerParameter::mutable_quantization_param() {mutable_quantization_param15687,556549
inline ::caffe::QuantizationParameter* LayerParameter::release_quantization_param() {release_quantization_param15692,556792
inline void LayerParameter::set_allocated_quantization_param(::caffe::QuantizationParameter* quantization_param) {set_allocated_quantization_param15698,557021
inline bool TransformationParameter::has_scale() const {has_scale15713,557469
inline void TransformationParameter::set_has_scale() {set_has_scale15716,557573
inline void TransformationParameter::clear_has_scale() {clear_has_scale15719,557662
inline void TransformationParameter::clear_scale() {clear_scale15722,557754
inline float TransformationParameter::scale() const {scale15726,557844
inline void TransformationParameter::set_scale(float value) {set_scale15729,557917
inline bool TransformationParameter::has_mirror() const {has_mirror15735,558066
inline void TransformationParameter::set_has_mirror() {set_has_mirror15738,558171
inline void TransformationParameter::clear_has_mirror() {clear_has_mirror15741,558261
inline void TransformationParameter::clear_mirror() {clear_mirror15744,558354
inline bool TransformationParameter::mirror() const {mirror15748,558451
inline void TransformationParameter::set_mirror(bool value) {set_mirror15751,558525
inline bool TransformationParameter::has_crop_size() const {has_crop_size15757,558677
inline void TransformationParameter::set_has_crop_size() {set_has_crop_size15760,558785
inline void TransformationParameter::clear_has_crop_size() {clear_has_crop_size15763,558878
inline void TransformationParameter::clear_crop_size() {clear_crop_size15766,558974
inline ::google::protobuf::uint32 TransformationParameter::crop_size() const {crop_size15770,559077
inline void TransformationParameter::set_crop_size(::google::protobuf::uint32 value) {set_crop_size15773,559179
inline bool TransformationParameter::has_mean_file() const {has_mean_file15779,559348
inline void TransformationParameter::set_has_mean_file() {set_has_mean_file15782,559456
inline void TransformationParameter::clear_has_mean_file() {clear_has_mean_file15785,559549
inline void TransformationParameter::clear_mean_file() {clear_mean_file15788,559645
inline const ::std::string& TransformationParameter::mean_file() const {mean_file15794,559825
inline void TransformationParameter::set_mean_file(const ::std::string& value) {set_mean_file15797,559922
inline void TransformationParameter::set_mean_file(const char* value) {set_mean_file15804,560164
inline void TransformationParameter::set_mean_file(const char* value, size_t size) {set_mean_file15811,560397
inline ::std::string* TransformationParameter::mutable_mean_file() {mutable_mean_file15818,560680
inline ::std::string* TransformationParameter::release_mean_file() {release_mean_file15825,560902
inline void TransformationParameter::set_allocated_mean_file(::std::string* mean_file) {set_allocated_mean_file15835,561243
inline int TransformationParameter::mean_value_size() const {mean_value_size15849,561668
inline void TransformationParameter::clear_mean_value() {clear_mean_value15852,561761
inline float TransformationParameter::mean_value(int index) const {mean_value15855,561844
inline void TransformationParameter::set_mean_value(int index, float value) {set_mean_value15858,561947
inline void TransformationParameter::add_mean_value(float value) {add_mean_value15861,562060
TransformationParameter::mean_value() const {mean_value15865,562212
TransformationParameter::mutable_mean_value() {mutable_mean_value15869,562333
inline bool TransformationParameter::has_force_color() const {has_force_color15874,562459
inline void TransformationParameter::set_has_force_color() {set_has_force_color15877,562569
inline void TransformationParameter::clear_has_force_color() {clear_has_force_color15880,562664
inline void TransformationParameter::clear_force_color() {clear_force_color15883,562762
inline bool TransformationParameter::force_color() const {force_color15887,562874
inline void TransformationParameter::set_force_color(bool value) {set_force_color15890,562958
inline bool TransformationParameter::has_force_gray() const {has_force_gray15896,563128
inline void TransformationParameter::set_has_force_gray() {set_has_force_gray15899,563237
inline void TransformationParameter::clear_has_force_gray() {clear_has_force_gray15902,563331
inline void TransformationParameter::clear_force_gray() {clear_force_gray15905,563428
inline bool TransformationParameter::force_gray() const {force_gray15909,563537
inline void TransformationParameter::set_force_gray(bool value) {set_force_gray15912,563619
inline bool LossParameter::has_ignore_label() const {has_ignore_label15922,563861
inline void LossParameter::set_has_ignore_label() {set_has_ignore_label15925,563962
inline void LossParameter::clear_has_ignore_label() {clear_has_ignore_label15928,564048
inline void LossParameter::clear_ignore_label() {clear_ignore_label15931,564137
inline ::google::protobuf::int32 LossParameter::ignore_label() const {ignore_label15935,564238
inline void LossParameter::set_ignore_label(::google::protobuf::int32 value) {set_ignore_label15938,564335
inline bool LossParameter::has_normalization() const {has_normalization15944,564556
inline void LossParameter::set_has_normalization() {set_has_normalization15947,564658
inline void LossParameter::clear_has_normalization() {clear_has_normalization15950,564745
inline void LossParameter::clear_normalization() {clear_normalization15953,564835
inline ::caffe::LossParameter_NormalizationMode LossParameter::normalization() const {normalization15957,564939
inline void LossParameter::set_normalization(::caffe::LossParameter_NormalizationMode value) {set_normalization15960,565110
inline bool LossParameter::has_normalize() const {has_normalize15967,565360
inline void LossParameter::set_has_normalize() {set_has_normalize15970,565458
inline void LossParameter::clear_has_normalize() {clear_has_normalize15973,565541
inline void LossParameter::clear_normalize() {clear_normalize15976,565627
inline bool LossParameter::normalize() const {normalize15980,565723
inline void LossParameter::set_normalize(bool value) {set_normalize15983,565793
inline bool AccuracyParameter::has_top_k() const {has_top_k15993,566034
inline void AccuracyParameter::set_has_top_k() {set_has_top_k15996,566132
inline void AccuracyParameter::clear_has_top_k() {clear_has_top_k15999,566215
inline void AccuracyParameter::clear_top_k() {clear_top_k16002,566301
inline ::google::protobuf::uint32 AccuracyParameter::top_k() const {top_k16006,566386
inline void AccuracyParameter::set_top_k(::google::protobuf::uint32 value) {set_top_k16009,566474
inline bool AccuracyParameter::has_axis() const {has_axis16015,566633
inline void AccuracyParameter::set_has_axis() {set_has_axis16018,566730
inline void AccuracyParameter::clear_has_axis() {clear_has_axis16021,566812
inline void AccuracyParameter::clear_axis() {clear_axis16024,566897
inline ::google::protobuf::int32 AccuracyParameter::axis() const {axis16028,566978
inline void AccuracyParameter::set_axis(::google::protobuf::int32 value) {set_axis16031,567063
inline bool AccuracyParameter::has_ignore_label() const {has_ignore_label16037,567212
inline void AccuracyParameter::set_has_ignore_label() {set_has_ignore_label16040,567317
inline void AccuracyParameter::clear_has_ignore_label() {clear_has_ignore_label16043,567407
inline void AccuracyParameter::clear_ignore_label() {clear_ignore_label16046,567500
inline ::google::protobuf::int32 AccuracyParameter::ignore_label() const {ignore_label16050,567605
inline void AccuracyParameter::set_ignore_label(::google::protobuf::int32 value) {set_ignore_label16053,567706
inline bool ArgMaxParameter::has_out_max_val() const {has_out_max_val16063,567987
inline void ArgMaxParameter::set_has_out_max_val() {set_has_out_max_val16066,568089
inline void ArgMaxParameter::clear_has_out_max_val() {clear_has_out_max_val16069,568176
inline void ArgMaxParameter::clear_out_max_val() {clear_out_max_val16072,568266
inline bool ArgMaxParameter::out_max_val() const {out_max_val16076,568370
inline void ArgMaxParameter::set_out_max_val(bool value) {set_out_max_val16079,568446
inline bool ArgMaxParameter::has_top_k() const {has_top_k16085,568601
inline void ArgMaxParameter::set_has_top_k() {set_has_top_k16088,568697
inline void ArgMaxParameter::clear_has_top_k() {clear_has_top_k16091,568778
inline void ArgMaxParameter::clear_top_k() {clear_top_k16094,568862
inline ::google::protobuf::uint32 ArgMaxParameter::top_k() const {top_k16098,568945
inline void ArgMaxParameter::set_top_k(::google::protobuf::uint32 value) {set_top_k16101,569031
inline bool ArgMaxParameter::has_axis() const {has_axis16107,569174
inline void ArgMaxParameter::set_has_axis() {set_has_axis16110,569269
inline void ArgMaxParameter::clear_has_axis() {clear_has_axis16113,569349
inline void ArgMaxParameter::clear_axis() {clear_axis16116,569432
inline ::google::protobuf::int32 ArgMaxParameter::axis() const {axis16120,569511
inline void ArgMaxParameter::set_axis(::google::protobuf::int32 value) {set_axis16123,569594
inline bool ConcatParameter::has_axis() const {has_axis16133,569839
inline void ConcatParameter::set_has_axis() {set_has_axis16136,569934
inline void ConcatParameter::clear_has_axis() {clear_has_axis16139,570014
inline void ConcatParameter::clear_axis() {clear_axis16142,570097
inline ::google::protobuf::int32 ConcatParameter::axis() const {axis16146,570176
inline void ConcatParameter::set_axis(::google::protobuf::int32 value) {set_axis16149,570259
inline bool ConcatParameter::has_concat_dim() const {has_concat_dim16155,570419
inline void ConcatParameter::set_has_concat_dim() {set_has_concat_dim16158,570520
inline void ConcatParameter::clear_has_concat_dim() {clear_has_concat_dim16161,570606
inline void ConcatParameter::clear_concat_dim() {clear_concat_dim16164,570695
inline ::google::protobuf::uint32 ConcatParameter::concat_dim() const {concat_dim16168,570793
inline void ConcatParameter::set_concat_dim(::google::protobuf::uint32 value) {set_concat_dim16171,570889
inline bool BatchNormParameter::has_use_global_stats() const {has_use_global_stats16181,571153
inline void BatchNormParameter::set_has_use_global_stats() {set_has_use_global_stats16184,571263
inline void BatchNormParameter::clear_has_use_global_stats() {clear_has_use_global_stats16187,571358
inline void BatchNormParameter::clear_use_global_stats() {clear_use_global_stats16190,571456
inline bool BatchNormParameter::use_global_stats() const {use_global_stats16194,571578
inline void BatchNormParameter::set_use_global_stats(bool value) {set_use_global_stats16197,571667
inline bool BatchNormParameter::has_moving_average_fraction() const {has_moving_average_fraction16203,571861
inline void BatchNormParameter::set_has_moving_average_fraction() {set_has_moving_average_fraction16206,571978
inline void BatchNormParameter::clear_has_moving_average_fraction() {clear_has_moving_average_fraction16209,572080
inline void BatchNormParameter::clear_moving_average_fraction() {clear_moving_average_fraction16212,572185
inline float BatchNormParameter::moving_average_fraction() const {moving_average_fraction16216,572329
inline void BatchNormParameter::set_moving_average_fraction(float value) {set_moving_average_fraction16219,572433
inline bool BatchNormParameter::has_eps() const {has_eps16225,572629
inline void BatchNormParameter::set_has_eps() {set_has_eps16228,572726
inline void BatchNormParameter::clear_has_eps() {clear_has_eps16231,572808
inline void BatchNormParameter::clear_eps() {clear_eps16234,572893
inline float BatchNormParameter::eps() const {eps16238,572977
inline void BatchNormParameter::set_eps(float value) {set_eps16241,573041
inline bool BiasParameter::has_axis() const {has_axis16251,573264
inline void BiasParameter::set_has_axis() {set_has_axis16254,573357
inline void BiasParameter::clear_has_axis() {clear_has_axis16257,573435
inline void BiasParameter::clear_axis() {clear_axis16260,573516
inline ::google::protobuf::int32 BiasParameter::axis() const {axis16264,573593
inline void BiasParameter::set_axis(::google::protobuf::int32 value) {set_axis16267,573674
inline bool BiasParameter::has_num_axes() const {has_num_axes16273,573829
inline void BiasParameter::set_has_num_axes() {set_has_num_axes16276,573926
inline void BiasParameter::clear_has_num_axes() {clear_has_num_axes16279,574008
inline void BiasParameter::clear_num_axes() {clear_num_axes16282,574093
inline ::google::protobuf::int32 BiasParameter::num_axes() const {num_axes16286,574182
inline void BiasParameter::set_num_axes(::google::protobuf::int32 value) {set_num_axes16289,574271
inline bool BiasParameter::has_filler() const {has_filler16295,574439
inline void BiasParameter::set_has_filler() {set_has_filler16298,574534
inline void BiasParameter::clear_has_filler() {clear_has_filler16301,574614
inline void BiasParameter::clear_filler() {clear_filler16304,574697
inline const ::caffe::FillerParameter& BiasParameter::filler() const {filler16308,574832
inline ::caffe::FillerParameter* BiasParameter::mutable_filler() {mutable_filler16311,574972
inline ::caffe::FillerParameter* BiasParameter::release_filler() {release_filler16316,575142
inline void BiasParameter::set_allocated_filler(::caffe::FillerParameter* filler) {set_allocated_filler16322,575310
inline bool ContrastiveLossParameter::has_margin() const {has_margin16337,575657
inline void ContrastiveLossParameter::set_has_margin() {set_has_margin16340,575763
inline void ContrastiveLossParameter::clear_has_margin() {clear_has_margin16343,575854
inline void ContrastiveLossParameter::clear_margin() {clear_margin16346,575948
inline float ContrastiveLossParameter::margin() const {margin16350,576042
inline void ContrastiveLossParameter::set_margin(float value) {set_margin16353,576118
inline bool ContrastiveLossParameter::has_legacy_version() const {has_legacy_version16359,576279
inline void ContrastiveLossParameter::set_has_legacy_version() {set_has_legacy_version16362,576393
inline void ContrastiveLossParameter::clear_has_legacy_version() {clear_has_legacy_version16365,576492
inline void ContrastiveLossParameter::clear_legacy_version() {clear_legacy_version16368,576594
inline bool ContrastiveLossParameter::legacy_version() const {legacy_version16372,576716
inline void ContrastiveLossParameter::set_legacy_version(bool value) {set_legacy_version16375,576807
inline bool ConvolutionParameter::has_num_output() const {has_num_output16385,577068
inline void ConvolutionParameter::set_has_num_output() {set_has_num_output16388,577174
inline void ConvolutionParameter::clear_has_num_output() {clear_has_num_output16391,577265
inline void ConvolutionParameter::clear_num_output() {clear_num_output16394,577359
inline ::google::protobuf::uint32 ConvolutionParameter::num_output() const {num_output16398,577462
inline void ConvolutionParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output16401,577563
inline bool ConvolutionParameter::has_bias_term() const {has_bias_term16407,577747
inline void ConvolutionParameter::set_has_bias_term() {set_has_bias_term16410,577852
inline void ConvolutionParameter::clear_has_bias_term() {clear_has_bias_term16413,577942
inline void ConvolutionParameter::clear_bias_term() {clear_bias_term16416,578035
inline bool ConvolutionParameter::bias_term() const {bias_term16420,578137
inline void ConvolutionParameter::set_bias_term(bool value) {set_bias_term16423,578214
inline int ConvolutionParameter::pad_size() const {pad_size16429,578352
inline void ConvolutionParameter::clear_pad() {clear_pad16432,578428
inline ::google::protobuf::uint32 ConvolutionParameter::pad(int index) const {pad16435,578494
inline void ConvolutionParameter::set_pad(int index, ::google::protobuf::uint32 value) {set_pad16438,578601
inline void ConvolutionParameter::add_pad(::google::protobuf::uint32 value) {add_pad16441,578718
ConvolutionParameter::pad() const {pad16445,578895
ConvolutionParameter::mutable_pad() {mutable_pad16449,579020
inline int ConvolutionParameter::kernel_size_size() const {kernel_size_size16454,579113
inline void ConvolutionParameter::clear_kernel_size() {clear_kernel_size16457,579205
inline ::google::protobuf::uint32 ConvolutionParameter::kernel_size(int index) const {kernel_size16460,579287
inline void ConvolutionParameter::set_kernel_size(int index, ::google::protobuf::uint32 value) {set_kernel_size16463,579410
inline void ConvolutionParameter::add_kernel_size(::google::protobuf::uint32 value) {add_kernel_size16466,579543
ConvolutionParameter::kernel_size() const {kernel_size16470,579736
ConvolutionParameter::mutable_kernel_size() {mutable_kernel_size16474,579877
inline int ConvolutionParameter::stride_size() const {stride_size16479,579981
inline void ConvolutionParameter::clear_stride() {clear_stride16482,580063
inline ::google::protobuf::uint32 ConvolutionParameter::stride(int index) const {stride16485,580135
inline void ConvolutionParameter::set_stride(int index, ::google::protobuf::uint32 value) {set_stride16488,580248
inline void ConvolutionParameter::add_stride(::google::protobuf::uint32 value) {add_stride16491,580371
ConvolutionParameter::stride() const {stride16495,580554
ConvolutionParameter::mutable_stride() {mutable_stride16499,580685
inline int ConvolutionParameter::dilation_size() const {dilation_size16504,580782
inline void ConvolutionParameter::clear_dilation() {clear_dilation16507,580868
inline ::google::protobuf::uint32 ConvolutionParameter::dilation(int index) const {dilation16510,580944
inline void ConvolutionParameter::set_dilation(int index, ::google::protobuf::uint32 value) {set_dilation16513,581061
inline void ConvolutionParameter::add_dilation(::google::protobuf::uint32 value) {add_dilation16516,581188
ConvolutionParameter::dilation() const {dilation16520,581375
ConvolutionParameter::mutable_dilation() {mutable_dilation16524,581510
inline bool ConvolutionParameter::has_pad_h() const {has_pad_h16529,581621
inline void ConvolutionParameter::set_has_pad_h() {set_has_pad_h16532,581722
inline void ConvolutionParameter::clear_has_pad_h() {clear_has_pad_h16535,581808
inline void ConvolutionParameter::clear_pad_h() {clear_pad_h16538,581897
inline ::google::protobuf::uint32 ConvolutionParameter::pad_h() const {pad_h16542,581985
inline void ConvolutionParameter::set_pad_h(::google::protobuf::uint32 value) {set_pad_h16545,582076
inline bool ConvolutionParameter::has_pad_w() const {has_pad_w16551,582241
inline void ConvolutionParameter::set_has_pad_w() {set_has_pad_w16554,582342
inline void ConvolutionParameter::clear_has_pad_w() {clear_has_pad_w16557,582428
inline void ConvolutionParameter::clear_pad_w() {clear_pad_w16560,582517
inline ::google::protobuf::uint32 ConvolutionParameter::pad_w() const {pad_w16564,582605
inline void ConvolutionParameter::set_pad_w(::google::protobuf::uint32 value) {set_pad_w16567,582696
inline bool ConvolutionParameter::has_kernel_h() const {has_kernel_h16573,582850
inline void ConvolutionParameter::set_has_kernel_h() {set_has_kernel_h16576,582954
inline void ConvolutionParameter::clear_has_kernel_h() {clear_has_kernel_h16579,583043
inline void ConvolutionParameter::clear_kernel_h() {clear_kernel_h16582,583135
inline ::google::protobuf::uint32 ConvolutionParameter::kernel_h() const {kernel_h16586,583232
inline void ConvolutionParameter::set_kernel_h(::google::protobuf::uint32 value) {set_kernel_h16589,583329
inline bool ConvolutionParameter::has_kernel_w() const {has_kernel_w16595,583492
inline void ConvolutionParameter::set_has_kernel_w() {set_has_kernel_w16598,583596
inline void ConvolutionParameter::clear_has_kernel_w() {clear_has_kernel_w16601,583685
inline void ConvolutionParameter::clear_kernel_w() {clear_kernel_w16604,583777
inline ::google::protobuf::uint32 ConvolutionParameter::kernel_w() const {kernel_w16608,583874
inline void ConvolutionParameter::set_kernel_w(::google::protobuf::uint32 value) {set_kernel_w16611,583971
inline bool ConvolutionParameter::has_stride_h() const {has_stride_h16617,584134
inline void ConvolutionParameter::set_has_stride_h() {set_has_stride_h16620,584238
inline void ConvolutionParameter::clear_has_stride_h() {clear_has_stride_h16623,584327
inline void ConvolutionParameter::clear_stride_h() {clear_stride_h16626,584419
inline ::google::protobuf::uint32 ConvolutionParameter::stride_h() const {stride_h16630,584516
inline void ConvolutionParameter::set_stride_h(::google::protobuf::uint32 value) {set_stride_h16633,584613
inline bool ConvolutionParameter::has_stride_w() const {has_stride_w16639,584776
inline void ConvolutionParameter::set_has_stride_w() {set_has_stride_w16642,584880
inline void ConvolutionParameter::clear_has_stride_w() {clear_has_stride_w16645,584969
inline void ConvolutionParameter::clear_stride_w() {clear_stride_w16648,585061
inline ::google::protobuf::uint32 ConvolutionParameter::stride_w() const {stride_w16652,585158
inline void ConvolutionParameter::set_stride_w(::google::protobuf::uint32 value) {set_stride_w16655,585255
inline bool ConvolutionParameter::has_group() const {has_group16661,585428
inline void ConvolutionParameter::set_has_group() {set_has_group16664,585529
inline void ConvolutionParameter::clear_has_group() {clear_has_group16667,585615
inline void ConvolutionParameter::clear_group() {clear_group16670,585704
inline ::google::protobuf::uint32 ConvolutionParameter::group() const {group16674,585792
inline void ConvolutionParameter::set_group(::google::protobuf::uint32 value) {set_group16677,585883
inline bool ConvolutionParameter::has_weight_filler() const {has_weight_filler16683,586057
inline void ConvolutionParameter::set_has_weight_filler() {set_has_weight_filler16686,586166
inline void ConvolutionParameter::clear_has_weight_filler() {clear_has_weight_filler16689,586260
inline void ConvolutionParameter::clear_weight_filler() {clear_weight_filler16692,586357
inline const ::caffe::FillerParameter& ConvolutionParameter::weight_filler() const {weight_filler16696,586527
inline ::caffe::FillerParameter* ConvolutionParameter::mutable_weight_filler() {mutable_weight_filler16699,586702
inline ::caffe::FillerParameter* ConvolutionParameter::release_weight_filler() {release_weight_filler16704,586914
inline void ConvolutionParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler16710,587117
inline bool ConvolutionParameter::has_bias_filler() const {has_bias_filler16721,587434
inline void ConvolutionParameter::set_has_bias_filler() {set_has_bias_filler16724,587541
inline void ConvolutionParameter::clear_has_bias_filler() {clear_has_bias_filler16727,587633
inline void ConvolutionParameter::clear_bias_filler() {clear_bias_filler16730,587728
inline const ::caffe::FillerParameter& ConvolutionParameter::bias_filler() const {bias_filler16734,587890
inline ::caffe::FillerParameter* ConvolutionParameter::mutable_bias_filler() {mutable_bias_filler16737,588057
inline ::caffe::FillerParameter* ConvolutionParameter::release_bias_filler() {release_bias_filler16742,588259
inline void ConvolutionParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler16748,588454
inline bool ConvolutionParameter::has_engine() const {has_engine16759,588783
inline void ConvolutionParameter::set_has_engine() {set_has_engine16762,588885
inline void ConvolutionParameter::clear_has_engine() {clear_has_engine16765,588972
inline void ConvolutionParameter::clear_engine() {clear_engine16768,589062
inline ::caffe::ConvolutionParameter_Engine ConvolutionParameter::engine() const {engine16772,589152
inline void ConvolutionParameter::set_engine(::caffe::ConvolutionParameter_Engine value) {set_engine16775,589308
inline bool ConvolutionParameter::has_axis() const {has_axis16782,589547
inline void ConvolutionParameter::set_has_axis() {set_has_axis16785,589647
inline void ConvolutionParameter::clear_has_axis() {clear_has_axis16788,589732
inline void ConvolutionParameter::clear_axis() {clear_axis16791,589820
inline ::google::protobuf::int32 ConvolutionParameter::axis() const {axis16795,589904
inline void ConvolutionParameter::set_axis(::google::protobuf::int32 value) {set_axis16798,589992
inline bool ConvolutionParameter::has_force_nd_im2col() const {has_force_nd_im2col16804,590165
inline void ConvolutionParameter::set_has_force_nd_im2col() {set_has_force_nd_im2col16807,590276
inline void ConvolutionParameter::clear_has_force_nd_im2col() {clear_has_force_nd_im2col16810,590372
inline void ConvolutionParameter::clear_force_nd_im2col() {clear_force_nd_im2col16813,590471
inline bool ConvolutionParameter::force_nd_im2col() const {force_nd_im2col16817,590592
inline void ConvolutionParameter::set_force_nd_im2col(bool value) {set_force_nd_im2col16820,590681
inline bool CropParameter::has_axis() const {has_axis16830,590941
inline void CropParameter::set_has_axis() {set_has_axis16833,591034
inline void CropParameter::clear_has_axis() {clear_has_axis16836,591112
inline void CropParameter::clear_axis() {clear_axis16839,591193
inline ::google::protobuf::int32 CropParameter::axis() const {axis16843,591270
inline void CropParameter::set_axis(::google::protobuf::int32 value) {set_axis16846,591351
inline int CropParameter::offset_size() const {offset_size16852,591491
inline void CropParameter::clear_offset() {clear_offset16855,591566
inline ::google::protobuf::uint32 CropParameter::offset(int index) const {offset16858,591631
inline void CropParameter::set_offset(int index, ::google::protobuf::uint32 value) {set_offset16861,591737
inline void CropParameter::add_offset(::google::protobuf::uint32 value) {add_offset16864,591853
CropParameter::offset() const {offset16868,592029
CropParameter::mutable_offset() {mutable_offset16872,592153
inline bool DataParameter::has_source() const {has_source16881,592330
inline void DataParameter::set_has_source() {set_has_source16884,592425
inline void DataParameter::clear_has_source() {clear_has_source16887,592505
inline void DataParameter::clear_source() {clear_source16890,592588
inline const ::std::string& DataParameter::source() const {source16896,592746
inline void DataParameter::set_source(const ::std::string& value) {set_source16899,592827
inline void DataParameter::set_source(const char* value) {set_source16906,593044
inline void DataParameter::set_source(const char* value, size_t size) {set_source16913,593252
inline ::std::string* DataParameter::mutable_source() {mutable_source16920,593510
inline ::std::string* DataParameter::release_source() {release_source16927,593707
inline void DataParameter::set_allocated_source(::std::string* source) {set_allocated_source16937,594023
inline bool DataParameter::has_batch_size() const {has_batch_size16951,594409
inline void DataParameter::set_has_batch_size() {set_has_batch_size16954,594508
inline void DataParameter::clear_has_batch_size() {clear_has_batch_size16957,594592
inline void DataParameter::clear_batch_size() {clear_batch_size16960,594679
inline ::google::protobuf::uint32 DataParameter::batch_size() const {batch_size16964,594775
inline void DataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size16967,594869
inline bool DataParameter::has_rand_skip() const {has_rand_skip16973,595045
inline void DataParameter::set_has_rand_skip() {set_has_rand_skip16976,595143
inline void DataParameter::clear_has_rand_skip() {clear_has_rand_skip16979,595226
inline void DataParameter::clear_rand_skip() {clear_rand_skip16982,595312
inline ::google::protobuf::uint32 DataParameter::rand_skip() const {rand_skip16986,595405
inline void DataParameter::set_rand_skip(::google::protobuf::uint32 value) {set_rand_skip16989,595497
inline bool DataParameter::has_backend() const {has_backend16995,595691
inline void DataParameter::set_has_backend() {set_has_backend16998,595787
inline void DataParameter::clear_has_backend() {clear_has_backend17001,595868
inline void DataParameter::clear_backend() {clear_backend17004,595952
inline ::caffe::DataParameter_DB DataParameter::backend() const {backend17008,596038
inline void DataParameter::set_backend(::caffe::DataParameter_DB value) {set_backend17011,596167
inline bool DataParameter::has_scale() const {has_scale17018,596380
inline void DataParameter::set_has_scale() {set_has_scale17021,596474
inline void DataParameter::clear_has_scale() {clear_has_scale17024,596553
inline void DataParameter::clear_scale() {clear_scale17027,596635
inline float DataParameter::scale() const {scale17031,596715
inline void DataParameter::set_scale(float value) {set_scale17034,596778
inline bool DataParameter::has_mean_file() const {has_mean_file17040,596904
inline void DataParameter::set_has_mean_file() {set_has_mean_file17043,597002
inline void DataParameter::clear_has_mean_file() {clear_has_mean_file17046,597085
inline void DataParameter::clear_mean_file() {clear_mean_file17049,597171
inline const ::std::string& DataParameter::mean_file() const {mean_file17055,597341
inline void DataParameter::set_mean_file(const ::std::string& value) {set_mean_file17058,597428
inline void DataParameter::set_mean_file(const char* value) {set_mean_file17065,597660
inline void DataParameter::set_mean_file(const char* value, size_t size) {set_mean_file17072,597883
inline ::std::string* DataParameter::mutable_mean_file() {mutable_mean_file17079,598156
inline ::std::string* DataParameter::release_mean_file() {release_mean_file17086,598368
inline void DataParameter::set_allocated_mean_file(::std::string* mean_file) {set_allocated_mean_file17096,598699
inline bool DataParameter::has_crop_size() const {has_crop_size17110,599128
inline void DataParameter::set_has_crop_size() {set_has_crop_size17113,599226
inline void DataParameter::clear_has_crop_size() {clear_has_crop_size17116,599309
inline void DataParameter::clear_crop_size() {clear_crop_size17119,599395
inline ::google::protobuf::uint32 DataParameter::crop_size() const {crop_size17123,599488
inline void DataParameter::set_crop_size(::google::protobuf::uint32 value) {set_crop_size17126,599580
inline bool DataParameter::has_mirror() const {has_mirror17132,599752
inline void DataParameter::set_has_mirror() {set_has_mirror17135,599847
inline void DataParameter::clear_has_mirror() {clear_has_mirror17138,599927
inline void DataParameter::clear_mirror() {clear_mirror17141,600010
inline bool DataParameter::mirror() const {mirror17145,600097
inline void DataParameter::set_mirror(bool value) {set_mirror17148,600161
inline bool DataParameter::has_force_encoded_color() const {has_force_encoded_color17154,600315
inline void DataParameter::set_has_force_encoded_color() {set_has_force_encoded_color17157,600423
inline void DataParameter::clear_has_force_encoded_color() {clear_has_force_encoded_color17160,600516
inline void DataParameter::clear_force_encoded_color() {clear_force_encoded_color17163,600612
inline bool DataParameter::force_encoded_color() const {force_encoded_color17167,600738
inline void DataParameter::set_force_encoded_color(bool value) {set_force_encoded_color17170,600828
inline bool DataParameter::has_prefetch() const {has_prefetch17176,601009
inline void DataParameter::set_has_prefetch() {set_has_prefetch17179,601106
inline void DataParameter::clear_has_prefetch() {clear_has_prefetch17182,601188
inline void DataParameter::clear_prefetch() {clear_prefetch17185,601273
inline ::google::protobuf::uint32 DataParameter::prefetch() const {prefetch17189,601363
inline void DataParameter::set_prefetch(::google::protobuf::uint32 value) {set_prefetch17192,601453
inline bool DropoutParameter::has_dropout_ratio() const {has_dropout_ratio17202,601721
inline void DropoutParameter::set_has_dropout_ratio() {set_has_dropout_ratio17205,601826
inline void DropoutParameter::clear_has_dropout_ratio() {clear_has_dropout_ratio17208,601916
inline void DropoutParameter::clear_dropout_ratio() {clear_dropout_ratio17211,602009
inline float DropoutParameter::dropout_ratio() const {dropout_ratio17215,602119
inline void DropoutParameter::set_dropout_ratio(float value) {set_dropout_ratio17218,602201
inline int DummyDataParameter::data_filler_size() const {data_filler_size17228,602467
inline void DummyDataParameter::clear_data_filler() {clear_data_filler17231,602557
inline const ::caffe::FillerParameter& DummyDataParameter::data_filler(int index) const {data_filler17234,602637
inline ::caffe::FillerParameter* DummyDataParameter::mutable_data_filler(int index) {mutable_data_filler17237,602763
inline ::caffe::FillerParameter* DummyDataParameter::add_data_filler() {add_data_filler17240,602889
DummyDataParameter::data_filler() const {data_filler17244,603072
DummyDataParameter::mutable_data_filler() {mutable_data_filler17248,603212
inline int DummyDataParameter::shape_size() const {shape_size17253,603323
inline void DummyDataParameter::clear_shape() {clear_shape17256,603401
inline const ::caffe::BlobShape& DummyDataParameter::shape(int index) const {shape17259,603469
inline ::caffe::BlobShape* DummyDataParameter::mutable_shape(int index) {mutable_shape17262,603577
inline ::caffe::BlobShape* DummyDataParameter::add_shape() {add_shape17265,603685
DummyDataParameter::shape() const {shape17269,603844
DummyDataParameter::mutable_shape() {mutable_shape17273,603966
inline int DummyDataParameter::num_size() const {num_size17278,604053
inline void DummyDataParameter::clear_num() {clear_num17281,604127
inline ::google::protobuf::uint32 DummyDataParameter::num(int index) const {num17284,604191
inline void DummyDataParameter::set_num(int index, ::google::protobuf::uint32 value) {set_num17287,604296
inline void DummyDataParameter::add_num(::google::protobuf::uint32 value) {add_num17290,604411
DummyDataParameter::num() const {num17294,604586
DummyDataParameter::mutable_num() {mutable_num17298,604709
inline int DummyDataParameter::channels_size() const {channels_size17303,604797
inline void DummyDataParameter::clear_channels() {clear_channels17306,604881
inline ::google::protobuf::uint32 DummyDataParameter::channels(int index) const {channels17309,604955
inline void DummyDataParameter::set_channels(int index, ::google::protobuf::uint32 value) {set_channels17312,605070
inline void DummyDataParameter::add_channels(::google::protobuf::uint32 value) {add_channels17315,605195
DummyDataParameter::channels() const {channels17319,605380
DummyDataParameter::mutable_channels() {mutable_channels17323,605513
inline int DummyDataParameter::height_size() const {height_size17328,605609
inline void DummyDataParameter::clear_height() {clear_height17331,605689
inline ::google::protobuf::uint32 DummyDataParameter::height(int index) const {height17334,605759
inline void DummyDataParameter::set_height(int index, ::google::protobuf::uint32 value) {set_height17337,605870
inline void DummyDataParameter::add_height(::google::protobuf::uint32 value) {add_height17340,605991
DummyDataParameter::height() const {height17344,606172
DummyDataParameter::mutable_height() {mutable_height17348,606301
inline int DummyDataParameter::width_size() const {width_size17353,606392
inline void DummyDataParameter::clear_width() {clear_width17356,606470
inline ::google::protobuf::uint32 DummyDataParameter::width(int index) const {width17359,606538
inline void DummyDataParameter::set_width(int index, ::google::protobuf::uint32 value) {set_width17362,606647
inline void DummyDataParameter::add_width(::google::protobuf::uint32 value) {add_width17365,606766
DummyDataParameter::width() const {width17369,606945
DummyDataParameter::mutable_width() {mutable_width17373,607072
inline bool EltwiseParameter::has_operation() const {has_operation17382,607301
inline void EltwiseParameter::set_has_operation() {set_has_operation17385,607402
inline void EltwiseParameter::clear_has_operation() {clear_has_operation17388,607488
inline void EltwiseParameter::clear_operation() {clear_operation17391,607577
inline ::caffe::EltwiseParameter_EltwiseOp EltwiseParameter::operation() const {operation17395,607672
inline void EltwiseParameter::set_operation(::caffe::EltwiseParameter_EltwiseOp value) {set_operation17398,607828
inline int EltwiseParameter::coeff_size() const {coeff_size17405,608056
inline void EltwiseParameter::clear_coeff() {clear_coeff17408,608132
inline float EltwiseParameter::coeff(int index) const {coeff17411,608198
inline void EltwiseParameter::set_coeff(int index, float value) {set_coeff17414,608284
inline void EltwiseParameter::add_coeff(float value) {add_coeff17417,608380
EltwiseParameter::coeff() const {coeff17421,608515
EltwiseParameter::mutable_coeff() {mutable_coeff17425,608619
inline bool EltwiseParameter::has_stable_prod_grad() const {has_stable_prod_grad17430,608732
inline void EltwiseParameter::set_has_stable_prod_grad() {set_has_stable_prod_grad17433,608840
inline void EltwiseParameter::clear_has_stable_prod_grad() {clear_has_stable_prod_grad17436,608933
inline void EltwiseParameter::clear_stable_prod_grad() {clear_stable_prod_grad17439,609029
inline bool EltwiseParameter::stable_prod_grad() const {stable_prod_grad17443,609148
inline void EltwiseParameter::set_stable_prod_grad(bool value) {set_stable_prod_grad17446,609235
inline bool ELUParameter::has_alpha() const {has_alpha17456,609494
inline void ELUParameter::set_has_alpha() {set_has_alpha17459,609587
inline void ELUParameter::clear_has_alpha() {clear_has_alpha17462,609665
inline void ELUParameter::clear_alpha() {clear_alpha17465,609746
inline float ELUParameter::alpha() const {alpha17469,609825
inline void ELUParameter::set_alpha(float value) {set_alpha17472,609887
inline bool EmbedParameter::has_num_output() const {has_num_output17482,610104
inline void EmbedParameter::set_has_num_output() {set_has_num_output17485,610204
inline void EmbedParameter::clear_has_num_output() {clear_has_num_output17488,610289
inline void EmbedParameter::clear_num_output() {clear_num_output17491,610377
inline ::google::protobuf::uint32 EmbedParameter::num_output() const {num_output17495,610474
inline void EmbedParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output17498,610569
inline bool EmbedParameter::has_input_dim() const {has_input_dim17504,610732
inline void EmbedParameter::set_has_input_dim() {set_has_input_dim17507,610831
inline void EmbedParameter::clear_has_input_dim() {clear_has_input_dim17510,610915
inline void EmbedParameter::clear_input_dim() {clear_input_dim17513,611002
inline ::google::protobuf::uint32 EmbedParameter::input_dim() const {input_dim17517,611096
inline void EmbedParameter::set_input_dim(::google::protobuf::uint32 value) {set_input_dim17520,611189
inline bool EmbedParameter::has_bias_term() const {has_bias_term17526,611364
inline void EmbedParameter::set_has_bias_term() {set_has_bias_term17529,611463
inline void EmbedParameter::clear_has_bias_term() {clear_has_bias_term17532,611547
inline void EmbedParameter::clear_bias_term() {clear_bias_term17535,611634
inline bool EmbedParameter::bias_term() const {bias_term17539,611730
inline void EmbedParameter::set_bias_term(bool value) {set_bias_term17542,611801
inline bool EmbedParameter::has_weight_filler() const {has_weight_filler17548,611959
inline void EmbedParameter::set_has_weight_filler() {set_has_weight_filler17551,612062
inline void EmbedParameter::clear_has_weight_filler() {clear_has_weight_filler17554,612150
inline void EmbedParameter::clear_weight_filler() {clear_weight_filler17557,612241
inline const ::caffe::FillerParameter& EmbedParameter::weight_filler() const {weight_filler17561,612405
inline ::caffe::FillerParameter* EmbedParameter::mutable_weight_filler() {mutable_weight_filler17564,612574
inline ::caffe::FillerParameter* EmbedParameter::release_weight_filler() {release_weight_filler17569,612780
inline void EmbedParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler17575,612977
inline bool EmbedParameter::has_bias_filler() const {has_bias_filler17586,613288
inline void EmbedParameter::set_has_bias_filler() {set_has_bias_filler17589,613389
inline void EmbedParameter::clear_has_bias_filler() {clear_has_bias_filler17592,613475
inline void EmbedParameter::clear_bias_filler() {clear_bias_filler17595,613564
inline const ::caffe::FillerParameter& EmbedParameter::bias_filler() const {bias_filler17599,613720
inline ::caffe::FillerParameter* EmbedParameter::mutable_bias_filler() {mutable_bias_filler17602,613881
inline ::caffe::FillerParameter* EmbedParameter::release_bias_filler() {release_bias_filler17607,614077
inline void EmbedParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler17613,614266
inline bool ExpParameter::has_base() const {has_base17628,614641
inline void ExpParameter::set_has_base() {set_has_base17631,614733
inline void ExpParameter::clear_has_base() {clear_has_base17634,614810
inline void ExpParameter::clear_base() {clear_base17637,614890
inline float ExpParameter::base() const {base17641,614967
inline void ExpParameter::set_base(float value) {set_base17644,615027
inline bool ExpParameter::has_scale() const {has_scale17650,615158
inline void ExpParameter::set_has_scale() {set_has_scale17653,615251
inline void ExpParameter::clear_has_scale() {clear_has_scale17656,615329
inline void ExpParameter::clear_scale() {clear_scale17659,615410
inline float ExpParameter::scale() const {scale17663,615489
inline void ExpParameter::set_scale(float value) {set_scale17666,615551
inline bool ExpParameter::has_shift() const {has_shift17672,615685
inline void ExpParameter::set_has_shift() {set_has_shift17675,615778
inline void ExpParameter::clear_has_shift() {clear_has_shift17678,615856
inline void ExpParameter::clear_shift() {clear_shift17681,615937
inline float ExpParameter::shift() const {shift17685,616016
inline void ExpParameter::set_shift(float value) {set_shift17688,616078
inline bool FlattenParameter::has_axis() const {has_axis17698,616304
inline void FlattenParameter::set_has_axis() {set_has_axis17701,616400
inline void FlattenParameter::clear_has_axis() {clear_has_axis17704,616481
inline void FlattenParameter::clear_axis() {clear_axis17707,616565
inline ::google::protobuf::int32 FlattenParameter::axis() const {axis17711,616645
inline void FlattenParameter::set_axis(::google::protobuf::int32 value) {set_axis17714,616729
inline bool FlattenParameter::has_end_axis() const {has_end_axis17720,616888
inline void FlattenParameter::set_has_end_axis() {set_has_end_axis17723,616988
inline void FlattenParameter::clear_has_end_axis() {clear_has_end_axis17726,617073
inline void FlattenParameter::clear_end_axis() {clear_end_axis17729,617161
inline ::google::protobuf::int32 FlattenParameter::end_axis() const {end_axis17733,617254
inline void FlattenParameter::set_end_axis(::google::protobuf::int32 value) {set_end_axis17736,617346
inline bool HDF5DataParameter::has_source() const {has_source17746,617595
inline void HDF5DataParameter::set_has_source() {set_has_source17749,617694
inline void HDF5DataParameter::clear_has_source() {clear_has_source17752,617778
inline void HDF5DataParameter::clear_source() {clear_source17755,617865
inline const ::std::string& HDF5DataParameter::source() const {source17761,618027
inline void HDF5DataParameter::set_source(const ::std::string& value) {set_source17764,618112
inline void HDF5DataParameter::set_source(const char* value) {set_source17771,618333
inline void HDF5DataParameter::set_source(const char* value, size_t size) {set_source17778,618545
inline ::std::string* HDF5DataParameter::mutable_source() {mutable_source17785,618807
inline ::std::string* HDF5DataParameter::release_source() {release_source17792,619008
inline void HDF5DataParameter::set_allocated_source(::std::string* source) {set_allocated_source17802,619328
inline bool HDF5DataParameter::has_batch_size() const {has_batch_size17816,619718
inline void HDF5DataParameter::set_has_batch_size() {set_has_batch_size17819,619821
inline void HDF5DataParameter::clear_has_batch_size() {clear_has_batch_size17822,619909
inline void HDF5DataParameter::clear_batch_size() {clear_batch_size17825,620000
inline ::google::protobuf::uint32 HDF5DataParameter::batch_size() const {batch_size17829,620100
inline void HDF5DataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size17832,620198
inline bool HDF5DataParameter::has_shuffle() const {has_shuffle17838,620378
inline void HDF5DataParameter::set_has_shuffle() {set_has_shuffle17841,620478
inline void HDF5DataParameter::clear_has_shuffle() {clear_has_shuffle17844,620563
inline void HDF5DataParameter::clear_shuffle() {clear_shuffle17847,620651
inline bool HDF5DataParameter::shuffle() const {shuffle17851,620745
inline void HDF5DataParameter::set_shuffle(bool value) {set_shuffle17854,620815
inline bool HDF5OutputParameter::has_file_name() const {has_file_name17864,621046
inline void HDF5OutputParameter::set_has_file_name() {set_has_file_name17867,621150
inline void HDF5OutputParameter::clear_has_file_name() {clear_has_file_name17870,621239
inline void HDF5OutputParameter::clear_file_name() {clear_file_name17873,621331
inline const ::std::string& HDF5OutputParameter::file_name() const {file_name17879,621507
inline void HDF5OutputParameter::set_file_name(const ::std::string& value) {set_file_name17882,621600
inline void HDF5OutputParameter::set_file_name(const char* value) {set_file_name17889,621838
inline void HDF5OutputParameter::set_file_name(const char* value, size_t size) {set_file_name17896,622067
inline ::std::string* HDF5OutputParameter::mutable_file_name() {mutable_file_name17903,622346
inline ::std::string* HDF5OutputParameter::release_file_name() {release_file_name17910,622564
inline void HDF5OutputParameter::set_allocated_file_name(::std::string* file_name) {set_allocated_file_name17920,622901
inline bool HingeLossParameter::has_norm() const {has_norm17938,623451
inline void HingeLossParameter::set_has_norm() {set_has_norm17941,623549
inline void HingeLossParameter::clear_has_norm() {clear_has_norm17944,623632
inline void HingeLossParameter::clear_norm() {clear_norm17947,623718
inline ::caffe::HingeLossParameter_Norm HingeLossParameter::norm() const {norm17951,623800
inline void HingeLossParameter::set_norm(::caffe::HingeLossParameter_Norm value) {set_norm17954,623942
inline bool ImageDataParameter::has_source() const {has_source17965,624248
inline void ImageDataParameter::set_has_source() {set_has_source17968,624348
inline void ImageDataParameter::clear_has_source() {clear_has_source17971,624433
inline void ImageDataParameter::clear_source() {clear_source17974,624521
inline const ::std::string& ImageDataParameter::source() const {source17980,624684
inline void ImageDataParameter::set_source(const ::std::string& value) {set_source17983,624770
inline void ImageDataParameter::set_source(const char* value) {set_source17990,624992
inline void ImageDataParameter::set_source(const char* value, size_t size) {set_source17997,625205
inline ::std::string* ImageDataParameter::mutable_source() {mutable_source18004,625468
inline ::std::string* ImageDataParameter::release_source() {release_source18011,625670
inline void ImageDataParameter::set_allocated_source(::std::string* source) {set_allocated_source18021,625991
inline bool ImageDataParameter::has_batch_size() const {has_batch_size18035,626396
inline void ImageDataParameter::set_has_batch_size() {set_has_batch_size18038,626500
inline void ImageDataParameter::clear_has_batch_size() {clear_has_batch_size18041,626589
inline void ImageDataParameter::clear_batch_size() {clear_batch_size18044,626681
inline ::google::protobuf::uint32 ImageDataParameter::batch_size() const {batch_size18048,626782
inline void ImageDataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size18051,626881
inline bool ImageDataParameter::has_rand_skip() const {has_rand_skip18057,627062
inline void ImageDataParameter::set_has_rand_skip() {set_has_rand_skip18060,627165
inline void ImageDataParameter::clear_has_rand_skip() {clear_has_rand_skip18063,627253
inline void ImageDataParameter::clear_rand_skip() {clear_rand_skip18066,627344
inline ::google::protobuf::uint32 ImageDataParameter::rand_skip() const {rand_skip18070,627442
inline void ImageDataParameter::set_rand_skip(::google::protobuf::uint32 value) {set_rand_skip18073,627539
inline bool ImageDataParameter::has_shuffle() const {has_shuffle18079,627717
inline void ImageDataParameter::set_has_shuffle() {set_has_shuffle18082,627818
inline void ImageDataParameter::clear_has_shuffle() {clear_has_shuffle18085,627904
inline void ImageDataParameter::clear_shuffle() {clear_shuffle18088,627993
inline bool ImageDataParameter::shuffle() const {shuffle18092,628088
inline void ImageDataParameter::set_shuffle(bool value) {set_shuffle18095,628159
inline bool ImageDataParameter::has_new_height() const {has_new_height18101,628310
inline void ImageDataParameter::set_has_new_height() {set_has_new_height18104,628414
inline void ImageDataParameter::clear_has_new_height() {clear_has_new_height18107,628503
inline void ImageDataParameter::clear_new_height() {clear_new_height18110,628595
inline ::google::protobuf::uint32 ImageDataParameter::new_height() const {new_height18114,628696
inline void ImageDataParameter::set_new_height(::google::protobuf::uint32 value) {set_new_height18117,628795
inline bool ImageDataParameter::has_new_width() const {has_new_width18123,628977
inline void ImageDataParameter::set_has_new_width() {set_has_new_width18126,629080
inline void ImageDataParameter::clear_has_new_width() {clear_has_new_width18129,629168
inline void ImageDataParameter::clear_new_width() {clear_new_width18132,629259
inline ::google::protobuf::uint32 ImageDataParameter::new_width() const {new_width18136,629357
inline void ImageDataParameter::set_new_width(::google::protobuf::uint32 value) {set_new_width18139,629454
inline bool ImageDataParameter::has_is_color() const {has_is_color18145,629633
inline void ImageDataParameter::set_has_is_color() {set_has_is_color18148,629735
inline void ImageDataParameter::clear_has_is_color() {clear_has_is_color18151,629822
inline void ImageDataParameter::clear_is_color() {clear_is_color18154,629912
inline bool ImageDataParameter::is_color() const {is_color18158,630009
inline void ImageDataParameter::set_is_color(bool value) {set_is_color18161,630082
inline bool ImageDataParameter::has_scale() const {has_scale18167,630230
inline void ImageDataParameter::set_has_scale() {set_has_scale18170,630329
inline void ImageDataParameter::clear_has_scale() {clear_has_scale18173,630413
inline void ImageDataParameter::clear_scale() {clear_scale18176,630500
inline float ImageDataParameter::scale() const {scale18180,630585
inline void ImageDataParameter::set_scale(float value) {set_scale18183,630653
inline bool ImageDataParameter::has_mean_file() const {has_mean_file18189,630784
inline void ImageDataParameter::set_has_mean_file() {set_has_mean_file18192,630887
inline void ImageDataParameter::clear_has_mean_file() {clear_has_mean_file18195,630975
inline void ImageDataParameter::clear_mean_file() {clear_mean_file18198,631066
inline const ::std::string& ImageDataParameter::mean_file() const {mean_file18204,631241
inline void ImageDataParameter::set_mean_file(const ::std::string& value) {set_mean_file18207,631333
inline void ImageDataParameter::set_mean_file(const char* value) {set_mean_file18214,631570
inline void ImageDataParameter::set_mean_file(const char* value, size_t size) {set_mean_file18221,631798
inline ::std::string* ImageDataParameter::mutable_mean_file() {mutable_mean_file18228,632076
inline ::std::string* ImageDataParameter::release_mean_file() {release_mean_file18235,632293
inline void ImageDataParameter::set_allocated_mean_file(::std::string* mean_file) {set_allocated_mean_file18245,632629
inline bool ImageDataParameter::has_crop_size() const {has_crop_size18259,633063
inline void ImageDataParameter::set_has_crop_size() {set_has_crop_size18262,633166
inline void ImageDataParameter::clear_has_crop_size() {clear_has_crop_size18265,633254
inline void ImageDataParameter::clear_crop_size() {clear_crop_size18268,633345
inline ::google::protobuf::uint32 ImageDataParameter::crop_size() const {crop_size18272,633443
inline void ImageDataParameter::set_crop_size(::google::protobuf::uint32 value) {set_crop_size18275,633540
inline bool ImageDataParameter::has_mirror() const {has_mirror18281,633717
inline void ImageDataParameter::set_has_mirror() {set_has_mirror18284,633817
inline void ImageDataParameter::clear_has_mirror() {clear_has_mirror18287,633902
inline void ImageDataParameter::clear_mirror() {clear_mirror18290,633990
inline bool ImageDataParameter::mirror() const {mirror18294,634082
inline void ImageDataParameter::set_mirror(bool value) {set_mirror18297,634151
inline bool ImageDataParameter::has_root_folder() const {has_root_folder18303,634302
inline void ImageDataParameter::set_has_root_folder() {set_has_root_folder18306,634407
inline void ImageDataParameter::clear_has_root_folder() {clear_has_root_folder18309,634497
inline void ImageDataParameter::clear_root_folder() {clear_root_folder18312,634590
inline const ::std::string& ImageDataParameter::root_folder() const {root_folder18318,634773
inline void ImageDataParameter::set_root_folder(const ::std::string& value) {set_root_folder18321,634869
inline void ImageDataParameter::set_root_folder(const char* value) {set_root_folder18328,635116
inline void ImageDataParameter::set_root_folder(const char* value, size_t size) {set_root_folder18335,635354
inline ::std::string* ImageDataParameter::mutable_root_folder() {mutable_root_folder18342,635642
inline ::std::string* ImageDataParameter::release_root_folder() {release_root_folder18349,635869
inline void ImageDataParameter::set_allocated_root_folder(::std::string* root_folder) {set_allocated_root_folder18359,636215
inline bool InfogainLossParameter::has_source() const {has_source18377,636750
inline void InfogainLossParameter::set_has_source() {set_has_source18380,636853
inline void InfogainLossParameter::clear_has_source() {clear_has_source18383,636941
inline void InfogainLossParameter::clear_source() {clear_source18386,637032
inline const ::std::string& InfogainLossParameter::source() const {source18392,637198
inline void InfogainLossParameter::set_source(const ::std::string& value) {set_source18395,637287
inline void InfogainLossParameter::set_source(const char* value) {set_source18402,637512
inline void InfogainLossParameter::set_source(const char* value, size_t size) {set_source18409,637728
inline ::std::string* InfogainLossParameter::mutable_source() {mutable_source18416,637994
inline ::std::string* InfogainLossParameter::release_source() {release_source18423,638199
inline void InfogainLossParameter::set_allocated_source(::std::string* source) {set_allocated_source18433,638523
inline bool InfogainLossParameter::has_axis() const {has_axis18447,638924
inline void InfogainLossParameter::set_has_axis() {set_has_axis18450,639025
inline void InfogainLossParameter::clear_has_axis() {clear_has_axis18453,639111
inline void InfogainLossParameter::clear_axis() {clear_axis18456,639200
inline ::google::protobuf::int32 InfogainLossParameter::axis() const {axis18460,639285
inline void InfogainLossParameter::set_axis(::google::protobuf::int32 value) {set_axis18463,639374
inline bool InnerProductParameter::has_num_output() const {has_num_output18473,639624
inline void InnerProductParameter::set_has_num_output() {set_has_num_output18476,639731
inline void InnerProductParameter::clear_has_num_output() {clear_has_num_output18479,639823
inline void InnerProductParameter::clear_num_output() {clear_num_output18482,639918
inline ::google::protobuf::uint32 InnerProductParameter::num_output() const {num_output18486,640022
inline void InnerProductParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output18489,640124
inline bool InnerProductParameter::has_bias_term() const {has_bias_term18495,640309
inline void InnerProductParameter::set_has_bias_term() {set_has_bias_term18498,640415
inline void InnerProductParameter::clear_has_bias_term() {clear_has_bias_term18501,640506
inline void InnerProductParameter::clear_bias_term() {clear_bias_term18504,640600
inline bool InnerProductParameter::bias_term() const {bias_term18508,640703
inline void InnerProductParameter::set_bias_term(bool value) {set_bias_term18511,640781
inline bool InnerProductParameter::has_weight_filler() const {has_weight_filler18517,640946
inline void InnerProductParameter::set_has_weight_filler() {set_has_weight_filler18520,641056
inline void InnerProductParameter::clear_has_weight_filler() {clear_has_weight_filler18523,641151
inline void InnerProductParameter::clear_weight_filler() {clear_weight_filler18526,641249
inline const ::caffe::FillerParameter& InnerProductParameter::weight_filler() const {weight_filler18530,641420
inline ::caffe::FillerParameter* InnerProductParameter::mutable_weight_filler() {mutable_weight_filler18533,641596
inline ::caffe::FillerParameter* InnerProductParameter::release_weight_filler() {release_weight_filler18538,641809
inline void InnerProductParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler18544,642013
inline bool InnerProductParameter::has_bias_filler() const {has_bias_filler18555,642331
inline void InnerProductParameter::set_has_bias_filler() {set_has_bias_filler18558,642439
inline void InnerProductParameter::clear_has_bias_filler() {clear_has_bias_filler18561,642532
inline void InnerProductParameter::clear_bias_filler() {clear_bias_filler18564,642628
inline const ::caffe::FillerParameter& InnerProductParameter::bias_filler() const {bias_filler18568,642791
inline ::caffe::FillerParameter* InnerProductParameter::mutable_bias_filler() {mutable_bias_filler18571,642959
inline ::caffe::FillerParameter* InnerProductParameter::release_bias_filler() {release_bias_filler18576,643162
inline void InnerProductParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler18582,643358
inline bool InnerProductParameter::has_axis() const {has_axis18593,643650
inline void InnerProductParameter::set_has_axis() {set_has_axis18596,643751
inline void InnerProductParameter::clear_has_axis() {clear_has_axis18599,643837
inline void InnerProductParameter::clear_axis() {clear_axis18602,643926
inline ::google::protobuf::int32 InnerProductParameter::axis() const {axis18606,644011
inline void InnerProductParameter::set_axis(::google::protobuf::int32 value) {set_axis18609,644100
inline bool InnerProductParameter::has_transpose() const {has_transpose18615,644267
inline void InnerProductParameter::set_has_transpose() {set_has_transpose18618,644373
inline void InnerProductParameter::clear_has_transpose() {clear_has_transpose18621,644464
inline void InnerProductParameter::clear_transpose() {clear_transpose18624,644558
inline bool InnerProductParameter::transpose() const {transpose18628,644662
inline void InnerProductParameter::set_transpose(bool value) {set_transpose18631,644740
inline int InputParameter::shape_size() const {shape_size18641,644982
inline void InputParameter::clear_shape() {clear_shape18644,645056
inline const ::caffe::BlobShape& InputParameter::shape(int index) const {shape18647,645120
inline ::caffe::BlobShape* InputParameter::mutable_shape(int index) {mutable_shape18650,645224
inline ::caffe::BlobShape* InputParameter::add_shape() {add_shape18653,645328
InputParameter::shape() const {shape18657,645483
InputParameter::mutable_shape() {mutable_shape18661,645601
inline bool LogParameter::has_base() const {has_base18670,645788
inline void LogParameter::set_has_base() {set_has_base18673,645880
inline void LogParameter::clear_has_base() {clear_has_base18676,645957
inline void LogParameter::clear_base() {clear_base18679,646037
inline float LogParameter::base() const {base18683,646114
inline void LogParameter::set_base(float value) {set_base18686,646174
inline bool LogParameter::has_scale() const {has_scale18692,646305
inline void LogParameter::set_has_scale() {set_has_scale18695,646398
inline void LogParameter::clear_has_scale() {clear_has_scale18698,646476
inline void LogParameter::clear_scale() {clear_scale18701,646557
inline float LogParameter::scale() const {scale18705,646636
inline void LogParameter::set_scale(float value) {set_scale18708,646698
inline bool LogParameter::has_shift() const {has_shift18714,646832
inline void LogParameter::set_has_shift() {set_has_shift18717,646925
inline void LogParameter::clear_has_shift() {clear_has_shift18720,647003
inline void LogParameter::clear_shift() {clear_shift18723,647084
inline float LogParameter::shift() const {shift18727,647163
inline void LogParameter::set_shift(float value) {set_shift18730,647225
inline bool LRNParameter::has_local_size() const {has_local_size18740,647454
inline void LRNParameter::set_has_local_size() {set_has_local_size18743,647552
inline void LRNParameter::clear_has_local_size() {clear_has_local_size18746,647635
inline void LRNParameter::clear_local_size() {clear_local_size18749,647721
inline ::google::protobuf::uint32 LRNParameter::local_size() const {local_size18753,647816
inline void LRNParameter::set_local_size(::google::protobuf::uint32 value) {set_local_size18756,647909
inline bool LRNParameter::has_alpha() const {has_alpha18762,648079
inline void LRNParameter::set_has_alpha() {set_has_alpha18765,648172
inline void LRNParameter::clear_has_alpha() {clear_has_alpha18768,648250
inline void LRNParameter::clear_alpha() {clear_alpha18771,648331
inline float LRNParameter::alpha() const {alpha18775,648410
inline void LRNParameter::set_alpha(float value) {set_alpha18778,648472
inline bool LRNParameter::has_beta() const {has_beta18784,648608
inline void LRNParameter::set_has_beta() {set_has_beta18787,648700
inline void LRNParameter::clear_has_beta() {clear_has_beta18790,648777
inline void LRNParameter::clear_beta() {clear_beta18793,648857
inline float LRNParameter::beta() const {beta18797,648937
inline void LRNParameter::set_beta(float value) {set_beta18800,648997
inline bool LRNParameter::has_norm_region() const {has_norm_region18806,649173
inline void LRNParameter::set_has_norm_region() {set_has_norm_region18809,649272
inline void LRNParameter::clear_has_norm_region() {clear_has_norm_region18812,649356
inline void LRNParameter::clear_norm_region() {clear_norm_region18815,649443
inline ::caffe::LRNParameter_NormRegion LRNParameter::norm_region() const {norm_region18819,649540
inline void LRNParameter::set_norm_region(::caffe::LRNParameter_NormRegion value) {set_norm_region18822,649690
inline bool LRNParameter::has_k() const {has_k18829,649924
inline void LRNParameter::set_has_k() {set_has_k18832,650013
inline void LRNParameter::clear_has_k() {clear_has_k18835,650087
inline void LRNParameter::clear_k() {clear_k18838,650164
inline float LRNParameter::k() const {k18842,650231
inline void LRNParameter::set_k(float value) {set_k18845,650285
inline bool LRNParameter::has_engine() const {has_engine18851,650435
inline void LRNParameter::set_has_engine() {set_has_engine18854,650529
inline void LRNParameter::clear_has_engine() {clear_has_engine18857,650608
inline void LRNParameter::clear_engine() {clear_engine18860,650690
inline ::caffe::LRNParameter_Engine LRNParameter::engine() const {engine18864,650772
inline void LRNParameter::set_engine(::caffe::LRNParameter_Engine value) {set_engine18867,650904
inline bool MemoryDataParameter::has_batch_size() const {has_batch_size18878,651207
inline void MemoryDataParameter::set_has_batch_size() {set_has_batch_size18881,651312
inline void MemoryDataParameter::clear_has_batch_size() {clear_has_batch_size18884,651402
inline void MemoryDataParameter::clear_batch_size() {clear_batch_size18887,651495
inline ::google::protobuf::uint32 MemoryDataParameter::batch_size() const {batch_size18891,651597
inline void MemoryDataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size18894,651697
inline bool MemoryDataParameter::has_channels() const {has_channels18900,651864
inline void MemoryDataParameter::set_has_channels() {set_has_channels18903,651967
inline void MemoryDataParameter::clear_has_channels() {clear_has_channels18906,652055
inline void MemoryDataParameter::clear_channels() {clear_channels18909,652146
inline ::google::protobuf::uint32 MemoryDataParameter::channels() const {channels18913,652242
inline void MemoryDataParameter::set_channels(::google::protobuf::uint32 value) {set_channels18916,652338
inline bool MemoryDataParameter::has_height() const {has_height18922,652497
inline void MemoryDataParameter::set_has_height() {set_has_height18925,652598
inline void MemoryDataParameter::clear_has_height() {clear_has_height18928,652684
inline void MemoryDataParameter::clear_height() {clear_height18931,652773
inline ::google::protobuf::uint32 MemoryDataParameter::height() const {height18935,652863
inline void MemoryDataParameter::set_height(::google::protobuf::uint32 value) {set_height18938,652955
inline bool MemoryDataParameter::has_width() const {has_width18944,653107
inline void MemoryDataParameter::set_has_width() {set_has_width18947,653207
inline void MemoryDataParameter::clear_has_width() {clear_has_width18950,653292
inline void MemoryDataParameter::clear_width() {clear_width18953,653380
inline ::google::protobuf::uint32 MemoryDataParameter::width() const {width18957,653467
inline void MemoryDataParameter::set_width(::google::protobuf::uint32 value) {set_width18960,653557
inline bool MVNParameter::has_normalize_variance() const {has_normalize_variance18970,653823
inline void MVNParameter::set_has_normalize_variance() {set_has_normalize_variance18973,653929
inline void MVNParameter::clear_has_normalize_variance() {clear_has_normalize_variance18976,654020
inline void MVNParameter::clear_normalize_variance() {clear_normalize_variance18979,654114
inline bool MVNParameter::normalize_variance() const {normalize_variance18983,654235
inline void MVNParameter::set_normalize_variance(bool value) {set_normalize_variance18986,654322
inline bool MVNParameter::has_across_channels() const {has_across_channels18992,654507
inline void MVNParameter::set_has_across_channels() {set_has_across_channels18995,654610
inline void MVNParameter::clear_has_across_channels() {clear_has_across_channels18998,654698
inline void MVNParameter::clear_across_channels() {clear_across_channels19001,654789
inline bool MVNParameter::across_channels() const {across_channels19005,654902
inline void MVNParameter::set_across_channels(bool value) {set_across_channels19008,654983
inline bool MVNParameter::has_eps() const {has_eps19014,655148
inline void MVNParameter::set_has_eps() {set_has_eps19017,655239
inline void MVNParameter::clear_has_eps() {clear_has_eps19020,655315
inline void MVNParameter::clear_eps() {clear_eps19023,655394
inline float MVNParameter::eps() const {eps19027,655472
inline void MVNParameter::set_eps(float value) {set_eps19030,655530
inline bool ParameterParameter::has_shape() const {has_shape19040,655750
inline void ParameterParameter::set_has_shape() {set_has_shape19043,655849
inline void ParameterParameter::clear_has_shape() {clear_has_shape19046,655933
inline void ParameterParameter::clear_shape() {clear_shape19049,656020
inline const ::caffe::BlobShape& ParameterParameter::shape() const {shape19053,656150
inline ::caffe::BlobShape* ParameterParameter::mutable_shape() {mutable_shape19056,656285
inline ::caffe::BlobShape* ParameterParameter::release_shape() {release_shape19061,656443
inline void ParameterParameter::set_allocated_shape(::caffe::BlobShape* shape) {set_allocated_shape19067,656600
inline bool PoolingParameter::has_pool() const {has_pool19082,656959
inline void PoolingParameter::set_has_pool() {set_has_pool19085,657055
inline void PoolingParameter::clear_has_pool() {clear_has_pool19088,657136
inline void PoolingParameter::clear_pool() {clear_pool19091,657220
inline ::caffe::PoolingParameter_PoolMethod PoolingParameter::pool() const {pool19095,657300
inline void PoolingParameter::set_pool(::caffe::PoolingParameter_PoolMethod value) {set_pool19098,657448
inline bool PoolingParameter::has_pad() const {has_pad19105,657676
inline void PoolingParameter::set_has_pad() {set_has_pad19108,657771
inline void PoolingParameter::clear_has_pad() {clear_has_pad19111,657851
inline void PoolingParameter::clear_pad() {clear_pad19114,657934
inline ::google::protobuf::uint32 PoolingParameter::pad() const {pad19118,658012
inline void PoolingParameter::set_pad(::google::protobuf::uint32 value) {set_pad19121,658095
inline bool PoolingParameter::has_pad_h() const {has_pad_h19127,658249
inline void PoolingParameter::set_has_pad_h() {set_has_pad_h19130,658346
inline void PoolingParameter::clear_has_pad_h() {clear_has_pad_h19133,658428
inline void PoolingParameter::clear_pad_h() {clear_pad_h19136,658513
inline ::google::protobuf::uint32 PoolingParameter::pad_h() const {pad_h19140,658597
inline void PoolingParameter::set_pad_h(::google::protobuf::uint32 value) {set_pad_h19143,658684
inline bool PoolingParameter::has_pad_w() const {has_pad_w19149,658845
inline void PoolingParameter::set_has_pad_w() {set_has_pad_w19152,658942
inline void PoolingParameter::clear_has_pad_w() {clear_has_pad_w19155,659024
inline void PoolingParameter::clear_pad_w() {clear_pad_w19158,659109
inline ::google::protobuf::uint32 PoolingParameter::pad_w() const {pad_w19162,659193
inline void PoolingParameter::set_pad_w(::google::protobuf::uint32 value) {set_pad_w19165,659280
inline bool PoolingParameter::has_kernel_size() const {has_kernel_size19171,659432
inline void PoolingParameter::set_has_kernel_size() {set_has_kernel_size19174,659535
inline void PoolingParameter::clear_has_kernel_size() {clear_has_kernel_size19177,659623
inline void PoolingParameter::clear_kernel_size() {clear_kernel_size19180,659714
inline ::google::protobuf::uint32 PoolingParameter::kernel_size() const {kernel_size19184,659816
inline void PoolingParameter::set_kernel_size(::google::protobuf::uint32 value) {set_kernel_size19187,659915
inline bool PoolingParameter::has_kernel_h() const {has_kernel_h19193,660082
inline void PoolingParameter::set_has_kernel_h() {set_has_kernel_h19196,660182
inline void PoolingParameter::clear_has_kernel_h() {clear_has_kernel_h19199,660267
inline void PoolingParameter::clear_kernel_h() {clear_kernel_h19202,660355
inline ::google::protobuf::uint32 PoolingParameter::kernel_h() const {kernel_h19206,660448
inline void PoolingParameter::set_kernel_h(::google::protobuf::uint32 value) {set_kernel_h19209,660541
inline bool PoolingParameter::has_kernel_w() const {has_kernel_w19215,660699
inline void PoolingParameter::set_has_kernel_w() {set_has_kernel_w19218,660799
inline void PoolingParameter::clear_has_kernel_w() {clear_has_kernel_w19221,660884
inline void PoolingParameter::clear_kernel_w() {clear_kernel_w19224,660972
inline ::google::protobuf::uint32 PoolingParameter::kernel_w() const {kernel_w19228,661065
inline void PoolingParameter::set_kernel_w(::google::protobuf::uint32 value) {set_kernel_w19231,661158
inline bool PoolingParameter::has_stride() const {has_stride19237,661328
inline void PoolingParameter::set_has_stride() {set_has_stride19240,661426
inline void PoolingParameter::clear_has_stride() {clear_has_stride19243,661509
inline void PoolingParameter::clear_stride() {clear_stride19246,661595
inline ::google::protobuf::uint32 PoolingParameter::stride() const {stride19250,661682
inline void PoolingParameter::set_stride(::google::protobuf::uint32 value) {set_stride19253,661771
inline bool PoolingParameter::has_stride_h() const {has_stride_h19259,661923
inline void PoolingParameter::set_has_stride_h() {set_has_stride_h19262,662023
inline void PoolingParameter::clear_has_stride_h() {clear_has_stride_h19265,662108
inline void PoolingParameter::clear_stride_h() {clear_stride_h19268,662196
inline ::google::protobuf::uint32 PoolingParameter::stride_h() const {stride_h19272,662289
inline void PoolingParameter::set_stride_h(::google::protobuf::uint32 value) {set_stride_h19275,662382
inline bool PoolingParameter::has_stride_w() const {has_stride_w19281,662540
inline void PoolingParameter::set_has_stride_w() {set_has_stride_w19284,662640
inline void PoolingParameter::clear_has_stride_w() {clear_has_stride_w19287,662725
inline void PoolingParameter::clear_stride_w() {clear_stride_w19290,662813
inline ::google::protobuf::uint32 PoolingParameter::stride_w() const {stride_w19294,662906
inline void PoolingParameter::set_stride_w(::google::protobuf::uint32 value) {set_stride_w19297,662999
inline bool PoolingParameter::has_engine() const {has_engine19303,663200
inline void PoolingParameter::set_has_engine() {set_has_engine19306,663298
inline void PoolingParameter::clear_has_engine() {clear_has_engine19309,663381
inline void PoolingParameter::clear_engine() {clear_engine19312,663467
inline ::caffe::PoolingParameter_Engine PoolingParameter::engine() const {engine19316,663553
inline void PoolingParameter::set_engine(::caffe::PoolingParameter_Engine value) {set_engine19319,663697
inline bool PoolingParameter::has_global_pooling() const {has_global_pooling19326,663937
inline void PoolingParameter::set_has_global_pooling() {set_has_global_pooling19329,664043
inline void PoolingParameter::clear_has_global_pooling() {clear_has_global_pooling19332,664134
inline void PoolingParameter::clear_global_pooling() {clear_global_pooling19335,664228
inline bool PoolingParameter::global_pooling() const {global_pooling19339,664342
inline void PoolingParameter::set_global_pooling(bool value) {set_global_pooling19342,664425
inline bool PowerParameter::has_power() const {has_power19352,664680
inline void PowerParameter::set_has_power() {set_has_power19355,664775
inline void PowerParameter::clear_has_power() {clear_has_power19358,664855
inline void PowerParameter::clear_power() {clear_power19361,664938
inline float PowerParameter::power() const {power19365,665019
inline void PowerParameter::set_power(float value) {set_power19368,665083
inline bool PowerParameter::has_scale() const {has_scale19374,665219
inline void PowerParameter::set_has_scale() {set_has_scale19377,665314
inline void PowerParameter::clear_has_scale() {clear_has_scale19380,665394
inline void PowerParameter::clear_scale() {clear_scale19383,665477
inline float PowerParameter::scale() const {scale19387,665558
inline void PowerParameter::set_scale(float value) {set_scale19390,665622
inline bool PowerParameter::has_shift() const {has_shift19396,665758
inline void PowerParameter::set_has_shift() {set_has_shift19399,665853
inline void PowerParameter::clear_has_shift() {clear_has_shift19402,665933
inline void PowerParameter::clear_shift() {clear_shift19405,666016
inline float PowerParameter::shift() const {shift19409,666097
inline void PowerParameter::set_shift(float value) {set_shift19412,666161
inline bool PythonParameter::has_module() const {has_module19422,666377
inline void PythonParameter::set_has_module() {set_has_module19425,666474
inline void PythonParameter::clear_has_module() {clear_has_module19428,666556
inline void PythonParameter::clear_module() {clear_module19431,666641
inline const ::std::string& PythonParameter::module() const {module19437,666801
inline void PythonParameter::set_module(const ::std::string& value) {set_module19440,666884
inline void PythonParameter::set_module(const char* value) {set_module19447,667103
inline void PythonParameter::set_module(const char* value, size_t size) {set_module19454,667313
inline ::std::string* PythonParameter::mutable_module() {mutable_module19461,667573
inline ::std::string* PythonParameter::release_module() {release_module19468,667772
inline void PythonParameter::set_allocated_module(::std::string* module) {set_allocated_module19478,668090
inline bool PythonParameter::has_layer() const {has_layer19492,668473
inline void PythonParameter::set_has_layer() {set_has_layer19495,668569
inline void PythonParameter::clear_has_layer() {clear_has_layer19498,668650
inline void PythonParameter::clear_layer() {clear_layer19501,668734
inline const ::std::string& PythonParameter::layer() const {layer19507,668890
inline void PythonParameter::set_layer(const ::std::string& value) {set_layer19510,668971
inline void PythonParameter::set_layer(const char* value) {set_layer19517,669185
inline void PythonParameter::set_layer(const char* value, size_t size) {set_layer19524,669390
inline ::std::string* PythonParameter::mutable_layer() {mutable_layer19531,669645
inline ::std::string* PythonParameter::release_layer() {release_layer19538,669839
inline void PythonParameter::set_allocated_layer(::std::string* layer) {set_allocated_layer19548,670152
inline bool PythonParameter::has_param_str() const {has_param_str19562,670544
inline void PythonParameter::set_has_param_str() {set_has_param_str19565,670644
inline void PythonParameter::clear_has_param_str() {clear_has_param_str19568,670729
inline void PythonParameter::clear_param_str() {clear_param_str19571,670817
inline const ::std::string& PythonParameter::param_str() const {param_str19577,670989
inline void PythonParameter::set_param_str(const ::std::string& value) {set_param_str19580,671078
inline void PythonParameter::set_param_str(const char* value) {set_param_str19587,671312
inline void PythonParameter::set_param_str(const char* value, size_t size) {set_param_str19594,671537
inline ::std::string* PythonParameter::mutable_param_str() {mutable_param_str19601,671812
inline ::std::string* PythonParameter::release_param_str() {release_param_str19608,672026
inline void PythonParameter::set_allocated_param_str(::std::string* param_str) {set_allocated_param_str19618,672359
inline bool PythonParameter::has_share_in_parallel() const {has_share_in_parallel19632,672800
inline void PythonParameter::set_has_share_in_parallel() {set_has_share_in_parallel19635,672908
inline void PythonParameter::clear_has_share_in_parallel() {clear_has_share_in_parallel19638,673001
inline void PythonParameter::clear_share_in_parallel() {clear_share_in_parallel19641,673097
inline bool PythonParameter::share_in_parallel() const {share_in_parallel19645,673219
inline void PythonParameter::set_share_in_parallel(bool value) {set_share_in_parallel19648,673307
inline bool RecurrentParameter::has_num_output() const {has_num_output19658,673580
inline void RecurrentParameter::set_has_num_output() {set_has_num_output19661,673684
inline void RecurrentParameter::clear_has_num_output() {clear_has_num_output19664,673773
inline void RecurrentParameter::clear_num_output() {clear_num_output19667,673865
inline ::google::protobuf::uint32 RecurrentParameter::num_output() const {num_output19671,673966
inline void RecurrentParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output19674,674065
inline bool RecurrentParameter::has_weight_filler() const {has_weight_filler19680,674252
inline void RecurrentParameter::set_has_weight_filler() {set_has_weight_filler19683,674359
inline void RecurrentParameter::clear_has_weight_filler() {clear_has_weight_filler19686,674451
inline void RecurrentParameter::clear_weight_filler() {clear_weight_filler19689,674546
inline const ::caffe::FillerParameter& RecurrentParameter::weight_filler() const {weight_filler19693,674714
inline ::caffe::FillerParameter* RecurrentParameter::mutable_weight_filler() {mutable_weight_filler19696,674887
inline ::caffe::FillerParameter* RecurrentParameter::release_weight_filler() {release_weight_filler19701,675097
inline void RecurrentParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler19707,675298
inline bool RecurrentParameter::has_bias_filler() const {has_bias_filler19718,675613
inline void RecurrentParameter::set_has_bias_filler() {set_has_bias_filler19721,675718
inline void RecurrentParameter::clear_has_bias_filler() {clear_has_bias_filler19724,675808
inline void RecurrentParameter::clear_bias_filler() {clear_bias_filler19727,675901
inline const ::caffe::FillerParameter& RecurrentParameter::bias_filler() const {bias_filler19731,676061
inline ::caffe::FillerParameter* RecurrentParameter::mutable_bias_filler() {mutable_bias_filler19734,676226
inline ::caffe::FillerParameter* RecurrentParameter::release_bias_filler() {release_bias_filler19739,676426
inline void RecurrentParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler19745,676619
inline bool RecurrentParameter::has_debug_info() const {has_debug_info19756,676917
inline void RecurrentParameter::set_has_debug_info() {set_has_debug_info19759,677021
inline void RecurrentParameter::clear_has_debug_info() {clear_has_debug_info19762,677110
inline void RecurrentParameter::clear_debug_info() {clear_debug_info19765,677202
inline bool RecurrentParameter::debug_info() const {debug_info19769,677306
inline void RecurrentParameter::set_debug_info(bool value) {set_debug_info19772,677383
inline bool RecurrentParameter::has_expose_hidden() const {has_expose_hidden19778,677548
inline void RecurrentParameter::set_has_expose_hidden() {set_has_expose_hidden19781,677655
inline void RecurrentParameter::clear_has_expose_hidden() {clear_has_expose_hidden19784,677747
inline void RecurrentParameter::clear_expose_hidden() {clear_expose_hidden19787,677842
inline bool RecurrentParameter::expose_hidden() const {expose_hidden19791,677955
inline void RecurrentParameter::set_expose_hidden(bool value) {set_expose_hidden19794,678038
inline bool ReductionParameter::has_operation() const {has_operation19804,678334
inline void ReductionParameter::set_has_operation() {set_has_operation19807,678437
inline void ReductionParameter::clear_has_operation() {clear_has_operation19810,678525
inline void ReductionParameter::clear_operation() {clear_operation19813,678616
inline ::caffe::ReductionParameter_ReductionOp ReductionParameter::operation() const {operation19817,678713
inline void ReductionParameter::set_operation(::caffe::ReductionParameter_ReductionOp value) {set_operation19820,678879
inline bool ReductionParameter::has_axis() const {has_axis19827,679130
inline void ReductionParameter::set_has_axis() {set_has_axis19830,679228
inline void ReductionParameter::clear_has_axis() {clear_has_axis19833,679311
inline void ReductionParameter::clear_axis() {clear_axis19836,679397
inline ::google::protobuf::int32 ReductionParameter::axis() const {axis19840,679479
inline void ReductionParameter::set_axis(::google::protobuf::int32 value) {set_axis19843,679565
inline bool ReductionParameter::has_coeff() const {has_coeff19849,679722
inline void ReductionParameter::set_has_coeff() {set_has_coeff19852,679821
inline void ReductionParameter::clear_has_coeff() {clear_has_coeff19855,679905
inline void ReductionParameter::clear_coeff() {clear_coeff19858,679992
inline float ReductionParameter::coeff() const {coeff19862,680077
inline void ReductionParameter::set_coeff(float value) {set_coeff19865,680145
inline bool ReLUParameter::has_negative_slope() const {has_negative_slope19875,680384
inline void ReLUParameter::set_has_negative_slope() {set_has_negative_slope19878,680487
inline void ReLUParameter::clear_has_negative_slope() {clear_has_negative_slope19881,680575
inline void ReLUParameter::clear_negative_slope() {clear_negative_slope19884,680666
inline float ReLUParameter::negative_slope() const {negative_slope19888,680773
inline void ReLUParameter::set_negative_slope(float value) {set_negative_slope19891,680854
inline bool ReLUParameter::has_engine() const {has_engine19897,681045
inline void ReLUParameter::set_has_engine() {set_has_engine19900,681140
inline void ReLUParameter::clear_has_engine() {clear_has_engine19903,681220
inline void ReLUParameter::clear_engine() {clear_engine19906,681303
inline ::caffe::ReLUParameter_Engine ReLUParameter::engine() const {engine19910,681386
inline void ReLUParameter::set_engine(::caffe::ReLUParameter_Engine value) {set_engine19913,681521
inline bool ReshapeParameter::has_shape() const {has_shape19924,681829
inline void ReshapeParameter::set_has_shape() {set_has_shape19927,681926
inline void ReshapeParameter::clear_has_shape() {clear_has_shape19930,682008
inline void ReshapeParameter::clear_shape() {clear_shape19933,682093
inline const ::caffe::BlobShape& ReshapeParameter::shape() const {shape19937,682221
inline ::caffe::BlobShape* ReshapeParameter::mutable_shape() {mutable_shape19940,682354
inline ::caffe::BlobShape* ReshapeParameter::release_shape() {release_shape19945,682510
inline void ReshapeParameter::set_allocated_shape(::caffe::BlobShape* shape) {set_allocated_shape19951,682665
inline bool ReshapeParameter::has_axis() const {has_axis19962,682898
inline void ReshapeParameter::set_has_axis() {set_has_axis19965,682994
inline void ReshapeParameter::clear_has_axis() {clear_has_axis19968,683075
inline void ReshapeParameter::clear_axis() {clear_axis19971,683159
inline ::google::protobuf::int32 ReshapeParameter::axis() const {axis19975,683239
inline void ReshapeParameter::set_axis(::google::protobuf::int32 value) {set_axis19978,683323
inline bool ReshapeParameter::has_num_axes() const {has_num_axes19984,683482
inline void ReshapeParameter::set_has_num_axes() {set_has_num_axes19987,683582
inline void ReshapeParameter::clear_has_num_axes() {clear_has_num_axes19990,683667
inline void ReshapeParameter::clear_num_axes() {clear_num_axes19993,683755
inline ::google::protobuf::int32 ReshapeParameter::num_axes() const {num_axes19997,683848
inline void ReshapeParameter::set_num_axes(::google::protobuf::int32 value) {set_num_axes20000,683940
inline bool ScaleParameter::has_axis() const {has_axis20010,684197
inline void ScaleParameter::set_has_axis() {set_has_axis20013,684291
inline void ScaleParameter::clear_has_axis() {clear_has_axis20016,684370
inline void ScaleParameter::clear_axis() {clear_axis20019,684452
inline ::google::protobuf::int32 ScaleParameter::axis() const {axis20023,684530
inline void ScaleParameter::set_axis(::google::protobuf::int32 value) {set_axis20026,684612
inline bool ScaleParameter::has_num_axes() const {has_num_axes20032,684768
inline void ScaleParameter::set_has_num_axes() {set_has_num_axes20035,684866
inline void ScaleParameter::clear_has_num_axes() {clear_has_num_axes20038,684949
inline void ScaleParameter::clear_num_axes() {clear_num_axes20041,685035
inline ::google::protobuf::int32 ScaleParameter::num_axes() const {num_axes20045,685125
inline void ScaleParameter::set_num_axes(::google::protobuf::int32 value) {set_num_axes20048,685215
inline bool ScaleParameter::has_filler() const {has_filler20054,685384
inline void ScaleParameter::set_has_filler() {set_has_filler20057,685480
inline void ScaleParameter::clear_has_filler() {clear_has_filler20060,685561
inline void ScaleParameter::clear_filler() {clear_filler20063,685645
inline const ::caffe::FillerParameter& ScaleParameter::filler() const {filler20067,685781
inline ::caffe::FillerParameter* ScaleParameter::mutable_filler() {mutable_filler20070,685922
inline ::caffe::FillerParameter* ScaleParameter::release_filler() {release_filler20075,686093
inline void ScaleParameter::set_allocated_filler(::caffe::FillerParameter* filler) {set_allocated_filler20081,686262
inline bool ScaleParameter::has_bias_term() const {has_bias_term20092,686515
inline void ScaleParameter::set_has_bias_term() {set_has_bias_term20095,686614
inline void ScaleParameter::clear_has_bias_term() {clear_has_bias_term20098,686698
inline void ScaleParameter::clear_bias_term() {clear_bias_term20101,686785
inline bool ScaleParameter::bias_term() const {bias_term20105,686882
inline void ScaleParameter::set_bias_term(bool value) {set_bias_term20108,686953
inline bool ScaleParameter::has_bias_filler() const {has_bias_filler20114,687109
inline void ScaleParameter::set_has_bias_filler() {set_has_bias_filler20117,687210
inline void ScaleParameter::clear_has_bias_filler() {clear_has_bias_filler20120,687296
inline void ScaleParameter::clear_bias_filler() {clear_bias_filler20123,687385
inline const ::caffe::FillerParameter& ScaleParameter::bias_filler() const {bias_filler20127,687541
inline ::caffe::FillerParameter* ScaleParameter::mutable_bias_filler() {mutable_bias_filler20130,687702
inline ::caffe::FillerParameter* ScaleParameter::release_bias_filler() {release_bias_filler20135,687898
inline void ScaleParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler20141,688087
inline bool SigmoidParameter::has_engine() const {has_engine20156,688498
inline void SigmoidParameter::set_has_engine() {set_has_engine20159,688596
inline void SigmoidParameter::clear_has_engine() {clear_has_engine20162,688679
inline void SigmoidParameter::clear_engine() {clear_engine20165,688765
inline ::caffe::SigmoidParameter_Engine SigmoidParameter::engine() const {engine20169,688851
inline void SigmoidParameter::set_engine(::caffe::SigmoidParameter_Engine value) {set_engine20172,688995
inline bool SliceParameter::has_axis() const {has_axis20183,689312
inline void SliceParameter::set_has_axis() {set_has_axis20186,689406
inline void SliceParameter::clear_has_axis() {clear_has_axis20189,689485
inline void SliceParameter::clear_axis() {clear_axis20192,689567
inline ::google::protobuf::int32 SliceParameter::axis() const {axis20196,689645
inline void SliceParameter::set_axis(::google::protobuf::int32 value) {set_axis20199,689727
inline int SliceParameter::slice_point_size() const {slice_point_size20205,689873
inline void SliceParameter::clear_slice_point() {clear_slice_point20208,689959
inline ::google::protobuf::uint32 SliceParameter::slice_point(int index) const {slice_point20211,690035
inline void SliceParameter::set_slice_point(int index, ::google::protobuf::uint32 value) {set_slice_point20214,690152
inline void SliceParameter::add_slice_point(::google::protobuf::uint32 value) {add_slice_point20217,690279
SliceParameter::slice_point() const {slice_point20221,690466
SliceParameter::mutable_slice_point() {mutable_slice_point20225,690601
inline bool SliceParameter::has_slice_dim() const {has_slice_dim20230,690716
inline void SliceParameter::set_has_slice_dim() {set_has_slice_dim20233,690815
inline void SliceParameter::clear_has_slice_dim() {clear_has_slice_dim20236,690899
inline void SliceParameter::clear_slice_dim() {clear_slice_dim20239,690986
inline ::google::protobuf::uint32 SliceParameter::slice_dim() const {slice_dim20243,691080
inline void SliceParameter::set_slice_dim(::google::protobuf::uint32 value) {set_slice_dim20246,691173
inline bool SoftmaxParameter::has_engine() const {has_engine20256,691467
inline void SoftmaxParameter::set_has_engine() {set_has_engine20259,691565
inline void SoftmaxParameter::clear_has_engine() {clear_has_engine20262,691648
inline void SoftmaxParameter::clear_engine() {clear_engine20265,691734
inline ::caffe::SoftmaxParameter_Engine SoftmaxParameter::engine() const {engine20269,691820
inline void SoftmaxParameter::set_engine(::caffe::SoftmaxParameter_Engine value) {set_engine20272,691964
inline bool SoftmaxParameter::has_axis() const {has_axis20279,692190
inline void SoftmaxParameter::set_has_axis() {set_has_axis20282,692286
inline void SoftmaxParameter::clear_has_axis() {clear_has_axis20285,692367
inline void SoftmaxParameter::clear_axis() {clear_axis20288,692451
inline ::google::protobuf::int32 SoftmaxParameter::axis() const {axis20292,692531
inline void SoftmaxParameter::set_axis(::google::protobuf::int32 value) {set_axis20295,692615
inline bool TanHParameter::has_engine() const {has_engine20305,692889
inline void TanHParameter::set_has_engine() {set_has_engine20308,692984
inline void TanHParameter::clear_has_engine() {clear_has_engine20311,693064
inline void TanHParameter::clear_engine() {clear_engine20314,693147
inline ::caffe::TanHParameter_Engine TanHParameter::engine() const {engine20318,693230
inline void TanHParameter::set_engine(::caffe::TanHParameter_Engine value) {set_engine20321,693365
inline bool TileParameter::has_axis() const {has_axis20332,693672
inline void TileParameter::set_has_axis() {set_has_axis20335,693765
inline void TileParameter::clear_has_axis() {clear_has_axis20338,693843
inline void TileParameter::clear_axis() {clear_axis20341,693924
inline ::google::protobuf::int32 TileParameter::axis() const {axis20345,694001
inline void TileParameter::set_axis(::google::protobuf::int32 value) {set_axis20348,694082
inline bool TileParameter::has_tiles() const {has_tiles20354,694220
inline void TileParameter::set_has_tiles() {set_has_tiles20357,694314
inline void TileParameter::clear_has_tiles() {clear_has_tiles20360,694393
inline void TileParameter::clear_tiles() {clear_tiles20363,694475
inline ::google::protobuf::int32 TileParameter::tiles() const {tiles20367,694555
inline void TileParameter::set_tiles(::google::protobuf::int32 value) {set_tiles20370,694638
inline bool ThresholdParameter::has_threshold() const {has_threshold20380,694892
inline void ThresholdParameter::set_has_threshold() {set_has_threshold20383,694995
inline void ThresholdParameter::clear_has_threshold() {clear_has_threshold20386,695083
inline void ThresholdParameter::clear_threshold() {clear_threshold20389,695174
inline float ThresholdParameter::threshold() const {threshold20393,695271
inline void ThresholdParameter::set_threshold(float value) {set_threshold20396,695347
inline bool WindowDataParameter::has_source() const {has_source20406,695583
inline void WindowDataParameter::set_has_source() {set_has_source20409,695684
inline void WindowDataParameter::clear_has_source() {clear_has_source20412,695770
inline void WindowDataParameter::clear_source() {clear_source20415,695859
inline const ::std::string& WindowDataParameter::source() const {source20421,696023
inline void WindowDataParameter::set_source(const ::std::string& value) {set_source20424,696110
inline void WindowDataParameter::set_source(const char* value) {set_source20431,696333
inline void WindowDataParameter::set_source(const char* value, size_t size) {set_source20438,696547
inline ::std::string* WindowDataParameter::mutable_source() {mutable_source20445,696811
inline ::std::string* WindowDataParameter::release_source() {release_source20452,697014
inline void WindowDataParameter::set_allocated_source(::std::string* source) {set_allocated_source20462,697336
inline bool WindowDataParameter::has_scale() const {has_scale20476,697736
inline void WindowDataParameter::set_has_scale() {set_has_scale20479,697836
inline void WindowDataParameter::clear_has_scale() {clear_has_scale20482,697921
inline void WindowDataParameter::clear_scale() {clear_scale20485,698009
inline float WindowDataParameter::scale() const {scale20489,698095
inline void WindowDataParameter::set_scale(float value) {set_scale20492,698164
inline bool WindowDataParameter::has_mean_file() const {has_mean_file20498,698296
inline void WindowDataParameter::set_has_mean_file() {set_has_mean_file20501,698400
inline void WindowDataParameter::clear_has_mean_file() {clear_has_mean_file20504,698489
inline void WindowDataParameter::clear_mean_file() {clear_mean_file20507,698581
inline const ::std::string& WindowDataParameter::mean_file() const {mean_file20513,698757
inline void WindowDataParameter::set_mean_file(const ::std::string& value) {set_mean_file20516,698850
inline void WindowDataParameter::set_mean_file(const char* value) {set_mean_file20523,699088
inline void WindowDataParameter::set_mean_file(const char* value, size_t size) {set_mean_file20530,699317
inline ::std::string* WindowDataParameter::mutable_mean_file() {mutable_mean_file20537,699596
inline ::std::string* WindowDataParameter::release_mean_file() {release_mean_file20544,699814
inline void WindowDataParameter::set_allocated_mean_file(::std::string* mean_file) {set_allocated_mean_file20554,700151
inline bool WindowDataParameter::has_batch_size() const {has_batch_size20568,700573
inline void WindowDataParameter::set_has_batch_size() {set_has_batch_size20571,700678
inline void WindowDataParameter::clear_has_batch_size() {clear_has_batch_size20574,700768
inline void WindowDataParameter::clear_batch_size() {clear_batch_size20577,700861
inline ::google::protobuf::uint32 WindowDataParameter::batch_size() const {batch_size20581,700963
inline void WindowDataParameter::set_batch_size(::google::protobuf::uint32 value) {set_batch_size20584,701063
inline bool WindowDataParameter::has_crop_size() const {has_crop_size20590,701245
inline void WindowDataParameter::set_has_crop_size() {set_has_crop_size20593,701349
inline void WindowDataParameter::clear_has_crop_size() {clear_has_crop_size20596,701438
inline void WindowDataParameter::clear_crop_size() {clear_crop_size20599,701530
inline ::google::protobuf::uint32 WindowDataParameter::crop_size() const {crop_size20603,701629
inline void WindowDataParameter::set_crop_size(::google::protobuf::uint32 value) {set_crop_size20606,701727
inline bool WindowDataParameter::has_mirror() const {has_mirror20612,701905
inline void WindowDataParameter::set_has_mirror() {set_has_mirror20615,702006
inline void WindowDataParameter::clear_has_mirror() {clear_has_mirror20618,702092
inline void WindowDataParameter::clear_mirror() {clear_mirror20621,702181
inline bool WindowDataParameter::mirror() const {mirror20625,702274
inline void WindowDataParameter::set_mirror(bool value) {set_mirror20628,702344
inline bool WindowDataParameter::has_fg_threshold() const {has_fg_threshold20634,702496
inline void WindowDataParameter::set_has_fg_threshold() {set_has_fg_threshold20637,702603
inline void WindowDataParameter::clear_has_fg_threshold() {clear_has_fg_threshold20640,702695
inline void WindowDataParameter::clear_fg_threshold() {clear_fg_threshold20643,702790
inline float WindowDataParameter::fg_threshold() const {fg_threshold20647,702900
inline void WindowDataParameter::set_fg_threshold(float value) {set_fg_threshold20650,702983
inline bool WindowDataParameter::has_bg_threshold() const {has_bg_threshold20656,703154
inline void WindowDataParameter::set_has_bg_threshold() {set_has_bg_threshold20659,703261
inline void WindowDataParameter::clear_has_bg_threshold() {clear_has_bg_threshold20662,703353
inline void WindowDataParameter::clear_bg_threshold() {clear_bg_threshold20665,703448
inline float WindowDataParameter::bg_threshold() const {bg_threshold20669,703558
inline void WindowDataParameter::set_bg_threshold(float value) {set_bg_threshold20672,703641
inline bool WindowDataParameter::has_fg_fraction() const {has_fg_fraction20678,703812
inline void WindowDataParameter::set_has_fg_fraction() {set_has_fg_fraction20681,703918
inline void WindowDataParameter::clear_has_fg_fraction() {clear_has_fg_fraction20684,704009
inline void WindowDataParameter::clear_fg_fraction() {clear_fg_fraction20687,704103
inline float WindowDataParameter::fg_fraction() const {fg_fraction20691,704211
inline void WindowDataParameter::set_fg_fraction(float value) {set_fg_fraction20694,704292
inline bool WindowDataParameter::has_context_pad() const {has_context_pad20700,704459
inline void WindowDataParameter::set_has_context_pad() {set_has_context_pad20703,704565
inline void WindowDataParameter::clear_has_context_pad() {clear_has_context_pad20706,704656
inline void WindowDataParameter::clear_context_pad() {clear_context_pad20709,704750
inline ::google::protobuf::uint32 WindowDataParameter::context_pad() const {context_pad20713,704855
inline void WindowDataParameter::set_context_pad(::google::protobuf::uint32 value) {set_context_pad20716,704957
inline bool WindowDataParameter::has_crop_mode() const {has_crop_mode20722,705148
inline void WindowDataParameter::set_has_crop_mode() {set_has_crop_mode20725,705252
inline void WindowDataParameter::clear_has_crop_mode() {clear_has_crop_mode20728,705341
inline void WindowDataParameter::clear_crop_mode() {clear_crop_mode20731,705433
inline const ::std::string& WindowDataParameter::crop_mode() const {crop_mode20737,705606
inline void WindowDataParameter::set_crop_mode(const ::std::string& value) {set_crop_mode20740,705699
inline void WindowDataParameter::set_crop_mode(const char* value) {set_crop_mode20747,705913
inline void WindowDataParameter::set_crop_mode(const char* value, size_t size) {set_crop_mode20754,706118
inline ::std::string* WindowDataParameter::mutable_crop_mode() {mutable_crop_mode20761,706373
inline ::std::string* WindowDataParameter::release_crop_mode() {release_crop_mode20768,706589
inline void WindowDataParameter::set_allocated_crop_mode(::std::string* crop_mode) {set_allocated_crop_mode20778,706878
inline bool WindowDataParameter::has_cache_images() const {has_cache_images20792,707271
inline void WindowDataParameter::set_has_cache_images() {set_has_cache_images20795,707378
inline void WindowDataParameter::clear_has_cache_images() {clear_has_cache_images20798,707470
inline void WindowDataParameter::clear_cache_images() {clear_cache_images20801,707565
inline bool WindowDataParameter::cache_images() const {cache_images20805,707676
inline void WindowDataParameter::set_cache_images(bool value) {set_cache_images20808,707758
inline bool WindowDataParameter::has_root_folder() const {has_root_folder20814,707928
inline void WindowDataParameter::set_has_root_folder() {set_has_root_folder20817,708034
inline void WindowDataParameter::clear_has_root_folder() {clear_has_root_folder20820,708125
inline void WindowDataParameter::clear_root_folder() {clear_root_folder20823,708219
inline const ::std::string& WindowDataParameter::root_folder() const {root_folder20829,708403
inline void WindowDataParameter::set_root_folder(const ::std::string& value) {set_root_folder20832,708500
inline void WindowDataParameter::set_root_folder(const char* value) {set_root_folder20839,708748
inline void WindowDataParameter::set_root_folder(const char* value, size_t size) {set_root_folder20846,708987
inline ::std::string* WindowDataParameter::mutable_root_folder() {mutable_root_folder20853,709276
inline ::std::string* WindowDataParameter::release_root_folder() {release_root_folder20860,709504
inline void WindowDataParameter::set_allocated_root_folder(::std::string* root_folder) {set_allocated_root_folder20870,709851
inline bool SPPParameter::has_pyramid_height() const {has_pyramid_height20888,710386
inline void SPPParameter::set_has_pyramid_height() {set_has_pyramid_height20891,710488
inline void SPPParameter::clear_has_pyramid_height() {clear_has_pyramid_height20894,710575
inline void SPPParameter::clear_pyramid_height() {clear_pyramid_height20897,710665
inline ::google::protobuf::uint32 SPPParameter::pyramid_height() const {pyramid_height20901,710772
inline void SPPParameter::set_pyramid_height(::google::protobuf::uint32 value) {set_pyramid_height20904,710873
inline bool SPPParameter::has_pool() const {has_pool20910,711081
inline void SPPParameter::set_has_pool() {set_has_pool20913,711173
inline void SPPParameter::clear_has_pool() {clear_has_pool20916,711250
inline void SPPParameter::clear_pool() {clear_pool20919,711330
inline ::caffe::SPPParameter_PoolMethod SPPParameter::pool() const {pool20923,711406
inline void SPPParameter::set_pool(::caffe::SPPParameter_PoolMethod value) {set_pool20926,711542
inline bool SPPParameter::has_engine() const {has_engine20933,711787
inline void SPPParameter::set_has_engine() {set_has_engine20936,711881
inline void SPPParameter::clear_has_engine() {clear_has_engine20939,711960
inline void SPPParameter::clear_engine() {clear_engine20942,712042
inline ::caffe::SPPParameter_Engine SPPParameter::engine() const {engine20946,712124
inline void SPPParameter::set_engine(::caffe::SPPParameter_Engine value) {set_engine20949,712256
inline int V1LayerParameter::bottom_size() const {bottom_size20960,712552
inline void V1LayerParameter::clear_bottom() {clear_bottom20963,712630
inline const ::std::string& V1LayerParameter::bottom(int index) const {bottom20966,712698
inline ::std::string* V1LayerParameter::mutable_bottom(int index) {mutable_bottom20969,712801
inline void V1LayerParameter::set_bottom(int index, const ::std::string& value) {set_bottom20972,712904
inline void V1LayerParameter::set_bottom(int index, const char* value) {set_bottom20975,713029
inline void V1LayerParameter::set_bottom(int index, const char* value, size_t size) {set_bottom20978,713145
inline ::std::string* V1LayerParameter::add_bottom() {add_bottom20982,713316
inline void V1LayerParameter::add_bottom(const ::std::string& value) {add_bottom20985,713397
inline void V1LayerParameter::add_bottom(const char* value) {add_bottom20988,713502
inline void V1LayerParameter::add_bottom(const char* value, size_t size) {add_bottom20991,713598
V1LayerParameter::bottom() const {bottom20995,713811
V1LayerParameter::mutable_bottom() {mutable_bottom20999,713927
inline int V1LayerParameter::top_size() const {top_size21004,714014
inline void V1LayerParameter::clear_top() {clear_top21007,714086
inline const ::std::string& V1LayerParameter::top(int index) const {top21010,714148
inline ::std::string* V1LayerParameter::mutable_top(int index) {mutable_top21013,714245
inline void V1LayerParameter::set_top(int index, const ::std::string& value) {set_top21016,714342
inline void V1LayerParameter::set_top(int index, const char* value) {set_top21019,714461
inline void V1LayerParameter::set_top(int index, const char* value, size_t size) {set_top21022,714571
inline ::std::string* V1LayerParameter::add_top() {add_top21026,714736
inline void V1LayerParameter::add_top(const ::std::string& value) {add_top21029,714811
inline void V1LayerParameter::add_top(const char* value) {add_top21032,714910
inline void V1LayerParameter::add_top(const char* value, size_t size) {add_top21035,715000
V1LayerParameter::top() const {top21039,715207
V1LayerParameter::mutable_top() {mutable_top21043,715317
inline bool V1LayerParameter::has_name() const {has_name21048,715399
inline void V1LayerParameter::set_has_name() {set_has_name21051,715495
inline void V1LayerParameter::clear_has_name() {clear_has_name21054,715576
inline void V1LayerParameter::clear_name() {clear_name21057,715660
inline const ::std::string& V1LayerParameter::name() const {name21063,715813
inline void V1LayerParameter::set_name(const ::std::string& value) {set_name21066,715893
inline void V1LayerParameter::set_name(const char* value) {set_name21073,716103
inline void V1LayerParameter::set_name(const char* value, size_t size) {set_name21080,716304
inline ::std::string* V1LayerParameter::mutable_name() {mutable_name21087,716555
inline ::std::string* V1LayerParameter::release_name() {release_name21094,716745
inline void V1LayerParameter::set_allocated_name(::std::string* name) {set_allocated_name21104,717054
inline int V1LayerParameter::include_size() const {include_size21118,717434
inline void V1LayerParameter::clear_include() {clear_include21121,717514
inline const ::caffe::NetStateRule& V1LayerParameter::include(int index) const {include21124,717584
inline ::caffe::NetStateRule* V1LayerParameter::mutable_include(int index) {mutable_include21127,717697
inline ::caffe::NetStateRule* V1LayerParameter::add_include() {add_include21130,717810
V1LayerParameter::include() const {include21134,717977
V1LayerParameter::mutable_include() {mutable_include21138,718104
inline int V1LayerParameter::exclude_size() const {exclude_size21143,718211
inline void V1LayerParameter::clear_exclude() {clear_exclude21146,718291
inline const ::caffe::NetStateRule& V1LayerParameter::exclude(int index) const {exclude21149,718361
inline ::caffe::NetStateRule* V1LayerParameter::mutable_exclude(int index) {mutable_exclude21152,718474
inline ::caffe::NetStateRule* V1LayerParameter::add_exclude() {add_exclude21155,718587
V1LayerParameter::exclude() const {exclude21159,718754
V1LayerParameter::mutable_exclude() {mutable_exclude21163,718881
inline bool V1LayerParameter::has_type() const {has_type21168,718998
inline void V1LayerParameter::set_has_type() {set_has_type21171,719094
inline void V1LayerParameter::clear_has_type() {clear_has_type21174,719175
inline void V1LayerParameter::clear_type() {clear_type21177,719259
inline ::caffe::V1LayerParameter_LayerType V1LayerParameter::type() const {type21181,719339
inline void V1LayerParameter::set_type(::caffe::V1LayerParameter_LayerType value) {set_type21184,719485
inline int V1LayerParameter::blobs_size() const {blobs_size21191,719709
inline void V1LayerParameter::clear_blobs() {clear_blobs21194,719785
inline const ::caffe::BlobProto& V1LayerParameter::blobs(int index) const {blobs21197,719851
inline ::caffe::BlobProto* V1LayerParameter::mutable_blobs(int index) {mutable_blobs21200,719957
inline ::caffe::BlobProto* V1LayerParameter::add_blobs() {add_blobs21203,720063
V1LayerParameter::blobs() const {blobs21207,720220
V1LayerParameter::mutable_blobs() {mutable_blobs21211,720340
inline int V1LayerParameter::param_size() const {param_size21216,720430
inline void V1LayerParameter::clear_param() {clear_param21219,720506
inline const ::std::string& V1LayerParameter::param(int index) const {param21222,720572
inline ::std::string* V1LayerParameter::mutable_param(int index) {mutable_param21225,720673
inline void V1LayerParameter::set_param(int index, const ::std::string& value) {set_param21228,720774
inline void V1LayerParameter::set_param(int index, const char* value) {set_param21231,720897
inline void V1LayerParameter::set_param(int index, const char* value, size_t size) {set_param21234,721011
inline ::std::string* V1LayerParameter::add_param() {add_param21238,721180
inline void V1LayerParameter::add_param(const ::std::string& value) {add_param21241,721259
inline void V1LayerParameter::add_param(const char* value) {add_param21244,721362
inline void V1LayerParameter::add_param(const char* value, size_t size) {add_param21247,721456
V1LayerParameter::param() const {param21251,721667
V1LayerParameter::mutable_param() {mutable_param21255,721781
inline int V1LayerParameter::blob_share_mode_size() const {blob_share_mode_size21260,721911
inline void V1LayerParameter::clear_blob_share_mode() {clear_blob_share_mode21263,722007
inline ::caffe::V1LayerParameter_DimCheckMode V1LayerParameter::blob_share_mode(int index) const {blob_share_mode21266,722093
inline void V1LayerParameter::set_blob_share_mode(int index, ::caffe::V1LayerParameter_DimCheckMode value) {set_blob_share_mode21269,722287
inline void V1LayerParameter::add_blob_share_mode(::caffe::V1LayerParameter_DimCheckMode value) {add_blob_share_mode21273,722501
V1LayerParameter::blob_share_mode() const {blob_share_mode21278,722750
V1LayerParameter::mutable_blob_share_mode() {mutable_blob_share_mode21282,722870
inline int V1LayerParameter::blobs_lr_size() const {blobs_lr_size21287,722979
inline void V1LayerParameter::clear_blobs_lr() {clear_blobs_lr21290,723061
inline float V1LayerParameter::blobs_lr(int index) const {blobs_lr21293,723133
inline void V1LayerParameter::set_blobs_lr(int index, float value) {set_blobs_lr21296,723225
inline void V1LayerParameter::add_blobs_lr(float value) {add_blobs_lr21299,723327
V1LayerParameter::blobs_lr() const {blobs_lr21303,723468
V1LayerParameter::mutable_blobs_lr() {mutable_blobs_lr21307,723578
inline int V1LayerParameter::weight_decay_size() const {weight_decay_size21312,723677
inline void V1LayerParameter::clear_weight_decay() {clear_weight_decay21315,723767
inline float V1LayerParameter::weight_decay(int index) const {weight_decay21318,723847
inline void V1LayerParameter::set_weight_decay(int index, float value) {set_weight_decay21321,723947
inline void V1LayerParameter::add_weight_decay(float value) {add_weight_decay21324,724057
V1LayerParameter::weight_decay() const {weight_decay21328,724206
V1LayerParameter::mutable_weight_decay() {mutable_weight_decay21332,724324
inline int V1LayerParameter::loss_weight_size() const {loss_weight_size21337,724431
inline void V1LayerParameter::clear_loss_weight() {clear_loss_weight21340,724519
inline float V1LayerParameter::loss_weight(int index) const {loss_weight21343,724597
inline void V1LayerParameter::set_loss_weight(int index, float value) {set_loss_weight21346,724695
inline void V1LayerParameter::add_loss_weight(float value) {add_loss_weight21349,724803
V1LayerParameter::loss_weight() const {loss_weight21353,724950
V1LayerParameter::mutable_loss_weight() {mutable_loss_weight21357,725066
inline bool V1LayerParameter::has_accuracy_param() const {has_accuracy_param21362,725193
inline void V1LayerParameter::set_has_accuracy_param() {set_has_accuracy_param21365,725299
inline void V1LayerParameter::clear_has_accuracy_param() {clear_has_accuracy_param21368,725390
inline void V1LayerParameter::clear_accuracy_param() {clear_accuracy_param21371,725484
inline const ::caffe::AccuracyParameter& V1LayerParameter::accuracy_param() const {accuracy_param21375,725656
inline ::caffe::AccuracyParameter* V1LayerParameter::mutable_accuracy_param() {mutable_accuracy_param21378,725833
inline ::caffe::AccuracyParameter* V1LayerParameter::release_accuracy_param() {release_accuracy_param21383,726050
inline void V1LayerParameter::set_allocated_accuracy_param(::caffe::AccuracyParameter* accuracy_param) {set_allocated_accuracy_param21389,726257
inline bool V1LayerParameter::has_argmax_param() const {has_argmax_param21400,726582
inline void V1LayerParameter::set_has_argmax_param() {set_has_argmax_param21403,726686
inline void V1LayerParameter::clear_has_argmax_param() {clear_has_argmax_param21406,726775
inline void V1LayerParameter::clear_argmax_param() {clear_argmax_param21409,726867
inline const ::caffe::ArgMaxParameter& V1LayerParameter::argmax_param() const {argmax_param21413,727029
inline ::caffe::ArgMaxParameter* V1LayerParameter::mutable_argmax_param() {mutable_argmax_param21416,727196
inline ::caffe::ArgMaxParameter* V1LayerParameter::release_argmax_param() {release_argmax_param21421,727399
inline void V1LayerParameter::set_allocated_argmax_param(::caffe::ArgMaxParameter* argmax_param) {set_allocated_argmax_param21427,727594
inline bool V1LayerParameter::has_concat_param() const {has_concat_param21438,727900
inline void V1LayerParameter::set_has_concat_param() {set_has_concat_param21441,728004
inline void V1LayerParameter::clear_has_concat_param() {clear_has_concat_param21444,728093
inline void V1LayerParameter::clear_concat_param() {clear_concat_param21447,728185
inline const ::caffe::ConcatParameter& V1LayerParameter::concat_param() const {concat_param21451,728347
inline ::caffe::ConcatParameter* V1LayerParameter::mutable_concat_param() {mutable_concat_param21454,728514
inline ::caffe::ConcatParameter* V1LayerParameter::release_concat_param() {release_concat_param21459,728717
inline void V1LayerParameter::set_allocated_concat_param(::caffe::ConcatParameter* concat_param) {set_allocated_concat_param21465,728912
inline bool V1LayerParameter::has_contrastive_loss_param() const {has_contrastive_loss_param21476,729238
inline void V1LayerParameter::set_has_contrastive_loss_param() {set_has_contrastive_loss_param21479,729352
inline void V1LayerParameter::clear_has_contrastive_loss_param() {clear_has_contrastive_loss_param21482,729451
inline void V1LayerParameter::clear_contrastive_loss_param() {clear_contrastive_loss_param21485,729553
inline const ::caffe::ContrastiveLossParameter& V1LayerParameter::contrastive_loss_param() const {contrastive_loss_param21489,729764
inline ::caffe::ContrastiveLossParameter* V1LayerParameter::mutable_contrastive_loss_param() {mutable_contrastive_loss_param21492,729980
inline ::caffe::ContrastiveLossParameter* V1LayerParameter::release_contrastive_loss_param() {release_contrastive_loss_param21497,730251
inline void V1LayerParameter::set_allocated_contrastive_loss_param(::caffe::ContrastiveLossParameter* contrastive_loss_param) {set_allocated_contrastive_loss_param21503,730504
inline bool V1LayerParameter::has_convolution_param() const {has_convolution_param21514,730910
inline void V1LayerParameter::set_has_convolution_param() {set_has_convolution_param21517,731019
inline void V1LayerParameter::clear_has_convolution_param() {clear_has_convolution_param21520,731113
inline void V1LayerParameter::clear_convolution_param() {clear_convolution_param21523,731210
inline const ::caffe::ConvolutionParameter& V1LayerParameter::convolution_param() const {convolution_param21527,731397
inline ::caffe::ConvolutionParameter* V1LayerParameter::mutable_convolution_param() {mutable_convolution_param21530,731589
inline ::caffe::ConvolutionParameter* V1LayerParameter::release_convolution_param() {release_convolution_param21535,731827
inline void V1LayerParameter::set_allocated_convolution_param(::caffe::ConvolutionParameter* convolution_param) {set_allocated_convolution_param21541,732052
inline bool V1LayerParameter::has_data_param() const {has_data_param21552,732400
inline void V1LayerParameter::set_has_data_param() {set_has_data_param21555,732502
inline void V1LayerParameter::clear_has_data_param() {clear_has_data_param21558,732589
inline void V1LayerParameter::clear_data_param() {clear_data_param21561,732679
inline const ::caffe::DataParameter& V1LayerParameter::data_param() const {data_param21565,732831
inline ::caffe::DataParameter* V1LayerParameter::mutable_data_param() {mutable_data_param21568,732988
inline ::caffe::DataParameter* V1LayerParameter::release_data_param() {release_data_param21573,733177
inline void V1LayerParameter::set_allocated_data_param(::caffe::DataParameter* data_param) {set_allocated_data_param21579,733360
inline bool V1LayerParameter::has_dropout_param() const {has_dropout_param21590,733651
inline void V1LayerParameter::set_has_dropout_param() {set_has_dropout_param21593,733756
inline void V1LayerParameter::clear_has_dropout_param() {clear_has_dropout_param21596,733846
inline void V1LayerParameter::clear_dropout_param() {clear_dropout_param21599,733939
inline const ::caffe::DropoutParameter& V1LayerParameter::dropout_param() const {dropout_param21603,734106
inline ::caffe::DropoutParameter* V1LayerParameter::mutable_dropout_param() {mutable_dropout_param21606,734278
inline ::caffe::DropoutParameter* V1LayerParameter::release_dropout_param() {release_dropout_param21611,734488
inline void V1LayerParameter::set_allocated_dropout_param(::caffe::DropoutParameter* dropout_param) {set_allocated_dropout_param21617,734689
inline bool V1LayerParameter::has_dummy_data_param() const {has_dummy_data_param21628,735012
inline void V1LayerParameter::set_has_dummy_data_param() {set_has_dummy_data_param21631,735120
inline void V1LayerParameter::clear_has_dummy_data_param() {clear_has_dummy_data_param21634,735213
inline void V1LayerParameter::clear_dummy_data_param() {clear_dummy_data_param21637,735309
inline const ::caffe::DummyDataParameter& V1LayerParameter::dummy_data_param() const {dummy_data_param21641,735490
inline ::caffe::DummyDataParameter* V1LayerParameter::mutable_dummy_data_param() {mutable_dummy_data_param21644,735676
inline ::caffe::DummyDataParameter* V1LayerParameter::release_dummy_data_param() {release_dummy_data_param21649,735905
inline void V1LayerParameter::set_allocated_dummy_data_param(::caffe::DummyDataParameter* dummy_data_param) {set_allocated_dummy_data_param21655,736122
inline bool V1LayerParameter::has_eltwise_param() const {has_eltwise_param21666,736466
inline void V1LayerParameter::set_has_eltwise_param() {set_has_eltwise_param21669,736571
inline void V1LayerParameter::clear_has_eltwise_param() {clear_has_eltwise_param21672,736661
inline void V1LayerParameter::clear_eltwise_param() {clear_eltwise_param21675,736754
inline const ::caffe::EltwiseParameter& V1LayerParameter::eltwise_param() const {eltwise_param21679,736921
inline ::caffe::EltwiseParameter* V1LayerParameter::mutable_eltwise_param() {mutable_eltwise_param21682,737093
inline ::caffe::EltwiseParameter* V1LayerParameter::release_eltwise_param() {release_eltwise_param21687,737303
inline void V1LayerParameter::set_allocated_eltwise_param(::caffe::EltwiseParameter* eltwise_param) {set_allocated_eltwise_param21693,737504
inline bool V1LayerParameter::has_exp_param() const {has_exp_param21704,737814
inline void V1LayerParameter::set_has_exp_param() {set_has_exp_param21707,737915
inline void V1LayerParameter::clear_has_exp_param() {clear_has_exp_param21710,738001
inline void V1LayerParameter::clear_exp_param() {clear_exp_param21713,738090
inline const ::caffe::ExpParameter& V1LayerParameter::exp_param() const {exp_param21717,738237
inline ::caffe::ExpParameter* V1LayerParameter::mutable_exp_param() {mutable_exp_param21720,738389
inline ::caffe::ExpParameter* V1LayerParameter::release_exp_param() {release_exp_param21725,738571
inline void V1LayerParameter::set_allocated_exp_param(::caffe::ExpParameter* exp_param) {set_allocated_exp_param21731,738748
inline bool V1LayerParameter::has_hdf5_data_param() const {has_hdf5_data_param21742,739033
inline void V1LayerParameter::set_has_hdf5_data_param() {set_has_hdf5_data_param21745,739140
inline void V1LayerParameter::clear_has_hdf5_data_param() {clear_has_hdf5_data_param21748,739232
inline void V1LayerParameter::clear_hdf5_data_param() {clear_hdf5_data_param21751,739327
inline const ::caffe::HDF5DataParameter& V1LayerParameter::hdf5_data_param() const {hdf5_data_param21755,739503
inline ::caffe::HDF5DataParameter* V1LayerParameter::mutable_hdf5_data_param() {mutable_hdf5_data_param21758,739684
inline ::caffe::HDF5DataParameter* V1LayerParameter::release_hdf5_data_param() {release_hdf5_data_param21763,739906
inline void V1LayerParameter::set_allocated_hdf5_data_param(::caffe::HDF5DataParameter* hdf5_data_param) {set_allocated_hdf5_data_param21769,740117
inline bool V1LayerParameter::has_hdf5_output_param() const {has_hdf5_output_param21780,740459
inline void V1LayerParameter::set_has_hdf5_output_param() {set_has_hdf5_output_param21783,740568
inline void V1LayerParameter::clear_has_hdf5_output_param() {clear_has_hdf5_output_param21786,740662
inline void V1LayerParameter::clear_hdf5_output_param() {clear_hdf5_output_param21789,740759
inline const ::caffe::HDF5OutputParameter& V1LayerParameter::hdf5_output_param() const {hdf5_output_param21793,740945
inline ::caffe::HDF5OutputParameter* V1LayerParameter::mutable_hdf5_output_param() {mutable_hdf5_output_param21796,741136
inline ::caffe::HDF5OutputParameter* V1LayerParameter::release_hdf5_output_param() {release_hdf5_output_param21801,741372
inline void V1LayerParameter::set_allocated_hdf5_output_param(::caffe::HDF5OutputParameter* hdf5_output_param) {set_allocated_hdf5_output_param21807,741595
inline bool V1LayerParameter::has_hinge_loss_param() const {has_hinge_loss_param21818,741953
inline void V1LayerParameter::set_has_hinge_loss_param() {set_has_hinge_loss_param21821,742061
inline void V1LayerParameter::clear_has_hinge_loss_param() {clear_has_hinge_loss_param21824,742154
inline void V1LayerParameter::clear_hinge_loss_param() {clear_hinge_loss_param21827,742250
inline const ::caffe::HingeLossParameter& V1LayerParameter::hinge_loss_param() const {hinge_loss_param21831,742431
inline ::caffe::HingeLossParameter* V1LayerParameter::mutable_hinge_loss_param() {mutable_hinge_loss_param21834,742617
inline ::caffe::HingeLossParameter* V1LayerParameter::release_hinge_loss_param() {release_hinge_loss_param21839,742846
inline void V1LayerParameter::set_allocated_hinge_loss_param(::caffe::HingeLossParameter* hinge_loss_param) {set_allocated_hinge_loss_param21845,743063
inline bool V1LayerParameter::has_image_data_param() const {has_image_data_param21856,743412
inline void V1LayerParameter::set_has_image_data_param() {set_has_image_data_param21859,743520
inline void V1LayerParameter::clear_has_image_data_param() {clear_has_image_data_param21862,743613
inline void V1LayerParameter::clear_image_data_param() {clear_image_data_param21865,743709
inline const ::caffe::ImageDataParameter& V1LayerParameter::image_data_param() const {image_data_param21869,743890
inline ::caffe::ImageDataParameter* V1LayerParameter::mutable_image_data_param() {mutable_image_data_param21872,744076
inline ::caffe::ImageDataParameter* V1LayerParameter::release_image_data_param() {release_image_data_param21877,744305
inline void V1LayerParameter::set_allocated_image_data_param(::caffe::ImageDataParameter* image_data_param) {set_allocated_image_data_param21883,744522
inline bool V1LayerParameter::has_infogain_loss_param() const {has_infogain_loss_param21894,744877
inline void V1LayerParameter::set_has_infogain_loss_param() {set_has_infogain_loss_param21897,744988
inline void V1LayerParameter::clear_has_infogain_loss_param() {clear_has_infogain_loss_param21900,745084
inline void V1LayerParameter::clear_infogain_loss_param() {clear_infogain_loss_param21903,745183
inline const ::caffe::InfogainLossParameter& V1LayerParameter::infogain_loss_param() const {infogain_loss_param21907,745379
inline ::caffe::InfogainLossParameter* V1LayerParameter::mutable_infogain_loss_param() {mutable_infogain_loss_param21910,745580
inline ::caffe::InfogainLossParameter* V1LayerParameter::release_infogain_loss_param() {release_infogain_loss_param21915,745830
inline void V1LayerParameter::set_allocated_infogain_loss_param(::caffe::InfogainLossParameter* infogain_loss_param) {set_allocated_infogain_loss_param21921,746065
inline bool V1LayerParameter::has_inner_product_param() const {has_inner_product_param21932,746447
inline void V1LayerParameter::set_has_inner_product_param() {set_has_inner_product_param21935,746558
inline void V1LayerParameter::clear_has_inner_product_param() {clear_has_inner_product_param21938,746654
inline void V1LayerParameter::clear_inner_product_param() {clear_inner_product_param21941,746753
inline const ::caffe::InnerProductParameter& V1LayerParameter::inner_product_param() const {inner_product_param21945,746949
inline ::caffe::InnerProductParameter* V1LayerParameter::mutable_inner_product_param() {mutable_inner_product_param21948,747150
inline ::caffe::InnerProductParameter* V1LayerParameter::release_inner_product_param() {release_inner_product_param21953,747400
inline void V1LayerParameter::set_allocated_inner_product_param(::caffe::InnerProductParameter* inner_product_param) {set_allocated_inner_product_param21959,747635
inline bool V1LayerParameter::has_lrn_param() const {has_lrn_param21970,747998
inline void V1LayerParameter::set_has_lrn_param() {set_has_lrn_param21973,748099
inline void V1LayerParameter::clear_has_lrn_param() {clear_has_lrn_param21976,748185
inline void V1LayerParameter::clear_lrn_param() {clear_lrn_param21979,748274
inline const ::caffe::LRNParameter& V1LayerParameter::lrn_param() const {lrn_param21983,748421
inline ::caffe::LRNParameter* V1LayerParameter::mutable_lrn_param() {mutable_lrn_param21986,748573
inline ::caffe::LRNParameter* V1LayerParameter::release_lrn_param() {release_lrn_param21991,748755
inline void V1LayerParameter::set_allocated_lrn_param(::caffe::LRNParameter* lrn_param) {set_allocated_lrn_param21997,748932
inline bool V1LayerParameter::has_memory_data_param() const {has_memory_data_param22008,749221
inline void V1LayerParameter::set_has_memory_data_param() {set_has_memory_data_param22011,749330
inline void V1LayerParameter::clear_has_memory_data_param() {clear_has_memory_data_param22014,749424
inline void V1LayerParameter::clear_memory_data_param() {clear_memory_data_param22017,749521
inline const ::caffe::MemoryDataParameter& V1LayerParameter::memory_data_param() const {memory_data_param22021,749707
inline ::caffe::MemoryDataParameter* V1LayerParameter::mutable_memory_data_param() {mutable_memory_data_param22024,749898
inline ::caffe::MemoryDataParameter* V1LayerParameter::release_memory_data_param() {release_memory_data_param22029,750134
inline void V1LayerParameter::set_allocated_memory_data_param(::caffe::MemoryDataParameter* memory_data_param) {set_allocated_memory_data_param22035,750357
inline bool V1LayerParameter::has_mvn_param() const {has_mvn_param22046,750702
inline void V1LayerParameter::set_has_mvn_param() {set_has_mvn_param22049,750803
inline void V1LayerParameter::clear_has_mvn_param() {clear_has_mvn_param22052,750889
inline void V1LayerParameter::clear_mvn_param() {clear_mvn_param22055,750978
inline const ::caffe::MVNParameter& V1LayerParameter::mvn_param() const {mvn_param22059,751125
inline ::caffe::MVNParameter* V1LayerParameter::mutable_mvn_param() {mutable_mvn_param22062,751277
inline ::caffe::MVNParameter* V1LayerParameter::release_mvn_param() {release_mvn_param22067,751459
inline void V1LayerParameter::set_allocated_mvn_param(::caffe::MVNParameter* mvn_param) {set_allocated_mvn_param22073,751636
inline bool V1LayerParameter::has_pooling_param() const {has_pooling_param22084,751918
inline void V1LayerParameter::set_has_pooling_param() {set_has_pooling_param22087,752023
inline void V1LayerParameter::clear_has_pooling_param() {clear_has_pooling_param22090,752113
inline void V1LayerParameter::clear_pooling_param() {clear_pooling_param22093,752206
inline const ::caffe::PoolingParameter& V1LayerParameter::pooling_param() const {pooling_param22097,752373
inline ::caffe::PoolingParameter* V1LayerParameter::mutable_pooling_param() {mutable_pooling_param22100,752545
inline ::caffe::PoolingParameter* V1LayerParameter::release_pooling_param() {release_pooling_param22105,752755
inline void V1LayerParameter::set_allocated_pooling_param(::caffe::PoolingParameter* pooling_param) {set_allocated_pooling_param22111,752956
inline bool V1LayerParameter::has_power_param() const {has_power_param22122,753270
inline void V1LayerParameter::set_has_power_param() {set_has_power_param22125,753373
inline void V1LayerParameter::clear_has_power_param() {clear_has_power_param22128,753461
inline void V1LayerParameter::clear_power_param() {clear_power_param22131,753552
inline const ::caffe::PowerParameter& V1LayerParameter::power_param() const {power_param22135,753709
inline ::caffe::PowerParameter* V1LayerParameter::mutable_power_param() {mutable_power_param22138,753871
inline ::caffe::PowerParameter* V1LayerParameter::release_power_param() {release_power_param22143,754067
inline void V1LayerParameter::set_allocated_power_param(::caffe::PowerParameter* power_param) {set_allocated_power_param22149,754256
inline bool V1LayerParameter::has_relu_param() const {has_relu_param22160,754550
inline void V1LayerParameter::set_has_relu_param() {set_has_relu_param22163,754652
inline void V1LayerParameter::clear_has_relu_param() {clear_has_relu_param22166,754739
inline void V1LayerParameter::clear_relu_param() {clear_relu_param22169,754829
inline const ::caffe::ReLUParameter& V1LayerParameter::relu_param() const {relu_param22173,754981
inline ::caffe::ReLUParameter* V1LayerParameter::mutable_relu_param() {mutable_relu_param22176,755138
inline ::caffe::ReLUParameter* V1LayerParameter::release_relu_param() {release_relu_param22181,755327
inline void V1LayerParameter::set_allocated_relu_param(::caffe::ReLUParameter* relu_param) {set_allocated_relu_param22187,755510
inline bool V1LayerParameter::has_sigmoid_param() const {has_sigmoid_param22198,755801
inline void V1LayerParameter::set_has_sigmoid_param() {set_has_sigmoid_param22201,755906
inline void V1LayerParameter::clear_has_sigmoid_param() {clear_has_sigmoid_param22204,755996
inline void V1LayerParameter::clear_sigmoid_param() {clear_sigmoid_param22207,756089
inline const ::caffe::SigmoidParameter& V1LayerParameter::sigmoid_param() const {sigmoid_param22211,756256
inline ::caffe::SigmoidParameter* V1LayerParameter::mutable_sigmoid_param() {mutable_sigmoid_param22214,756428
inline ::caffe::SigmoidParameter* V1LayerParameter::release_sigmoid_param() {release_sigmoid_param22219,756638
inline void V1LayerParameter::set_allocated_sigmoid_param(::caffe::SigmoidParameter* sigmoid_param) {set_allocated_sigmoid_param22225,756839
inline bool V1LayerParameter::has_softmax_param() const {has_softmax_param22236,757157
inline void V1LayerParameter::set_has_softmax_param() {set_has_softmax_param22239,757262
inline void V1LayerParameter::clear_has_softmax_param() {clear_has_softmax_param22242,757352
inline void V1LayerParameter::clear_softmax_param() {clear_softmax_param22245,757445
inline const ::caffe::SoftmaxParameter& V1LayerParameter::softmax_param() const {softmax_param22249,757612
inline ::caffe::SoftmaxParameter* V1LayerParameter::mutable_softmax_param() {mutable_softmax_param22252,757784
inline ::caffe::SoftmaxParameter* V1LayerParameter::release_softmax_param() {release_softmax_param22257,757994
inline void V1LayerParameter::set_allocated_softmax_param(::caffe::SoftmaxParameter* softmax_param) {set_allocated_softmax_param22263,758195
inline bool V1LayerParameter::has_slice_param() const {has_slice_param22274,758509
inline void V1LayerParameter::set_has_slice_param() {set_has_slice_param22277,758612
inline void V1LayerParameter::clear_has_slice_param() {clear_has_slice_param22280,758700
inline void V1LayerParameter::clear_slice_param() {clear_slice_param22283,758791
inline const ::caffe::SliceParameter& V1LayerParameter::slice_param() const {slice_param22287,758948
inline ::caffe::SliceParameter* V1LayerParameter::mutable_slice_param() {mutable_slice_param22290,759110
inline ::caffe::SliceParameter* V1LayerParameter::release_slice_param() {release_slice_param22295,759306
inline void V1LayerParameter::set_allocated_slice_param(::caffe::SliceParameter* slice_param) {set_allocated_slice_param22301,759495
inline bool V1LayerParameter::has_tanh_param() const {has_tanh_param22312,759789
inline void V1LayerParameter::set_has_tanh_param() {set_has_tanh_param22315,759891
inline void V1LayerParameter::clear_has_tanh_param() {clear_has_tanh_param22318,759978
inline void V1LayerParameter::clear_tanh_param() {clear_tanh_param22321,760068
inline const ::caffe::TanHParameter& V1LayerParameter::tanh_param() const {tanh_param22325,760220
inline ::caffe::TanHParameter* V1LayerParameter::mutable_tanh_param() {mutable_tanh_param22328,760377
inline ::caffe::TanHParameter* V1LayerParameter::release_tanh_param() {release_tanh_param22333,760566
inline void V1LayerParameter::set_allocated_tanh_param(::caffe::TanHParameter* tanh_param) {set_allocated_tanh_param22339,760749
inline bool V1LayerParameter::has_threshold_param() const {has_threshold_param22350,761044
inline void V1LayerParameter::set_has_threshold_param() {set_has_threshold_param22353,761151
inline void V1LayerParameter::clear_has_threshold_param() {clear_has_threshold_param22356,761243
inline void V1LayerParameter::clear_threshold_param() {clear_threshold_param22359,761338
inline const ::caffe::ThresholdParameter& V1LayerParameter::threshold_param() const {threshold_param22363,761515
inline ::caffe::ThresholdParameter* V1LayerParameter::mutable_threshold_param() {mutable_threshold_param22366,761697
inline ::caffe::ThresholdParameter* V1LayerParameter::release_threshold_param() {release_threshold_param22371,761921
inline void V1LayerParameter::set_allocated_threshold_param(::caffe::ThresholdParameter* threshold_param) {set_allocated_threshold_param22377,762134
inline bool V1LayerParameter::has_window_data_param() const {has_window_data_param22388,762477
inline void V1LayerParameter::set_has_window_data_param() {set_has_window_data_param22391,762586
inline void V1LayerParameter::clear_has_window_data_param() {clear_has_window_data_param22394,762680
inline void V1LayerParameter::clear_window_data_param() {clear_window_data_param22397,762777
inline const ::caffe::WindowDataParameter& V1LayerParameter::window_data_param() const {window_data_param22401,762963
inline ::caffe::WindowDataParameter* V1LayerParameter::mutable_window_data_param() {mutable_window_data_param22404,763154
inline ::caffe::WindowDataParameter* V1LayerParameter::release_window_data_param() {release_window_data_param22409,763390
inline void V1LayerParameter::set_allocated_window_data_param(::caffe::WindowDataParameter* window_data_param) {set_allocated_window_data_param22415,763613
inline bool V1LayerParameter::has_transform_param() const {has_transform_param22426,763975
inline void V1LayerParameter::set_has_transform_param() {set_has_transform_param22429,764082
inline void V1LayerParameter::clear_has_transform_param() {clear_has_transform_param22432,764174
inline void V1LayerParameter::clear_transform_param() {clear_transform_param22435,764269
inline const ::caffe::TransformationParameter& V1LayerParameter::transform_param() const {transform_param22439,764451
inline ::caffe::TransformationParameter* V1LayerParameter::mutable_transform_param() {mutable_transform_param22442,764638
inline ::caffe::TransformationParameter* V1LayerParameter::release_transform_param() {release_transform_param22447,764872
inline void V1LayerParameter::set_allocated_transform_param(::caffe::TransformationParameter* transform_param) {set_allocated_transform_param22453,765095
inline bool V1LayerParameter::has_loss_param() const {has_loss_param22464,765430
inline void V1LayerParameter::set_has_loss_param() {set_has_loss_param22467,765532
inline void V1LayerParameter::clear_has_loss_param() {clear_has_loss_param22470,765619
inline void V1LayerParameter::clear_loss_param() {clear_loss_param22473,765709
inline const ::caffe::LossParameter& V1LayerParameter::loss_param() const {loss_param22477,765861
inline ::caffe::LossParameter* V1LayerParameter::mutable_loss_param() {mutable_loss_param22480,766018
inline ::caffe::LossParameter* V1LayerParameter::release_loss_param() {release_loss_param22485,766207
inline void V1LayerParameter::set_allocated_loss_param(::caffe::LossParameter* loss_param) {set_allocated_loss_param22491,766390
inline bool V1LayerParameter::has_layer() const {has_layer22502,766672
inline void V1LayerParameter::set_has_layer() {set_has_layer22505,766769
inline void V1LayerParameter::clear_has_layer() {clear_has_layer22508,766851
inline void V1LayerParameter::clear_layer() {clear_layer22511,766936
inline const ::caffe::V0LayerParameter& V1LayerParameter::layer() const {layer22515,767071
inline ::caffe::V0LayerParameter* V1LayerParameter::mutable_layer() {mutable_layer22518,767211
inline ::caffe::V0LayerParameter* V1LayerParameter::release_layer() {release_layer22523,767381
inline void V1LayerParameter::set_allocated_layer(::caffe::V0LayerParameter* layer) {set_allocated_layer22529,767550
inline bool V0LayerParameter::has_name() const {has_name22544,767870
inline void V0LayerParameter::set_has_name() {set_has_name22547,767966
inline void V0LayerParameter::clear_has_name() {clear_has_name22550,768047
inline void V0LayerParameter::clear_name() {clear_name22553,768131
inline const ::std::string& V0LayerParameter::name() const {name22559,768284
inline void V0LayerParameter::set_name(const ::std::string& value) {set_name22562,768364
inline void V0LayerParameter::set_name(const char* value) {set_name22569,768574
inline void V0LayerParameter::set_name(const char* value, size_t size) {set_name22576,768775
inline ::std::string* V0LayerParameter::mutable_name() {mutable_name22583,769026
inline ::std::string* V0LayerParameter::release_name() {release_name22590,769216
inline void V0LayerParameter::set_allocated_name(::std::string* name) {set_allocated_name22600,769525
inline bool V0LayerParameter::has_type() const {has_type22614,769888
inline void V0LayerParameter::set_has_type() {set_has_type22617,769984
inline void V0LayerParameter::clear_has_type() {clear_has_type22620,770065
inline void V0LayerParameter::clear_type() {clear_type22623,770149
inline const ::std::string& V0LayerParameter::type() const {type22629,770302
inline void V0LayerParameter::set_type(const ::std::string& value) {set_type22632,770382
inline void V0LayerParameter::set_type(const char* value) {set_type22639,770592
inline void V0LayerParameter::set_type(const char* value, size_t size) {set_type22646,770793
inline ::std::string* V0LayerParameter::mutable_type() {mutable_type22653,771044
inline ::std::string* V0LayerParameter::release_type() {release_type22660,771234
inline void V0LayerParameter::set_allocated_type(::std::string* type) {set_allocated_type22670,771543
inline bool V0LayerParameter::has_num_output() const {has_num_output22684,771912
inline void V0LayerParameter::set_has_num_output() {set_has_num_output22687,772014
inline void V0LayerParameter::clear_has_num_output() {clear_has_num_output22690,772101
inline void V0LayerParameter::clear_num_output() {clear_num_output22693,772191
inline ::google::protobuf::uint32 V0LayerParameter::num_output() const {num_output22697,772290
inline void V0LayerParameter::set_num_output(::google::protobuf::uint32 value) {set_num_output22700,772387
inline bool V0LayerParameter::has_biasterm() const {has_biasterm22706,772566
inline void V0LayerParameter::set_has_biasterm() {set_has_biasterm22709,772666
inline void V0LayerParameter::clear_has_biasterm() {clear_has_biasterm22712,772751
inline void V0LayerParameter::clear_biasterm() {clear_biasterm22715,772839
inline bool V0LayerParameter::biasterm() const {biasterm22719,772934
inline void V0LayerParameter::set_biasterm(bool value) {set_biasterm22722,773005
inline bool V0LayerParameter::has_weight_filler() const {has_weight_filler22728,773162
inline void V0LayerParameter::set_has_weight_filler() {set_has_weight_filler22731,773267
inline void V0LayerParameter::clear_has_weight_filler() {clear_has_weight_filler22734,773357
inline void V0LayerParameter::clear_weight_filler() {clear_weight_filler22737,773450
inline const ::caffe::FillerParameter& V0LayerParameter::weight_filler() const {weight_filler22741,773616
inline ::caffe::FillerParameter* V0LayerParameter::mutable_weight_filler() {mutable_weight_filler22744,773787
inline ::caffe::FillerParameter* V0LayerParameter::release_weight_filler() {release_weight_filler22749,773995
inline void V0LayerParameter::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {set_allocated_weight_filler22755,774194
inline bool V0LayerParameter::has_bias_filler() const {has_bias_filler22766,774507
inline void V0LayerParameter::set_has_bias_filler() {set_has_bias_filler22769,774610
inline void V0LayerParameter::clear_has_bias_filler() {clear_has_bias_filler22772,774698
inline void V0LayerParameter::clear_bias_filler() {clear_bias_filler22775,774789
inline const ::caffe::FillerParameter& V0LayerParameter::bias_filler() const {bias_filler22779,774947
inline ::caffe::FillerParameter* V0LayerParameter::mutable_bias_filler() {mutable_bias_filler22782,775110
inline ::caffe::FillerParameter* V0LayerParameter::release_bias_filler() {release_bias_filler22787,775308
inline void V0LayerParameter::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {set_allocated_bias_filler22793,775499
inline bool V0LayerParameter::has_pad() const {has_pad22804,775786
inline void V0LayerParameter::set_has_pad() {set_has_pad22807,775881
inline void V0LayerParameter::clear_has_pad() {clear_has_pad22810,775961
inline void V0LayerParameter::clear_pad() {clear_pad22813,776044
inline ::google::protobuf::uint32 V0LayerParameter::pad() const {pad22817,776122
inline void V0LayerParameter::set_pad(::google::protobuf::uint32 value) {set_pad22820,776205
inline bool V0LayerParameter::has_kernelsize() const {has_kernelsize22826,776350
inline void V0LayerParameter::set_has_kernelsize() {set_has_kernelsize22829,776452
inline void V0LayerParameter::clear_has_kernelsize() {clear_has_kernelsize22832,776539
inline void V0LayerParameter::clear_kernelsize() {clear_kernelsize22835,776629
inline ::google::protobuf::uint32 V0LayerParameter::kernelsize() const {kernelsize22839,776728
inline void V0LayerParameter::set_kernelsize(::google::protobuf::uint32 value) {set_kernelsize22842,776825
inline bool V0LayerParameter::has_group() const {has_group22848,777000
inline void V0LayerParameter::set_has_group() {set_has_group22851,777097
inline void V0LayerParameter::clear_has_group() {clear_has_group22854,777179
inline void V0LayerParameter::clear_group() {clear_group22857,777264
inline ::google::protobuf::uint32 V0LayerParameter::group() const {group22861,777348
inline void V0LayerParameter::set_group(::google::protobuf::uint32 value) {set_group22864,777435
inline bool V0LayerParameter::has_stride() const {has_stride22870,777597
inline void V0LayerParameter::set_has_stride() {set_has_stride22873,777695
inline void V0LayerParameter::clear_has_stride() {clear_has_stride22876,777778
inline void V0LayerParameter::clear_stride() {clear_stride22879,777864
inline ::google::protobuf::uint32 V0LayerParameter::stride() const {stride22883,777951
inline void V0LayerParameter::set_stride(::google::protobuf::uint32 value) {set_stride22886,778040
inline bool V0LayerParameter::has_pool() const {has_pool22892,778233
inline void V0LayerParameter::set_has_pool() {set_has_pool22895,778329
inline void V0LayerParameter::clear_has_pool() {clear_has_pool22898,778410
inline void V0LayerParameter::clear_pool() {clear_pool22901,778494
inline ::caffe::V0LayerParameter_PoolMethod V0LayerParameter::pool() const {pool22905,778574
inline void V0LayerParameter::set_pool(::caffe::V0LayerParameter_PoolMethod value) {set_pool22908,778722
inline bool V0LayerParameter::has_dropout_ratio() const {has_dropout_ratio22915,778962
inline void V0LayerParameter::set_has_dropout_ratio() {set_has_dropout_ratio22918,779067
inline void V0LayerParameter::clear_has_dropout_ratio() {clear_has_dropout_ratio22921,779157
inline void V0LayerParameter::clear_dropout_ratio() {clear_dropout_ratio22924,779250
inline float V0LayerParameter::dropout_ratio() const {dropout_ratio22928,779360
inline void V0LayerParameter::set_dropout_ratio(float value) {set_dropout_ratio22931,779442
inline bool V0LayerParameter::has_local_size() const {has_local_size22937,779611
inline void V0LayerParameter::set_has_local_size() {set_has_local_size22940,779713
inline void V0LayerParameter::clear_has_local_size() {clear_has_local_size22943,779800
inline void V0LayerParameter::clear_local_size() {clear_local_size22946,779890
inline ::google::protobuf::uint32 V0LayerParameter::local_size() const {local_size22950,779989
inline void V0LayerParameter::set_local_size(::google::protobuf::uint32 value) {set_local_size22953,780086
inline bool V0LayerParameter::has_alpha() const {has_alpha22959,780261
inline void V0LayerParameter::set_has_alpha() {set_has_alpha22962,780358
inline void V0LayerParameter::clear_has_alpha() {clear_has_alpha22965,780440
inline void V0LayerParameter::clear_alpha() {clear_alpha22968,780525
inline float V0LayerParameter::alpha() const {alpha22972,780608
inline void V0LayerParameter::set_alpha(float value) {set_alpha22975,780674
inline bool V0LayerParameter::has_beta() const {has_beta22981,780815
inline void V0LayerParameter::set_has_beta() {set_has_beta22984,780911
inline void V0LayerParameter::clear_has_beta() {clear_has_beta22987,780992
inline void V0LayerParameter::clear_beta() {clear_beta22990,781076
inline float V0LayerParameter::beta() const {beta22994,781160
inline void V0LayerParameter::set_beta(float value) {set_beta22997,781224
inline bool V0LayerParameter::has_k() const {has_k23003,781356
inline void V0LayerParameter::set_has_k() {set_has_k23006,781449
inline void V0LayerParameter::clear_has_k() {clear_has_k23009,781527
inline void V0LayerParameter::clear_k() {clear_k23012,781608
inline float V0LayerParameter::k() const {k23016,781679
inline void V0LayerParameter::set_k(float value) {set_k23019,781737
inline bool V0LayerParameter::has_source() const {has_source23025,781852
inline void V0LayerParameter::set_has_source() {set_has_source23028,781950
inline void V0LayerParameter::clear_has_source() {clear_has_source23031,782033
inline void V0LayerParameter::clear_source() {clear_source23034,782119
inline const ::std::string& V0LayerParameter::source() const {source23040,782280
inline void V0LayerParameter::set_source(const ::std::string& value) {set_source23043,782364
inline void V0LayerParameter::set_source(const char* value) {set_source23050,782584
inline void V0LayerParameter::set_source(const char* value, size_t size) {set_source23057,782795
inline ::std::string* V0LayerParameter::mutable_source() {mutable_source23064,783056
inline ::std::string* V0LayerParameter::release_source() {release_source23071,783256
inline void V0LayerParameter::set_allocated_source(::std::string* source) {set_allocated_source23081,783575
inline bool V0LayerParameter::has_scale() const {has_scale23095,783973
inline void V0LayerParameter::set_has_scale() {set_has_scale23098,784070
inline void V0LayerParameter::clear_has_scale() {clear_has_scale23101,784152
inline void V0LayerParameter::clear_scale() {clear_scale23104,784237
inline float V0LayerParameter::scale() const {scale23108,784320
inline void V0LayerParameter::set_scale(float value) {set_scale23111,784386
inline bool V0LayerParameter::has_meanfile() const {has_meanfile23117,784515
inline void V0LayerParameter::set_has_meanfile() {set_has_meanfile23120,784615
inline void V0LayerParameter::clear_has_meanfile() {clear_has_meanfile23123,784700
inline void V0LayerParameter::clear_meanfile() {clear_meanfile23126,784788
inline const ::std::string& V0LayerParameter::meanfile() const {meanfile23132,784957
inline void V0LayerParameter::set_meanfile(const ::std::string& value) {set_meanfile23135,785045
inline void V0LayerParameter::set_meanfile(const char* value) {set_meanfile23142,785275
inline void V0LayerParameter::set_meanfile(const char* value, size_t size) {set_meanfile23149,785496
inline ::std::string* V0LayerParameter::mutable_meanfile() {mutable_meanfile23156,785767
inline ::std::string* V0LayerParameter::release_meanfile() {release_meanfile23163,785977
inline void V0LayerParameter::set_allocated_meanfile(::std::string* meanfile) {set_allocated_meanfile23173,786306
inline bool V0LayerParameter::has_batchsize() const {has_batchsize23187,786715
inline void V0LayerParameter::set_has_batchsize() {set_has_batchsize23190,786816
inline void V0LayerParameter::clear_has_batchsize() {clear_has_batchsize23193,786902
inline void V0LayerParameter::clear_batchsize() {clear_batchsize23196,786991
inline ::google::protobuf::uint32 V0LayerParameter::batchsize() const {batchsize23200,787087
inline void V0LayerParameter::set_batchsize(::google::protobuf::uint32 value) {set_batchsize23203,787182
inline bool V0LayerParameter::has_cropsize() const {has_cropsize23209,787358
inline void V0LayerParameter::set_has_cropsize() {set_has_cropsize23212,787458
inline void V0LayerParameter::clear_has_cropsize() {clear_has_cropsize23215,787543
inline void V0LayerParameter::clear_cropsize() {clear_cropsize23218,787631
inline ::google::protobuf::uint32 V0LayerParameter::cropsize() const {cropsize23222,787724
inline void V0LayerParameter::set_cropsize(::google::protobuf::uint32 value) {set_cropsize23225,787817
inline bool V0LayerParameter::has_mirror() const {has_mirror23231,787990
inline void V0LayerParameter::set_has_mirror() {set_has_mirror23234,788088
inline void V0LayerParameter::clear_has_mirror() {clear_has_mirror23237,788171
inline void V0LayerParameter::clear_mirror() {clear_mirror23240,788257
inline bool V0LayerParameter::mirror() const {mirror23244,788347
inline void V0LayerParameter::set_mirror(bool value) {set_mirror23247,788414
inline int V0LayerParameter::blobs_size() const {blobs_size23253,788552
inline void V0LayerParameter::clear_blobs() {clear_blobs23256,788628
inline const ::caffe::BlobProto& V0LayerParameter::blobs(int index) const {blobs23259,788694
inline ::caffe::BlobProto* V0LayerParameter::mutable_blobs(int index) {mutable_blobs23262,788800
inline ::caffe::BlobProto* V0LayerParameter::add_blobs() {add_blobs23265,788906
V0LayerParameter::blobs() const {blobs23269,789063
V0LayerParameter::mutable_blobs() {mutable_blobs23273,789183
inline int V0LayerParameter::blobs_lr_size() const {blobs_lr_size23278,789273
inline void V0LayerParameter::clear_blobs_lr() {clear_blobs_lr23281,789355
inline float V0LayerParameter::blobs_lr(int index) const {blobs_lr23284,789427
inline void V0LayerParameter::set_blobs_lr(int index, float value) {set_blobs_lr23287,789519
inline void V0LayerParameter::add_blobs_lr(float value) {add_blobs_lr23290,789621
V0LayerParameter::blobs_lr() const {blobs_lr23294,789762
V0LayerParameter::mutable_blobs_lr() {mutable_blobs_lr23298,789872
inline int V0LayerParameter::weight_decay_size() const {weight_decay_size23303,789972
inline void V0LayerParameter::clear_weight_decay() {clear_weight_decay23306,790062
inline float V0LayerParameter::weight_decay(int index) const {weight_decay23309,790142
inline void V0LayerParameter::set_weight_decay(int index, float value) {set_weight_decay23312,790242
inline void V0LayerParameter::add_weight_decay(float value) {add_weight_decay23315,790352
V0LayerParameter::weight_decay() const {weight_decay23319,790501
V0LayerParameter::mutable_weight_decay() {mutable_weight_decay23323,790619
inline bool V0LayerParameter::has_rand_skip() const {has_rand_skip23328,790739
inline void V0LayerParameter::set_has_rand_skip() {set_has_rand_skip23331,790840
inline void V0LayerParameter::clear_has_rand_skip() {clear_has_rand_skip23334,790926
inline void V0LayerParameter::clear_rand_skip() {clear_rand_skip23337,791015
inline ::google::protobuf::uint32 V0LayerParameter::rand_skip() const {rand_skip23341,791111
inline void V0LayerParameter::set_rand_skip(::google::protobuf::uint32 value) {set_rand_skip23344,791206
inline bool V0LayerParameter::has_det_fg_threshold() const {has_det_fg_threshold23350,791391
inline void V0LayerParameter::set_has_det_fg_threshold() {set_has_det_fg_threshold23353,791499
inline void V0LayerParameter::clear_has_det_fg_threshold() {clear_has_det_fg_threshold23356,791592
inline void V0LayerParameter::clear_det_fg_threshold() {clear_det_fg_threshold23359,791688
inline float V0LayerParameter::det_fg_threshold() const {det_fg_threshold23363,791807
inline void V0LayerParameter::set_det_fg_threshold(float value) {set_det_fg_threshold23366,791895
inline bool V0LayerParameter::has_det_bg_threshold() const {has_det_bg_threshold23372,792080
inline void V0LayerParameter::set_has_det_bg_threshold() {set_has_det_bg_threshold23375,792188
inline void V0LayerParameter::clear_has_det_bg_threshold() {clear_has_det_bg_threshold23378,792281
inline void V0LayerParameter::clear_det_bg_threshold() {clear_det_bg_threshold23381,792377
inline float V0LayerParameter::det_bg_threshold() const {det_bg_threshold23385,792496
inline void V0LayerParameter::set_det_bg_threshold(float value) {set_det_bg_threshold23388,792584
inline bool V0LayerParameter::has_det_fg_fraction() const {has_det_fg_fraction23394,792769
inline void V0LayerParameter::set_has_det_fg_fraction() {set_has_det_fg_fraction23397,792876
inline void V0LayerParameter::clear_has_det_fg_fraction() {clear_has_det_fg_fraction23400,792968
inline void V0LayerParameter::clear_det_fg_fraction() {clear_det_fg_fraction23403,793063
inline float V0LayerParameter::det_fg_fraction() const {det_fg_fraction23407,793180
inline void V0LayerParameter::set_det_fg_fraction(float value) {set_det_fg_fraction23410,793266
inline bool V0LayerParameter::has_det_context_pad() const {has_det_context_pad23416,793446
inline void V0LayerParameter::set_has_det_context_pad() {set_has_det_context_pad23419,793553
inline void V0LayerParameter::clear_has_det_context_pad() {clear_has_det_context_pad23422,793645
inline void V0LayerParameter::clear_det_context_pad() {clear_det_context_pad23425,793740
inline ::google::protobuf::uint32 V0LayerParameter::det_context_pad() const {det_context_pad23429,793854
inline void V0LayerParameter::set_det_context_pad(::google::protobuf::uint32 value) {set_det_context_pad23432,793961
inline bool V0LayerParameter::has_det_crop_mode() const {has_det_crop_mode23438,794165
inline void V0LayerParameter::set_has_det_crop_mode() {set_has_det_crop_mode23441,794270
inline void V0LayerParameter::clear_has_det_crop_mode() {clear_has_det_crop_mode23444,794360
inline void V0LayerParameter::clear_det_crop_mode() {clear_det_crop_mode23447,794453
inline const ::std::string& V0LayerParameter::det_crop_mode() const {det_crop_mode23453,794647
inline void V0LayerParameter::set_det_crop_mode(const ::std::string& value) {set_det_crop_mode23456,794745
inline void V0LayerParameter::set_det_crop_mode(const char* value) {set_det_crop_mode23463,794980
inline void V0LayerParameter::set_det_crop_mode(const char* value, size_t size) {set_det_crop_mode23470,795206
inline ::std::string* V0LayerParameter::mutable_det_crop_mode() {mutable_det_crop_mode23477,795482
inline ::std::string* V0LayerParameter::release_det_crop_mode() {release_det_crop_mode23484,795723
inline void V0LayerParameter::set_allocated_det_crop_mode(::std::string* det_crop_mode) {set_allocated_det_crop_mode23494,796037
inline bool V0LayerParameter::has_new_num() const {has_new_num23508,796467
inline void V0LayerParameter::set_has_new_num() {set_has_new_num23511,796566
inline void V0LayerParameter::clear_has_new_num() {clear_has_new_num23514,796650
inline void V0LayerParameter::clear_new_num() {clear_new_num23517,796737
inline ::google::protobuf::int32 V0LayerParameter::new_num() const {new_num23521,796826
inline void V0LayerParameter::set_new_num(::google::protobuf::int32 value) {set_new_num23524,796916
inline bool V0LayerParameter::has_new_channels() const {has_new_channels23530,797088
inline void V0LayerParameter::set_has_new_channels() {set_has_new_channels23533,797192
inline void V0LayerParameter::clear_has_new_channels() {clear_has_new_channels23536,797281
inline void V0LayerParameter::clear_new_channels() {clear_new_channels23539,797373
inline ::google::protobuf::int32 V0LayerParameter::new_channels() const {new_channels23543,797477
inline void V0LayerParameter::set_new_channels(::google::protobuf::int32 value) {set_new_channels23546,797577
inline bool V0LayerParameter::has_new_height() const {has_new_height23552,797762
inline void V0LayerParameter::set_has_new_height() {set_has_new_height23555,797864
inline void V0LayerParameter::clear_has_new_height() {clear_has_new_height23558,797951
inline void V0LayerParameter::clear_new_height() {clear_new_height23561,798041
inline ::google::protobuf::int32 V0LayerParameter::new_height() const {new_height23565,798139
inline void V0LayerParameter::set_new_height(::google::protobuf::int32 value) {set_new_height23568,798235
inline bool V0LayerParameter::has_new_width() const {has_new_width23574,798413
inline void V0LayerParameter::set_has_new_width() {set_has_new_width23577,798514
inline void V0LayerParameter::clear_has_new_width() {clear_has_new_width23580,798600
inline void V0LayerParameter::clear_new_width() {clear_new_width23583,798689
inline ::google::protobuf::int32 V0LayerParameter::new_width() const {new_width23587,798784
inline void V0LayerParameter::set_new_width(::google::protobuf::int32 value) {set_new_width23590,798878
inline bool V0LayerParameter::has_shuffle_images() const {has_shuffle_images23596,799061
inline void V0LayerParameter::set_has_shuffle_images() {set_has_shuffle_images23599,799167
inline void V0LayerParameter::clear_has_shuffle_images() {clear_has_shuffle_images23602,799258
inline void V0LayerParameter::clear_shuffle_images() {clear_shuffle_images23605,799352
inline bool V0LayerParameter::shuffle_images() const {shuffle_images23609,799466
inline void V0LayerParameter::set_shuffle_images(bool value) {set_shuffle_images23612,799549
inline bool V0LayerParameter::has_concat_dim() const {has_concat_dim23618,799720
inline void V0LayerParameter::set_has_concat_dim() {set_has_concat_dim23621,799822
inline void V0LayerParameter::clear_has_concat_dim() {clear_has_concat_dim23624,799909
inline void V0LayerParameter::clear_concat_dim() {clear_concat_dim23627,799999
inline ::google::protobuf::uint32 V0LayerParameter::concat_dim() const {concat_dim23631,800098
inline void V0LayerParameter::set_concat_dim(::google::protobuf::uint32 value) {set_concat_dim23634,800195
inline bool V0LayerParameter::has_hdf5_output_param() const {has_hdf5_output_param23640,800391
inline void V0LayerParameter::set_has_hdf5_output_param() {set_has_hdf5_output_param23643,800500
inline void V0LayerParameter::clear_has_hdf5_output_param() {clear_has_hdf5_output_param23646,800594
inline void V0LayerParameter::clear_hdf5_output_param() {clear_hdf5_output_param23649,800691
inline const ::caffe::HDF5OutputParameter& V0LayerParameter::hdf5_output_param() const {hdf5_output_param23653,800877
inline ::caffe::HDF5OutputParameter* V0LayerParameter::mutable_hdf5_output_param() {mutable_hdf5_output_param23656,801068
inline ::caffe::HDF5OutputParameter* V0LayerParameter::release_hdf5_output_param() {release_hdf5_output_param23661,801304
inline void V0LayerParameter::set_allocated_hdf5_output_param(::caffe::HDF5OutputParameter* hdf5_output_param) {set_allocated_hdf5_output_param23667,801527
inline bool PReLUParameter::has_filler() const {has_filler23682,801962
inline void PReLUParameter::set_has_filler() {set_has_filler23685,802058
inline void PReLUParameter::clear_has_filler() {clear_has_filler23688,802139
inline void PReLUParameter::clear_filler() {clear_filler23691,802223
inline const ::caffe::FillerParameter& PReLUParameter::filler() const {filler23695,802359
inline ::caffe::FillerParameter* PReLUParameter::mutable_filler() {mutable_filler23698,802500
inline ::caffe::FillerParameter* PReLUParameter::release_filler() {release_filler23703,802671
inline void PReLUParameter::set_allocated_filler(::caffe::FillerParameter* filler) {set_allocated_filler23709,802840
inline bool PReLUParameter::has_channel_shared() const {has_channel_shared23720,803098
inline void PReLUParameter::set_has_channel_shared() {set_has_channel_shared23723,803202
inline void PReLUParameter::clear_has_channel_shared() {clear_has_channel_shared23726,803291
inline void PReLUParameter::clear_channel_shared() {clear_channel_shared23729,803383
inline bool PReLUParameter::channel_shared() const {channel_shared23733,803495
inline void PReLUParameter::set_channel_shared(bool value) {set_channel_shared23736,803576
inline bool QuantizationParameter::has_round_method() const {has_round_method23746,803882
inline void QuantizationParameter::set_has_round_method() {set_has_round_method23749,803991
inline void QuantizationParameter::clear_has_round_method() {clear_has_round_method23752,804085
inline void QuantizationParameter::clear_round_method() {clear_round_method23755,804182
inline ::caffe::QuantizationParameter_RoundMethod QuantizationParameter::round_method() const {round_method23759,804291
inline void QuantizationParameter::set_round_method(::caffe::QuantizationParameter_RoundMethod value) {set_round_method23762,804472
inline bool QuantizationParameter::has_round_strategy() const {has_round_strategy23769,804799
inline void QuantizationParameter::set_has_round_strategy() {set_has_round_strategy23772,804910
inline void QuantizationParameter::clear_has_round_strategy() {clear_has_round_strategy23775,805006
inline void QuantizationParameter::clear_round_strategy() {clear_round_strategy23778,805105
inline ::caffe::QuantizationParameter_RoundStrategy QuantizationParameter::round_strategy() const {round_strategy23782,805220
inline void QuantizationParameter::set_round_strategy(::caffe::QuantizationParameter_RoundStrategy value) {set_round_strategy23785,805409
inline bool QuantizationParameter::has_bit_width() const {has_bit_width23792,805693
inline void QuantizationParameter::set_has_bit_width() {set_has_bit_width23795,805799
inline void QuantizationParameter::clear_has_bit_width() {clear_has_bit_width23798,805890
inline void QuantizationParameter::clear_bit_width() {clear_bit_width23801,805984
inline ::google::protobuf::int32 QuantizationParameter::bit_width() const {bit_width23805,806084
inline void QuantizationParameter::set_bit_width(::google::protobuf::int32 value) {set_bit_width23808,806183
inline int QuantizationParameter::range_size() const {range_size23814,806360
inline void QuantizationParameter::clear_range() {clear_range23817,806441
inline float QuantizationParameter::range(int index) const {range23820,806512
inline void QuantizationParameter::set_range(int index, float value) {set_range23823,806603
inline void QuantizationParameter::add_range(float value) {add_range23826,806704
QuantizationParameter::range() const {range23830,806844
QuantizationParameter::mutable_range() {mutable_range23834,806953
namespace google {google23844,807098
namespace protobuf {protobuf23845,807117
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::FillerParameter_VarianceNorm>() {GetEnumDescriptor23848,807151
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SolverParameter_SnapshotFormat>() {GetEnumDescriptor23852,807317
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SolverParameter_SolverMode>() {GetEnumDescriptor23856,807487
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SolverParameter_SolverType>() {GetEnumDescriptor23860,807649
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ParamSpec_DimCheckMode>() {GetEnumDescriptor23864,807811
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::LossParameter_NormalizationMode>() {GetEnumDescriptor23868,807965
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ConvolutionParameter_Engine>() {GetEnumDescriptor23872,808137
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::DataParameter_DB>() {GetEnumDescriptor23876,808301
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::EltwiseParameter_EltwiseOp>() {GetEnumDescriptor23880,808443
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::HingeLossParameter_Norm>() {GetEnumDescriptor23884,808605
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::LRNParameter_NormRegion>() {GetEnumDescriptor23888,808761
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::LRNParameter_Engine>() {GetEnumDescriptor23892,808917
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::PoolingParameter_PoolMethod>() {GetEnumDescriptor23896,809065
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::PoolingParameter_Engine>() {GetEnumDescriptor23900,809229
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ReductionParameter_ReductionOp>() {GetEnumDescriptor23904,809385
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ReLUParameter_Engine>() {GetEnumDescriptor23908,809555
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SigmoidParameter_Engine>() {GetEnumDescriptor23912,809705
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SoftmaxParameter_Engine>() {GetEnumDescriptor23916,809861
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::TanHParameter_Engine>() {GetEnumDescriptor23920,810017
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SPPParameter_PoolMethod>() {GetEnumDescriptor23924,810167
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SPPParameter_Engine>() {GetEnumDescriptor23928,810323
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::V1LayerParameter_LayerType>() {GetEnumDescriptor23932,810471
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::V1LayerParameter_DimCheckMode>() {GetEnumDescriptor23936,810633
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::V0LayerParameter_PoolMethod>() {GetEnumDescriptor23940,810801
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::QuantizationParameter_RoundMethod>() {GetEnumDescriptor23944,810965
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::QuantizationParameter_RoundStrategy>() {GetEnumDescriptor23948,811141
inline const EnumDescriptor* GetEnumDescriptor< ::caffe::Phase>() {GetEnumDescriptor23952,811321

data/mnist/get_mnist.sh,0

data/ilsvrc12/get_ilsvrc_aux.sh,0

data/cifar10/get_cifar10.sh,0

examples/mnist/train_lenet.sh,0

examples/mnist/train_lenet_consolidated.sh,0

examples/mnist/train_lenet_rmsprop.sh,0

examples/mnist/train_mnist_autoencoder_adagrad.sh,0

examples/mnist/train_mnist_autoencoder_nesterov.sh,0

examples/mnist/convert_mnist_data.cpp,254
uint32_t swap_endian(uint32_t val) {swap_endian38,1015
void convert_dataset(const char* image_filename, const char* label_filename,convert_dataset43,1156
int main(int argc, char** argv) {main113,3402
int main(int argc, char** argv) {main143,4342

examples/mnist/train_mnist_autoencoder.sh,0

examples/mnist/create_mnist.sh,0

examples/mnist/train_lenet_docker.sh,0

examples/mnist/train_mnist_autoencoder_adadelta.sh,0

examples/mnist/train_lenet_adam.sh,0

examples/pycaffe/caffenet.py,273
def conv_relu(bottom, ks, nout, stride=1, pad=0, group=1):conv_relu7,167
def fc_relu(bottom, nout):fc_relu12,407
def max_pool(bottom, ks, stride=1):max_pool16,525
def caffenet(lmdb, batch_size=256, include_acc=False):caffenet19,642
def make_net():make_net47,1814

examples/pycaffe/tools.py,528
class SimpleTransformer:SimpleTransformer4,21
    def __init__(self, mean=[128, 128, 128]):__init__11,161
    def set_mean(self, mean):set_mean15,286
    def set_scale(self, scale):set_scale21,423
    def preprocess(self, im):preprocess27,537
    def deprocess(self, im):deprocess41,866
class CaffeSolver:CaffeSolver53,1111
    def __init__(self, testnet_prototxt_path="testnet.prototxt",__init__62,1387
    def add_from_file(self, filepath):add_from_file101,2675
    def write(self, filepath):write113,3082

examples/pycaffe/layers/pyloss.py,281
class EuclideanLossLayer(caffe.Layer):EuclideanLossLayer5,34
    def setup(self, bottom, top):setup11,242
    def reshape(self, bottom, top):reshape16,401
    def forward(self, bottom, top):forward25,758
    def backward(self, top, propagate_down, bottom):backward29,921

examples/pycaffe/layers/pascal_multilabel_datalayers.py,711
class PascalMultilabelDataLayerSync(caffe.Layer):PascalMultilabelDataLayerSync20,285
    def setup(self, bottom, top):setup27,443
    def forward(self, bottom, top):forward55,1378
    def reshape(self, bottom, top):reshape67,1763
    def backward(self, top, propagate_down, bottom):backward74,1943
class BatchLoader(object):BatchLoader81,2080
    def __init__(self, params, result):__init__90,2347
    def load_next_image(self):load_next_image106,3010
def load_pascal_annotation(index, pascal_root):load_pascal_annotation140,4226
    def get_data_from_tag(node, tag):get_data_from_tag161,5054
def check_params(params):check_params196,6229
def print_info(name, params):print_info208,6585

examples/web_demo/exifutil.py,185
ORIENTATIONS = {   # used in apply_orientationORIENTATIONS8,97
def open_oriented_im(im_path):open_oriented_im19,395
def apply_orientation(im, orientation):apply_orientation35,869

examples/web_demo/templates/index.html,0

examples/web_demo/app.py,906
REPO_DIRNAME = os.path.abspath(os.path.dirname(os.path.abspath(__file__)) + '/../..')REPO_DIRNAME20,294
UPLOAD_FOLDER = '/tmp/caffe_demos_uploads'UPLOAD_FOLDER21,380
ALLOWED_IMAGE_EXTENSIONS = set(['png', 'bmp', 'jpg', 'jpe', 'jpeg', 'gif'])ALLOWED_IMAGE_EXTENSIONS22,423
app = flask.Flask(__name__)app25,530
def index():index29,576
def classify_url():classify_url34,701
def classify_upload():classify_upload57,1498
def embed_image_html(image):embed_image_html82,2391
def allowed_file(filename):allowed_file92,2782
class ImagenetClassifier(object):ImagenetClassifier99,2922
    default_args = {default_args100,2956
    def __init__(self, model_def_file, pretrained_model_file, mean_file,__init__119,3805
    def classify_image(self, image):classify_image148,5044
def start_tornado(app, port=5000):start_tornado184,6445
def start_from_terminal(app):start_from_terminal192,6707

examples/siamese/train_mnist_siamese.sh,0

examples/siamese/convert_mnist_siamese_data.cpp,341
uint32_t swap_endian(uint32_t val) {swap_endian22,589
void read_image(std::ifstream* image_file, std::ifstream* label_file,read_image27,730
void convert_dataset(const char* image_filename, const char* label_filename,convert_dataset36,1044
int main(int argc, char** argv) {main109,3633
int main(int argc, char** argv) {main126,4233

examples/siamese/create_mnist_siamese.sh,0

examples/cifar10/create_cifar10.sh,0

examples/cifar10/train_full.sh,0

examples/cifar10/train_full_sigmoid_bn.sh,0

examples/cifar10/train_full_sigmoid.sh,0

examples/cifar10/train_quick.sh,0

examples/cifar10/convert_cifar_data.cpp,455
const int kCIFARSize = 32;kCIFARSize26,646
const int kCIFARImageNBytes = 3072;kCIFARImageNBytes27,673
const int kCIFARBatchSize = 10000;kCIFARBatchSize28,709
const int kCIFARTrainBatches = 5;kCIFARTrainBatches29,744
void read_image(std::ifstream* file, int* label, char* buffer) {read_image31,779
void convert_dataset(const string& input_folder, const string& output_folder,convert_dataset39,970
int main(int argc, char** argv) {main93,2972

examples/imagenet/resume_training.sh,0

examples/imagenet/make_imagenet_mean.sh,0

examples/imagenet/train_caffenet.sh,0

examples/imagenet/create_imagenet.sh,0

examples/cpp_classification/classification.cpp,1047
typedef std::pair<string, float> Prediction;Prediction19,439
class Classifier {Classifier21,485
  shared_ptr<Net<float> > net_;net_41,1011
  cv::Size input_geometry_;input_geometry_42,1043
  int num_channels_;num_channels_43,1071
  cv::Mat mean_;mean_44,1092
  std::vector<string> labels_;labels_45,1109
Classifier::Classifier(const string& model_file,Classifier48,1144
static bool PairCompare(const std::pair<float, int>& lhs,PairCompare86,2455
static std::vector<int> Argmax(const std::vector<float>& v, int N) {Argmax92,2666
std::vector<Prediction> Classifier::Classify(const cv::Mat& img, int N) {Classify105,3100
void Classifier::SetMean(const string& mean_file) {SetMean120,3546
std::vector<float> Classifier::Predict(const cv::Mat& img) {Predict150,4628
void Classifier::WrapInputLayer(std::vector<cv::Mat>* input_channels) {WrapInputLayer176,5581
void Classifier::Preprocess(const cv::Mat& img,Preprocess189,6029
int main(int argc, char** argv) {main229,7501
int main(int argc, char** argv) {main262,8529

examples/finetune_flickr_style/assemble_data.py,1922
MISSING_IMAGE_SHA1 = '6a92790b1c2a301c6e7ddef645dca1f53ea97ac2'MISSING_IMAGE_SHA116,350
example_dirname = os.path.abspath(os.path.dirname(__file__))example_dirname18,415
caffe_dirname = os.path.abspath(os.path.join(example_dirname, '../..'))caffe_dirname19,476
training_dirname = os.path.join(caffe_dirname, 'data/flickr_style')training_dirname20,548
def download_image(args_tuple):download_image23,618
    parser = argparse.ArgumentParser(parser40,1194
        description='Download a subset of Flickr Style to a directory')description41,1232
        help="random seed")help44,1374
        help="number of images to use (-1 for all [default])",help47,1475
        help="num workers used to download images. -x uses (all - x) cores [-1 default]."help51,1618
        help="if set to a positive value, only sample images from the first number of labels."help55,1786
    args = parser.parse_args()args58,1888
    csv_filename = os.path.join(example_dirname, 'flickr_style.csv.gz')csv_filename62,1997
    df = pd.read_csv(csv_filename, index_col=0, compression='gzip')df63,2069
    df = df.iloc[np.random.permutation(df.shape[0])]df64,2137
        df = df.loc[df['label'] < args.labels]df66,2214
        df = df.iloc[:args.images]df68,2315
        training_dirname = os.path.join(caffe_dirname, 'data/flickr_style')training_dirname72,2441
    images_dirname = os.path.join(training_dirname, 'images')images_dirname73,2517
    num_workers = args.workersnum_workers81,2797
        num_workers = multiprocessing.cpu_count() + num_workersnum_workers83,2853
    pool = multiprocessing.Pool(processes=num_workers)pool86,3013
    map_args = zip(df['image_url'], df['image_filename'])map_args87,3068
    results = pool.map(download_image, map_args)results88,3126
    df = df[results]df91,3251
        filename = os.path.join(training_dirname, '{}.txt'.format(split))filename94,3353

matlab/demo/classification_demo.m,150
function [scores, maxlabel] = classification_demo(im, use_gpu)classification_demo1,0
function crops_data = prepare_image(im)prepare_image117,4096

matlab/hdf5creation/demo.m,0

matlab/hdf5creation/store2hdf5.m,117
function [curr_dat_sz, curr_lab_sz] = store2hdf5(filename, data, labels, create, startloc, chunksz)  store2hdf51,0

matlab/+caffe/get_solver.m,57
function solver = get_solver(solver_file)get_solver1,0

matlab/+caffe/set_device.m,46
function set_device(device_id)set_device1,0

matlab/+caffe/+test/test_net.m,0

matlab/+caffe/+test/test_solver.m,0

matlab/+caffe/+test/test_io.m,0

matlab/+caffe/set_mode_gpu.m,41
function set_mode_gpu()set_mode_gpu1,0

matlab/+caffe/run_tests.m,45
function results = run_tests()run_tests1,0

matlab/+caffe/get_net.m,45
function net = get_net(varargin)get_net1,0

matlab/+caffe/Solver.m,0

matlab/+caffe/Layer.m,0

matlab/+caffe/Net.m,0

matlab/+caffe/version.m,45
function version_str = version()version1,0

matlab/+caffe/set_mode_cpu.m,41
function set_mode_cpu()set_mode_cpu1,0

matlab/+caffe/Blob.m,0

matlab/+caffe/private/caffe_.cpp,3452
#define MEX_ARGS MEX_ARGS20,624
inline void mxCHECK(bool expr, const char* msg) {mxCHECK25,801
inline void mxERROR(const char* msg) { mexErrMsgTxt(msg); }mxERROR30,895
void mxCHECK_FILE_EXIST(const char* file) {mxCHECK_FILE_EXIST33,1000
static vector<shared_ptr<Solver<float> > > solvers_;solvers_45,1269
static vector<shared_ptr<Net<float> > > nets_;nets_46,1322
static double init_key = static_cast<double>(caffe_rng_rand());init_key48,1441
enum WhichMemory { DATA, DIFF };WhichMemory54,1654
enum WhichMemory { DATA, DIFF };DATA54,1654
enum WhichMemory { DATA, DIFF };DIFF54,1654
static void mx_mat_to_blob(const mxArray* mx_mat, Blob<float>* blob,mx_mat_to_blob57,1730
static mxArray* blob_to_mx_mat(const Blob<float>* blob,blob_to_mx_mat79,2527
static mxArray* int_vec_to_mx_vec(const vector<int>& int_vec) {int_vec_to_mx_vec110,3617
static mxArray* str_vec_to_mx_strcell(const vector<std::string>& str_vec) {str_vec_to_mx_strcell120,3973
static T* handle_to_ptr(const mxArray* mx_handle) {handle_to_ptr136,4633
static mxArray* create_handle_vec(int ptr_num) {create_handle_vec148,5203
static void setup_handle(const T* ptr, int index, mxArray* mx_handle_vec) {setup_handle156,5516
static mxArray* ptr_to_handle(const T* ptr) {ptr_to_handle166,5962
static mxArray* ptr_vec_to_handle_vec(const vector<shared_ptr<T> >& ptr_vec) {ptr_vec_to_handle_vec174,6201
static void get_solver(MEX_ARGS) {get_solver186,6662
static void delete_solver(MEX_ARGS) {delete_solver201,7221
static void solver_get_attr(MEX_ARGS) {solver_get_attr212,7660
static void solver_get_iter(MEX_ARGS) {solver_get_iter228,8358
static void solver_restore(MEX_ARGS) {solver_restore236,8672
static void solver_solve(MEX_ARGS) {solver_solve247,9099
static void solver_step(MEX_ARGS) {solver_step255,9365
static void get_net(MEX_ARGS) {get_net264,9703
static void delete_net(MEX_ARGS) {delete_net286,10414
static void net_get_attr(MEX_ARGS) {net_get_attr297,10805
static void net_forward(MEX_ARGS) {net_forward322,11928
static void net_backward(MEX_ARGS) {net_backward330,12179
static void net_copy_from(MEX_ARGS) {net_copy_from338,12439
static void net_reshape(MEX_ARGS) {net_reshape349,12854
static void net_save(MEX_ARGS) {net_save357,13103
static void layer_get_attr(MEX_ARGS) {layer_get_attr369,13542
static void layer_get_type(MEX_ARGS) {layer_get_type383,14102
static void blob_get_shape(MEX_ARGS) {blob_get_shape391,14386
static void blob_reshape(MEX_ARGS) {blob_reshape406,14991
static void blob_get_data(MEX_ARGS) {blob_get_data422,15642
static void blob_set_data(MEX_ARGS) {blob_set_data430,15926
static void blob_get_diff(MEX_ARGS) {blob_get_diff438,16232
static void blob_set_diff(MEX_ARGS) {blob_set_diff446,16516
static void set_mode_cpu(MEX_ARGS) {set_mode_cpu454,16814
static void set_mode_gpu(MEX_ARGS) {set_mode_gpu460,16973
static void set_device(MEX_ARGS) {set_device466,17141
static void get_init_key(MEX_ARGS) {get_init_key474,17394
static void reset(MEX_ARGS) {reset480,17559
static void read_mean(MEX_ARGS) {read_mean492,17989
static void write_mean(MEX_ARGS) {write_mean507,18552
static void version(MEX_ARGS) {version530,19354
struct handler_registry {handler_registry539,19619
  string cmd;cmd540,19645
  void (*func)(MEX_ARGS);func541,19659
static handler_registry handlers[] = {handlers544,19689
void mexFunction(MEX_ARGS) {mexFunction585,21358

matlab/+caffe/private/CHECK_FILE_EXIST.m,57
function CHECK_FILE_EXIST(filename)CHECK_FILE_EXIST1,0

matlab/+caffe/private/CHECK.m,42
function CHECK(expr, error_msg)CHECK1,0

matlab/+caffe/private/is_valid_handle.m,59
function valid = is_valid_handle(hObj)is_valid_handle1,0

matlab/+caffe/reset_all.m,35
function reset_all()reset_all1,0

matlab/+caffe/io.m,0

try_qnn.sh,0

scripts/upload_model_to_gist.sh,0

scripts/travis/install-deps.sh,0

scripts/travis/install-python-deps.sh,0

scripts/travis/configure.sh,0

scripts/travis/configure-make.sh,20
LINE () {LINE3,30

scripts/travis/test.sh,0

scripts/travis/build.sh,0

scripts/travis/defaults.sh,0

scripts/travis/configure-cmake.sh,0

scripts/travis/setup-venv.sh,0

scripts/cpp_lint.py,13048
_ERROR_CATEGORIES = [_ERROR_CATEGORIES146,5887
_DEFAULT_FILTERS = [_DEFAULT_FILTERS218,7836
_CPP_HEADERS = frozenset([_CPP_HEADERS229,8148
_CHECK_MACROS = [_CHECK_MACROS367,10499
_CHECK_REPLACEMENT = dict([(m, {}) for m in _CHECK_MACROS])_CHECK_REPLACEMENT376,10758
_ALT_TOKEN_REPLACEMENT = {_ALT_TOKEN_REPLACEMENT401,12085
_ALT_TOKEN_REPLACEMENT_PATTERN = re.compile(_ALT_TOKEN_REPLACEMENT_PATTERN420,12610
_C_SYS_HEADER = 1_C_SYS_HEADER426,12830
_CPP_SYS_HEADER = 2_CPP_SYS_HEADER427,12848
_LIKELY_MY_HEADER = 3_LIKELY_MY_HEADER428,12868
_POSSIBLE_MY_HEADER = 4_POSSIBLE_MY_HEADER429,12890
_OTHER_HEADER = 5_OTHER_HEADER430,12914
_NO_ASM = 0       # Outside of inline assembly block_NO_ASM433,12992
_INSIDE_ASM = 1   # Inside inline assembly block_INSIDE_ASM434,13045
_END_ASM = 2      # Last line of inline assembly block_END_ASM435,13094
_BLOCK_ASM = 3    # The whole block is an inline assembly block_BLOCK_ASM436,13149
_MATCH_ASM = re.compile(r'^\s*(?:asm|_asm|__asm|__asm__)'_MATCH_ASM439,13247
_regexp_compile_cache = {}_regexp_compile_cache444,13402
_RE_SUPPRESSION = re.compile(r'\bNOLINT(_NEXT_LINE)?\b(\([^)]*\))?')_RE_SUPPRESSION447,13500
_error_suppressions = {}_error_suppressions451,13703
_RE_COPYRIGHT = re.compile(r'Copyright')_RE_COPYRIGHT454,13748
_root = None_root458,13886
_line_length = 80_line_length462,13972
_valid_extensions = set(['cc', 'h', 'cpp', 'hpp', 'cu', 'cuh'])_valid_extensions466,14067
def ParseNolintSuppressions(filename, raw_line, linenum, error):ParseNolintSuppressions468,14132
def ResetNolintSuppressions():ResetNolintSuppressions499,15300
def IsErrorSuppressedByNolint(category, linenum):IsErrorSuppressedByNolint504,15415
def Match(pattern, s):Match519,15968
def ReplaceAll(pattern, rep, s):ReplaceAll529,16409
def Search(pattern, s):Search547,16916
class _IncludeState(dict):_IncludeState554,17175
  _INITIAL_SECTION = 0_INITIAL_SECTION567,17769
  _MY_H_SECTION = 1_MY_H_SECTION568,17792
  _C_SECTION = 2_C_SECTION569,17812
  _CPP_SECTION = 3_CPP_SECTION570,17829
  _OTHER_H_SECTION = 4_OTHER_H_SECTION571,17848
  _TYPE_NAMES = {_TYPE_NAMES573,17872
  _SECTION_NAMES = {_SECTION_NAMES580,18136
  def __init__(self):__init__588,18404
  def ResetSection(self):ResetSection592,18475
  def SetLastHeader(self, header_path):SetLastHeader598,18647
  def CanonicalizeAlphabeticalOrder(self, header_path):CanonicalizeAlphabeticalOrder601,18724
  def IsInAlphabeticalOrder(self, clean_lines, linenum, header_path):IsInAlphabeticalOrder616,19199
  def CheckNextIncludeOrder(self, header_type):CheckNextIncludeOrder637,20020
class _CppLintState(object):_CppLintState691,21725
  def __init__(self):__init__694,21793
  def SetOutputFormat(self, output_format):SetOutputFormat707,22329
  def SetVerboseLevel(self, level):SetVerboseLevel711,22458
  def SetCountingStyle(self, counting_style):SetCountingStyle717,22673
  def SetFilters(self, filters):SetFilters721,22801
  def ResetErrorCounts(self):ResetErrorCounts746,23751
  def IncrementErrorCount(self, category):IncrementErrorCount751,23898
  def PrintErrorCounts(self):PrintErrorCounts761,24285
_cpplint_state = _CppLintState()_cpplint_state768,24615
def _OutputFormat():_OutputFormat771,24650
def _SetOutputFormat(output_format):_SetOutputFormat776,24752
def _VerboseLevel():_VerboseLevel781,24880
def _SetVerboseLevel(level):_SetVerboseLevel786,24989
def _SetCountingStyle(level):_SetCountingStyle791,25138
def _Filters():_Filters796,25255
def _SetFilters(filters):_SetFilters801,25369
class _FunctionState(object):_FunctionState814,25718
  _NORMAL_TRIGGER = 250  # for --v=0, 500 for --v=1, etc._NORMAL_TRIGGER817,25823
  _TEST_TRIGGER = 400    # about 50% more than _NORMAL_TRIGGER._TEST_TRIGGER818,25881
  def __init__(self):__init__820,25946
  def Begin(self, function_name):Begin825,26062
  def Count(self):Count835,26318
  def Check(self, error, filename, linenum):Check840,26446
  def End(self):End865,27445
class _IncludeError(Exception):_IncludeError870,27535
class FileInfo:FileInfo875,27638
  def __init__(self, filename):__init__882,27808
  def FullName(self):FullName885,27871
  def RepositoryName(self):RepositoryName889,27996
  def Split(self):Split934,30022
  def BaseName(self):BaseName948,30416
  def Extension(self):Extension952,30546
  def NoExtension(self):NoExtension956,30657
  def IsSource(self):IsSource960,30767
def _ShouldPrintError(category, confidence, linenum):_ShouldPrintError965,30896
def Error(filename, linenum, category, confidence, message):Error992,31766
_RE_PATTERN_CLEANSE_LINE_ESCAPES = re.compile(_RE_PATTERN_CLEANSE_LINE_ESCAPES1028,33433
_RE_PATTERN_CLEANSE_LINE_DOUBLE_QUOTES = re.compile(r'"[^"]*"')_RE_PATTERN_CLEANSE_LINE_DOUBLE_QUOTES1031,33597
_RE_PATTERN_CLEANSE_LINE_SINGLE_QUOTES = re.compile(r"'.'")_RE_PATTERN_CLEANSE_LINE_SINGLE_QUOTES1033,33735
_RE_PATTERN_CLEANSE_LINE_C_COMMENTS = re.compile(_RE_PATTERN_CLEANSE_LINE_C_COMMENTS1042,34253
def IsCppString(line):IsCppString1049,34422
def CleanseRawStrings(raw_lines):CleanseRawStrings1066,34914
def FindNextMultiLineCommentStart(lines, lineix):FindNextMultiLineCommentStart1127,36692
def FindNextMultiLineCommentEnd(lines, lineix):FindNextMultiLineCommentEnd1138,37056
def RemoveMultiLineCommentsFromRange(lines, begin, end):RemoveMultiLineCommentsFromRange1147,37290
def RemoveMultiLineComments(filename, lines, error):RemoveMultiLineComments1155,37592
def CleanseComments(line):CleanseComments1171,38204
class CleansedLines(object):CleansedLines1187,38620
  def __init__(self, lines):__init__1196,38992
  def NumLines(self):NumLines1208,39468
  def _CollapseStrings(elided):_CollapseStrings1213,39584
def FindEndOfExpressionInLine(line, startpos, depth, startchar, endchar):FindEndOfExpressionInLine1234,40334
def CloseExpression(clean_lines, linenum, pos):CloseExpression1258,41022
def FindStartOfExpressionInLine(line, endpos, depth, startchar, endchar):FindStartOfExpressionInLine1304,42541
def ReverseCloseExpression(clean_lines, linenum, pos):ReverseCloseExpression1331,43339
def CheckForCopyright(filename, lines, error):CheckForCopyright1376,44836
def GetHeaderGuardCPPVariable(filename):GetHeaderGuardCPPVariable1388,45284
def CheckForHeaderGuard(filename, lines, error):CheckForHeaderGuard1412,45999
def CheckForBadCharacters(filename, lines, error):CheckForBadCharacters1487,48471
def CheckForNewlineAtEOF(filename, lines, error):CheckForNewlineAtEOF1512,49441
def CheckForMultilineCommentsAndStrings(filename, clean_lines, linenum, error):CheckForMultilineCommentsAndStrings1530,50167
caffe_alt_function_list = (caffe_alt_function_list1568,51899
def CheckCaffeAlternatives(filename, clean_lines, linenum, error):CheckCaffeAlternatives1576,52129
def CheckCaffeDataLayerSetUp(filename, clean_lines, linenum, error):CheckCaffeDataLayerSetUp1599,53078
c_random_function_list = (c_random_function_list1638,54961
def CheckCaffeRandom(filename, clean_lines, linenum, error):CheckCaffeRandom1644,55038
threading_list = (threading_list1670,56249
def CheckPosixThreading(filename, clean_lines, linenum, error):CheckPosixThreading1685,56634
def CheckVlogArguments(filename, clean_lines, linenum, error):CheckVlogArguments1712,57875
_RE_PATTERN_INVALID_INCREMENT = re.compile(_RE_PATTERN_INVALID_INCREMENT1733,58706
def CheckInvalidIncrement(filename, clean_lines, linenum, error):CheckInvalidIncrement1737,58780
class _BlockInfo(object):_BlockInfo1759,59566
  def __init__(self, seen_open_brace):__init__1762,59651
  def CheckBegin(self, filename, clean_lines, linenum, error):CheckBegin1767,59794
  def CheckEnd(self, filename, clean_lines, linenum, error):CheckEnd1782,60364
class _ClassInfo(_BlockInfo):_ClassInfo1796,60800
  def __init__(self, name, class_or_struct, clean_lines, linenum):__init__1799,60873
  def CheckBegin(self, filename, clean_lines, linenum, error):CheckBegin1833,61967
  def CheckEnd(self, filename, clean_lines, linenum, error):CheckEnd1838,62151
class _NamespaceInfo(_BlockInfo):_NamespaceInfo1852,62791
  def __init__(self, name, linenum):__init__1855,62872
  def CheckEnd(self, filename, clean_lines, linenum, error):CheckEnd1860,63010
class _PreprocessorInfo(object):_PreprocessorInfo1906,65057
  def __init__(self, stack_before_if):__init__1909,65160
class _NestingState(object):_NestingState1920,65440
  def __init__(self):__init__1923,65518
  def SeenOpenBrace(self):SeenOpenBrace1935,65911
  def InNamespaceBody(self):InNamespaceBody1944,66213
  def UpdatePreprocessor(self, line):UpdatePreprocessor1952,66472
  def Update(self, filename, clean_lines, linenum, error):Update2008,68727
  def InnermostClass(self):InnermostClass2164,75059
  def CheckCompletedBlocks(self, filename, error):CheckCompletedBlocks2176,75393
def CheckForNonStandardConstructs(filename, clean_lines, linenum,CheckForNonStandardConstructs2198,76323
def CheckSpacingForFunctionCall(filename, line, linenum, error):CheckSpacingForFunctionCall2305,81181
def IsBlankLine(line):IsBlankLine2373,84447
def CheckForFunctionLengths(filename, clean_lines, linenum,CheckForFunctionLengths2388,84740
_RE_PATTERN_TODO = re.compile(r'^//(\s*)TODO(\(.+?\))?:?(\s|$)?')_RE_PATTERN_TODO2458,87614
def CheckComment(comment, filename, linenum, error):CheckComment2461,87682
def CheckAccess(filename, clean_lines, linenum, nesting_state, error):CheckAccess2490,88831
def FindNextMatchingAngleBracket(clean_lines, linenum, init_suffix):FindNextMatchingAngleBracket2521,90126
def FindPreviousMatchingAngleBracket(clean_lines, linenum, init_prefix):FindPreviousMatchingAngleBracket2590,92579
def CheckSpacing(filename, clean_lines, linenum, nesting_state, error):CheckSpacing2647,94299
def CheckSectionSpacing(filename, clean_lines, class_info, linenum, error):CheckSectionSpacing2995,110607
def GetPreviousNonBlankLine(clean_lines, linenum):GetPreviousNonBlankLine3050,113085
def CheckBraces(filename, clean_lines, linenum, error):CheckBraces3073,113863
def CheckEmptyBlockBody(filename, clean_lines, linenum, error):CheckEmptyBlockBody3247,121274
def CheckCheck(filename, clean_lines, linenum, error):CheckCheck3282,122800
def CheckAltTokens(filename, clean_lines, linenum, error):CheckAltTokens3409,127543
def GetLineWidth(line):GetLineWidth3441,128728
def CheckStyle(filename, clean_lines, linenum, file_extension, nesting_state,CheckStyle3463,129306
_RE_PATTERN_INCLUDE_NEW_STYLE = re.compile(r'#include +"[^/]+\.h"')_RE_PATTERN_INCLUDE_NEW_STYLE3570,134224
_RE_PATTERN_INCLUDE = re.compile(r'^\s*#\s*include\s*([<"])([^>"]*)[>"].*$')_RE_PATTERN_INCLUDE3571,134292
_RE_FIRST_COMPONENT = re.compile(r'^[^-_.]+')_RE_FIRST_COMPONENT3577,134687
def _DropCommonSuffixes(filename):_DropCommonSuffixes3580,134735
def _IsTestFilename(filename):_IsTestFilename3607,135547
def _ClassifyInclude(fileinfo, include, is_system):_ClassifyInclude3624,135945
def CheckIncludeLine(filename, clean_lines, linenum, include_state, error):CheckIncludeLine3684,138113
def _GetTextInside(text, start_pattern):_GetTextInside3756,141169
_RE_PATTERN_IDENT = r'[_a-zA-Z]\w*'  # =~ [[:alpha:]][[:alnum:]]*_RE_PATTERN_IDENT3821,143870
_RE_PATTERN_TYPE = (_RE_PATTERN_TYPE3822,143936
_RE_PATTERN_REF_PARAM = re.compile(_RE_PATTERN_REF_PARAM3828,144161
_RE_PATTERN_CONST_REF_PARAM = (_RE_PATTERN_CONST_REF_PARAM3833,144458
def CheckLanguage(filename, clean_lines, linenum, file_extension,CheckLanguage3838,144621
def CheckForNonConstReference(filename, clean_lines, linenum,CheckForNonConstReference4138,158480
def CheckCStyleCast(filename, linenum, line, raw_line, cast_type, pattern,CheckCStyleCast4251,163410
_HEADERS_CONTAINING_TEMPLATES = (_HEADERS_CONTAINING_TEMPLATES4345,166836
_RE_PATTERN_STRING = re.compile(r'\bstring\b')_RE_PATTERN_STRING4382,168395
_re_pattern_algorithm_header = []_re_pattern_algorithm_header4384,168443
_re_pattern_templates = []_re_pattern_templates4394,168817
def FilesBelongToSameModule(filename_cc, filename_h):FilesBelongToSameModule4403,169071
def UpdateIncludeState(filename, include_state, io=codecs):UpdateIncludeState4458,171288
def CheckForIncludeWhatYouUse(filename, clean_lines, include_state, error,CheckForIncludeWhatYouUse4487,172239
_RE_PATTERN_EXPLICIT_MAKEPAIR = re.compile(r'\bmake_pair\s*<')_RE_PATTERN_EXPLICIT_MAKEPAIR4580,176315
def CheckMakePairUsesDeduction(filename, clean_lines, linenum, error):CheckMakePairUsesDeduction4583,176380
def ProcessLine(filename, file_extension, clean_lines, line,ProcessLine4604,177227
def ProcessFileData(filename, file_extension, lines, error,ProcessFileData4648,179708
def ProcessFile(filename, vlevel, extra_check_functions=[]):ProcessFile4693,181585
def PrintUsage(message):PrintUsage4761,184285
def PrintCategories():PrintCategories4774,184553
def ParseArguments(args):ParseArguments4783,184808
def main():main4853,186878

scripts/download_model_from_gist.sh,0

scripts/deploy_docs.sh,0

scripts/gather_examples.sh,0

scripts/copy_notebook.py,295
filename = sys.argv[1]filename15,384
output_filename = sys.argv[2]output_filename16,407
content = json.load(open(filename))content17,437
    yaml_frontmatter = ['---']yaml_frontmatter20,562
            key = 'title'key23,680
                val = os.path.basename(filename)val25,732

scripts/download_model_binary.py,366
required_keys = ['caffemodel', 'caffemodel_url', 'sha1']required_keys11,129
def reporthook(count, block_size, total_size):reporthook14,188
def parse_readme_frontmatter(dirname):parse_readme_frontmatter31,793
def valid_dirname(dirname):valid_dirname42,1209
    def model_checks_out(filename=model_filename, sha1=frontmatter['sha1']):model_checks_out63,1943

scripts/build_docs.sh,0

scripts/split_caffe_proto.py,240
script_path = os.path.dirname(os.path.realpath(__file__))script_path7,68
r = re.compile(r'(?://.*\n)*message ([^ ]*) \{\n(?: .*\n|\n)*\}')r10,187
caffe_proto_fn = os.path.join(caffe_proto_fn24,581
        fn = os.path.join(fn31,759

QNN/caffe-quantization/src/quantization_layer.hpp,955
#define CAFFE_QUANTIZATION_LAYER_HPP_CAFFE_QUANTIZATION_LAYER_HPP_2,38
namespace caffe {caffe12,226
class QuantizationLayer : public NeuronLayer<Dtype> {QuantizationLayer20,425
	explicit QuantizationLayer(const LayerParameter& param)QuantizationLayer29,791
	virtual ~QuantizationLayer() {}~QuantizationLayer31,881
	virtual inline const char* type() const { return "Quantization"; }type37,1061
	virtual void Backward_cpu(const vector<Blob<Dtype>*>& top,Backward_cpu57,1694
	int bit_width_;										// total bit width of quantization schemebit_width_66,1918
	QuantizationParameter_RoundMethod round_method_;	// round method of quantization schemeround_method_67,1986
	float range_low_, range_high_;						// low / high rangerange_low_68,2075
	float range_low_, range_high_;						// low / high rangerange_high_68,2075
	QuantizationParameter_RoundStrategy round_strategy_;// round strategy of quantization schemeround_strategy_69,2132

QNN/caffe-quantization/src/quantization_layer.cpp,423
namespace caffe {caffe7,106
void QuantizationLayer<Dtype>::LayerSetUp(const vector<Blob<Dtype>*>& bottom,LayerSetUp10,151
void QuantizationLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,Forward_cpu29,1060
void QuantizationLayer<Dtype>::analyze_scaling_factor(double& scaling_factor,analyze_scaling_factor47,1685
Dtype QuantizationLayer<Dtype>::fixed_point(const Dtype& input_data,fixed_point89,3279

QNN/caffe-quantization/tools/draw.py,824
LAYER_STYLE_DEFAULT = {'shape': 'record',LAYER_STYLE_DEFAULT25,548
NEURON_LAYER_STYLE = {'shape': 'record',NEURON_LAYER_STYLE28,679
BLOB_STYLE = {'shape': 'octagon',BLOB_STYLE31,807
def get_pooling_types_dict():get_pooling_types_dict36,914
def get_round_method_dict():get_round_method_dict45,1169
def get_round_strategy_dict():get_round_strategy_dict55,1449
def get_edge_label(layer):get_edge_label64,1719
def get_layer_label(layer, rankdir):get_layer_label80,2190
def choose_color_by_layertype(layertype):choose_color_by_layertype149,4959
def get_pydot_graph(caffe_net, rankdir, label_edges=True, phase=None):get_pydot_graph164,5397
def draw_net(caffe_net, rankdir, ext='png', phase=None):draw_net239,8547
def draw_net_to_file(caffe_net, filename, rankdir='LR', phase=None):draw_net_to_file260,9233

QNN/caffe-quantization/example/fixed_point.py,357
def fixed_point(x, integer_width, fraction_width, round_method):fixed_point4,57
class FixedPoint(object):FixedPoint28,1218
    def __init__(self, input_range, N, round_method='FLOOR', round_strategy='NEUTRAL'):__init__32,1341
    def __analyze_scaling_factor(self):__analyze_scaling_factor53,2258
    def quantize(self, in_values):quantize85,4038

QNN/caffe-quantization/example/vggnet_prototxt.py,1050
caffe_root = '../../'caffe_root8,250
weight_param = dict(lr_mult=2, decay_mult=1)weight_param15,502
bias_param = dict(lr_mult=1, decay_mult=0)bias_param16,547
learned_param = [weight_param, bias_param]learned_param17,590
frozen_param = [dict(lr_mult=0, decay_mult=0)]*2frozen_param20,679
def conv(bottom, ks=3, nout=64, stride=1, pad=1, param=learned_param,conv23,775
def conv_relu(bottom, ks=3, nout=64, stride=1, pad=1, param=learned_param,conv_relu32,1168
def fc(bottom, nout, param=learned_param,fc41,1603
def fc_relu(bottom, nout, param=learned_param,fc_relu49,1911
def accuracy_top1_top5(bottom, label):accuracy_top1_top557,2259
def max_pool(bottom, ks=2, stride=2):max_pool65,2610
def vggnet_16_proto(data, label=None, train=True, num_classes=1000,vggnet_16_proto73,2898
def quantized_vggnet_16_proto(data, blobs_quantization_params, label=None, train=True,quantized_vggnet_16_proto145,5962
def convert_to_quantization_param(blobs_bit_width, blobs_range, round_method='FLOOR',convert_to_quantization_param289,15205

QNN/caffe-quantization/example/sim_caffenet.py,635
caffe_root = '../../../'caffe_root8,269
caffenet_weights = '/home/ydwu/work/caffe/models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel'caffenet_weights21,735
def sim_floating_point_caffenet(LMDB_filename, batch_size=10, iterations=10, verbose=False):sim_floating_point_caffenet23,845
def sim_fixed_point_caffenet(LMDB_filename, bit_width, blobs_range,sim_fixed_point_caffenet98,4536
def quantization_param_wrapper(bit_width, data_range, round_method='FLOOR',quantization_param_wrapper176,8477
def determine_quantization_params(bit_width, data_range, round_method='FLOOR'):determine_quantization_params197,9357

QNN/caffe-quantization/example/caffenet_prototxt.py,1080
caffe_root = '../../../'caffe_root8,264
weight_param = {'lr_mult': 1, 'decay_mult': 1}weight_param15,519
bias_param = {'lr_mult': 2, 'decay_mult': 0}bias_param16,566
learned_param = [weight_param, bias_param]learned_param17,611
frozen_param = [{'lr_mult': 0, 'decay_mult': 0}] * 2frozen_param20,723
def conv(bottom, ks, nout, stride=1, pad=0, group=1, param=learned_param,conv23,823
def conv_relu(bottom, ks, nout, stride=1, pad=0, group=1, param=learned_param,conv_relu31,1246
def fc(bottom, nout, param=learned_param,fc40,1738
def fc_relu(bottom, nout, param=learned_param,fc_relu47,2056
def max_pool(bottom, ks, stride=1):max_pool55,2427
def accuracy_top1_top5(bottom, label):accuracy_top1_top559,2566
def caffenet(data, label=None, train=True, num_classes=1000, classifier_name='fc8',caffenet64,2798
def quantized_caffenet(data, blobs_quantization_params, label=None, train=True, num_classes=1000,quantized_caffenet106,4880
def convert_to_quantization_param(blobs_bit_width, blobs_range, round_method='FLOOR',convert_to_quantization_param194,10486

QNN/caffe-quantization/example/sim_vggnet.py,491
caffe_root = '../../'caffe_root8,289
vggnet_16_weights = caffe_root + '/models/vggnet/VGG_ILSVRC_16_layers.caffemodel'vggnet_16_weights19,641
def sim_floating_point_vggnet_16(LMDB_filename, batch_size=10, iterations=10, verbose=False):sim_floating_point_vggnet_1622,794
def sim_fixed_point_vggnet_16(LMDB_filename, bit_width, blobs_range,sim_fixed_point_vggnet_1697,4439
def quantization_param_wrapper(bit_width, data_range, round_method='FLOOR',quantization_param_wrapper168,8028

QNN/caffe-quantization/example/experiment_caffenet_results/optimal_sensitive_acc.p,0
